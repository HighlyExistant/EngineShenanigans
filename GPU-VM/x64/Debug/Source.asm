; Listing generated by Microsoft (R) Optimizing Compiler Version 19.32.31332.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??$__DIGIT_TABLE@D@std@@3QBDB			; std::__DIGIT_TABLE<char>
msvcjmc	SEGMENT
__29CF54F3_concurrencysal@h DB 01H
__413FEA08_sal@h DB 01H
__6972C38F_vadefs@h DB 01H
__E6B4F19D_vcruntime@h DB 01H
__0269B480_xkeycheck@h DB 01H
__4A835745_yvals_core@h DB 01H
__AF0983D6_limits@h DB 01H
__919AC1A1_climits DB 01H
__1B0272D9_corecrt@h DB 01H
__68FABE09_vcruntime_new@h DB 01H
__6261A715_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__64C6F398_crtdefs@h DB 01H
__E2706B0F_use_ansi@h DB 01H
__A33555EC_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__1575E353_cstdlib DB 01H
__197E5946_xtr1common DB 01H
__AEFC1A78_intrin0@inl@h DB 01H
__7DEB4A93_intrin0@h DB 01H
__61CC25A1_errno@h DB 01H
__946B6786_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__59E74BB3_cstring DB 01H
__117FADE9_stdint@h DB 01H
__A82B022E_cstdint DB 01H
__B0BE39FE_cstddef DB 01H
__330922C0_initializer_list DB 01H
__D567F1CA_xstddef DB 01H
__4CC0724B_type_traits DB 01H
__F90F3CDE_concepts DB 01H
__47E06DF5_isa_availability@h DB 01H
__B9985323_float@h DB 01H
__489E80C8_cfloat DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__3BDA4B4F_cstdio DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__A1519D1C_cwchar DB 01H
__2E78CDAC_limits DB 01H
__3819D017_bit DB 01H
__EC60D9E2_compare DB 01H
__227866D8_utility DB 01H
__7DA7D514_xutility DB 01H
__2385E4BF_cmath DB 01H
__E291182A_iosfwd DB 01H
__6C0B6254_iterator DB 01H
__F7972D0B_share@h DB 01H
__33C38951___msvc_system_error_abi@hpp DB 01H
__A6FB3FB4_cerrno DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__1CC3922D_eh@h DB 01H
__6A8FA247_vcruntime_exception@h DB 01H
__AC999D0E_exception DB 01H
__04BF37C5_new DB 01H
__A69511D8_xatomic@h DB 01H
__85A6FDFE_tuple DB 01H
__48ED051B_xmemory DB 01H
__01FC9A31_xpolymorphic_allocator@h DB 01H
__3C3E8387_xstring DB 01H
__25D7A753_stdexcept DB 01H
__091B8915_xcall_once@h DB 01H
__0BA040E3_xerrc@h DB 01H
__13D0C879_xatomic_wait@h DB 01H
__0A9237D2_time@h DB 01H
__E53678B7_ctime DB 01H
__CB633655_xtimec@h DB 01H
__833E5CBC_xthreads@h DB 01H
__454D916E_atomic DB 01H
__B6469B35_system_error DB 01H
__2B8D1AA2_vcruntime_typeinfo@h DB 01H
__0D78260D_typeinfo DB 01H
__92D6C122_memory DB 01H
__BE93962D_xfacet DB 01H
__EEE13F19___msvc_xlocinfo_types@hpp DB 01H
__1EC467ED_ctype@h DB 01H
__3411ACE8_cctype DB 01H
__791C33B7_locale@h DB 01H
__86D93F82_clocale DB 01H
__12F1C5C5_xlocinfo DB 01H
__E300F7B6_xlocale DB 01H
__2B14B2D6_xiosbase DB 01H
__27771FEF_streambuf DB 01H
__7D8791A1_xlocnum DB 01H
__FC720DD3_ios DB 01H
__F0102D72_ostream DB 01H
__93C01848_istream DB 01H
__1FDEAF0B_iostream DB 01H
__6F45C614_vk_platform@h DB 01H
__5FA1F762_vulkan_core@h DB 01H
__AD247E74_vulkan@h DB 01H
__654A365E_cowdef@hpp DB 01H
__C70F9156_Instance@hpp DB 01H
__0ED14FEE_winpackagefamily@h DB 01H
__F92EF742_winapifamily@h DB 01H
__B064E8EE_gl@h DB 01H
__D81DEF64_glfw3@h DB 01H
__E8A7DAC2_Window@hpp DB 01H
__63D5BD4C_vector DB 01H
__1B6E63DA_xsmf_control@h DB 01H
__14737915_optional DB 01H
__61615CFA_Device@hpp DB 01H
__125A2BD9_array DB 01H
__CE2F1DBE_Swapchain@hpp DB 01H
__13D4D4C0_GraphicsCommands@hpp DB 01H
__4ED58781_Buffer@hpp DB 01H
__725AB5AE__fixes@hpp DB 01H
__19139D6C_assert@h DB 01H
__76B6B6B1_cassert DB 01H
__36EFFC89_platform@h DB 01H
__6A641594_setup@hpp DB 01H
__E0C30740_qualifier@hpp DB 01H
__CD810A33_fwd@hpp DB 01H
__61FC8754_compute_vector_relational@hpp DB 01H
__C29399E7_type_vec2@inl DB 01H
__03119040_type_vec2@hpp DB 01H
__A79AB51D_vector_bool2@hpp DB 01H
__164332F4_vector_bool2_precision@hpp DB 01H
__B24E1CF4_vector_float2@hpp DB 01H
__2202EB77_vector_float2_precision@hpp DB 01H
__A2BDA1A7_vector_double2@hpp DB 01H
__DF307E91_vector_double2_precision@hpp DB 01H
__047F6988_vector_int2@hpp DB 01H
__175C47BF_scalar_int_sized@hpp DB 01H
__EF96D9E0_vector_int2_sized@hpp DB 01H
__E0A61860_vector_uint2@hpp DB 01H
__0312B24B_scalar_uint_sized@hpp DB 01H
__2484071F_vector_uint2_sized@hpp DB 01H
__77BD92FE_vec2@hpp DB 01H
__FFF3B057_type_vec3@inl DB 01H
__3E71B9F0_type_vec3@hpp DB 01H
__9AFA9CAD_vector_bool3@hpp DB 01H
__AFB8E91C_vector_bool3_precision@hpp DB 01H
__8F2E3544_vector_float3@hpp DB 01H
__9BF9309F_vector_float3_precision@hpp DB 01H
__9FDD8817_vector_double3@hpp DB 01H
__66CBA579_vector_double3_precision@hpp DB 01H
__391F4038_vector_int3@hpp DB 01H
__2E180620_vector_int3_sized@hpp DB 01H
__DDC631D0_vector_uint3@hpp DB 01H
__E50AD8DF_vector_uint3_sized@hpp DB 01H
__4ADDBB4E_vec3@hpp DB 01H
__4DD36C47_type_vec4@inl DB 01H
__8C5165E0_type_vec4@hpp DB 01H
__28DA40BD_vector_bool4@hpp DB 01H
__34B9E606_vector_bool4_precision@hpp DB 01H
__3D0EE954_vector_float4@hpp DB 01H
__00F83F85_vector_float4_precision@hpp DB 01H
__2DFD5407_vector_double4@hpp DB 01H
__FDCAAA63_vector_double4_precision@hpp DB 01H
__8B3F9C28_vector_int4@hpp DB 01H
__072313A3_vector_int4_sized@hpp DB 01H
__6FE6EDC0_vector_uint4@hpp DB 01H
__CC31CD5C_vector_uint4_sized@hpp DB 01H
__F8FD675E_vec4@hpp DB 01H
__E6E15275_type_mat2x3@inl DB 01H
__27635BD2_type_mat2x3@hpp DB 01H
__F4A54477_matrix_double2x3@hpp DB 01H
__1FDBC36F_matrix_double2x3_precision@hpp DB 01H
__919AA880_matrix_float2x3@hpp DB 01H
__B42A04E3_matrix_float2x3_precision@hpp DB 01H
__B32BCD64_mat2x3@hpp DB 01H
__54C18E65_type_mat2x4@inl DB 01H
__954387C2_type_mat2x4@hpp DB 01H
__46859867_matrix_double2x4@hpp DB 01H
__84DACC75_matrix_double2x4_precision@hpp DB 01H
__23BA7490_matrix_float2x4@hpp DB 01H
__2F2B0BF9_matrix_float2x4_precision@hpp DB 01H
__010B1174_mat2x4@hpp DB 01H
__7DF67071_type_mat3x2@inl DB 01H
__BC7479D6_type_mat3x2@hpp DB 01H
__6FB26673_matrix_double3x2@hpp DB 01H
__2186D3C4_matrix_double3x2_precision@hpp DB 01H
__0A8D8A84_matrix_float3x2@hpp DB 01H
__8A771448_matrix_float3x2_precision@hpp DB 01H
__283CEF60_mat3x2@hpp DB 01H
__409659C1_type_mat3x3@inl DB 01H
__81145066_type_mat3x3@hpp DB 01H
__52D24FC3_matrix_double3x3@hpp DB 01H
__987D082C_matrix_double3x3_precision@hpp DB 01H
__37EDA334_matrix_float3x3@hpp DB 01H
__338CCFA0_matrix_float3x3_precision@hpp DB 01H
__155CC6D0_mat3x3@hpp DB 01H
__F2B685D1_type_mat3x4@inl DB 01H
__33348C76_type_mat3x4@hpp DB 01H
__E0F293D3_matrix_double3x4@hpp DB 01H
__037C0736_matrix_double3x4_precision@hpp DB 01H
__85CD7F24_matrix_float3x4@hpp DB 01H
__A88DC0BA_matrix_float3x4_precision@hpp DB 01H
__A77C1AC0_mat3x4@hpp DB 01H
__B8514EFF_type_mat4x2@inl DB 01H
__79D34758_type_mat4x2@hpp DB 01H
__AA1558FD_matrix_double4x2@hpp DB 01H
__0114AF8F_matrix_double4x2_precision@hpp DB 01H
__CF2AB40A_matrix_float4x2@hpp DB 01H
__AAE56803_matrix_float4x2_precision@hpp DB 01H
__ED9BD1EE_mat4x2@hpp DB 01H
__8531674F_type_mat4x3@inl DB 01H
__44B36EE8_type_mat4x3@hpp DB 01H
__9775714D_matrix_double4x3@hpp DB 01H
__B8EF7467_matrix_double4x3_precision@hpp DB 01H
__F24A9DBA_matrix_float4x3@hpp DB 01H
__131EB3EB_matrix_float4x3_precision@hpp DB 01H
__D0FBF85E_mat4x3@hpp DB 01H
__3711BB5F_type_mat4x4@inl DB 01H
__F693B2F8_type_mat4x4@hpp DB 01H
__2555AD5D_matrix_double4x4@hpp DB 01H
__23EE7B7D_matrix_double4x4_precision@hpp DB 01H
__406A41AA_matrix_float4x4@hpp DB 01H
__881FBCF1_matrix_float4x4_precision@hpp DB 01H
__62DB244E_mat4x4@hpp DB 01H
__8533E337_type_vec1@inl DB 01H
__44B1EA90_type_vec1@hpp DB 01H
__D98155C6_func_vector_relational@inl DB 01H
__3537A1E9_vector_relational@hpp DB 01H
__FA4A9892__vectorize@hpp DB 01H
__9946677D_func_exponential@inl DB 01H
__6EB78A27_exponential@hpp DB 01H
__1522F2D5_compute_common@hpp DB 01H
__3F1E832A_func_common@inl DB 01H
__0D19AC42_common@hpp DB 01H
__0048E598_func_geometric@inl DB 01H
__0535C93A_geometric@hpp DB 01H
__228E2F13_func_matrix@inl DB 01H
__1089007B_matrix@hpp DB 01H
__DB817BC5_type_mat2x2@inl DB 01H
__1A037262_type_mat2x2@hpp DB 01H
__C9C56DC7_matrix_double2x2@hpp DB 01H
__A6201887_matrix_double2x2_precision@hpp DB 01H
__ACFA8130_matrix_float2x2@hpp DB 01H
__0DD1DF0B_matrix_float2x2_precision@hpp DB 01H
__8E4BE4D4_mat2x2@hpp DB 01H
__05BDE45A_func_trigonometric@inl DB 01H
__C24A621F_trigonometric@hpp DB 01H
__63284533_type_half@inl DB 01H
__A2AA4C94_type_half@hpp DB 01H
__BF79A1CB_func_packing@inl DB 01H
__75D3F26B_packing@hpp DB 01H
__811C45EA_setjmp@h DB 01H
__2750C08C_mmintrin@h DB 01H
__66619DC9_xmmintrin@h DB 01H
__03031405_emmintrin@h DB 01H
__DCA27C8C_pmmintrin@h DB 01H
__6C7B0F0E_tmmintrin@h DB 01H
__45401A8D_smmintrin@h DB 01H
__20229341_nmmintrin@h DB 01H
__F599690F_wmmintrin@h DB 01H
__3E0D2408_zmmintrin@h DB 01H
__091986C2_immintrin@h DB 01H
__B3DA6787_ammintrin@h DB 01H
__A72AF99D_intrin@h DB 01H
__D41AAEEE_func_integer@inl DB 01H
__1EB0FD4E_integer@hpp DB 01H
__0FF791AE_glm@hpp DB 01H
__60F9E005_Helper@hpp DB 01H
__32DA32DB_Pipelines@hpp DB 01H
__880AEF67_Model@hpp DB 01H
__A51CC232_EmptyObject@hpp DB 01H
__E4C9D0F0_PushConstant@hpp DB 01H
__B308F58B_CowHeaders@hpp DB 01H
__25A01326_stdarg@h DB 01H
__DA7935A3_stb_image@h DB 01H
__15323767_Texture@hpp DB 01H
__22E515EB_sdkddkver@h DB 01H
__5C016FE4_excpt@h DB 01H
__29F49F40_specstrings_undef@h DB 01H
__D0F42932_specstrings_strict@h DB 01H
__F00405FD_sdv_driverspecs@h DB 01H
__173E09CA_driverspecs@h DB 01H
__9A452361_specstrings@h DB 01H
__98517906_kernelspecs@h DB 01H
__D3497022_basetsd@h DB 01H
__7FCB5136_guiddef@h DB 01H
__FF8A9E11_pshpack4@h DB 01H
__D5438902_poppack@h DB 01H
__FB07E2A3_pshpack2@h DB 01H
__F6906775_pshpack8@h DB 01H
__F9415CFA_pshpack1@h DB 01H
__E58C6F1C_apiset@h DB 01H
__A5C52262_ktmtypes@h DB 01H
__FBBA8F9D_winnt@h DB 01H
__A32D3D2C_minwindef@h DB 01H
__7D798299_windef@h DB 01H
__9AE108E9_apisetcconv@h DB 01H
__9CE53D2C_minwinbase@h DB 01H
__5D0AA210_apiquery2@h DB 01H
__4DD4E726_processenv@h DB 01H
__3575CC96_fileapi@h DB 01H
__8EA220E6_fileapifromapp@h DB 01H
__BF9B31FE_debugapi@h DB 01H
__C3AFE134_utilapiset@h DB 01H
__76F69E51_handleapi@h DB 01H
__7E63D784_errhandlingapi@h DB 01H
__FFA7003C_fibersapi@h DB 01H
__8971CECF_namedpipeapi@h DB 01H
__46C9D8A6_profileapi@h DB 01H
__98D4F0A3_heapapi@h DB 01H
__50EF2A88_ioapiset@h DB 01H
__92EA1464_synchapi@h DB 01H
__A53D8AED_interlockedapi@h DB 01H
__B506CAAF_processthreadsapi@h DB 01H
__FF735694_sysinfoapi@h DB 01H
__29589789_memoryapi@h DB 01H
__E9C7A663_enclaveapi@h DB 01H
__D035F9F7_threadpoollegacyapiset@h DB 01H
__C899130C_threadpoolapiset@h DB 01H
__E0441EE7_jobapi@h DB 01H
__CEF86838_jobapi2@h DB 01H
__35AC6B9A_wow64apiset@h DB 01H
__C8AE41A5_libloaderapi@h DB 01H
__CC9E232D_securitybaseapi@h DB 01H
__C9D0C9B8_namespaceapi@h DB 01H
__30FF9CAD_systemtopologyapi@h DB 01H
__4D358795_processtopologyapi@h DB 01H
__40446D10_securityappcontainer@h DB 01H
__3A952EDF_realtimeapiset@h DB 01H
__F4865F4B_winerror@h DB 01H
__53C1BD93_timezoneapi@h DB 01H
__1FFBEDBF_winbase@h DB 01H
__43D3FA34_wingdi@h DB 01H
__D24A7391_tvout@h DB 01H
__7713A6C8_winuser@h DB 01H
__0B345F71_datetimeapi@h DB 01H
__9AC6960C_winnls@h DB 01H
__973A40A8_stringapiset@h DB 01H
__CC46FEE2_wincontypes@h DB 01H
__97D70BE1_consoleapi@h DB 01H
__27EC5E18_consoleapi2@h DB 01H
__262E342F_consoleapi3@h DB 01H
__641DCD70_wincon@h DB 01H
__5A96C7A7_verrsrc@h DB 01H
__B69C6FF2_winver@h DB 01H
__7AEB8C37_reason@h DB 01H
__59F1A8A9_winreg@h DB 01H
__EE0E2B7F_wnnc@h DB 01H
__DCDB7054_winnetwk@h DB 01H
__EDC72EEB_cderr@h DB 01H
__95F9199D_dde@h DB 01H
__66427627_ddeml@h DB 01H
__957C29A0_dlgs@h DB 01H
__12EA15AF_lzexpand@h DB 01H
__62131F15_mmsyscom@h DB 01H
__47E68D49_mciapi@h DB 01H
__5D7DD356_mmiscapi@h DB 01H
__7223D2EF_mmiscapi2@h DB 01H
__A330DBB3_playsoundapi@h DB 01H
__601B366F_mmeapi@h DB 01H
__1134ADD5_timeapi@h DB 01H
__93F2265A_joystickapi@h DB 01H
__DF6EB4E3_mmsystem@h DB 01H
__BD641FCB_nb30@h DB 01H
__DF8704F0_rpcdcep@h DB 01H
__5C6CA7BB_rpcdce@h DB 01H
__853533C4_rpcnsi@h DB 01H
__2D2406C3_rpcnterr@h DB 01H
__64521D71_rpcasync@h DB 01H
__AADCBA08_rpc@h DB 01H
__19E26CFF_shellapi@h DB 01H
__1E9F31D3_winperf@h DB 01H
__832A4112_inaddr@h DB 01H
__32C6F875_winsock@h DB 01H
__7953A3F8_bcrypt@h DB 01H
__E4169492_ncrypt@h DB 01H
__AF3DDDC3_dpapi@h DB 01H
__D1E23BF2_wincrypt@h DB 01H
__82AB4779_winefs@h DB 01H
__1FE431C9_rpcnsip@h DB 01H
__2B741F2D_rpcsal@h DB 01H
__92623256_rpcndr@h DB 01H
__9C18532E_wtypesbase@h DB 01H
__EA2E1D6D_wtypes@h DB 01H
__7DDD9F45_winioctl@h DB 01H
__E550A843_winsmcrd@h DB 01H
__9809C1BA_winscard@h DB 01H
__EA174FA4_prsht@h DB 01H
__0E1BD114_winspool@h DB 01H
__30B1AFDA_unknwnbase@h DB 01H
__328C1996_objidlbase@h DB 01H
__C4E06B6A_cguid@h DB 01H
__434718C5_combaseapi@h DB 01H
__DE6FDEF1_unknwn@h DB 01H
__CCE0BACC_objidl@h DB 01H
__8C7011E5_oaidl@h DB 01H
__2E0B7863_propidlbase@h DB 01H
__BF4CF2EC_coml2api@h DB 01H
__6D897344_oleidl@h DB 01H
__1129FC2C_servprov@h DB 01H
__757952E4_msxml@h DB 01H
__B1191D53_urlmon@h DB 01H
__404D1A47_propidl@h DB 01H
__A1C63593_objbase@h DB 01H
__C1B0A9CB_oleauto@h DB 01H
__24EAF61F_ole2@h DB 01H
__2B1843DA_commdlg@h DB 01H
__81DDEDE3_stralign@h DB 01H
__2134D1B4_winsvc@h DB 01H
__11C07376_mcx@h DB 01H
__577CE3E7_ime_cmodes@h DB 01H
__1E72C31E_imm@h DB 01H
__63AA7AF5_Windows@h DB 01H
__4F367D11_ratio DB 01H
__D25C9D9C___msvc_tzdb@hpp DB 01H
__4655DFDA_algorithm DB 01H
__8DA0796B_forward_list DB 01H
__E60547BE_string DB 01H
__506EDBC8_sstream DB 01H
__B6EC6CD7_xloctime DB 01H
__36340881_xbit_ops@h DB 01H
__48E5AE5B_xcharconv@h DB 01H
__D17AAC37_xcharconv_ryu_tables@h DB 01H
__72A9C26E_xcharconv_ryu@h DB 01H
__6228BB72_charconv DB 01H
__E34FB14D_xlocbuf DB 01H
__CF0C00CA_xlocmes DB 01H
__56E58499_xlocmon DB 01H
__393B338F_locale DB 01H
__C2216CF8_string_view DB 01H
__DCA5999E_xfilesystem_abi@h DB 01H
__A60187C8_format DB 01H
__6F02DE1A_iomanip DB 01H
__4A95CB26_chrono DB 01H
__BE4B800C_Descriptors@hpp DB 01H
__D63E6CC3_Source@cpp DB 01H
__21483852_predefined C++ types (compiler internal) DB 01H
msvcjmc	ENDS
;	COMDAT ??$__DIGIT_TABLE@D@std@@3QBDB
CONST	SEGMENT
??$__DIGIT_TABLE@D@std@@3QBDB DB 030H			; std::__DIGIT_TABLE<char>
	DB	030H
	DB	030H
	DB	031H
	DB	030H
	DB	032H
	DB	030H
	DB	033H
	DB	030H
	DB	034H
	DB	030H
	DB	035H
	DB	030H
	DB	036H
	DB	030H
	DB	037H
	DB	030H
	DB	038H
	DB	030H
	DB	039H
	DB	031H
	DB	030H
	DB	031H
	DB	031H
	DB	031H
	DB	032H
	DB	031H
	DB	033H
	DB	031H
	DB	034H
	DB	031H
	DB	035H
	DB	031H
	DB	036H
	DB	031H
	DB	037H
	DB	031H
	DB	038H
	DB	031H
	DB	039H
	DB	032H
	DB	030H
	DB	032H
	DB	031H
	DB	032H
	DB	032H
	DB	032H
	DB	033H
	DB	032H
	DB	034H
	DB	032H
	DB	035H
	DB	032H
	DB	036H
	DB	032H
	DB	037H
	DB	032H
	DB	038H
	DB	032H
	DB	039H
	DB	033H
	DB	030H
	DB	033H
	DB	031H
	DB	033H
	DB	032H
	DB	033H
	DB	033H
	DB	033H
	DB	034H
	DB	033H
	DB	035H
	DB	033H
	DB	036H
	DB	033H
	DB	037H
	DB	033H
	DB	038H
	DB	033H
	DB	039H
	DB	034H
	DB	030H
	DB	034H
	DB	031H
	DB	034H
	DB	032H
	DB	034H
	DB	033H
	DB	034H
	DB	034H
	DB	034H
	DB	035H
	DB	034H
	DB	036H
	DB	034H
	DB	037H
	DB	034H
	DB	038H
	DB	034H
	DB	039H
	DB	035H
	DB	030H
	DB	035H
	DB	031H
	DB	035H
	DB	032H
	DB	035H
	DB	033H
	DB	035H
	DB	034H
	DB	035H
	DB	035H
	DB	035H
	DB	036H
	DB	035H
	DB	037H
	DB	035H
	DB	038H
	DB	035H
	DB	039H
	DB	036H
	DB	030H
	DB	036H
	DB	031H
	DB	036H
	DB	032H
	DB	036H
	DB	033H
	DB	036H
	DB	034H
	DB	036H
	DB	035H
	DB	036H
	DB	036H
	DB	036H
	DB	037H
	DB	036H
	DB	038H
	DB	036H
	DB	039H
	DB	037H
	DB	030H
	DB	037H
	DB	031H
	DB	037H
	DB	032H
	DB	037H
	DB	033H
	DB	037H
	DB	034H
	DB	037H
	DB	035H
	DB	037H
	DB	036H
	DB	037H
	DB	037H
	DB	037H
	DB	038H
	DB	037H
	DB	039H
	DB	038H
	DB	030H
	DB	038H
	DB	031H
	DB	038H
	DB	032H
	DB	038H
	DB	033H
	DB	038H
	DB	034H
	DB	038H
	DB	035H
	DB	038H
	DB	036H
	DB	038H
	DB	037H
	DB	038H
	DB	038H
	DB	038H
	DB	039H
	DB	039H
	DB	030H
	DB	039H
	DB	031H
	DB	039H
	DB	032H
	DB	039H
	DB	033H
	DB	039H
	DB	034H
	DB	039H
	DB	035H
	DB	039H
	DB	036H
	DB	039H
	DB	037H
	DB	039H
	DB	038H
	DB	039H
	DB	039H
CONST	ENDS
CONST	SEGMENT
?stbi__bmask@@3QBIB DD 00H				; stbi__bmask
	DD	01H
	DD	03H
	DD	07H
	DD	0fH
	DD	01fH
	DD	03fH
	DD	07fH
	DD	0ffH
	DD	01ffH
	DD	03ffH
	DD	07ffH
	DD	0fffH
	DD	01fffH
	DD	03fffH
	DD	07fffH
	DD	0ffffH
?tag@?CL@??stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z@4QBEB DB 04aH ; `stbi__process_marker'::`43'::tag
	DB	046H
	DB	049H
	DB	046H
	DB	00H
	ORG $+7
?stbi__jbias@@3QBHB DD 00H				; stbi__jbias
	DD	0ffffffffH
	DD	0fffffffdH
	DD	0fffffff9H
	DD	0fffffff1H
	DD	0ffffffe1H
	DD	0ffffffc1H
	DD	0ffffff81H
	DD	0ffffff01H
	DD	0fffffe01H
	DD	0fffffc01H
	DD	0fffff801H
	DD	0fffff001H
	DD	0ffffe001H
	DD	0ffffc001H
	DD	0ffff8001H
?stbi__jpeg_dezigzag@@3QBEB DB 00H			; stbi__jpeg_dezigzag
	DB	01H
	DB	08H
	DB	010H
	DB	09H
	DB	02H
	DB	03H
	DB	0aH
	DB	011H
	DB	018H
	DB	020H
	DB	019H
	DB	012H
	DB	0bH
	DB	04H
	DB	05H
	DB	0cH
	DB	013H
	DB	01aH
	DB	021H
	DB	028H
	DB	030H
	DB	029H
	DB	022H
	DB	01bH
	DB	014H
	DB	0dH
	DB	06H
	DB	07H
	DB	0eH
	DB	015H
	DB	01cH
	DB	023H
	DB	02aH
	DB	031H
	DB	038H
	DB	039H
	DB	032H
	DB	02bH
	DB	024H
	DB	01dH
	DB	016H
	DB	0fH
	DB	017H
	DB	01eH
	DB	025H
	DB	02cH
	DB	033H
	DB	03aH
	DB	03bH
	DB	034H
	DB	02dH
	DB	026H
	DB	01fH
	DB	027H
	DB	02eH
	DB	035H
	DB	03cH
	DB	03dH
	DB	036H
	DB	02fH
	DB	037H
	DB	03eH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	DB	03fH
	ORG $+1
?tag@?DE@??stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z@4QBEB DB 041H ; `stbi__process_marker'::`52'::tag
	DB	064H
	DB	06fH
	DB	062H
	DB	065H
	DB	00H
	ORG $+2
?rgb@?BG@??stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z@4QBEB DB 052H ; `stbi__process_frame_header'::`22'::rgb
	DB	047H
	DB	042H
	ORG $+5
?stbi__zlength_base@@3QBHB DD 03H			; stbi__zlength_base
	DD	04H
	DD	05H
	DD	06H
	DD	07H
	DD	08H
	DD	09H
	DD	0aH
	DD	0bH
	DD	0dH
	DD	0fH
	DD	011H
	DD	013H
	DD	017H
	DD	01bH
	DD	01fH
	DD	023H
	DD	02bH
	DD	033H
	DD	03bH
	DD	043H
	DD	053H
	DD	063H
	DD	073H
	DD	083H
	DD	0a3H
	DD	0c3H
	DD	0e3H
	DD	0102H
	DD	00H
	DD	00H
	ORG $+4
?stbi__zlength_extra@@3QBHB DD 00H			; stbi__zlength_extra
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	02H
	DD	02H
	DD	03H
	DD	03H
	DD	03H
	DD	03H
	DD	04H
	DD	04H
	DD	04H
	DD	04H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	00H
	DD	00H
	DD	00H
	ORG $+4
?stbi__zdist_base@@3QBHB DD 01H				; stbi__zdist_base
	DD	02H
	DD	03H
	DD	04H
	DD	05H
	DD	07H
	DD	09H
	DD	0dH
	DD	011H
	DD	019H
	DD	021H
	DD	031H
	DD	041H
	DD	061H
	DD	081H
	DD	0c1H
	DD	0101H
	DD	0181H
	DD	0201H
	DD	0301H
	DD	0401H
	DD	0601H
	DD	0801H
	DD	0c01H
	DD	01001H
	DD	01801H
	DD	02001H
	DD	03001H
	DD	04001H
	DD	06001H
	DD	00H
	DD	00H
?stbi__zdist_extra@@3QBHB DD 00H			; stbi__zdist_extra
	DD	00H
	DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	02H
	DD	02H
	DD	03H
	DD	03H
	DD	04H
	DD	04H
	DD	05H
	DD	05H
	DD	06H
	DD	06H
	DD	07H
	DD	07H
	DD	08H
	DD	08H
	DD	09H
	DD	09H
	DD	0aH
	DD	0aH
	DD	0bH
	DD	0bH
	DD	0cH
	DD	0cH
	DD	0dH
	DD	0dH
	ORG $+8
?length_dezigzag@?1??stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z@4QBEB DB 010H ; `stbi__compute_huffman_codes'::`2'::length_dezigzag
	DB	011H
	DB	012H
	DB	00H
	DB	08H
	DB	07H
	DB	09H
	DB	06H
	DB	0aH
	DB	05H
	DB	0bH
	DB	04H
	DB	0cH
	DB	03H
	DB	0dH
	DB	02H
	DB	0eH
	DB	01H
	DB	0fH
	ORG $+5
?stbi__zdefault_distance@@3QBEB DB 05H			; stbi__zdefault_distance
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
	DB	05H
?png_sig@?1??stbi__check_png_header@@YAHPEAUstbi__context@@@Z@4QBEB DB 089H ; `stbi__check_png_header'::`2'::png_sig
	DB	050H
	DB	04eH
	DB	047H
	DB	0dH
	DB	0aH
	DB	01aH
	DB	0aH
?stbi__zdefault_length@@3QBEB DB 08H			; stbi__zdefault_length
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
?stbi__depth_scale_table@@3QBEB DB 00H			; stbi__depth_scale_table
	DB	0ffH
	DB	055H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	ldexpf
PUBLIC	?is_constant_evaluated@std@@YA_NXZ		; std::is_constant_evaluated
PUBLIC	wmemcpy
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?ldexp@@YAMMH@Z					; ldexp
PUBLIC	?pow@@YAMMM@Z					; pow
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
PUBLIC	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??0logic_error@std@@QEAA@PEBD@Z			; std::logic_error::logic_error
PUBLIC	??1logic_error@std@@UEAA@XZ			; std::logic_error::~logic_error
PUBLIC	??0logic_error@std@@QEAA@AEBV01@@Z		; std::logic_error::logic_error
PUBLIC	??_Glogic_error@std@@UEAAPEAXI@Z		; std::logic_error::`scalar deleting destructor'
PUBLIC	??0invalid_argument@std@@QEAA@PEBD@Z		; std::invalid_argument::invalid_argument
PUBLIC	??1invalid_argument@std@@UEAA@XZ		; std::invalid_argument::~invalid_argument
PUBLIC	??0invalid_argument@std@@QEAA@AEBV01@@Z		; std::invalid_argument::invalid_argument
PUBLIC	??_Ginvalid_argument@std@@UEAAPEAXI@Z		; std::invalid_argument::`scalar deleting destructor'
PUBLIC	??0runtime_error@std@@QEAA@PEBD@Z		; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QEAA@AEBV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
PUBLIC	?_Maklocwcs@std@@YAPEA_WPEB_W@Z			; std::_Maklocwcs
PUBLIC	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
PUBLIC	?shouldClose@Window@cow@@QEBA_NXZ		; cow::Window::shouldClose
PUBLIC	?__autoclassinit2@Window@cow@@QEAAX_K@Z		; cow::Window::__autoclassinit2
PUBLIC	?getPhysicalDevice@Device@cow@@QEAAPEAUVkPhysicalDevice_T@@XZ ; cow::Device::getPhysicalDevice
PUBLIC	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ	; cow::Device::getDevice
PUBLIC	?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ ; cow::Device::getCommandPool
PUBLIC	?getGraphicsQueue@Device@cow@@QEAAPEAUVkQueue_T@@XZ ; cow::Device::getGraphicsQueue
PUBLIC	?bindImageMemory@Device@cow@@QEBA?AW4VkResult@@PEAUVkImage_T@@PEAUVkDeviceMemory_T@@@Z ; cow::Device::bindImageMemory
PUBLIC	?__autoclassinit2@Device@cow@@QEAAX_K@Z		; cow::Device::__autoclassinit2
PUBLIC	?getRenderPass@Swapchain@cow@@QEBAPEAUVkRenderPass_T@@XZ ; cow::Swapchain::getRenderPass
PUBLIC	?getCurrentFrame@Swapchain@cow@@QEBA_KXZ	; cow::Swapchain::getCurrentFrame
PUBLIC	?getCurrentImageIndex@GraphicsCommands@cow@@QEAAIXZ ; cow::GraphicsCommands::getCurrentImageIndex
PUBLIC	??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ ; std::unique_ptr<cow::Swapchain,std::default_delete<cow::Swapchain> >::operator->
PUBLIC	?__autoclassinit2@GraphicsCommands@cow@@QEAAX_K@Z ; cow::GraphicsCommands::__autoclassinit2
PUBLIC	??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z		; cow::Buffer::Buffer
PUBLIC	??1Buffer@cow@@QEAA@XZ				; cow::Buffer::~Buffer
PUBLIC	?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z	; cow::Buffer::map
PUBLIC	?unmap@Buffer@cow@@QEAAXXZ			; cow::Buffer::unmap
PUBLIC	?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z		; cow::Buffer::write
PUBLIC	?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z	; cow::Buffer::copy
PUBLIC	?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ		; cow::Buffer::get
PUBLIC	?createBuffer@Buffer@cow@@AEAAXII@Z		; cow::Buffer::createBuffer
PUBLIC	?__autoclassinit2@Buffer@cow@@QEAAX_K@Z		; cow::Buffer::__autoclassinit2
PUBLIC	??_GBuffer@cow@@QEAAPEAXI@Z			; cow::Buffer::`scalar deleting destructor'
PUBLIC	??0?$allocator@W4VkDynamicState@@@std@@QEAA@XZ	; std::allocator<enum VkDynamicState>::allocator<enum VkDynamicState>
PUBLIC	?deallocate@?$allocator@W4VkDynamicState@@@std@@QEAAXQEAW4VkDynamicState@@_K@Z ; std::allocator<enum VkDynamicState>::deallocate
PUBLIC	??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >
PUBLIC	??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::~vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >
PUBLIC	?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Tidy
PUBLIC	?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<enum VkDynamicState> >::_Vector_val<std::_Simple_types<enum VkDynamicState> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ ; std::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1>::_Get_first
PUBLIC	??1GraphicsPipelineSimpleInfo@cow@@QEAA@XZ	; cow::GraphicsPipelineSimpleInfo::~GraphicsPipelineSimpleInfo
PUBLIC	??R?$default_delete@VBuffer@cow@@@std@@QEBAXPEAVBuffer@cow@@@Z ; std::default_delete<cow::Buffer>::operator()
PUBLIC	??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::~unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >
PUBLIC	??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator->
PUBLIC	?release@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAPEAVBuffer@cow@@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::release
PUBLIC	?reset@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAXPEAVBuffer@cow@@@Z ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::reset
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Get_first
PUBLIC	?create@EmptyObject@cow@@SA?AV12@XZ		; cow::EmptyObject::create
PUBLIC	??1EmptyObject@cow@@QEAA@XZ			; cow::EmptyObject::~EmptyObject
PUBLIC	??0EmptyObject@cow@@AEAA@I@Z			; cow::EmptyObject::EmptyObject
PUBLIC	stbi_load_from_memory
PUBLIC	stbi_load_from_callbacks
PUBLIC	stbi_load
PUBLIC	stbi_load_from_file
PUBLIC	stbi_load_gif_from_memory
PUBLIC	stbi_load_16_from_memory
PUBLIC	stbi_load_16_from_callbacks
PUBLIC	stbi_load_16
PUBLIC	stbi_load_from_file_16
PUBLIC	stbi_loadf_from_memory
PUBLIC	stbi_loadf_from_callbacks
PUBLIC	stbi_loadf
PUBLIC	stbi_loadf_from_file
PUBLIC	stbi_hdr_to_ldr_gamma
PUBLIC	stbi_hdr_to_ldr_scale
PUBLIC	stbi_ldr_to_hdr_gamma
PUBLIC	stbi_ldr_to_hdr_scale
PUBLIC	stbi_is_hdr_from_callbacks
PUBLIC	stbi_is_hdr_from_memory
PUBLIC	stbi_is_hdr
PUBLIC	stbi_is_hdr_from_file
PUBLIC	stbi_failure_reason
PUBLIC	stbi_image_free
PUBLIC	stbi_info_from_memory
PUBLIC	stbi_info_from_callbacks
PUBLIC	stbi_is_16_bit_from_memory
PUBLIC	stbi_is_16_bit_from_callbacks
PUBLIC	stbi_info
PUBLIC	stbi_info_from_file
PUBLIC	stbi_is_16_bit
PUBLIC	stbi_is_16_bit_from_file
PUBLIC	stbi_set_unpremultiply_on_load
PUBLIC	stbi_convert_iphone_png_to_rgb
PUBLIC	stbi_set_flip_vertically_on_load
PUBLIC	stbi_convert_iphone_png_to_rgb_thread
PUBLIC	stbi_set_flip_vertically_on_load_thread
PUBLIC	stbi_zlib_decode_malloc_guesssize
PUBLIC	stbi_zlib_decode_malloc_guesssize_headerflag
PUBLIC	stbi_zlib_decode_malloc
PUBLIC	stbi_zlib_decode_buffer
PUBLIC	stbi_zlib_decode_noheader_malloc
PUBLIC	stbi_zlib_decode_noheader_buffer
PUBLIC	?stbi__unpremultiply_on_load_thread@@YAXH@Z	; stbi__unpremultiply_on_load_thread
PUBLIC	??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z	; cow::Texture::Texture
PUBLIC	??1Texture@cow@@QEAA@XZ				; cow::Texture::~Texture
PUBLIC	?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z ; cow::Texture::transitionImageLayout
PUBLIC	?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z ; cow::Texture::copyBufferToImage
PUBLIC	?createTextureImageView@Texture@cow@@QEAAXXZ	; cow::Texture::createTextureImageView
PUBLIC	?createTextureSampler@Texture@cow@@QEAAXXZ	; cow::Texture::createTextureSampler
PUBLIC	?__autoclassinit2@Texture@cow@@QEAAX_K@Z	; cow::Texture::__autoclassinit2
PUBLIC	??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
PUBLIC	??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
PUBLIC	??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z ; cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>
PUBLIC	??1?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@XZ ; cow::Model2DComponent<cow::Vertex2DTextured>::~Model2DComponent<cow::Vertex2DTextured>
PUBLIC	?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ; cow::Model2DComponent<cow::Vertex2DTextured>::bind
PUBLIC	?draw@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ; cow::Model2DComponent<cow::Vertex2DTextured>::draw
PUBLIC	??0?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ ; cow::PushConstantComponent<SimplePushConstantData>::PushConstantComponent<SimplePushConstantData>
PUBLIC	??1?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ ; cow::PushConstantComponent<SimplePushConstantData>::~PushConstantComponent<SimplePushConstantData>
PUBLIC	?pushConstant@?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAAXPEAUVkCommandBuffer_T@@PEAUVkPipelineLayout_T@@I@Z ; cow::PushConstantComponent<SimplePushConstantData>::pushConstant
PUBLIC	??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z ; RenderObject::RenderObject
PUBLIC	??1RenderObject@@QEAA@XZ			; RenderObject::~RenderObject
PUBLIC	?__autoclassinit2@RenderObject@@QEAAX_K@Z	; RenderObject::__autoclassinit2
PUBLIC	??0?$allocator@UVertex2DTextured@cow@@@std@@QEAA@XZ ; std::allocator<cow::Vertex2DTextured>::allocator<cow::Vertex2DTextured>
PUBLIC	?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z ; std::allocator<cow::Vertex2DTextured>::deallocate
PUBLIC	?allocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAPEAUVertex2DTextured@cow@@_K@Z ; std::allocator<cow::Vertex2DTextured>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA_KAEBV?$allocator@UVertex2DTextured@cow@@@2@@Z ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA?AV?$allocator@UVertex2DTextured@cow@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::select_on_container_copy_construction
PUBLIC	??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
PUBLIC	??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
PUBLIC	??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
PUBLIC	?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::push_back
PUBLIC	?data@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::data
PUBLIC	?size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::size
PUBLIC	?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::max_size
PUBLIC	?capacity@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::capacity
PUBLIC	?_Calculate_growth@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBA_K_K@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Calculate_growth
PUBLIC	?_Buy_raw@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Buy_nonzero
PUBLIC	?_Change_array@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXQEAUVertex2DTextured@cow@@_K1@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Change_array
PUBLIC	?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Tidy
PUBLIC	?_Xlength@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@CAXXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range
PUBLIC	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
PUBLIC	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::__autoclassinit2
PUBLIC	main
PUBLIC	??0?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAA@XZ ; std::allocator<VkCommandBuffer_T *>::allocator<VkCommandBuffer_T *>
PUBLIC	?deallocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAXQEAPEAUVkCommandBuffer_T@@_K@Z ; std::allocator<VkCommandBuffer_T *>::deallocate
PUBLIC	?allocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@_K@Z ; std::allocator<VkCommandBuffer_T *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SA_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@@Z ; std::_Default_allocator_traits<std::allocator<VkCommandBuffer_T *> >::max_size
PUBLIC	??0?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
PUBLIC	??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::~vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
PUBLIC	?data@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::data
PUBLIC	?size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::size
PUBLIC	?max_size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::max_size
PUBLIC	?_Buy_raw@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Buy_nonzero
PUBLIC	?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@CAXXZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Xlength
PUBLIC	?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal
PUBLIC	?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::__autoclassinit2
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	?size@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBA_KXZ ; std::array<VkDescriptorSetLayoutBinding,2>::size
PUBLIC	??A?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEAAAEAUVkDescriptorSetLayoutBinding@@_K@Z ; std::array<VkDescriptorSetLayoutBinding,2>::operator[]
PUBLIC	?data@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBAPEBUVkDescriptorSetLayoutBinding@@XZ ; std::array<VkDescriptorSetLayoutBinding,2>::data
PUBLIC	?size@?$array@UVkDescriptorPoolSize@@$01@std@@QEBA_KXZ ; std::array<VkDescriptorPoolSize,2>::size
PUBLIC	??A?$array@UVkDescriptorPoolSize@@$01@std@@QEAAAEAUVkDescriptorPoolSize@@_K@Z ; std::array<VkDescriptorPoolSize,2>::operator[]
PUBLIC	?data@?$array@UVkDescriptorPoolSize@@$01@std@@QEBAPEBUVkDescriptorPoolSize@@XZ ; std::array<VkDescriptorPoolSize,2>::data
PUBLIC	??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z ; cow::Descriptor<2,2>::Descriptor<2,2>
PUBLIC	??1?$Descriptor@$01$01@cow@@QEAA@XZ		; cow::Descriptor<2,2>::~Descriptor<2,2>
PUBLIC	?getLayout@?$Descriptor@$01$01@cow@@QEAAPEAPEAUVkDescriptorSetLayout_T@@XZ ; cow::Descriptor<2,2>::getLayout
PUBLIC	?getSet@?$Descriptor@$01$01@cow@@QEAAPEAUVkDescriptorSet_T@@I@Z ; cow::Descriptor<2,2>::getSet
PUBLIC	?__autoclassinit2@?$Descriptor@$01$01@cow@@QEAAX_K@Z ; cow::Descriptor<2,2>::__autoclassinit2
PUBLIC	?size@?$array@UVkWriteDescriptorSet@@$01@std@@QEBA_KXZ ; std::array<VkWriteDescriptorSet,2>::size
PUBLIC	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
PUBLIC	?data@?$array@UVkWriteDescriptorSet@@$01@std@@QEAAPEAUVkWriteDescriptorSet@@XZ ; std::array<VkWriteDescriptorSet,2>::data
PUBLIC	??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
PUBLIC	??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ ; cow::GraphicsPipeline<cow::Vertex2DTextured>::~GraphicsPipeline<cow::Vertex2DTextured>
PUBLIC	?bind@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ; cow::GraphicsPipeline<cow::Vertex2DTextured>::bind
PUBLIC	?__autoclassinit2@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAX_K@Z ; cow::GraphicsPipeline<cow::Vertex2DTextured>::__autoclassinit2
PUBLIC	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z		; glm::vec<2,float,0>::vec<2,float,0><double,double>
PUBLIC	??$?0MN@?$vec@$01M$0A@@glm@@QEAA@MN@Z		; glm::vec<2,float,0>::vec<2,float,0><float,double>
PUBLIC	??0?$allocator@PEAVRenderObject@@@std@@QEAA@XZ	; std::allocator<RenderObject *>::allocator<RenderObject *>
PUBLIC	?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z ; std::allocator<RenderObject *>::deallocate
PUBLIC	?allocate@?$allocator@PEAVRenderObject@@@std@@QEAAPEAPEAVRenderObject@@_K@Z ; std::allocator<RenderObject *>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SA_KAEBV?$allocator@PEAVRenderObject@@@2@@Z ; std::_Default_allocator_traits<std::allocator<RenderObject *> >::max_size
PUBLIC	??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::vector<RenderObject *,std::allocator<RenderObject *> >
PUBLIC	??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::~vector<RenderObject *,std::allocator<RenderObject *> >
PUBLIC	?push_back@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::push_back
PUBLIC	?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::data
PUBLIC	?size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::size
PUBLIC	?max_size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::max_size
PUBLIC	?capacity@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::capacity
PUBLIC	?_Calculate_growth@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBA_K_K@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXQEAPEAVRenderObject@@_K1@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Change_array
PUBLIC	?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Tidy
PUBLIC	?_Xlength@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@CAXXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Xlength
PUBLIC	?_Orphan_range_unlocked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_unlocked
PUBLIC	?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_locked
PUBLIC	?_Orphan_range@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range
PUBLIC	?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
PUBLIC	?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<RenderObject *> >::_Vector_val<std::_Simple_types<RenderObject *> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::__autoclassinit2
PUBLIC	??$_Unfancy_maybe_null@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z ; std::_Unfancy_maybe_null<RenderObject *>
PUBLIC	??$move@AEAPEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::move<RenderObject * &>
PUBLIC	??$emplace_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA?A_T$$QEAPEAVRenderObject@@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::emplace_back<RenderObject *>
PUBLIC	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
PUBLIC	??$_Emplace_one_at_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_one_at_back<RenderObject *>
PUBLIC	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0PEAVRenderObject@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVRenderObject@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RenderObject *>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	?deallocate@?$allocator@UVkVertexInputAttributeDescription@@@std@@QEAAXQEAUVkVertexInputAttributeDescription@@_K@Z ; std::allocator<VkVertexInputAttributeDescription>::deallocate
PUBLIC	??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::~vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >
PUBLIC	?data@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAPEAUVkVertexInputAttributeDescription@@XZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::data
PUBLIC	?size@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEBA_KXZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::size
PUBLIC	?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::_Tidy
PUBLIC	?_Getal@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@UVkVertexInputAttributeDescription@@@std@@V?$_Vector_val@U?$_Simple_types@UVkVertexInputAttributeDescription@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ ; std::_Compressed_pair<std::allocator<VkVertexInputAttributeDescription>,std::_Vector_val<std::_Simple_types<VkVertexInputAttributeDescription> >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAX_K@Z ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::__autoclassinit2
PUBLIC	??$_Unfancy_maybe_null@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z ; std::_Unfancy_maybe_null<VkCommandBuffer_T *>
PUBLIC	??$?0PEAUVkCommandBuffer_T@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><VkCommandBuffer_T *>
PUBLIC	??$?0AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1><std::allocator<VkCommandBuffer_T *> const &>
PUBLIC	??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>
PUBLIC	??$move@AEAUVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::move<cow::Vertex2DTextured &>
PUBLIC	??$emplace_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA?A_T$$QEAUVertex2DTextured@cow@@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::emplace_back<cow::Vertex2DTextured>
PUBLIC	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
PUBLIC	??$_Emplace_one_at_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_one_at_back<cow::Vertex2DTextured>
PUBLIC	??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><cow::Vertex2DTextured>
PUBLIC	??$?0V?$allocator@UVertex2DTextured@cow@@@std@@$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UVertex2DTextured@cow@@@1@@Z ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1><std::allocator<cow::Vertex2DTextured> >
PUBLIC	??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1><>
PUBLIC	??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> ><std::default_delete<cow::Buffer>,0>
PUBLIC	??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z ; std::make_unique<cow::Buffer,cow::Device &,unsigned __int64 &,enum VkBufferUsageFlagBits,int,0>
PUBLIC	??$?4U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator=<std::default_delete<cow::Buffer>,0>
PUBLIC	??$?0W4VkDynamicState@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@W4VkDynamicState@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><enum VkDynamicState>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1>::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1><>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??$min@_K@std@@YAAEB_KAEB_K0@Z			; std::min<unsigned __int64>
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Unfancy_maybe_null@UVkVertexInputAttributeDescription@@@std@@YAPEAUVkVertexInputAttributeDescription@@PEAU1@@Z ; std::_Unfancy_maybe_null<VkVertexInputAttributeDescription>
PUBLIC	??$?0UVkVertexInputAttributeDescription@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVkVertexInputAttributeDescription@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><VkVertexInputAttributeDescription>
PUBLIC	??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ; std::_Destroy_range<std::allocator<RenderObject *> >
PUBLIC	??$_Destroy_range@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAXPEAPEAUVkCommandBuffer_T@@QEAPEAU1@AEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z ; std::_Destroy_range<std::allocator<VkCommandBuffer_T *> >
PUBLIC	??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Destroy_range<std::allocator<cow::Vertex2DTextured> >
PUBLIC	??$_Unfancy_maybe_null@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ; std::_Unfancy_maybe_null<cow::Vertex2DTextured>
PUBLIC	??$_Destroy_range@V?$allocator@W4VkDynamicState@@@std@@@std@@YAXPEAW4VkDynamicState@@QEAW41@AEAV?$allocator@W4VkDynamicState@@@0@@Z ; std::_Destroy_range<std::allocator<enum VkDynamicState> >
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Destroy_range@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@YAXPEAUVkVertexInputAttributeDescription@@QEAU1@AEAV?$allocator@UVkVertexInputAttributeDescription@@@0@@Z ; std::_Destroy_range<std::allocator<VkVertexInputAttributeDescription> >
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@X@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,void>
PUBLIC	??$forward@H@std@@YA$$QEAHAEAH@Z		; std::forward<int>
PUBLIC	??$_Emplace_back_with_unused_capacity@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_back_with_unused_capacity<RenderObject *>
PUBLIC	??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_reallocate<RenderObject *>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAAEBV?$allocator@PEAUVkCommandBuffer_T@@@0@AEBV10@@Z ; std::forward<std::allocator<VkCommandBuffer_T *> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >::~_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<VkCommandBuffer_T *> >
PUBLIC	??$_Emplace_back_with_unused_capacity@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_back_with_unused_capacity<cow::Vertex2DTextured>
PUBLIC	??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_reallocate<cow::Vertex2DTextured>
PUBLIC	??$forward@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YA$$QEAV?$allocator@UVertex2DTextured@cow@@@0@AEAV10@@Z ; std::forward<std::allocator<cow::Vertex2DTextured> >
PUBLIC	??1?$_Tidy_guard@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >::~_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >
PUBLIC	??$forward@AEBQEAUVertex2DTextured@cow@@@std@@YAAEBQEAUVertex2DTextured@cow@@AEBQEAU12@@Z ; std::forward<cow::Vertex2DTextured * const &>
PUBLIC	??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Uninitialized_copy<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
PUBLIC	??$?0$$V@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1><>
PUBLIC	??$forward@AEAVDevice@cow@@@std@@YAAEAVDevice@cow@@AEAV12@@Z ; std::forward<cow::Device &>
PUBLIC	??$forward@AEA_K@std@@YAAEA_KAEA_K@Z		; std::forward<unsigned __int64 &>
PUBLIC	??$forward@W4VkBufferUsageFlagBits@@@std@@YA$$QEAW4VkBufferUsageFlagBits@@AEAW41@@Z ; std::forward<enum VkBufferUsageFlagBits>
PUBLIC	??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@PEAVBuffer@cow@@@Z ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> ><std::default_delete<cow::Buffer>,0>
PUBLIC	??$addressof@V?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> > >
PUBLIC	??$forward@U?$default_delete@VBuffer@cow@@@std@@@std@@YA$$QEAU?$default_delete@VBuffer@cow@@@0@AEAU10@@Z ; std::forward<std::default_delete<cow::Buffer> >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$exchange@PEAVBuffer@cow@@AEAPEAV12@@std@@YAPEAVBuffer@cow@@AEAPEAV12@0@Z ; std::exchange<cow::Buffer *,cow::Buffer * &>
PUBLIC	??$exchange@PEAVBuffer@cow@@$$T@std@@YAPEAVBuffer@cow@@AEAPEAV12@$$QEA$$T@Z ; std::exchange<cow::Buffer *,std::nullptr_t>
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Construct_in_place@PEAVRenderObject@@PEAV1@@std@@YAXAEAPEAVRenderObject@@$$QEAPEAV1@@Z ; std::_Construct_in_place<RenderObject *,RenderObject *>
PUBLIC	??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z ; std::_Unfancy<RenderObject *>
PUBLIC	??$construct@PEAVRenderObject@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SAXAEAV?$allocator@PEAVRenderObject@@@1@QEAPEAVRenderObject@@$$QEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<RenderObject *> >::construct<RenderObject *,RenderObject *>
PUBLIC	??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ; std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Unfancy@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z ; std::_Unfancy<VkCommandBuffer_T *>
PUBLIC	??$_Zero_range@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@0@Z ; std::_Zero_range<VkCommandBuffer_T * *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@PEAPEAUVkCommandBuffer_T@@AEAV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::~_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::__autoclassinit2
PUBLIC	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Emplace_back<>
PUBLIC	??$_Construct_in_place@UVertex2DTextured@cow@@U12@@std@@YAXAEAUVertex2DTextured@cow@@$$QEAU12@@Z ; std::_Construct_in_place<cow::Vertex2DTextured,cow::Vertex2DTextured>
PUBLIC	??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ; std::_Unfancy<cow::Vertex2DTextured>
PUBLIC	??$construct@UVertex2DTextured@cow@@U12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::construct<cow::Vertex2DTextured,cow::Vertex2DTextured>
PUBLIC	??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
PUBLIC	??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z ; std::_Get_unwrapped<cow::Vertex2DTextured * const &>
PUBLIC	??$_Copy_memmove@PEAUVertex2DTextured@cow@@PEAU12@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@00@Z ; std::_Copy_memmove<cow::Vertex2DTextured *,cow::Vertex2DTextured *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@PEAUVertex2DTextured@cow@@AEAV?$allocator@UVertex2DTextured@cow@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::~_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::__autoclassinit2
PUBLIC	??$_Emplace_back@AEAUVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAXAEAUVertex2DTextured@cow@@@Z ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Emplace_back<cow::Vertex2DTextured &>
PUBLIC	??$?0AEAPEAVBuffer@cow@@@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVBuffer@cow@@@Z ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1><cow::Buffer * &>
PUBLIC	??$addressof@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@AEAPEAV1@@Z ; std::addressof<RenderObject *>
PUBLIC	??$construct_at@PEAVRenderObject@@PEAV1@X@std@@YAPEAPEAVRenderObject@@QEAPEAV1@$$QEAPEAV1@@Z ; std::construct_at<RenderObject *,RenderObject *,void>
PUBLIC	??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z ; std::_Voidify_iter<RenderObject * *>
PUBLIC	??$_Get_unwrapped@AEBQEAPEAVRenderObject@@@std@@YA?A_TAEBQEAPEAVRenderObject@@@Z ; std::_Get_unwrapped<RenderObject * * const &>
PUBLIC	??$_Copy_memmove@PEAPEAVRenderObject@@PEAPEAV1@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@00@Z ; std::_Copy_memmove<RenderObject * *,RenderObject * *>
PUBLIC	??0?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@PEAPEAVRenderObject@@AEAV?$allocator@PEAVRenderObject@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Uninitialized_backout_al<std::allocator<RenderObject *> >
PUBLIC	??1?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::~_Uninitialized_backout_al<std::allocator<RenderObject *> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Release
PUBLIC	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::__autoclassinit2
PUBLIC	??$_Emplace_back@PEAVRenderObject@@@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Emplace_back<RenderObject *>
PUBLIC	??$_To_address@PEAPEAUVkCommandBuffer_T@@@std@@YA?A_PAEBQEAPEAUVkCommandBuffer_T@@@Z ; std::_To_address<VkCommandBuffer_T * *>
PUBLIC	??$to_address@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z ; std::to_address<VkCommandBuffer_T *>
PUBLIC	??$construct@PEAUVkCommandBuffer_T@@$$V@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SAXAEAV?$allocator@PEAUVkCommandBuffer_T@@@1@QEAPEAUVkCommandBuffer_T@@@Z ; std::_Default_allocator_traits<std::allocator<VkCommandBuffer_T *> >::construct<VkCommandBuffer_T *>
PUBLIC	??$addressof@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@AEAU12@@Z ; std::addressof<cow::Vertex2DTextured>
PUBLIC	??$construct_at@UVertex2DTextured@cow@@U12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@$$QEAU12@@Z ; std::construct_at<cow::Vertex2DTextured,cow::Vertex2DTextured,void>
PUBLIC	??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z ; std::_Voidify_iter<cow::Vertex2DTextured *>
PUBLIC	??$_Emplace_back@UVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Emplace_back<cow::Vertex2DTextured>
PUBLIC	??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z ; std::_To_address<cow::Vertex2DTextured *>
PUBLIC	??$to_address@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@@Z ; std::to_address<cow::Vertex2DTextured>
PUBLIC	??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured &>
PUBLIC	??$construct@UVertex2DTextured@cow@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@AEAU34@@Z ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::construct<cow::Vertex2DTextured,cow::Vertex2DTextured &>
PUBLIC	??$forward@AEAPEAVBuffer@cow@@@std@@YAAEAPEAVBuffer@cow@@AEAPEAV12@@Z ; std::forward<cow::Buffer * &>
PUBLIC	??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z ; std::_To_address<RenderObject * *>
PUBLIC	??$to_address@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@@Z ; std::to_address<RenderObject *>
PUBLIC	??$construct_at@PEAUVkCommandBuffer_T@@$$VX@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z ; std::construct_at<VkCommandBuffer_T *,void>
PUBLIC	??$_Voidify_iter@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAXPEAPEAUVkCommandBuffer_T@@@Z ; std::_Voidify_iter<VkCommandBuffer_T * *>
PUBLIC	??$construct_at@UVertex2DTextured@cow@@AEAU12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@AEAU12@@Z ; std::construct_at<cow::Vertex2DTextured,cow::Vertex2DTextured &,void>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_11LOCGONAA@@				; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_7invalid_argument@std@@6B@			; std::invalid_argument::`vftable'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_0GC@JBJLEFAK@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA ; `std::_Maklocwcs'::`1'::__LINE__Var
PUBLIC	??_C@_0GC@BCNGEHKL@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	_TI2?AVruntime_error@std@@
PUBLIC	_CTA2?AVruntime_error@std@@
PUBLIC	??_C@_0CA@IGKKDGOC@failed?5to?5create?5vertex?5buffer?$CB@ ; `string'
PUBLIC	??_C@_0CJ@NNDFOAFL@failed?5to?5allocate?5vertex?5buffe@ ; `string'
PUBLIC	?currentId@?1??create@EmptyObject@cow@@SA?AV23@XZ@4IA ; `cow::EmptyObject::create'::`2'::currentId
PUBLIC	??_C@_0BD@CBEDEJPH@unknown?5image?5type@	; `string'
PUBLIC	??_C@_08NOGIMCHF@outofmem@			; `string'
PUBLIC	?__LINE__Var@?0??stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z@4JA ; `stbi__load_and_postprocess_8bit'::`1'::__LINE__Var
PUBLIC	??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@ ; `string'
PUBLIC	??_C@_1GM@LFNCFCEN@?$AAr?$AAi?$AA?4?$AAb?$AAi?$AAt?$AAs?$AA_?$AAp?$AAe?$AAr?$AA_?$AAc?$AAh?$AAa@ ; `string'
PUBLIC	?__LINE__Var@?0??stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z@4JA ; `stbi__load_and_postprocess_16bit'::`1'::__LINE__Var
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_0M@JPDHFAGK@can?8t?5fopen@		; `string'
PUBLIC	?__LINE__Var@?0??stbi__convert_format@@YAPEAEPEAEHHII@Z@4JA ; `stbi__convert_format'::`1'::__LINE__Var
PUBLIC	??_C@_1DO@MABJBNAJ@?$AAr?$AAe?$AAq?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG@ ; `string'
PUBLIC	??_C@_13COJANIEC@?$AA0@				; `string'
PUBLIC	??_C@_0M@MHDBFHD@unsupported@			; `string'
PUBLIC	?__LINE__Var@?0??stbi__convert_format16@@YAPEAGPEAGHHII@Z@4JA ; `stbi__convert_format16'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FOKGPEKG@bad?5code?5lengths@		; `string'
PUBLIC	?__LINE__Var@?0??stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z@4JA ; `stbi__jpeg_huff_decode'::`1'::__LINE__Var
PUBLIC	??_C@_1KE@JGKPJEBO@?$AA?$CI?$AA?$CI?$AA?$CI?$AAj?$AA?9?$AA?$DO?$AAc?$AAo?$AAd?$AAe?$AA_?$AAb?$AAu?$AAf?$AAf@ ; `string'
PUBLIC	??_C@_0BB@IIMLINA@bad?5huffman?5code@		; `string'
PUBLIC	??_C@_0BG@PJBJDAGM@can?8t?5merge?5dc?5and?5ac@	; `string'
PUBLIC	??_C@_0BA@KLNDOKJD@expected?5marker@		; `string'
PUBLIC	??_C@_0M@LPHNODCG@bad?5DRI?5len@		; `string'
PUBLIC	??_C@_0N@BOFJCHAP@bad?5DQT?5type@		; `string'
PUBLIC	??_C@_0O@CNHKKDIM@bad?5DQT?5table@		; `string'
PUBLIC	??_C@_0P@JLGKOCGN@bad?5DHT?5header@		; `string'
PUBLIC	??_C@_0M@CICAFFCH@bad?5COM?5len@		; `string'
PUBLIC	??_C@_0M@EENLKPDI@bad?5APP?5len@		; `string'
PUBLIC	??_C@_0P@NNGPHMMK@unknown?5marker@		; `string'
PUBLIC	??_C@_0BI@DHFJCMBA@bad?5SOS?5component?5count@	; `string'
PUBLIC	??_C@_0M@GNEHAHOH@bad?5SOS?5len@		; `string'
PUBLIC	??_C@_0M@NOCCBFAC@bad?5DC?5huff@		; `string'
PUBLIC	??_C@_0M@JGMCBLGG@bad?5AC?5huff@		; `string'
PUBLIC	??_C@_07EEJOMGGP@bad?5SOS@			; `string'
PUBLIC	??_C@_0M@DOFMJEMP@bad?5SOF?5len@		; `string'
PUBLIC	??_C@_0L@BCINMEBJ@only?58?9bit@			; `string'
PUBLIC	??_C@_0BB@LNEGOMA@no?5header?5height@		; `string'
PUBLIC	??_C@_07BIDACDEF@0?5width@			; `string'
PUBLIC	??_C@_09OJDLMMBJ@too?5large@			; `string'
PUBLIC	??_C@_0BE@DAPHADHL@bad?5component?5count@	; `string'
PUBLIC	??_C@_05BLPKENEJ@bad?5H@			; `string'
PUBLIC	??_C@_05MPLLHCJG@bad?5V@			; `string'
PUBLIC	??_C@_06LJIHDFHI@bad?5TQ@			; `string'
PUBLIC	??_C@_06CLMBLEP@no?5SOI@			; `string'
PUBLIC	??_C@_06IFCEAHIA@no?5SOF@			; `string'
PUBLIC	??_C@_0M@EPMOIECP@bad?5DNL?5len@		; `string'
PUBLIC	??_C@_0P@PNCLKCLJ@bad?5DNL?5height@		; `string'
PUBLIC	??_C@_0N@KBPNPPBJ@bad?5req_comp@		; `string'
PUBLIC	?__LINE__Var@?0??stbi__bit_reverse@@YAHHH@Z@4JA	; `stbi__bit_reverse'::`1'::__LINE__Var
PUBLIC	??_C@_1BG@HKNLHECB@?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA6@ ; `string'
PUBLIC	??_C@_09EOHLEIKL@bad?5sizes@			; `string'
PUBLIC	??_C@_0BA@MDNKOBMC@bad?5codelengths@		; `string'
PUBLIC	??_C@_0BE@IBFIPFO@output?5buffer?5limit@	; `string'
PUBLIC	??_C@_08DIAPIMGJ@bad?5dist@			; `string'
PUBLIC	??_C@_0N@IECDHMDI@zlib?5corrupt@		; `string'
PUBLIC	??_C@_0BB@PIPBCKIA@read?5past?5buffer@		; `string'
PUBLIC	??_C@_0BA@OBKOPAFL@bad?5zlib?5header@		; `string'
PUBLIC	??_C@_0P@DOGMHEBI@no?5preset?5dict@		; `string'
PUBLIC	??_C@_0BA@MCNBDLPD@bad?5compression@		; `string'
PUBLIC	??_C@_0M@DMDNBACF@bad?5png?5sig@		; `string'
PUBLIC	?__LINE__Var@?0??stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z@4JA ; `stbi__create_png_image_raw'::`1'::__LINE__Var
PUBLIC	??_C@_1FC@ICDHLHK@?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AA?9?$AA?$DO?$AAi?$AAm?$AAg@ ; `string'
PUBLIC	??_C@_0BC@BHMPBBMG@not?5enough?5pixels@		; `string'
PUBLIC	??_C@_0P@FBBCPGMN@invalid?5filter@		; `string'
PUBLIC	??_C@_0O@MKGNGALN@invalid?5width@		; `string'
PUBLIC	??_C@_1CC@CPJBBDGC@?$AAi?$AAm?$AAg?$AA_?$AAn?$AA?$CL?$AA1?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1BG@FLOPDKAN@?$AAi?$AAm?$AAg?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA3@ ; `string'
PUBLIC	?__LINE__Var@?0??stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z@4JA ; `stbi__compute_transparency'::`1'::__LINE__Var
PUBLIC	??_C@_1DC@BMIDKOPK@?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo@ ; `string'
PUBLIC	?__LINE__Var@?0??stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z@4JA ; `stbi__compute_transparency16'::`1'::__LINE__Var
PUBLIC	?__LINE__Var@?0??stbi__de_iphone@@YAXPEAUstbi__png@@@Z@4JA ; `stbi__de_iphone'::`1'::__LINE__Var
PUBLIC	??_C@_1CE@GKIDJEJM@?$AAs?$AA?9?$AA?$DO?$AAi?$AAm?$AAg?$AA_?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN@ ; `string'
PUBLIC	??_C@_0O@KBHBNJOK@multiple?5IHDR@		; `string'
PUBLIC	??_C@_0N@POJLKMKK@bad?5IHDR?5len@		; `string'
PUBLIC	??_C@_0BE@EJHIPKNO@1?12?14?18?116?9bit?5only@	; `string'
PUBLIC	??_C@_09MBBNGCKB@bad?5ctype@			; `string'
PUBLIC	??_C@_0BA@MDMBDDFG@bad?5comp?5method@		; `string'
PUBLIC	??_C@_0BC@GHLIKKMD@bad?5filter?5method@		; `string'
PUBLIC	??_C@_0BF@JCGDPBAA@bad?5interlace?5method@	; `string'
PUBLIC	??_C@_0O@FNFBHCOO@0?9pixel?5image@		; `string'
PUBLIC	??_C@_0P@JEAFOMAF@first?5not?5IHDR@		; `string'
PUBLIC	??_C@_0N@JCPAJAKB@invalid?5PLTE@		; `string'
PUBLIC	??_C@_0BA@PCPJHDKJ@tRNS?5after?5IDAT@		; `string'
PUBLIC	??_C@_0BB@CEDNNLBG@tRNS?5before?5PLTE@		; `string'
PUBLIC	??_C@_0N@KDLCCKCH@bad?5tRNS?5len@		; `string'
PUBLIC	??_C@_0BA@ENDPGCHB@tRNS?5with?5alpha@		; `string'
PUBLIC	??_C@_07CKIELOEH@no?5PLTE@			; `string'
PUBLIC	??_C@_09MNNCNKEO@outofdata@			; `string'
PUBLIC	??_C@_07MLPECBNA@no?5IDAT@			; `string'
PUBLIC	??_C@_0BF@NOEEEFMF@bad?5bits_per_channel@	; `string'
PUBLIC	?__LINE__Var@?0??stbi__shiftsigned@@YAHIHH@Z@4JA ; `stbi__shiftsigned'::`1'::__LINE__Var
PUBLIC	??_C@_1BA@EKLGALLJ@?$AAv?$AA?5?$AA?$DM?$AA?5?$AA2?$AA5?$AA6@ ; `string'
PUBLIC	??_C@_1CO@LIFEKNEP@?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAi@ ; `string'
PUBLIC	??_C@_07IANEBNLB@not?5BMP@			; `string'
PUBLIC	??_C@_07IEJCHBDI@bad?5BMP@			; `string'
PUBLIC	??_C@_0M@KHBIBJBG@unknown?5BMP@			; `string'
PUBLIC	??_C@_07IMHMNOIB@BMP?5RLE@			; `string'
PUBLIC	??_C@_0N@ODCBCBFN@BMP?5JPEG?1PNG@		; `string'
PUBLIC	??_C@_0L@JDPIFELH@bad?5offset@			; `string'
PUBLIC	??_C@_07MALOAKCI@invalid@			; `string'
PUBLIC	??_C@_07JNJHIMGH@bad?5bpp@			; `string'
PUBLIC	??_C@_09DAEBACAB@bad?5masks@			; `string'
PUBLIC	?__LINE__Var@?0??stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z@4JA ; `stbi__tga_load'::`1'::__LINE__Var
PUBLIC	??_C@_0L@DMAPJJO@bad?5format@			; `string'
PUBLIC	??_C@_0M@ILLOCNCO@bad?5palette@			; `string'
PUBLIC	??_C@_1CK@GOOINIO@?$AAt?$AAg?$AAa?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAS?$AAT?$AAB@ ; `string'
PUBLIC	??_C@_07ECNCNLIK@not?5PSD@			; `string'
PUBLIC	??_C@_0O@CHBCDKKC@wrong?5version@		; `string'
PUBLIC	??_C@_0BE@PJBNGDBE@wrong?5channel?5count@	; `string'
PUBLIC	??_C@_0BG@NOLDLPP@unsupported?5bit?5depth@	; `string'
PUBLIC	??_C@_0BD@IOGGBMNK@wrong?5color?5format@	; `string'
PUBLIC	??_C@_07DPPMCAKL@corrupt@			; `string'
PUBLIC	??_C@_04KBFEPHFH@S?$IA?v4@			; `string'
PUBLIC	??_C@_04ELNJHLFH@PICT@				; `string'
PUBLIC	??_C@_08GGMBIFE@bad?5file@			; `string'
PUBLIC	??_C@_07KMJLPAII@not?5GIF@			; `string'
PUBLIC	??_C@_0O@MGDACKOJ@no?5clear?5code@		; `string'
PUBLIC	??_C@_0P@GJNJCPDJ@too?5many?5codes@		; `string'
PUBLIC	??_C@_0BH@LOKBIIOJ@illegal?5code?5in?5raster@	; `string'
PUBLIC	??_C@_0BF@GIAALCNJ@bad?5Image?5Descriptor@	; `string'
PUBLIC	??_C@_0BE@NAMJKDNF@missing?5color?5table@	; `string'
PUBLIC	??_C@_0N@DJABBOOH@unknown?5code@		; `string'
PUBLIC	??_C@_0M@HOIDFNFN@?$CD?$DPRADIANCE?6@		; `string'
PUBLIC	??_C@_07KFDJIKCK@?$CD?$DPRGBE?6@		; `string'
PUBLIC	??_C@_0L@NCPEAJBD@?$CD?$DPRADIANCE@		; `string'
PUBLIC	??_C@_06NDOKKIDJ@?$CD?$DPRGBE@			; `string'
PUBLIC	??_C@_07NCIOKENI@not?5HDR@			; `string'
PUBLIC	??_C@_0BH@JFGBLLKC@FORMAT?$DN32?9bit_rle_rgbe@	; `string'
PUBLIC	??_C@_0BD@NKJFFLKL@unsupported?5format@		; `string'
PUBLIC	??_C@_03HKAKGGJN@?9Y?5@				; `string'
PUBLIC	??_C@_0BI@DCNDPIOH@unsupported?5data?5layout@	; `string'
PUBLIC	??_C@_03FOKDFDHG@?$CLX?5@			; `string'
PUBLIC	??_C@_0CA@JBEOCDFN@invalid?5decoded?5scanline?5length@ ; `string'
PUBLIC	??_C@_0BC@CNFMOKHC@max?5value?5?$DO?565535@	; `string'
PUBLIC	_TI3?AVinvalid_argument@std@@
PUBLIC	_CTA3?AVinvalid_argument@std@@
PUBLIC	??_R0?AVinvalid_argument@std@@@8		; std::invalid_argument `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QEAA@AEBV01@@Z24
PUBLIC	??_C@_0BP@GBFHPONC@unsupported?5layout?5transition?$CB@ ; `string'
PUBLIC	??_C@_0CF@NBFKCJOJ@failed?5to?5create?5texture?5image?5@ ; `string'
PUBLIC	??_C@_0CC@ELCOLLBC@failed?5to?5create?5texture?5sample@ ; `string'
PUBLIC	??_C@_0BO@FBGJBNOK@failed?5to?5load?5texture?5image?$CB@ ; `string'
PUBLIC	??_C@_02PHMGELLB@?6?6@				; `string'
PUBLIC	??_C@_04MEMAJGDJ@name@				; `string'
PUBLIC	??_C@_0CL@BLGJKHJK@C?3?2Users?2anton?2Downloads?2pic_go@ ; `string'
PUBLIC	??_C@_0CD@CAAGOMDP@failed?5to?5create?5a?5pipeline?5lay@ ; `string'
PUBLIC	??_C@_04GHJNJNPO@main@				; `string'
PUBLIC	??_C@_0EJ@HKLAAGEK@C?3?2Users?2anton?2source?2repos?2GPU@ ; `string'
PUBLIC	??_C@_0EJ@HDHKIKGP@C?3?2Users?2anton?2source?2repos?2GPU@ ; `string'
PUBLIC	??_C@_0CD@DMDCDDIA@failed?5to?5allocate?5command?5buff@ ; `string'
PUBLIC	??_C@_0BI@KCJMGAAL@failed?5to?5end?5cmdBuffer@	; `string'
PUBLIC	??_C@_0BB@LLDEEIKC@ASFDHFHUFDUHUYIF@		; `string'
PUBLIC	??_C@_0CD@JOEKPGKM@failed?5to?5create?5graphics?5pipel@ ; `string'
PUBLIC	??_C@_0BN@HMIFLIEM@array?5subscript?5out?5of?5range@ ; `string'
PUBLIC	??_C@_0GA@LKBGKKAK@C?3?2Program?5Files?2Microsoft?5Visu@ ; `string'
PUBLIC	??_C@_1MA@HADHJGPP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1DO@NCBLADDF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp@ ; `string'
PUBLIC	??_C@_0CI@HPIEGNFK@failed?5to?5create?5descriptor?5set@ ; `string'
PUBLIC	??_C@_0CC@ENOKJEPG@failed?5to?5create?5descriptor?5poo@ ; `string'
PUBLIC	??_C@_0CE@KOBEGADE@failed?5to?5allocate?5descriptor?5s@ ; `string'
PUBLIC	??_C@_0BP@JNGFJPNG@Vertex?5Count?5must?5be?5atleast?53@ ; `string'
PUBLIC	??_C@_1GI@LIMMMBDB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@ ; `string'
PUBLIC	??_C@_1GK@IDNJBOAD@?$AAv?$AAe?$AAr?$AAt?$AAe?$AAx?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5@ ; `string'
PUBLIC	??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@		; `string'
PUBLIC	??_C@_0BA@FOIKENOD@vector?5too?5long@		; `string'
PUBLIC	??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ ; `string'
PUBLIC	??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ ; `string'
PUBLIC	??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4logic_error@std@@6B@			; std::logic_error::`RTTI Complete Object Locator'
PUBLIC	??_R3logic_error@std@@8				; std::logic_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2logic_error@std@@8				; std::logic_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@logic_error@std@@8		; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4invalid_argument@std@@6B@			; std::invalid_argument::`RTTI Complete Object Locator'
PUBLIC	??_R3invalid_argument@std@@8			; std::invalid_argument::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2invalid_argument@std@@8			; std::invalid_argument::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@invalid_argument@std@@8		; std::invalid_argument::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f000000
PUBLIC	__real@3f1a36e2eb1c432d
PUBLIC	__real@3f800000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@40400000
PUBLIC	__real@437f0000
PUBLIC	__real@477fff00
PUBLIC	__real@bf800000
PUBLIC	__real@bfdccccccccccccd
PUBLIC	__real@bfe0000000000000
PUBLIC	__real@bff8000000000000
PUBLIC	__xmm@00000200000002000000020000000200
PUBLIC	__xmm@00080008000800080008000800080008
PUBLIC	__xmm@00ff00ff00ff00ff00ff00ff00ff00ff
PUBLIC	__xmm@01010000010100000101000001010000
PUBLIC	__xmm@08a914e808a914e808a914e808a914e8
PUBLIC	__xmm@11c8e09e11c8e09e11c8e09e11c8e09e
PUBLIC	__xmm@11c8f9c311c8f9c311c8f9c311c8f9c3
PUBLIC	__xmm@12d0046b12d0046b12d0046b12d0046b
PUBLIC	__xmm@166f166f166f166f166f166f166f166f
PUBLIC	__xmm@1c5a1c5a1c5a1c5a1c5a1c5a1c5a1c5a
PUBLIC	__xmm@80808080808080808080808080808080
PUBLIC	__xmm@e09ee565e09ee565e09ee565e09ee565
PUBLIC	__xmm@e9cf12d0e9cf12d0e9cf12d0e9cf12d0
PUBLIC	__xmm@eb1a08a9eb1a08a9eb1a08a9eb1a08a9
PUBLIC	__xmm@f493f493f493f493f493f493f493f493
PUBLIC	__xmm@f9c31a9df9c31a9df9c31a9df9c31a9d
PUBLIC	__xmm@fa7efa7efa7efa7efa7efa7efa7efa7e
EXTRN	??_M@YAXPEAX_K1P6AX0@Z@Z:PROC			; `eh vector destructor iterator'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX@Z:PROC				; operator delete
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__calloc_dbg:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	abs:PROC
EXTRN	__imp_ldexp:PROC
EXTRN	__imp_powf:PROC
EXTRN	__imp_calloc:PROC
EXTRN	__imp_free:PROC
EXTRN	__imp_malloc:PROC
EXTRN	__imp_realloc:PROC
EXTRN	_lrotl:PROC
EXTRN	__imp_strtol:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	__imp_wcslen:PROC
EXTRN	strcmp:PROC
EXTRN	strlen:PROC
EXTRN	__imp_strncmp:PROC
EXTRN	__imp_fopen_s:PROC
EXTRN	__imp_fclose:PROC
EXTRN	__imp_feof:PROC
EXTRN	__imp_ferror:PROC
EXTRN	__imp_fgetc:PROC
EXTRN	__imp_fread:PROC
EXTRN	__imp_fseek:PROC
EXTRN	__imp_ftell:PROC
EXTRN	__imp_ungetc:PROC
EXTRN	?_Xbad_alloc@std@@YAXXZ:PROC			; std::_Xbad_alloc
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	?uncaught_exceptions@std@@YAHXZ:PROC		; std::uncaught_exceptions
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	??_Elogic_error@std@@UEAAPEAXI@Z:PROC		; std::logic_error::`vector deleting destructor'
EXTRN	??_Einvalid_argument@std@@UEAAPEAXI@Z:PROC	; std::invalid_argument::`vector deleting destructor'
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	_Mbrtowc:PROC
EXTRN	__imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ:PROC
EXTRN	__imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ:PROC
EXTRN	__imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ:PROC
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	vkGetPhysicalDeviceProperties:PROC
EXTRN	vkGetPhysicalDeviceMemoryProperties:PROC
EXTRN	vkQueueSubmit:PROC
EXTRN	vkQueueWaitIdle:PROC
EXTRN	vkDeviceWaitIdle:PROC
EXTRN	vkAllocateMemory:PROC
EXTRN	vkFreeMemory:PROC
EXTRN	vkMapMemory:PROC
EXTRN	vkUnmapMemory:PROC
EXTRN	vkBindBufferMemory:PROC
EXTRN	vkBindImageMemory:PROC
EXTRN	vkGetBufferMemoryRequirements:PROC
EXTRN	vkCreateBuffer:PROC
EXTRN	vkDestroyBuffer:PROC
EXTRN	vkDestroyImage:PROC
EXTRN	vkCreateImageView:PROC
EXTRN	vkDestroyImageView:PROC
EXTRN	vkDestroyShaderModule:PROC
EXTRN	vkCreateGraphicsPipelines:PROC
EXTRN	vkDestroyPipeline:PROC
EXTRN	vkCreatePipelineLayout:PROC
EXTRN	vkDestroyPipelineLayout:PROC
EXTRN	vkCreateSampler:PROC
EXTRN	vkDestroySampler:PROC
EXTRN	vkCreateDescriptorSetLayout:PROC
EXTRN	vkDestroyDescriptorSetLayout:PROC
EXTRN	vkCreateDescriptorPool:PROC
EXTRN	vkDestroyDescriptorPool:PROC
EXTRN	vkAllocateDescriptorSets:PROC
EXTRN	vkUpdateDescriptorSets:PROC
EXTRN	vkAllocateCommandBuffers:PROC
EXTRN	vkFreeCommandBuffers:PROC
EXTRN	vkBeginCommandBuffer:PROC
EXTRN	vkEndCommandBuffer:PROC
EXTRN	vkCmdBindPipeline:PROC
EXTRN	vkCmdBindDescriptorSets:PROC
EXTRN	vkCmdBindVertexBuffers:PROC
EXTRN	vkCmdDraw:PROC
EXTRN	vkCmdCopyBuffer:PROC
EXTRN	vkCmdCopyBufferToImage:PROC
EXTRN	vkCmdPipelineBarrier:PROC
EXTRN	vkCmdPushConstants:PROC
EXTRN	vkCmdEndRenderPass:PROC
EXTRN	glfwWindowShouldClose:PROC
EXTRN	glfwPollEvents:PROC
EXTRN	??0Window@cow@@QEAA@HHPEBD@Z:PROC		; cow::Window::Window
EXTRN	??1Window@cow@@QEAA@XZ:PROC			; cow::Window::~Window
EXTRN	??0Device@cow@@QEAA@AEAVWindow@1@PEAII@Z:PROC	; cow::Device::Device
EXTRN	??1Device@cow@@QEAA@XZ:PROC			; cow::Device::~Device
EXTRN	?beginSingleTimeCommands@Device@cow@@QEAAPEAUVkCommandBuffer_T@@XZ:PROC ; cow::Device::beginSingleTimeCommands
EXTRN	?endSingleTimeCommands@Device@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z:PROC ; cow::Device::endSingleTimeCommands
EXTRN	?createImage2D@Device@cow@@QEAAXIIW4VkFormat@@IW4VkImageTiling@@W4VkImageLayout@@PEAPEAUVkImage_T@@@Z:PROC ; cow::Device::createImage2D
EXTRN	?allocateImageMemory@Device@cow@@QEAAXPEAUVkImage_T@@PEAPEAUVkDeviceMemory_T@@@Z:PROC ; cow::Device::allocateImageMemory
EXTRN	?submit@Swapchain@cow@@QEAA?AW4VkResult@@PEBQEAUVkCommandBuffer_T@@PEAI@Z:PROC ; cow::Swapchain::submit
EXTRN	??0GraphicsCommands@cow@@QEAA@AEAVDevice@1@@Z:PROC ; cow::GraphicsCommands::GraphicsCommands
EXTRN	??1GraphicsCommands@cow@@QEAA@XZ:PROC		; cow::GraphicsCommands::~GraphicsCommands
EXTRN	?begin@GraphicsCommands@cow@@QEAAPEAUVkCommandBuffer_T@@XZ:PROC ; cow::GraphicsCommands::begin
EXTRN	?beginRenderPass@GraphicsCommands@cow@@QEAAXPEAUVkCommandBuffer_T@@TVkClearColorValue@@@Z:PROC ; cow::GraphicsCommands::beginRenderPass
EXTRN	__imp__wassert:PROC
EXTRN	?defaultGraphicsPipeline@GraphicsPipelineSimpleInfo@cow@@SAXAEAU12@@Z:PROC ; cow::GraphicsPipelineSimpleInfo::defaultGraphicsPipeline
EXTRN	?bindingDesc@Vertex2DTextured@cow@@SA?AUVkVertexInputBindingDescription@@XZ:PROC ; cow::Vertex2DTextured::bindingDesc
EXTRN	?attributeDesc@Vertex2DTextured@cow@@SA?AV?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@XZ:PROC ; cow::Vertex2DTextured::attributeDesc
EXTRN	?createShaderModule@cow@@YAPEAUVkShaderModule_T@@PEAUVkDevice_T@@PEBD@Z:PROC ; cow::createShaderModule
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__chkstk:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__ImageBase:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
EXTRN	_tls_index:DWORD
;	COMDAT ?currentId@?1??create@EmptyObject@cow@@SA?AV23@XZ@4IA
_BSS	SEGMENT
?currentId@?1??create@EmptyObject@cow@@SA?AV23@XZ@4IA DD 01H DUP (?) ; `cow::EmptyObject::create'::`2'::currentId
_BSS	ENDS
_TLS	SEGMENT
?stbi__g_failure_reason@@3PEBDEB DQ 01H DUP (?)		; stbi__g_failure_reason
_TLS	ENDS
_BSS	SEGMENT
?stbi__vertically_flip_on_load_global@@3HA DD 01H DUP (?) ; stbi__vertically_flip_on_load_global
_BSS	ENDS
_TLS	SEGMENT
?stbi__vertically_flip_on_load_local@@3HA DD 01H DUP (?) ; stbi__vertically_flip_on_load_local
?stbi__vertically_flip_on_load_set@@3HA DD 01H DUP (?)	; stbi__vertically_flip_on_load_set
_TLS	ENDS
_BSS	SEGMENT
?stbi__unpremultiply_on_load_global@@3HA DD 01H DUP (?)	; stbi__unpremultiply_on_load_global
?stbi__de_iphone_flag_global@@3HA DD 01H DUP (?)	; stbi__de_iphone_flag_global
_BSS	ENDS
_TLS	SEGMENT
?stbi__unpremultiply_on_load_local@@3HA DD 01H DUP (?)	; stbi__unpremultiply_on_load_local
?stbi__unpremultiply_on_load_set@@3HA DD 01H DUP (?)	; stbi__unpremultiply_on_load_set
?stbi__de_iphone_flag_local@@3HA DD 01H DUP (?)		; stbi__de_iphone_flag_local
?stbi__de_iphone_flag_set@@3HA DD 01H DUP (?)		; stbi__de_iphone_flag_set
_TLS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$ldexpf DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$ldexpf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?is_constant_evaluated@std@@YA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+39
	DD	imagerel $unwind$?is_constant_evaluated@std@@YA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$wmemcpy DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$wmemcpy
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ldexp@@YAMMH@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?ldexp@@YAMMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pow@@YAMMM@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?pow@@YAMMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+210
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+96
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+68
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+453
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+79
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+138
	DD	imagerel $unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+151
	DD	imagerel $unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+55
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+62
	DD	imagerel $unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+198
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+100
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+95
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0logic_error@std@@QEAA@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$??0logic_error@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1logic_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1logic_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0logic_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0logic_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Glogic_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Glogic_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0invalid_argument@std@@QEAA@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$??0invalid_argument@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1invalid_argument@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1invalid_argument@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0invalid_argument@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0invalid_argument@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Ginvalid_argument@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Ginvalid_argument@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@PEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+89
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1runtime_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1runtime_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD imagerel $LN12
	DD	imagerel $LN12+586
	DD	imagerel $unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD imagerel $LN4
	DD	imagerel $LN4+142
	DD	imagerel $unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD imagerel $LN7
	DD	imagerel $LN7+200
	DD	imagerel $unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?shouldClose@Window@cow@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+84
	DD	imagerel $unwind$?shouldClose@Window@cow@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@Window@cow@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@Window@cow@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getPhysicalDevice@Device@cow@@QEAAPEAUVkPhysicalDevice_T@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?getPhysicalDevice@Device@cow@@QEAAPEAUVkPhysicalDevice_T@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getGraphicsQueue@Device@cow@@QEAAPEAUVkQueue_T@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?getGraphicsQueue@Device@cow@@QEAAPEAUVkQueue_T@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?bindImageMemory@Device@cow@@QEBA?AW4VkResult@@PEAUVkImage_T@@PEAUVkDeviceMemory_T@@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$?bindImageMemory@Device@cow@@QEBA?AW4VkResult@@PEAUVkImage_T@@PEAUVkDeviceMemory_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@Device@cow@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@Device@cow@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getRenderPass@Swapchain@cow@@QEBAPEAUVkRenderPass_T@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?getRenderPass@Swapchain@cow@@QEBAPEAUVkRenderPass_T@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getCurrentFrame@Swapchain@cow@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?getCurrentFrame@Swapchain@cow@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getCurrentImageIndex@GraphicsCommands@cow@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?getCurrentImageIndex@GraphicsCommands@cow@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@GraphicsCommands@cow@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@GraphicsCommands@cow@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Buffer@cow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+168
	DD	imagerel $unwind$??1Buffer@cow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?unmap@Buffer@cow@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+130
	DD	imagerel $unwind$?unmap@Buffer@cow@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+139
	DD	imagerel $unwind$?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+553
	DD	imagerel $unwind$?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?createBuffer@Buffer@cow@@AEAAXII@Z DD imagerel $LN9
	DD	imagerel $LN9+728
	DD	imagerel $unwind$?createBuffer@Buffer@cow@@AEAAXII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@Buffer@cow@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@Buffer@cow@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GBuffer@cow@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+82
	DD	imagerel $unwind$??_GBuffer@cow@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@W4VkDynamicState@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$allocator@W4VkDynamicState@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@W4VkDynamicState@@@std@@QEAAXQEAW4VkDynamicState@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+216
	DD	imagerel $unwind$?deallocate@?$allocator@W4VkDynamicState@@@std@@QEAAXQEAW4VkDynamicState@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+137
	DD	imagerel $unwind$??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+203
	DD	imagerel $unwind$??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+228
	DD	imagerel $unwind$?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1GraphicsPipelineSimpleInfo@cow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$??1GraphicsPipelineSimpleInfo@cow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@VBuffer@cow@@@std@@QEBAXPEAVBuffer@cow@@@Z DD imagerel $LN5
	DD	imagerel $LN5+107
	DD	imagerel $unwind$??R?$default_delete@VBuffer@cow@@@std@@QEBAXPEAVBuffer@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+112
	DD	imagerel $unwind$??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAPEAVBuffer@cow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?release@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAPEAVBuffer@cow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?reset@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAXPEAVBuffer@cow@@@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$?reset@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAXPEAVBuffer@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?create@EmptyObject@cow@@SA?AV12@XZ DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$?create@EmptyObject@cow@@SA?AV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1EmptyObject@cow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1EmptyObject@cow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0EmptyObject@cow@@AEAA@I@Z DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??0EmptyObject@cow@@AEAA@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_load_from_memory DD imagerel $LN3
	DD	imagerel $LN3+197
	DD	imagerel $unwind$stbi_load_from_memory
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_load_from_callbacks DD imagerel $LN3
	DD	imagerel $LN3+198
	DD	imagerel $unwind$stbi_load_from_callbacks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_load DD imagerel $LN6
	DD	imagerel $LN6+191
	DD	imagerel $unwind$stbi_load
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_load_from_file DD imagerel $LN4
	DD	imagerel $LN4+249
	DD	imagerel $unwind$stbi_load_from_file
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_load_gif_from_memory DD imagerel $LN6
	DD	imagerel $LN6+370
	DD	imagerel $unwind$stbi_load_gif_from_memory
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_load_16_from_memory DD imagerel $LN3
	DD	imagerel $LN3+197
	DD	imagerel $unwind$stbi_load_16_from_memory
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_load_16_from_callbacks DD imagerel $LN3
	DD	imagerel $LN3+198
	DD	imagerel $unwind$stbi_load_16_from_callbacks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_load_16 DD imagerel $LN6
	DD	imagerel $LN6+191
	DD	imagerel $unwind$stbi_load_16
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_load_from_file_16 DD imagerel $LN4
	DD	imagerel $LN4+249
	DD	imagerel $unwind$stbi_load_from_file_16
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_loadf_from_memory DD imagerel $LN3
	DD	imagerel $LN3+197
	DD	imagerel $unwind$stbi_loadf_from_memory
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_loadf_from_callbacks DD imagerel $LN3
	DD	imagerel $LN3+198
	DD	imagerel $unwind$stbi_loadf_from_callbacks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_loadf DD imagerel $LN6
	DD	imagerel $LN6+191
	DD	imagerel $unwind$stbi_loadf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_loadf_from_file DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$stbi_loadf_from_file
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_hdr_to_ldr_gamma DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$stbi_hdr_to_ldr_gamma
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_hdr_to_ldr_scale DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$stbi_hdr_to_ldr_scale
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_ldr_to_hdr_gamma DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$stbi_ldr_to_hdr_gamma
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_ldr_to_hdr_scale DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$stbi_ldr_to_hdr_scale
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_is_hdr_from_callbacks DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$stbi_is_hdr_from_callbacks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_is_hdr_from_memory DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$stbi_is_hdr_from_memory
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_is_hdr DD imagerel $LN4
	DD	imagerel $LN4+103
	DD	imagerel $unwind$stbi_is_hdr
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_is_hdr_from_file DD imagerel $LN3
	DD	imagerel $LN3+184
	DD	imagerel $unwind$stbi_is_hdr_from_file
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_failure_reason DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$stbi_failure_reason
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_image_free DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$stbi_image_free
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_info_from_memory DD imagerel $LN3
	DD	imagerel $LN3+187
	DD	imagerel $unwind$stbi_info_from_memory
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_info_from_callbacks DD imagerel $LN3
	DD	imagerel $LN3+188
	DD	imagerel $unwind$stbi_info_from_callbacks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_is_16_bit_from_memory DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$stbi_is_16_bit_from_memory
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_is_16_bit_from_callbacks DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$stbi_is_16_bit_from_callbacks
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_info DD imagerel $LN4
	DD	imagerel $LN4+146
	DD	imagerel $unwind$stbi_info
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_info_from_file DD imagerel $LN3
	DD	imagerel $LN3+226
	DD	imagerel $unwind$stbi_info_from_file
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_is_16_bit DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$stbi_is_16_bit
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_is_16_bit_from_file DD imagerel $LN3
	DD	imagerel $LN3+190
	DD	imagerel $unwind$stbi_is_16_bit_from_file
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_set_unpremultiply_on_load DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$stbi_set_unpremultiply_on_load
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_convert_iphone_png_to_rgb DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$stbi_convert_iphone_png_to_rgb
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_set_flip_vertically_on_load DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$stbi_set_flip_vertically_on_load
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_convert_iphone_png_to_rgb_thread DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$stbi_convert_iphone_png_to_rgb_thread
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_set_flip_vertically_on_load_thread DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$stbi_set_flip_vertically_on_load_thread
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_zlib_decode_malloc_guesssize DD imagerel $LN7
	DD	imagerel $LN7+308
	DD	imagerel $unwind$stbi_zlib_decode_malloc_guesssize
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_zlib_decode_malloc_guesssize_headerflag DD imagerel $LN7
	DD	imagerel $LN7+310
	DD	imagerel $unwind$stbi_zlib_decode_malloc_guesssize_headerflag
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_zlib_decode_malloc DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$stbi_zlib_decode_malloc
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_zlib_decode_buffer DD imagerel $LN5
	DD	imagerel $LN5+236
	DD	imagerel $unwind$stbi_zlib_decode_buffer
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_zlib_decode_noheader_malloc DD imagerel $LN7
	DD	imagerel $LN7+297
	DD	imagerel $unwind$stbi_zlib_decode_noheader_malloc
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$stbi_zlib_decode_noheader_buffer DD imagerel $LN5
	DD	imagerel $LN5+236
	DD	imagerel $unwind$stbi_zlib_decode_noheader_buffer
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__cpuid3@@YAHXZ DD imagerel ?stbi__cpuid3@@YAHXZ
	DD	imagerel ?stbi__cpuid3@@YAHXZ+149
	DD	imagerel $unwind$?stbi__cpuid3@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__sse2_available@@YAHXZ DD imagerel ?stbi__sse2_available@@YAHXZ
	DD	imagerel ?stbi__sse2_available@@YAHXZ+86
	DD	imagerel $unwind$?stbi__sse2_available@@YAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z DD imagerel ?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z
	DD	imagerel ?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z+305
	DD	imagerel $unwind$?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z DD imagerel ?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z
	DD	imagerel ?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z+205
	DD	imagerel $unwind$?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z DD imagerel ?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z
	DD	imagerel ?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z+241
	DD	imagerel $unwind$?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__stdio_read@@YAHPEAXPEADH@Z DD imagerel ?stbi__stdio_read@@YAHPEAXPEADH@Z
	DD	imagerel ?stbi__stdio_read@@YAHPEAXPEADH@Z+86
	DD	imagerel $unwind$?stbi__stdio_read@@YAHPEAXPEADH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__stdio_skip@@YAXPEAXH@Z DD imagerel ?stbi__stdio_skip@@YAXPEAXH@Z
	DD	imagerel ?stbi__stdio_skip@@YAXPEAXH@Z+108
	DD	imagerel $unwind$?stbi__stdio_skip@@YAXPEAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__stdio_eof@@YAHPEAX@Z DD imagerel ?stbi__stdio_eof@@YAHPEAX@Z
	DD	imagerel ?stbi__stdio_eof@@YAHPEAX@Z+103
	DD	imagerel $unwind$?stbi__stdio_eof@@YAHPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z DD imagerel ?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z
	DD	imagerel ?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z+72
	DD	imagerel $unwind$?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__rewind@@YAXPEAUstbi__context@@@Z DD imagerel ?stbi__rewind@@YAXPEAUstbi__context@@@Z
	DD	imagerel ?stbi__rewind@@YAXPEAUstbi__context@@@Z+97
	DD	imagerel $unwind$?stbi__rewind@@YAXPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_test@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__jpeg_test@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__jpeg_test@@YAHPEAUstbi__context@@@Z+141
	DD	imagerel $unwind$?stbi__jpeg_test@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD imagerel ?stbi__jpeg_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
	DD	imagerel ?stbi__jpeg_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z+205
	DD	imagerel $unwind$?stbi__jpeg_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_info@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__jpeg_info@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__jpeg_info@@YAHPEAUstbi__context@@PEAH11@Z+151
	DD	imagerel $unwind$?stbi__jpeg_info@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__png_test@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__png_test@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__png_test@@YAHPEAUstbi__context@@@Z+71
	DD	imagerel $unwind$?stbi__png_test@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD imagerel ?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
	DD	imagerel ?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z+198
	DD	imagerel $unwind$?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z+176
	DD	imagerel $unwind$?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__png_is16@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__png_is16@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__png_is16@@YAHPEAUstbi__context@@@Z+180
	DD	imagerel $unwind$?stbi__png_is16@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__bmp_test@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__bmp_test@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__bmp_test@@YAHPEAUstbi__context@@@Z+71
	DD	imagerel $unwind$?stbi__bmp_test@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD imagerel ?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
	DD	imagerel ?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z+4740
	DD	imagerel $unwind$?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z+333
	DD	imagerel $unwind$?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__tga_test@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__tga_test@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__tga_test@@YAHPEAUstbi__context@@@Z+423
	DD	imagerel $unwind$?stbi__tga_test@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD imagerel ?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
	DD	imagerel ?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z+2999
	DD	imagerel $unwind$?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__tga_info@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__tga_info@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__tga_info@@YAHPEAUstbi__context@@PEAH11@Z+712
	DD	imagerel $unwind$?stbi__tga_info@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__psd_test@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__psd_test@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__psd_test@@YAHPEAUstbi__context@@@Z+106
	DD	imagerel $unwind$?stbi__psd_test@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z DD imagerel ?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z
	DD	imagerel ?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z+3098
	DD	imagerel $unwind$?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z+471
	DD	imagerel $unwind$?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__psd_is16@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__psd_is16@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__psd_is16@@YAHPEAUstbi__context@@@Z+238
	DD	imagerel $unwind$?stbi__psd_is16@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__hdr_test@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__hdr_test@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__hdr_test@@YAHPEAUstbi__context@@@Z+118
	DD	imagerel $unwind$?stbi__hdr_test@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD imagerel ?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
	DD	imagerel ?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z+2594
	DD	imagerel $unwind$?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z+635
	DD	imagerel $unwind$?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pic_test@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__pic_test@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__pic_test@@YAHPEAUstbi__context@@@Z+71
	DD	imagerel $unwind$?stbi__pic_test@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD imagerel ?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
	DD	imagerel ?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z+776
	DD	imagerel $unwind$?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z+713
	DD	imagerel $unwind$?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__gif_test@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__gif_test@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__gif_test@@YAHPEAUstbi__context@@@Z+71
	DD	imagerel $unwind$?stbi__gif_test@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD imagerel ?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
	DD	imagerel ?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z+358
	DD	imagerel $unwind$?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z DD imagerel ?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z
	DD	imagerel ?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z+1122
	DD	imagerel $unwind$?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__gif_info@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__gif_info@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__gif_info@@YAHPEAUstbi__context@@PEAH11@Z+89
	DD	imagerel $unwind$?stbi__gif_info@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pnm_test@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__pnm_test@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__pnm_test@@YAHPEAUstbi__context@@@Z+119
	DD	imagerel $unwind$?stbi__pnm_test@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pnm_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD imagerel ?stbi__pnm_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
	DD	imagerel ?stbi__pnm_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z+754
	DD	imagerel $unwind$?stbi__pnm_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z+524
	DD	imagerel $unwind$?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pnm_is16@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__pnm_is16@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__pnm_is16@@YAHPEAUstbi__context@@@Z+75
	DD	imagerel $unwind$?stbi__pnm_is16@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__err@@YAHPEBD@Z DD imagerel ?stbi__err@@YAHPEBD@Z
	DD	imagerel ?stbi__err@@YAHPEBD@Z+80
	DD	imagerel $unwind$?stbi__err@@YAHPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__malloc@@YAPEAX_K@Z DD imagerel ?stbi__malloc@@YAPEAX_K@Z
	DD	imagerel ?stbi__malloc@@YAPEAX_K@Z+54
	DD	imagerel $unwind$?stbi__malloc@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__addsizes_valid@@YAHHH@Z DD imagerel ?stbi__addsizes_valid@@YAHHH@Z
	DD	imagerel ?stbi__addsizes_valid@@YAHHH@Z+104
	DD	imagerel $unwind$?stbi__addsizes_valid@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__mul2sizes_valid@@YAHHH@Z DD imagerel ?stbi__mul2sizes_valid@@YAHHH@Z
	DD	imagerel ?stbi__mul2sizes_valid@@YAHHH@Z+130
	DD	imagerel $unwind$?stbi__mul2sizes_valid@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__mad2sizes_valid@@YAHHHH@Z DD imagerel ?stbi__mad2sizes_valid@@YAHHHH@Z
	DD	imagerel ?stbi__mad2sizes_valid@@YAHHHH@Z+128
	DD	imagerel $unwind$?stbi__mad2sizes_valid@@YAHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__mad3sizes_valid@@YAHHHHH@Z DD imagerel ?stbi__mad3sizes_valid@@YAHHHHH@Z
	DD	imagerel ?stbi__mad3sizes_valid@@YAHHHHH@Z+170
	DD	imagerel $unwind$?stbi__mad3sizes_valid@@YAHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__mad4sizes_valid@@YAHHHHHH@Z DD imagerel ?stbi__mad4sizes_valid@@YAHHHHHH@Z
	DD	imagerel ?stbi__mad4sizes_valid@@YAHHHHHH@Z+214
	DD	imagerel $unwind$?stbi__mad4sizes_valid@@YAHHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__malloc_mad2@@YAPEAXHHH@Z DD imagerel ?stbi__malloc_mad2@@YAPEAXHHH@Z
	DD	imagerel ?stbi__malloc_mad2@@YAPEAXHHH@Z+110
	DD	imagerel $unwind$?stbi__malloc_mad2@@YAPEAXHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__malloc_mad3@@YAPEAXHHHH@Z DD imagerel ?stbi__malloc_mad3@@YAPEAXHHHH@Z
	DD	imagerel ?stbi__malloc_mad3@@YAPEAXHHHH@Z+129
	DD	imagerel $unwind$?stbi__malloc_mad3@@YAPEAXHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__malloc_mad4@@YAPEAXHHHHH@Z DD imagerel ?stbi__malloc_mad4@@YAPEAXHHHHH@Z
	DD	imagerel ?stbi__malloc_mad4@@YAPEAXHHHHH@Z+146
	DD	imagerel $unwind$?stbi__malloc_mad4@@YAPEAXHHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__ldr_to_hdr@@YAPEAMPEAEHHH@Z DD imagerel ?stbi__ldr_to_hdr@@YAPEAMPEAEHHH@Z
	DD	imagerel ?stbi__ldr_to_hdr@@YAPEAMPEAEHHH@Z+496
	DD	imagerel $unwind$?stbi__ldr_to_hdr@@YAPEAMPEAEHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z DD imagerel ?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z
	DD	imagerel ?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z+615
	DD	imagerel $unwind$?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z DD imagerel ?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z
	DD	imagerel ?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z+931
	DD	imagerel $unwind$?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__convert_16_to_8@@YAPEAEPEAGHHH@Z DD imagerel ?stbi__convert_16_to_8@@YAPEAEPEAGHHH@Z
	DD	imagerel ?stbi__convert_16_to_8@@YAPEAEPEAGHHH@Z+226
	DD	imagerel $unwind$?stbi__convert_16_to_8@@YAPEAEPEAGHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z DD imagerel ?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z
	DD	imagerel ?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z+242
	DD	imagerel $unwind$?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__vertical_flip@@YAXPEAXHHH@Z DD imagerel ?stbi__vertical_flip@@YAXPEAXHHH@Z
	DD	imagerel ?stbi__vertical_flip@@YAXPEAXHHH@Z+511
	DD	imagerel $unwind$?stbi__vertical_flip@@YAXPEAXHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__vertical_flip_slices@@YAXPEAXHHHH@Z DD imagerel ?stbi__vertical_flip_slices@@YAXPEAXHHHH@Z
	DD	imagerel ?stbi__vertical_flip_slices@@YAXPEAXHHHH@Z+166
	DD	imagerel $unwind$?stbi__vertical_flip_slices@@YAXPEAXHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z DD imagerel ?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z
	DD	imagerel ?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z+522
	DD	imagerel $unwind$?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z DD imagerel ?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z
	DD	imagerel ?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z+528
	DD	imagerel $unwind$?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__float_postprocess@@YAXPEAMPEAH11H@Z DD imagerel ?stbi__float_postprocess@@YAXPEAMPEAH11H@Z
	DD	imagerel ?stbi__float_postprocess@@YAXPEAMPEAH11H@Z+245
	DD	imagerel $unwind$?stbi__float_postprocess@@YAXPEAMPEAH11H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z DD imagerel ?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z
	DD	imagerel ?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z+165
	DD	imagerel $unwind$?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z DD imagerel ?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z
	DD	imagerel ?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z+437
	DD	imagerel $unwind$?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__get8@@YAEPEAUstbi__context@@@Z DD imagerel ?stbi__get8@@YAEPEAUstbi__context@@@Z
	DD	imagerel ?stbi__get8@@YAEPEAUstbi__context@@@Z+224
	DD	imagerel $unwind$?stbi__get8@@YAEPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__at_eof@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__at_eof@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__at_eof@@YAHPEAUstbi__context@@@Z+176
	DD	imagerel $unwind$?stbi__at_eof@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__skip@@YAXPEAUstbi__context@@H@Z DD imagerel ?stbi__skip@@YAXPEAUstbi__context@@H@Z
	DD	imagerel ?stbi__skip@@YAXPEAUstbi__context@@H@Z+275
	DD	imagerel $unwind$?stbi__skip@@YAXPEAUstbi__context@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z DD imagerel ?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z
	DD	imagerel ?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z+426
	DD	imagerel $unwind$?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__get16be@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__get16be@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__get16be@@YAHPEAUstbi__context@@@Z+96
	DD	imagerel $unwind$?stbi__get16be@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__get32be@@YAIPEAUstbi__context@@@Z DD imagerel ?stbi__get32be@@YAIPEAUstbi__context@@@Z
	DD	imagerel ?stbi__get32be@@YAIPEAUstbi__context@@@Z+90
	DD	imagerel $unwind$?stbi__get32be@@YAIPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__get16le@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__get16le@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__get16le@@YAHPEAUstbi__context@@@Z+84
	DD	imagerel $unwind$?stbi__get16le@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__get32le@@YAIPEAUstbi__context@@@Z DD imagerel ?stbi__get32le@@YAIPEAUstbi__context@@@Z
	DD	imagerel ?stbi__get32le@@YAIPEAUstbi__context@@@Z+84
	DD	imagerel $unwind$?stbi__get32le@@YAIPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__compute_y@@YAEHHH@Z DD imagerel ?stbi__compute_y@@YAEHHH@Z
	DD	imagerel ?stbi__compute_y@@YAEHHH@Z+80
	DD	imagerel $unwind$?stbi__compute_y@@YAEHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__convert_format@@YAPEAEPEAEHHII@Z DD imagerel ?stbi__convert_format@@YAPEAEPEAEHHII@Z
	DD	imagerel ?stbi__convert_format@@YAPEAEPEAEHHII@Z+2752
	DD	imagerel $unwind$?stbi__convert_format@@YAPEAEPEAEHHII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__compute_y_16@@YAGHHH@Z DD imagerel ?stbi__compute_y_16@@YAGHHH@Z
	DD	imagerel ?stbi__compute_y_16@@YAGHHH@Z+80
	DD	imagerel $unwind$?stbi__compute_y_16@@YAGHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__convert_format16@@YAPEAGPEAGHHII@Z DD imagerel ?stbi__convert_format16@@YAPEAGPEAGHHII@Z
	DD	imagerel ?stbi__convert_format16@@YAPEAGPEAGHHII@Z+2804
	DD	imagerel $unwind$?stbi__convert_format16@@YAPEAGPEAGHHII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z DD imagerel ?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z
	DD	imagerel ?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z+684
	DD	imagerel $unwind$?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__build_fast_ac@@YAXPEAFPEAUstbi__huffman@@@Z DD imagerel ?stbi__build_fast_ac@@YAXPEAFPEAUstbi__huffman@@@Z
	DD	imagerel ?stbi__build_fast_ac@@YAXPEAFPEAUstbi__huffman@@@Z+439
	DD	imagerel $unwind$?stbi__build_fast_ac@@YAXPEAFPEAUstbi__huffman@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z DD imagerel ?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z+313
	DD	imagerel $unwind$?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z DD imagerel ?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z
	DD	imagerel ?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z+737
	DD	imagerel $unwind$?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z DD imagerel ?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z
	DD	imagerel ?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z+255
	DD	imagerel $unwind$?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z DD imagerel ?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z
	DD	imagerel ?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z+208
	DD	imagerel $unwind$?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z DD imagerel ?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z+149
	DD	imagerel $unwind$?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z DD imagerel ?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z
	DD	imagerel ?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z+868
	DD	imagerel $unwind$?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z DD imagerel ?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z
	DD	imagerel ?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z+481
	DD	imagerel $unwind$?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_decode_block_prog_ac@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@PEAF@Z DD imagerel ?stbi__jpeg_decode_block_prog_ac@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@PEAF@Z
	DD	imagerel ?stbi__jpeg_decode_block_prog_ac@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@PEAF@Z+1812
	DD	imagerel $unwind$?stbi__jpeg_decode_block_prog_ac@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@PEAF@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__clamp@@YAEH@Z DD imagerel ?stbi__clamp@@YAEH@Z
	DD	imagerel ?stbi__clamp@@YAEH@Z+88
	DD	imagerel $unwind$?stbi__clamp@@YAEH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__idct_block@@YAXPEAEHQEAF@Z DD imagerel ?stbi__idct_block@@YAXPEAEHQEAF@Z
	DD	imagerel ?stbi__idct_block@@YAXPEAEHQEAF@Z+3188
	DD	imagerel $unwind$?stbi__idct_block@@YAXPEAEHQEAF@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__idct_simd@@YAXPEAEHQEAF@Z DD imagerel ?stbi__idct_simd@@YAXPEAEHQEAF@Z
	DD	imagerel ?stbi__idct_simd@@YAXPEAEHQEAF@Z+10174
	DD	imagerel $unwind$?stbi__idct_simd@@YAXPEAEHQEAF@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z DD imagerel ?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z+167
	DD	imagerel $unwind$?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z DD imagerel ?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z+297
	DD	imagerel $unwind$?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z DD imagerel ?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z+3260
	DD	imagerel $unwind$?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_dequantize@@YAXPEAFPEAG@Z DD imagerel ?stbi__jpeg_dequantize@@YAXPEAFPEAG@Z
	DD	imagerel ?stbi__jpeg_dequantize@@YAXPEAFPEAG@Z+121
	DD	imagerel $unwind$?stbi__jpeg_dequantize@@YAXPEAFPEAG@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z DD imagerel ?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z+506
	DD	imagerel $unwind$?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z DD imagerel ?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z
	DD	imagerel ?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z+1873
	DD	imagerel $unwind$?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__process_scan_header@@YAHPEAUstbi__jpeg@@@Z DD imagerel ?stbi__process_scan_header@@YAHPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__process_scan_header@@YAHPEAUstbi__jpeg@@@Z+905
	DD	imagerel $unwind$?stbi__process_scan_header@@YAHPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z DD imagerel ?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z
	DD	imagerel ?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z+393
	DD	imagerel $unwind$?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z DD imagerel ?stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z
	DD	imagerel ?stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z+2435
	DD	imagerel $unwind$?stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z DD imagerel ?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z
	DD	imagerel ?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z+397
	DD	imagerel $unwind$?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__decode_jpeg_image@@YAHPEAUstbi__jpeg@@@Z DD imagerel ?stbi__decode_jpeg_image@@YAHPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__decode_jpeg_image@@YAHPEAUstbi__jpeg@@@Z+534
	DD	imagerel $unwind$?stbi__decode_jpeg_image@@YAHPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resample_row_1@@YAPEAEPEAE00HH@Z DD imagerel ?resample_row_1@@YAPEAEPEAE00HH@Z
	DD	imagerel ?resample_row_1@@YAPEAEPEAE00HH@Z+63
	DD	imagerel $unwind$?resample_row_1@@YAPEAEPEAE00HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__resample_row_v_2@@YAPEAEPEAE00HH@Z DD imagerel ?stbi__resample_row_v_2@@YAPEAEPEAE00HH@Z
	DD	imagerel ?stbi__resample_row_v_2@@YAPEAEPEAE00HH@Z+147
	DD	imagerel $unwind$?stbi__resample_row_v_2@@YAPEAEPEAE00HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__resample_row_h_2@@YAPEAEPEAE00HH@Z DD imagerel ?stbi__resample_row_h_2@@YAPEAEPEAE00HH@Z
	DD	imagerel ?stbi__resample_row_h_2@@YAPEAEPEAE00HH@Z+521
	DD	imagerel $unwind$?stbi__resample_row_h_2@@YAPEAEPEAE00HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__resample_row_hv_2@@YAPEAEPEAE00HH@Z DD imagerel ?stbi__resample_row_hv_2@@YAPEAEPEAE00HH@Z
	DD	imagerel ?stbi__resample_row_hv_2@@YAPEAEPEAE00HH@Z+443
	DD	imagerel $unwind$?stbi__resample_row_hv_2@@YAPEAEPEAE00HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z DD imagerel ?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z
	DD	imagerel ?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z+1576
	DD	imagerel $unwind$?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__resample_row_generic@@YAPEAEPEAE00HH@Z DD imagerel ?stbi__resample_row_generic@@YAPEAEPEAE00HH@Z
	DD	imagerel ?stbi__resample_row_generic@@YAPEAEPEAE00HH@Z+165
	DD	imagerel $unwind$?stbi__resample_row_generic@@YAPEAEPEAE00HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__YCbCr_to_RGB_row@@YAXPEAEPEBE11HH@Z DD imagerel ?stbi__YCbCr_to_RGB_row@@YAXPEAEPEBE11HH@Z
	DD	imagerel ?stbi__YCbCr_to_RGB_row@@YAXPEAEPEBE11HH@Z+509
	DD	imagerel $unwind$?stbi__YCbCr_to_RGB_row@@YAXPEAEPEBE11HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__YCbCr_to_RGB_simd@@YAXPEAEPEBE11HH@Z DD imagerel ?stbi__YCbCr_to_RGB_simd@@YAXPEAEPEBE11HH@Z
	DD	imagerel ?stbi__YCbCr_to_RGB_simd@@YAXPEAEPEBE11HH@Z+1958
	DD	imagerel $unwind$?stbi__YCbCr_to_RGB_simd@@YAXPEAEPEBE11HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z DD imagerel ?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z+176
	DD	imagerel $unwind$?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z DD imagerel ?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z
	DD	imagerel ?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z+69
	DD	imagerel $unwind$?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__blinn_8x8@@YAEEE@Z DD imagerel ?stbi__blinn_8x8@@YAEEE@Z
	DD	imagerel ?stbi__blinn_8x8@@YAEEE@Z+85
	DD	imagerel $unwind$?stbi__blinn_8x8@@YAEEE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z DD imagerel ?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z
	DD	imagerel ?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z+4890
	DD	imagerel $unwind$?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__jpeg_info_raw@@YAHPEAUstbi__jpeg@@PEAH11@Z DD imagerel ?stbi__jpeg_info_raw@@YAHPEAUstbi__jpeg@@PEAH11@Z
	DD	imagerel ?stbi__jpeg_info_raw@@YAHPEAUstbi__jpeg@@PEAH11@Z+230
	DD	imagerel $unwind$?stbi__jpeg_info_raw@@YAHPEAUstbi__jpeg@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__bitreverse16@@YAHH@Z DD imagerel ?stbi__bitreverse16@@YAHH@Z
	DD	imagerel ?stbi__bitreverse16@@YAHH@Z+192
	DD	imagerel $unwind$?stbi__bitreverse16@@YAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__bit_reverse@@YAHHH@Z DD imagerel ?stbi__bit_reverse@@YAHHH@Z
	DD	imagerel ?stbi__bit_reverse@@YAHHH@Z+110
	DD	imagerel $unwind$?stbi__bit_reverse@@YAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z DD imagerel ?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z
	DD	imagerel ?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z+960
	DD	imagerel $unwind$?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z DD imagerel ?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z
	DD	imagerel ?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z+92
	DD	imagerel $unwind$?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z DD imagerel ?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z
	DD	imagerel ?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z+118
	DD	imagerel $unwind$?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z DD imagerel ?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z
	DD	imagerel ?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z+253
	DD	imagerel $unwind$?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z DD imagerel ?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z
	DD	imagerel ?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z+198
	DD	imagerel $unwind$?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__zhuffman_decode_slowpath@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z DD imagerel ?stbi__zhuffman_decode_slowpath@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z
	DD	imagerel ?stbi__zhuffman_decode_slowpath@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z+323
	DD	imagerel $unwind$?stbi__zhuffman_decode_slowpath@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z DD imagerel ?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z
	DD	imagerel ?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z+239
	DD	imagerel $unwind$?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z DD imagerel ?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z
	DD	imagerel ?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z+360
	DD	imagerel $unwind$?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__parse_huffman_block@@YAHPEAUstbi__zbuf@@@Z DD imagerel ?stbi__parse_huffman_block@@YAHPEAUstbi__zbuf@@@Z
	DD	imagerel ?stbi__parse_huffman_block@@YAHPEAUstbi__zbuf@@@Z+741
	DD	imagerel $unwind$?stbi__parse_huffman_block@@YAHPEAUstbi__zbuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z DD imagerel ?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z
	DD	imagerel ?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z+946
	DD	imagerel $unwind$?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z DD imagerel ?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z
	DD	imagerel ?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z+600
	DD	imagerel $unwind$?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__parse_zlib_header@@YAHPEAUstbi__zbuf@@@Z DD imagerel ?stbi__parse_zlib_header@@YAHPEAUstbi__zbuf@@@Z
	DD	imagerel ?stbi__parse_zlib_header@@YAHPEAUstbi__zbuf@@@Z+203
	DD	imagerel $unwind$?stbi__parse_zlib_header@@YAHPEAUstbi__zbuf@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__parse_zlib@@YAHPEAUstbi__zbuf@@H@Z DD imagerel ?stbi__parse_zlib@@YAHPEAUstbi__zbuf@@H@Z
	DD	imagerel ?stbi__parse_zlib@@YAHPEAUstbi__zbuf@@H@Z+342
	DD	imagerel $unwind$?stbi__parse_zlib@@YAHPEAUstbi__zbuf@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z DD imagerel ?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z
	DD	imagerel ?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z+157
	DD	imagerel $unwind$?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z DD imagerel ?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z
	DD	imagerel ?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z+122
	DD	imagerel $unwind$?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__check_png_header@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__check_png_header@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__check_png_header@@YAHPEAUstbi__context@@@Z+119
	DD	imagerel $unwind$?stbi__check_png_header@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__paeth@@YAHHHH@Z DD imagerel ?stbi__paeth@@YAHHHH@Z
	DD	imagerel ?stbi__paeth@@YAHHHH@Z+189
	DD	imagerel $unwind$?stbi__paeth@@YAHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z DD imagerel ?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z
	DD	imagerel ?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z+7176
	DD	imagerel $unwind$?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z DD imagerel ?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z
	DD	imagerel ?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z+1304
	DD	imagerel $unwind$?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z DD imagerel ?stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z
	DD	imagerel ?stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z+483
	DD	imagerel $unwind$?stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z DD imagerel ?stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z
	DD	imagerel ?stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z+486
	DD	imagerel $unwind$?stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__expand_png_palette@@YAHPEAUstbi__png@@PEAEHH@Z DD imagerel ?stbi__expand_png_palette@@YAHPEAUstbi__png@@PEAEHH@Z
	DD	imagerel ?stbi__expand_png_palette@@YAHPEAUstbi__png@@PEAEHH@Z+612
	DD	imagerel $unwind$?stbi__expand_png_palette@@YAHPEAUstbi__png@@PEAEHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__unpremultiply_on_load_thread@@YAXH@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?stbi__unpremultiply_on_load_thread@@YAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__de_iphone@@YAXPEAUstbi__png@@@Z DD imagerel ?stbi__de_iphone@@YAXPEAUstbi__png@@@Z
	DD	imagerel ?stbi__de_iphone@@YAXPEAUstbi__png@@@Z+828
	DD	imagerel $unwind$?stbi__de_iphone@@YAXPEAUstbi__png@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z DD imagerel ?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z
	DD	imagerel ?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z+3728
	DD	imagerel $unwind$?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__do_png@@YAPEAXPEAUstbi__png@@PEAH11HPEAUstbi__result_info@@@Z DD imagerel ?stbi__do_png@@YAPEAXPEAUstbi__png@@PEAH11HPEAUstbi__result_info@@@Z
	DD	imagerel ?stbi__do_png@@YAPEAXPEAUstbi__png@@PEAH11HPEAUstbi__result_info@@@Z+685
	DD	imagerel $unwind$?stbi__do_png@@YAPEAXPEAUstbi__png@@PEAH11HPEAUstbi__result_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z DD imagerel ?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z
	DD	imagerel ?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z+199
	DD	imagerel $unwind$?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__bmp_test_raw@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__bmp_test_raw@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__bmp_test_raw@@YAHPEAUstbi__context@@@Z+219
	DD	imagerel $unwind$?stbi__bmp_test_raw@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__high_bit@@YAHI@Z DD imagerel ?stbi__high_bit@@YAHI@Z
	DD	imagerel ?stbi__high_bit@@YAHI@Z+224
	DD	imagerel $unwind$?stbi__high_bit@@YAHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__bitcount@@YAHI@Z DD imagerel ?stbi__bitcount@@YAHI@Z
	DD	imagerel ?stbi__bitcount@@YAHI@Z+198
	DD	imagerel $unwind$?stbi__bitcount@@YAHI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__shiftsigned@@YAHIHH@Z DD imagerel ?stbi__shiftsigned@@YAHIHH@Z
	DD	imagerel ?stbi__shiftsigned@@YAHIHH@Z+279
	DD	imagerel $unwind$?stbi__shiftsigned@@YAHIHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z DD imagerel ?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z
	DD	imagerel ?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z+285
	DD	imagerel $unwind$?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z DD imagerel ?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z
	DD	imagerel ?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z+1553
	DD	imagerel $unwind$?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__tga_get_comp@@YAHHHPEAH@Z DD imagerel ?stbi__tga_get_comp@@YAHHHPEAH@Z
	DD	imagerel ?stbi__tga_get_comp@@YAHHHPEAH@Z+203
	DD	imagerel $unwind$?stbi__tga_get_comp@@YAHHHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z DD imagerel ?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z
	DD	imagerel ?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z+224
	DD	imagerel $unwind$?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__psd_decode_rle@@YAHPEAUstbi__context@@PEAEH@Z DD imagerel ?stbi__psd_decode_rle@@YAHPEAUstbi__context@@PEAEH@Z
	DD	imagerel ?stbi__psd_decode_rle@@YAHPEAUstbi__context@@PEAEH@Z+335
	DD	imagerel $unwind$?stbi__psd_decode_rle@@YAHPEAUstbi__context@@PEAEH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z DD imagerel ?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z
	DD	imagerel ?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z+114
	DD	imagerel $unwind$?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pic_test_core@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__pic_test_core@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__pic_test_core@@YAHPEAUstbi__context@@@Z+137
	DD	imagerel $unwind$?stbi__pic_test_core@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z DD imagerel ?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z
	DD	imagerel ?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z+206
	DD	imagerel $unwind$?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__copyval@@YAXHPEAEPEBE@Z DD imagerel ?stbi__copyval@@YAXHPEAEPEBE@Z
	DD	imagerel ?stbi__copyval@@YAXHPEAEPEBE@Z+137
	DD	imagerel $unwind$?stbi__copyval@@YAXHPEAEPEBE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z DD imagerel ?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z
	DD	imagerel ?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z+1800
	DD	imagerel $unwind$?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__gif_test_raw@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__gif_test_raw@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__gif_test_raw@@YAHPEAUstbi__context@@@Z+188
	DD	imagerel $unwind$?stbi__gif_test_raw@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z DD imagerel ?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z
	DD	imagerel ?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z+277
	DD	imagerel $unwind$?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z DD imagerel ?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z
	DD	imagerel ?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z+607
	DD	imagerel $unwind$?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__gif_info_raw@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__gif_info_raw@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__gif_info_raw@@YAHPEAUstbi__context@@PEAH11@Z+216
	DD	imagerel $unwind$?stbi__gif_info_raw@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z DD imagerel ?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z
	DD	imagerel ?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z+751
	DD	imagerel $unwind$?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__process_gif_raster@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@@Z DD imagerel ?stbi__process_gif_raster@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@@Z
	DD	imagerel ?stbi__process_gif_raster@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@@Z+1266
	DD	imagerel $unwind$?stbi__process_gif_raster@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z DD imagerel ?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z
	DD	imagerel ?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z+2501
	DD	imagerel $unwind$?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z DD imagerel ?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z
	DD	imagerel ?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z+209
	DD	imagerel $unwind$?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z DD imagerel ?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z
	DD	imagerel ?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z+139
	DD	imagerel $unwind$?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z DD imagerel ?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z
	DD	imagerel ?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z+211
	DD	imagerel $unwind$?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__hdr_convert@@YAXPEAMPEAEH@Z DD imagerel ?stbi__hdr_convert@@YAXPEAMPEAEH@Z
	DD	imagerel ?stbi__hdr_convert@@YAXPEAMPEAEH@Z+684
	DD	imagerel $unwind$?stbi__hdr_convert@@YAXPEAMPEAEH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pnm_isspace@@YAHD@Z DD imagerel ?stbi__pnm_isspace@@YAHD@Z
	DD	imagerel ?stbi__pnm_isspace@@YAHD@Z+140
	DD	imagerel $unwind$?stbi__pnm_isspace@@YAHD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z DD imagerel ?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z
	DD	imagerel ?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z+211
	DD	imagerel $unwind$?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pnm_isdigit@@YAHD@Z DD imagerel ?stbi__pnm_isdigit@@YAHD@Z
	DD	imagerel ?stbi__pnm_isdigit@@YAHD@Z+92
	DD	imagerel $unwind$?stbi__pnm_isdigit@@YAHD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z DD imagerel ?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z
	DD	imagerel ?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z+135
	DD	imagerel $unwind$?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z DD imagerel ?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z
	DD	imagerel ?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z+482
	DD	imagerel $unwind$?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?stbi__is_16_main@@YAHPEAUstbi__context@@@Z DD imagerel ?stbi__is_16_main@@YAHPEAUstbi__context@@@Z
	DD	imagerel ?stbi__is_16_main@@YAHPEAUstbi__context@@@Z+112
	DD	imagerel $unwind$?stbi__is_16_main@@YAHPEAUstbi__context@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+703
	DD	imagerel $unwind$??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z@4HA DD imagerel ?dtor$0@?0???0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Texture@cow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+293
	DD	imagerel $unwind$??1Texture@cow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z DD imagerel $LN7
	DD	imagerel $LN7+520
	DD	imagerel $unwind$?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z DD imagerel $LN3
	DD	imagerel $LN3+409
	DD	imagerel $unwind$?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?createTextureImageView@Texture@cow@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+301
	DD	imagerel $unwind$?createTextureImageView@Texture@cow@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?createTextureSampler@Texture@cow@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+422
	DD	imagerel $unwind$?createTextureSampler@Texture@cow@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@Texture@cow@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@Texture@cow@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+356
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+356
	DD	imagerel $unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DD imagerel $LN8
	DD	imagerel $LN8+547
	DD	imagerel $unwind$??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$1@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+60
	DD	imagerel $unwind$??1?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?draw@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?draw@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+41
	DD	imagerel $unwind$??1?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?pushConstant@?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAAXPEAUVkCommandBuffer_T@@PEAUVkPipelineLayout_T@@I@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$?pushConstant@?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAAXPEAUVkCommandBuffer_T@@PEAUVkPipelineLayout_T@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DD imagerel $LN8
	DD	imagerel $LN8+188
	DD	imagerel $unwind$??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD imagerel ?dtor$0@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD imagerel ?dtor$1@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD imagerel ?dtor$3@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
	DD	imagerel ?dtor$3@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$3@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1RenderObject@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??1RenderObject@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@RenderObject@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@RenderObject@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@UVertex2DTextured@cow@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$allocator@UVertex2DTextured@cow@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+213
	DD	imagerel $unwind$?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAPEAUVertex2DTextured@cow@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?allocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAPEAUVertex2DTextured@cow@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA_KAEBV?$allocator@UVertex2DTextured@cow@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA_KAEBV?$allocator@UVertex2DTextured@cow@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA?AV?$allocator@UVertex2DTextured@cow@@@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA?AV?$allocator@UVertex2DTextured@cow@@@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+137
	DD	imagerel $unwind$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+216
	DD	imagerel $unwind$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+203
	DD	imagerel $unwind$??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?data@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?capacity@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+168
	DD	imagerel $unwind$?_Calculate_growth@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+194
	DD	imagerel $unwind$?_Buy_raw@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXQEAUVertex2DTextured@cow@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+280
	DD	imagerel $unwind$?_Change_array@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXQEAUVertex2DTextured@cow@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+228
	DD	imagerel $unwind$?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Xlength@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+184
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+177
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z@4HA+37
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$?_Orphan_range@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main DD	imagerel $LN37
	DD	imagerel $LN37+4550
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$0 DD imagerel main$dtor$0
	DD	imagerel main$dtor$0+36
	DD	imagerel $unwind$main$dtor$0
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$1 DD imagerel main$dtor$1
	DD	imagerel main$dtor$1+36
	DD	imagerel $unwind$main$dtor$1
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$2 DD imagerel main$dtor$2
	DD	imagerel main$dtor$2+39
	DD	imagerel $unwind$main$dtor$2
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$3 DD imagerel main$dtor$3
	DD	imagerel main$dtor$3+39
	DD	imagerel $unwind$main$dtor$3
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$4 DD imagerel main$dtor$4
	DD	imagerel main$dtor$4+39
	DD	imagerel $unwind$main$dtor$4
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$5 DD imagerel main$dtor$5
	DD	imagerel main$dtor$5+39
	DD	imagerel $unwind$main$dtor$5
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$7 DD imagerel main$dtor$7
	DD	imagerel main$dtor$7+57
	DD	imagerel $unwind$main$dtor$7
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$8 DD imagerel main$dtor$8
	DD	imagerel main$dtor$8+39
	DD	imagerel $unwind$main$dtor$8
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$10 DD imagerel main$dtor$10
	DD	imagerel main$dtor$10+39
	DD	imagerel $unwind$main$dtor$10
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$11 DD imagerel main$dtor$11
	DD	imagerel main$dtor$11+39
	DD	imagerel $unwind$main$dtor$11
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$12 DD imagerel main$dtor$12
	DD	imagerel main$dtor$12+39
	DD	imagerel $unwind$main$dtor$12
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$13 DD imagerel main$dtor$13
	DD	imagerel main$dtor$13+39
	DD	imagerel $unwind$main$dtor$13
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$15 DD imagerel main$dtor$15
	DD	imagerel main$dtor$15+39
	DD	imagerel $unwind$main$dtor$15
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$17 DD imagerel main$dtor$17
	DD	imagerel main$dtor$17+39
	DD	imagerel $unwind$main$dtor$17
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$main$dtor$18 DD imagerel main$dtor$18
	DD	imagerel main$dtor$18+39
	DD	imagerel $unwind$main$dtor$18
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAXQEAPEAUVkCommandBuffer_T@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+216
	DD	imagerel $unwind$?deallocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAXQEAPEAUVkCommandBuffer_T@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?allocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SA_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SA_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??0?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+203
	DD	imagerel $unwind$??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?data@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?max_size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+191
	DD	imagerel $unwind$?_Buy_raw@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+228
	DD	imagerel $unwind$?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Xlength@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1126
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+91
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?size@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEAAAEAUVkDescriptorSetLayoutBinding@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+192
	DD	imagerel $unwind$??A?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEAAAEAUVkDescriptorSetLayoutBinding@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBAPEBUVkDescriptorSetLayoutBinding@@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?data@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBAPEBUVkDescriptorSetLayoutBinding@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$array@UVkDescriptorPoolSize@@$01@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?size@?$array@UVkDescriptorPoolSize@@$01@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$array@UVkDescriptorPoolSize@@$01@std@@QEAAAEAUVkDescriptorPoolSize@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+189
	DD	imagerel $unwind$??A?$array@UVkDescriptorPoolSize@@$01@std@@QEAAAEAUVkDescriptorPoolSize@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$array@UVkDescriptorPoolSize@@$01@std@@QEBAPEBUVkDescriptorPoolSize@@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?data@?$array@UVkDescriptorPoolSize@@$01@std@@QEBAPEBUVkDescriptorPoolSize@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z DD imagerel $LN10
	DD	imagerel $LN10+818
	DD	imagerel $unwind$??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$Descriptor@$01$01@cow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+168
	DD	imagerel $unwind$??1?$Descriptor@$01$01@cow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getLayout@?$Descriptor@$01$01@cow@@QEAAPEAPEAUVkDescriptorSetLayout_T@@XZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$?getLayout@?$Descriptor@$01$01@cow@@QEAAPEAPEAUVkDescriptorSetLayout_T@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getSet@?$Descriptor@$01$01@cow@@QEAAPEAUVkDescriptorSet_T@@I@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?getSet@?$Descriptor@$01$01@cow@@QEAAPEAUVkDescriptorSet_T@@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$Descriptor@$01$01@cow@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$Descriptor@$01$01@cow@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$array@UVkWriteDescriptorSet@@$01@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+46
	DD	imagerel $unwind$?size@?$array@UVkWriteDescriptorSet@@$01@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z DD imagerel $LN12
	DD	imagerel $LN12+192
	DD	imagerel $unwind$??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$array@UVkWriteDescriptorSet@@$01@std@@QEAAPEAUVkWriteDescriptorSet@@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?data@?$array@UVkWriteDescriptorSet@@$01@std@@QEAAPEAUVkWriteDescriptorSet@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+1438
	DD	imagerel $unwind$??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z@4HA DD imagerel ?dtor$0@?0???0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+230
	DD	imagerel $unwind$??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?bind@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$?bind@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0MN@?$vec@$01M$0A@@glm@@QEAA@MN@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??$?0MN@?$vec@$01M$0A@@glm@@QEAA@MN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@PEAVRenderObject@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??0?$allocator@PEAVRenderObject@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+216
	DD	imagerel $unwind$?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@PEAVRenderObject@@@std@@QEAAPEAPEAVRenderObject@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?allocate@?$allocator@PEAVRenderObject@@@std@@QEAAPEAPEAVRenderObject@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SA_KAEBV?$allocator@PEAVRenderObject@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SA_KAEBV?$allocator@PEAVRenderObject@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+137
	DD	imagerel $unwind$??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+203
	DD	imagerel $unwind$??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?push_back@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?max_size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?capacity@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+168
	DD	imagerel $unwind$?_Calculate_growth@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXQEAPEAVRenderObject@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+274
	DD	imagerel $unwind$?_Change_array@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXQEAPEAVRenderObject@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+228
	DD	imagerel $unwind$?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+49
	DD	imagerel $unwind$?_Xlength@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_unlocked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z DD imagerel $LN8
	DD	imagerel $LN8+184
	DD	imagerel $unwind$?_Orphan_range_unlocked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z DD imagerel $LN4
	DD	imagerel $LN4+177
	DD	imagerel $unwind$?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z@4HA DD imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z@4HA+37
	DD	imagerel $unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$?_Orphan_range@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy_maybe_null@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy_maybe_null@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$move@AEAPEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA?A_T$$QEAPEAVRenderObject@@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$emplace_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA?A_T$$QEAPEAVRenderObject@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_one_at_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z DD imagerel $LN4
	DD	imagerel $LN4+174
	DD	imagerel $unwind$??$_Emplace_one_at_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+213
	DD	imagerel $unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAVRenderObject@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVRenderObject@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0PEAVRenderObject@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVRenderObject@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+133
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@UVkVertexInputAttributeDescription@@@std@@QEAAXQEAUVkVertexInputAttributeDescription@@_K@Z DD imagerel $LN13
	DD	imagerel $LN13+213
	DD	imagerel $unwind$?deallocate@?$allocator@UVkVertexInputAttributeDescription@@@std@@QEAAXQEAUVkVertexInputAttributeDescription@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+203
	DD	imagerel $unwind$??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?data@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAPEAUVkVertexInputAttributeDescription@@XZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?data@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAPEAUVkVertexInputAttributeDescription@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?size@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+228
	DD	imagerel $unwind$?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$?_Getal@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@UVkVertexInputAttributeDescription@@@std@@V?$_Vector_val@U?$_Simple_types@UVkVertexInputAttributeDescription@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UVkVertexInputAttributeDescription@@@std@@V?$_Vector_val@U?$_Simple_types@UVkVertexInputAttributeDescription@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy_maybe_null@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy_maybe_null@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAUVkCommandBuffer_T@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0PEAUVkCommandBuffer_T@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$?0AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+311
	DD	imagerel $unwind$??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAUVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$move@AEAUVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA?A_T$$QEAUVertex2DTextured@cow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$emplace_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA?A_T$$QEAUVertex2DTextured@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_one_at_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z DD imagerel $LN4
	DD	imagerel $LN4+174
	DD	imagerel $unwind$??$_Emplace_one_at_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@UVertex2DTextured@cow@@@std@@$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UVertex2DTextured@cow@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$?0V?$allocator@UVertex2DTextured@cow@@@std@@$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UVertex2DTextured@cow@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z DD imagerel $LN6
	DD	imagerel $LN6+390
	DD	imagerel $unwind$??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z DD imagerel $LN8
	DD	imagerel $LN8+313
	DD	imagerel $unwind$??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z@4HA DD imagerel ?dtor$0@?0???$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z@4HA+44
	DD	imagerel $unwind$?dtor$0@?0???$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?4U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+139
	DD	imagerel $unwind$??$?4U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0W4VkDynamicState@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@W4VkDynamicState@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0W4VkDynamicState@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@W4VkDynamicState@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+148
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+261
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+52
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$min@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+184
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+80
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy_maybe_null@UVkVertexInputAttributeDescription@@@std@@YAPEAUVkVertexInputAttributeDescription@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy_maybe_null@UVkVertexInputAttributeDescription@@@std@@YAPEAUVkVertexInputAttributeDescription@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0UVkVertexInputAttributeDescription@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVkVertexInputAttributeDescription@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+53
	DD	imagerel $unwind$??$?0UVkVertexInputAttributeDescription@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVkVertexInputAttributeDescription@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAXPEAPEAUVkCommandBuffer_T@@QEAPEAU1@AEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAXPEAPEAUVkCommandBuffer_T@@QEAPEAU1@AEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy_maybe_null@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy_maybe_null@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@W4VkDynamicState@@@std@@@std@@YAXPEAW4VkDynamicState@@QEAW41@AEAV?$allocator@W4VkDynamicState@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@W4VkDynamicState@@@std@@@std@@YAXPEAW4VkDynamicState@@QEAW41@AEAV?$allocator@W4VkDynamicState@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+106
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN6
	DD	imagerel $LN6+124
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@YAXPEAUVkVertexInputAttributeDescription@@QEAU1@AEAV?$allocator@UVkVertexInputAttributeDescription@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@YAXPEAUVkVertexInputAttributeDescription@@QEAU1@AEAV?$allocator@UVkVertexInputAttributeDescription@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+91
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@X@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@X@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@H@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@H@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+180
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z DD imagerel $LN13
	DD	imagerel $LN13+584
	DD	imagerel $unwind$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z@4HA+91
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAAEBV?$allocator@PEAUVkCommandBuffer_T@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAAEBV?$allocator@PEAUVkCommandBuffer_T@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+315
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z DD imagerel $LN3
	DD	imagerel $LN3+180
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z DD imagerel $LN13
	DD	imagerel $LN13+595
	DD	imagerel $unwind$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z@4HA+91
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YA$$QEAV?$allocator@UVertex2DTextured@cow@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YA$$QEAV?$allocator@UVertex2DTextured@cow@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+69
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAUVertex2DTextured@cow@@@std@@YAAEBQEAUVertex2DTextured@cow@@AEBQEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEBQEAUVertex2DTextured@cow@@@std@@YAAEBQEAUVertex2DTextured@cow@@AEBQEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+367
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+66
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAVDevice@cow@@@std@@YAAEAVDevice@cow@@AEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEAVDevice@cow@@@std@@YAAEAVDevice@cow@@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEA_K@std@@YAAEA_KAEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEA_K@std@@YAAEA_KAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4VkBufferUsageFlagBits@@@std@@YA$$QEAW4VkBufferUsageFlagBits@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@W4VkBufferUsageFlagBits@@@std@@YA$$QEAW4VkBufferUsageFlagBits@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@PEAVBuffer@cow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@PEAVBuffer@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@V?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$default_delete@VBuffer@cow@@@std@@@std@@YA$$QEAU?$default_delete@VBuffer@cow@@@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@U?$default_delete@VBuffer@cow@@@std@@@std@@YA$$QEAU?$default_delete@VBuffer@cow@@@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+277
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVBuffer@cow@@AEAPEAV12@@std@@YAPEAVBuffer@cow@@AEAPEAV12@0@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$exchange@PEAVBuffer@cow@@AEAPEAV12@@std@@YAPEAVBuffer@cow@@AEAPEAV12@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAVBuffer@cow@@$$T@std@@YAPEAVBuffer@cow@@AEAPEAV12@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+84
	DD	imagerel $unwind$??$exchange@PEAVBuffer@cow@@$$T@std@@YAPEAVBuffer@cow@@AEAPEAV12@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEAVRenderObject@@PEAV1@@std@@YAXAEAPEAVRenderObject@@$$QEAPEAV1@@Z DD imagerel $LN5
	DD	imagerel $LN5+182
	DD	imagerel $unwind$??$_Construct_in_place@PEAVRenderObject@@PEAV1@@std@@YAXAEAPEAVRenderObject@@$$QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAVRenderObject@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SAXAEAV?$allocator@PEAVRenderObject@@@1@QEAPEAVRenderObject@@$$QEAPEAV3@@Z DD imagerel $LN5
	DD	imagerel $LN5+149
	DD	imagerel $unwind$??$construct@PEAVRenderObject@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SAXAEAV?$allocator@PEAVRenderObject@@@1@QEAPEAVRenderObject@@$$QEAPEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+355
	DD	imagerel $unwind$??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??$_Zero_range@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@PEAPEAUVkCommandBuffer_T@@AEAV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@PEAPEAUVkCommandBuffer_T@@AEAV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+127
	DD	imagerel $unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@UVertex2DTextured@cow@@U12@@std@@YAXAEAUVertex2DTextured@cow@@$$QEAU12@@Z DD imagerel $LN5
	DD	imagerel $LN5+188
	DD	imagerel $unwind$??$_Construct_in_place@UVertex2DTextured@cow@@U12@@std@@YAXAEAUVertex2DTextured@cow@@$$QEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UVertex2DTextured@cow@@U12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@$$QEAU34@@Z DD imagerel $LN5
	DD	imagerel $LN5+155
	DD	imagerel $unwind$??$construct@UVertex2DTextured@cow@@U12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@$$QEAU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+361
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA DD imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUVertex2DTextured@cow@@PEAU12@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@00@Z DD imagerel $LN3
	DD	imagerel $LN3+196
	DD	imagerel $unwind$??$_Copy_memmove@PEAUVertex2DTextured@cow@@PEAU12@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@PEAUVertex2DTextured@cow@@AEAV?$allocator@UVertex2DTextured@cow@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@PEAUVertex2DTextured@cow@@AEAV?$allocator@UVertex2DTextured@cow@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@AEAUVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAXAEAUVertex2DTextured@cow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+158
	DD	imagerel $unwind$??$_Emplace_back@AEAUVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAXAEAUVertex2DTextured@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAVBuffer@cow@@@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVBuffer@cow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+82
	DD	imagerel $unwind$??$?0AEAPEAVBuffer@cow@@@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVBuffer@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEAVRenderObject@@PEAV1@X@std@@YAPEAPEAVRenderObject@@QEAPEAV1@$$QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??$construct_at@PEAVRenderObject@@PEAV1@X@std@@YAPEAPEAVRenderObject@@QEAPEAV1@$$QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@AEBQEAPEAVRenderObject@@@std@@YA?A_TAEBQEAPEAVRenderObject@@@Z DD imagerel $LN3
	DD	imagerel $LN3+51
	DD	imagerel $unwind$??$_Get_unwrapped@AEBQEAPEAVRenderObject@@@std@@YA?A_TAEBQEAPEAVRenderObject@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAPEAVRenderObject@@PEAPEAV1@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+196
	DD	imagerel $unwind$??$_Copy_memmove@PEAPEAVRenderObject@@PEAPEAV1@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@PEAPEAVRenderObject@@AEAV?$allocator@PEAVRenderObject@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@PEAPEAVRenderObject@@AEAV?$allocator@PEAVRenderObject@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+50
	DD	imagerel $unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@PEAVRenderObject@@@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z DD imagerel $LN3
	DD	imagerel $LN3+158
	DD	imagerel $unwind$??$_Emplace_back@PEAVRenderObject@@@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAPEAUVkCommandBuffer_T@@@std@@YA?A_PAEBQEAPEAUVkCommandBuffer_T@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_To_address@PEAPEAUVkCommandBuffer_T@@@std@@YA?A_PAEBQEAPEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_address@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$to_address@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@PEAUVkCommandBuffer_T@@$$V@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SAXAEAV?$allocator@PEAUVkCommandBuffer_T@@@1@QEAPEAUVkCommandBuffer_T@@@Z DD imagerel $LN5
	DD	imagerel $LN5+160
	DD	imagerel $unwind$??$construct@PEAUVkCommandBuffer_T@@$$V@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SAXAEAV?$allocator@PEAUVkCommandBuffer_T@@@1@QEAPEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$addressof@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@UVertex2DTextured@cow@@U12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@$$QEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$construct_at@UVertex2DTextured@cow@@U12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@$$QEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back@UVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+158
	DD	imagerel $unwind$??$_Emplace_back@UVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_address@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$to_address@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@UVertex2DTextured@cow@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@AEAU34@@Z DD imagerel $LN5
	DD	imagerel $LN5+155
	DD	imagerel $unwind$??$construct@UVertex2DTextured@cow@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@AEAU34@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAVBuffer@cow@@@std@@YAAEAPEAVBuffer@cow@@AEAPEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$forward@AEAPEAVBuffer@cow@@@std@@YAAEAPEAVBuffer@cow@@AEAPEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z DD imagerel $LN3
	DD	imagerel $LN3+56
	DD	imagerel $unwind$??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$to_address@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$to_address@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@PEAUVkCommandBuffer_T@@$$VX@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??$construct_at@PEAUVkCommandBuffer_T@@$$VX@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Voidify_iter@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAXPEAPEAUVkCommandBuffer_T@@@Z DD imagerel $LN3
	DD	imagerel $LN3+48
	DD	imagerel $unwind$??$_Voidify_iter@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAXPEAPEAUVkCommandBuffer_T@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct_at@UVertex2DTextured@cow@@AEAU12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@AEAU12@@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$construct_at@UVertex2DTextured@cow@@AEAU12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@AEAU12@@Z
pdata	ENDS
;	COMDAT __xmm@fa7efa7efa7efa7efa7efa7efa7efa7e
CONST	SEGMENT
__xmm@fa7efa7efa7efa7efa7efa7efa7efa7e DB '~', 0faH, '~', 0faH, '~', 0faH
	DB	'~', 0faH, '~', 0faH, '~', 0faH, '~', 0faH, '~', 0faH
CONST	ENDS
;	COMDAT __xmm@f9c31a9df9c31a9df9c31a9df9c31a9d
CONST	SEGMENT
__xmm@f9c31a9df9c31a9df9c31a9df9c31a9d DB 09dH, 01aH, 0c3H, 0f9H, 09dH, 01aH
	DB	0c3H, 0f9H, 09dH, 01aH, 0c3H, 0f9H, 09dH, 01aH, 0c3H, 0f9H
CONST	ENDS
;	COMDAT __xmm@f493f493f493f493f493f493f493f493
CONST	SEGMENT
__xmm@f493f493f493f493f493f493f493f493 DB 093H, 0f4H, 093H, 0f4H, 093H, 0f4H
	DB	093H, 0f4H, 093H, 0f4H, 093H, 0f4H, 093H, 0f4H, 093H, 0f4H
CONST	ENDS
;	COMDAT __xmm@eb1a08a9eb1a08a9eb1a08a9eb1a08a9
CONST	SEGMENT
__xmm@eb1a08a9eb1a08a9eb1a08a9eb1a08a9 DB 0a9H, 08H, 01aH, 0ebH, 0a9H, 08H
	DB	01aH, 0ebH, 0a9H, 08H, 01aH, 0ebH, 0a9H, 08H, 01aH, 0ebH
CONST	ENDS
;	COMDAT __xmm@e9cf12d0e9cf12d0e9cf12d0e9cf12d0
CONST	SEGMENT
__xmm@e9cf12d0e9cf12d0e9cf12d0e9cf12d0 DB 0d0H, 012H, 0cfH, 0e9H, 0d0H, 012H
	DB	0cfH, 0e9H, 0d0H, 012H, 0cfH, 0e9H, 0d0H, 012H, 0cfH, 0e9H
CONST	ENDS
;	COMDAT __xmm@e09ee565e09ee565e09ee565e09ee565
CONST	SEGMENT
__xmm@e09ee565e09ee565e09ee565e09ee565 DB 'e', 0e5H, 09eH, 0e0H, 'e', 0e5H
	DB	09eH, 0e0H, 'e', 0e5H, 09eH, 0e0H, 'e', 0e5H, 09eH, 0e0H
CONST	ENDS
;	COMDAT __xmm@80808080808080808080808080808080
CONST	SEGMENT
__xmm@80808080808080808080808080808080 DB 080H, 080H, 080H, 080H, 080H, 080H
	DB	080H, 080H, 080H, 080H, 080H, 080H, 080H, 080H, 080H, 080H
CONST	ENDS
;	COMDAT __xmm@1c5a1c5a1c5a1c5a1c5a1c5a1c5a1c5a
CONST	SEGMENT
__xmm@1c5a1c5a1c5a1c5a1c5a1c5a1c5a1c5a DB 'Z', 01cH, 'Z', 01cH, 'Z', 01cH
	DB	'Z', 01cH, 'Z', 01cH, 'Z', 01cH, 'Z', 01cH, 'Z', 01cH
CONST	ENDS
;	COMDAT __xmm@166f166f166f166f166f166f166f166f
CONST	SEGMENT
__xmm@166f166f166f166f166f166f166f166f DB 'o', 016H, 'o', 016H, 'o', 016H
	DB	'o', 016H, 'o', 016H, 'o', 016H, 'o', 016H, 'o', 016H
CONST	ENDS
;	COMDAT __xmm@12d0046b12d0046b12d0046b12d0046b
CONST	SEGMENT
__xmm@12d0046b12d0046b12d0046b12d0046b DB 'k', 04H, 0d0H, 012H, 'k', 04H, 0d0H
	DB	012H, 'k', 04H, 0d0H, 012H, 'k', 04H, 0d0H, 012H
CONST	ENDS
;	COMDAT __xmm@11c8f9c311c8f9c311c8f9c311c8f9c3
CONST	SEGMENT
__xmm@11c8f9c311c8f9c311c8f9c311c8f9c3 DB 0c3H, 0f9H, 0c8H, 011H, 0c3H, 0f9H
	DB	0c8H, 011H, 0c3H, 0f9H, 0c8H, 011H, 0c3H, 0f9H, 0c8H, 011H
CONST	ENDS
;	COMDAT __xmm@11c8e09e11c8e09e11c8e09e11c8e09e
CONST	SEGMENT
__xmm@11c8e09e11c8e09e11c8e09e11c8e09e DB 09eH, 0e0H, 0c8H, 011H, 09eH, 0e0H
	DB	0c8H, 011H, 09eH, 0e0H, 0c8H, 011H, 09eH, 0e0H, 0c8H, 011H
CONST	ENDS
;	COMDAT __xmm@08a914e808a914e808a914e808a914e8
CONST	SEGMENT
__xmm@08a914e808a914e808a914e808a914e8 DB 0e8H, 014H, 0a9H, 08H, 0e8H, 014H
	DB	0a9H, 08H, 0e8H, 014H, 0a9H, 08H, 0e8H, 014H, 0a9H, 08H
CONST	ENDS
;	COMDAT __xmm@01010000010100000101000001010000
CONST	SEGMENT
__xmm@01010000010100000101000001010000 DB 00H, 00H, 01H, 01H, 00H, 00H, 01H
	DB	01H, 00H, 00H, 01H, 01H, 00H, 00H, 01H, 01H
CONST	ENDS
;	COMDAT __xmm@00ff00ff00ff00ff00ff00ff00ff00ff
CONST	SEGMENT
__xmm@00ff00ff00ff00ff00ff00ff00ff00ff DB 0ffH, 00H, 0ffH, 00H, 0ffH, 00H
	DB	0ffH, 00H, 0ffH, 00H, 0ffH, 00H, 0ffH, 00H, 0ffH, 00H
CONST	ENDS
;	COMDAT __xmm@00080008000800080008000800080008
CONST	SEGMENT
__xmm@00080008000800080008000800080008 DB 08H, 00H, 08H, 00H, 08H, 00H, 08H
	DB	00H, 08H, 00H, 08H, 00H, 08H, 00H, 08H, 00H
CONST	ENDS
;	COMDAT __xmm@00000200000002000000020000000200
CONST	SEGMENT
__xmm@00000200000002000000020000000200 DB 00H, 02H, 00H, 00H, 00H, 02H, 00H
	DB	00H, 00H, 02H, 00H, 00H, 00H, 02H, 00H, 00H
CONST	ENDS
;	COMDAT __real@bff8000000000000
CONST	SEGMENT
__real@bff8000000000000 DQ 0bff8000000000000r	; -1.5
CONST	ENDS
;	COMDAT __real@bfe0000000000000
CONST	SEGMENT
__real@bfe0000000000000 DQ 0bfe0000000000000r	; -0.5
CONST	ENDS
;	COMDAT __real@bfdccccccccccccd
CONST	SEGMENT
__real@bfdccccccccccccd DQ 0bfdccccccccccccdr	; -0.45
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@477fff00
CONST	SEGMENT
__real@477fff00 DD 0477fff00r			; 65535
CONST	ENDS
;	COMDAT __real@437f0000
CONST	SEGMENT
__real@437f0000 DD 0437f0000r			; 255
CONST	ENDS
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f1a36e2eb1c432d
CONST	SEGMENT
__real@3f1a36e2eb1c432d DQ 03f1a36e2eb1c432dr	; 0.0001
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@invalid_argument@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@invalid_argument@std@@8 DD imagerel ??_R0?AVinvalid_argument@std@@@8 ; std::invalid_argument::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3invalid_argument@std@@8
rdata$r	ENDS
;	COMDAT ??_R2invalid_argument@std@@8
rdata$r	SEGMENT
??_R2invalid_argument@std@@8 DD imagerel ??_R1A@?0A@EA@invalid_argument@std@@8 ; std::invalid_argument::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@logic_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3invalid_argument@std@@8
rdata$r	SEGMENT
??_R3invalid_argument@std@@8 DD 00H			; std::invalid_argument::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2invalid_argument@std@@8
rdata$r	ENDS
;	COMDAT ??_R4invalid_argument@std@@6B@
rdata$r	SEGMENT
??_R4invalid_argument@std@@6B@ DD 01H			; std::invalid_argument::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVinvalid_argument@std@@@8
	DD	imagerel ??_R3invalid_argument@std@@8
	DD	imagerel ??_R4invalid_argument@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@logic_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@logic_error@std@@8 DD imagerel ??_R0?AVlogic_error@std@@@8 ; std::logic_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2logic_error@std@@8
rdata$r	SEGMENT
??_R2logic_error@std@@8 DD imagerel ??_R1A@?0A@EA@logic_error@std@@8 ; std::logic_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3logic_error@std@@8
rdata$r	SEGMENT
??_R3logic_error@std@@8 DD 00H				; std::logic_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2logic_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4logic_error@std@@6B@
rdata$r	SEGMENT
??_R4logic_error@std@@6B@ DD 01H			; std::logic_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVlogic_error@std@@@8
	DD	imagerel ??_R3logic_error@std@@8
	DD	imagerel ??_R4logic_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
CONST	SEGMENT
??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@ DB ':'
	DB	00H, 'A', 00H, 'M', 00H, ':', 00H, 'a', 00H, 'm', 00H, ':', 00H
	DB	'P', 00H, 'M', 00H, ':', 00H, 'p', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
CONST	SEGMENT
??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@ DB '"'
	DB	00H, 'n', 00H, 'u', 00H, 'l', 00H, 'l', 00H, ' ', 00H, 'p', 00H
	DB	'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' '
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'p', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't', 00H, ' '
	DB	00H, 't', 00H, 'o', 00H, ' ', 00H, 'a', 00H, ' ', 00H, 'b', 00H
	DB	'l', 00H, 'o', 00H, 'c', 00H, 'k', 00H, ' ', 00H, 'o', 00H, 'f'
	DB	00H, ' ', 00H, 'n', 00H, 'o', 00H, 'n', 00H, '-', 00H, 'z', 00H
	DB	'e', 00H, 'r', 00H, 'o', 00H, ' ', 00H, 's', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
CONST	SEGMENT
??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@ DB 'null pointe'
	DB	'r cannot point to a block of non-zero size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FOIKENOD@vector?5too?5long@
CONST	SEGMENT
??_C@_0BA@FOIKENOD@vector?5too?5long@ DB 'vector too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
CONST	SEGMENT
??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@ DB ':AM:am:PM:pm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GK@IDNJBOAD@?$AAv?$AAe?$AAr?$AAt?$AAe?$AAx?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5@
CONST	SEGMENT
??_C@_1GK@IDNJBOAD@?$AAv?$AAe?$AAr?$AAt?$AAe?$AAx?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5@ DB 'v'
	DB	00H, 'e', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'x', 00H, 'C', 00H
	DB	'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H, '>', 00H, '='
	DB	00H, ' ', 00H, '3', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H
	DB	'"', 00H, 'V', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'e', 00H, 'x'
	DB	00H, ' ', 00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H
	DB	' ', 00H, 'm', 00H, 'u', 00H, 's', 00H, 't', 00H, ' ', 00H, 'b'
	DB	00H, 'e', 00H, ' ', 00H, 'a', 00H, 't', 00H, 'l', 00H, 'e', 00H
	DB	'a', 00H, 's', 00H, 't', 00H, ' ', 00H, '3', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@LIMMMBDB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1GI@LIMMMBDB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'a', 00H, 'n', 00H, 't', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 's', 00H, 'o', 00H, 'u', 00H, 'r', 00H, 'c', 00H
	DB	'e', 00H, '\', 00H, 'r', 00H, 'e', 00H, 'p', 00H, 'o', 00H, 's'
	DB	00H, '\', 00H, 'G', 00H, 'P', 00H, 'U', 00H, '-', 00H, 'V', 00H
	DB	'M', 00H, '\', 00H, 'G', 00H, 'P', 00H, 'U', 00H, '-', 00H, 'V'
	DB	00H, 'M', 00H, '\', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e', 00H
	DB	'l', 00H, '.', 00H, 'h', 00H, 'p', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@JNGFJPNG@Vertex?5Count?5must?5be?5atleast?53@
CONST	SEGMENT
??_C@_0BP@JNGFJPNG@Vertex?5Count?5must?5be?5atleast?53@ DB 'Vertex Count '
	DB	'must be atleast 3', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@KOBEGADE@failed?5to?5allocate?5descriptor?5s@
CONST	SEGMENT
??_C@_0CE@KOBEGADE@failed?5to?5allocate?5descriptor?5s@ DB 'failed to all'
	DB	'ocate descriptor sets!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@ENOKJEPG@failed?5to?5create?5descriptor?5poo@
CONST	SEGMENT
??_C@_0CC@ENOKJEPG@failed?5to?5create?5descriptor?5poo@ DB 'failed to cre'
	DB	'ate descriptor pool!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@HPIEGNFK@failed?5to?5create?5descriptor?5set@
CONST	SEGMENT
??_C@_0CI@HPIEGNFK@failed?5to?5create?5descriptor?5set@ DB 'failed to cre'
	DB	'ate descriptor set layout!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@NCBLADDF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp@
CONST	SEGMENT
??_C@_1DO@NCBLADDF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp@ DB '"'
	DB	00H, 'a', 00H, 'r', 00H, 'r', 00H, 'a', 00H, 'y', 00H, ' ', 00H
	DB	's', 00H, 'u', 00H, 'b', 00H, 's', 00H, 'c', 00H, 'r', 00H, 'i'
	DB	00H, 'p', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H
	DB	' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1MA@HADHJGPP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MA@HADHJGPP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'a', 00H, 'r'
	DB	00H, 'r', 00H, 'a', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0GA@LKBGKKAK@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GA@LKBGKKAK@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\array', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@HMIFLIEM@array?5subscript?5out?5of?5range@
CONST	SEGMENT
??_C@_0BN@HMIFLIEM@array?5subscript?5out?5of?5range@ DB 'array subscript '
	DB	'out of range', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@JOEKPGKM@failed?5to?5create?5graphics?5pipel@
CONST	SEGMENT
??_C@_0CD@JOEKPGKM@failed?5to?5create?5graphics?5pipel@ DB 'failed to cre'
	DB	'ate graphics pipeline', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LLDEEIKC@ASFDHFHUFDUHUYIF@
CONST	SEGMENT
??_C@_0BB@LLDEEIKC@ASFDHFHUFDUHUYIF@ DB 'ASFDHFHUFDUHUYIF', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@KCJMGAAL@failed?5to?5end?5cmdBuffer@
CONST	SEGMENT
??_C@_0BI@KCJMGAAL@failed?5to?5end?5cmdBuffer@ DB 'failed to end cmdBuffe'
	DB	'r', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@DMDCDDIA@failed?5to?5allocate?5command?5buff@
CONST	SEGMENT
??_C@_0CD@DMDCDDIA@failed?5to?5allocate?5command?5buff@ DB 'failed to all'
	DB	'ocate command buffers', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@HDHKIKGP@C?3?2Users?2anton?2source?2repos?2GPU@
CONST	SEGMENT
??_C@_0EJ@HDHKIKGP@C?3?2Users?2anton?2source?2repos?2GPU@ DB 'C:\Users\an'
	DB	'ton\source\repos\GPU-VM\GPU-VM\Shaders\simple_shader.vert.spv'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0EJ@HKLAAGEK@C?3?2Users?2anton?2source?2repos?2GPU@
CONST	SEGMENT
??_C@_0EJ@HKLAAGEK@C?3?2Users?2anton?2source?2repos?2GPU@ DB 'C:\Users\an'
	DB	'ton\source\repos\GPU-VM\GPU-VM\Shaders\simple_shader.frag.spv'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_04GHJNJNPO@main@
CONST	SEGMENT
??_C@_04GHJNJNPO@main@ DB 'main', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@CAAGOMDP@failed?5to?5create?5a?5pipeline?5lay@
CONST	SEGMENT
??_C@_0CD@CAAGOMDP@failed?5to?5create?5a?5pipeline?5lay@ DB 'failed to cr'
	DB	'eate a pipeline layout', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@BLGJKHJK@C?3?2Users?2anton?2Downloads?2pic_go@
CONST	SEGMENT
??_C@_0CL@BLGJKHJK@C?3?2Users?2anton?2Downloads?2pic_go@ DB 'C:\Users\ant'
	DB	'on\Downloads\pic_goes_hard.png', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name@ DB 'name', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PHMGELLB@?6?6@
CONST	SEGMENT
??_C@_02PHMGELLB@?6?6@ DB 0aH, 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@FBGJBNOK@failed?5to?5load?5texture?5image?$CB@
CONST	SEGMENT
??_C@_0BO@FBGJBNOK@failed?5to?5load?5texture?5image?$CB@ DB 'failed to lo'
	DB	'ad texture image!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@ELCOLLBC@failed?5to?5create?5texture?5sample@
CONST	SEGMENT
??_C@_0CC@ELCOLLBC@failed?5to?5create?5texture?5sample@ DB 'failed to cre'
	DB	'ate texture sampler!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@NBFKCJOJ@failed?5to?5create?5texture?5image?5@
CONST	SEGMENT
??_C@_0CF@NBFKCJOJ@failed?5to?5create?5texture?5image?5@ DB 'failed to cr'
	DB	'eate texture image view!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GBFHPONC@unsupported?5layout?5transition?$CB@
CONST	SEGMENT
??_C@_0BP@GBFHPONC@unsupported?5layout?5transition?$CB@ DB 'unsupported l'
	DB	'ayout transition!', 00H			; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0logic_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
data$r	SEGMENT
??_R0?AVlogic_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVlogic_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVinvalid_argument@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0invalid_argument@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVinvalid_argument@std@@@8
data$r	SEGMENT
??_R0?AVinvalid_argument@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::invalid_argument `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVinvalid_argument@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVinvalid_argument@std@@
xdata$x	SEGMENT
_CTA3?AVinvalid_argument@std@@ DD 03H
	DD	imagerel _CT??_R0?AVinvalid_argument@std@@@8??0invalid_argument@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVinvalid_argument@std@@
xdata$x	SEGMENT
_TI3?AVinvalid_argument@std@@ DD 00H
	DD	imagerel ??1invalid_argument@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVinvalid_argument@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BC@CNFMOKHC@max?5value?5?$DO?565535@
CONST	SEGMENT
??_C@_0BC@CNFMOKHC@max?5value?5?$DO?565535@ DB 'max value > 65535', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@JBEOCDFN@invalid?5decoded?5scanline?5length@
CONST	SEGMENT
??_C@_0CA@JBEOCDFN@invalid?5decoded?5scanline?5length@ DB 'invalid decode'
	DB	'd scanline length', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03FOKDFDHG@?$CLX?5@
CONST	SEGMENT
??_C@_03FOKDFDHG@?$CLX?5@ DB '+X ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DCNDPIOH@unsupported?5data?5layout@
CONST	SEGMENT
??_C@_0BI@DCNDPIOH@unsupported?5data?5layout@ DB 'unsupported data layout'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_03HKAKGGJN@?9Y?5@
CONST	SEGMENT
??_C@_03HKAKGGJN@?9Y?5@ DB '-Y ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NKJFFLKL@unsupported?5format@
CONST	SEGMENT
??_C@_0BD@NKJFFLKL@unsupported?5format@ DB 'unsupported format', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JFGBLLKC@FORMAT?$DN32?9bit_rle_rgbe@
CONST	SEGMENT
??_C@_0BH@JFGBLLKC@FORMAT?$DN32?9bit_rle_rgbe@ DB 'FORMAT=32-bit_rle_rgbe'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_07NCIOKENI@not?5HDR@
CONST	SEGMENT
??_C@_07NCIOKENI@not?5HDR@ DB 'not HDR', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06NDOKKIDJ@?$CD?$DPRGBE@
CONST	SEGMENT
??_C@_06NDOKKIDJ@?$CD?$DPRGBE@ DB '#?RGBE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NCPEAJBD@?$CD?$DPRADIANCE@
CONST	SEGMENT
??_C@_0L@NCPEAJBD@?$CD?$DPRADIANCE@ DB '#?RADIANCE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KFDJIKCK@?$CD?$DPRGBE?6@
CONST	SEGMENT
??_C@_07KFDJIKCK@?$CD?$DPRGBE?6@ DB '#?RGBE', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HOIDFNFN@?$CD?$DPRADIANCE?6@
CONST	SEGMENT
??_C@_0M@HOIDFNFN@?$CD?$DPRADIANCE?6@ DB '#?RADIANCE', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DJABBOOH@unknown?5code@
CONST	SEGMENT
??_C@_0N@DJABBOOH@unknown?5code@ DB 'unknown code', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NAMJKDNF@missing?5color?5table@
CONST	SEGMENT
??_C@_0BE@NAMJKDNF@missing?5color?5table@ DB 'missing color table', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GIAALCNJ@bad?5Image?5Descriptor@
CONST	SEGMENT
??_C@_0BF@GIAALCNJ@bad?5Image?5Descriptor@ DB 'bad Image Descriptor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LOKBIIOJ@illegal?5code?5in?5raster@
CONST	SEGMENT
??_C@_0BH@LOKBIIOJ@illegal?5code?5in?5raster@ DB 'illegal code in raster', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GJNJCPDJ@too?5many?5codes@
CONST	SEGMENT
??_C@_0P@GJNJCPDJ@too?5many?5codes@ DB 'too many codes', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MGDACKOJ@no?5clear?5code@
CONST	SEGMENT
??_C@_0O@MGDACKOJ@no?5clear?5code@ DB 'no clear code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07KMJLPAII@not?5GIF@
CONST	SEGMENT
??_C@_07KMJLPAII@not?5GIF@ DB 'not GIF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GGMBIFE@bad?5file@
CONST	SEGMENT
??_C@_08GGMBIFE@bad?5file@ DB 'bad file', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04ELNJHLFH@PICT@
CONST	SEGMENT
??_C@_04ELNJHLFH@PICT@ DB 'PICT', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04KBFEPHFH@S?$IA?v4@
CONST	SEGMENT
??_C@_04KBFEPHFH@S?$IA?v4@ DB 'S', 080H, 0f6H, '4', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DPPMCAKL@corrupt@
CONST	SEGMENT
??_C@_07DPPMCAKL@corrupt@ DB 'corrupt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@IOGGBMNK@wrong?5color?5format@
CONST	SEGMENT
??_C@_0BD@IOGGBMNK@wrong?5color?5format@ DB 'wrong color format', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NOLDLPP@unsupported?5bit?5depth@
CONST	SEGMENT
??_C@_0BG@NOLDLPP@unsupported?5bit?5depth@ DB 'unsupported bit depth', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PJBNGDBE@wrong?5channel?5count@
CONST	SEGMENT
??_C@_0BE@PJBNGDBE@wrong?5channel?5count@ DB 'wrong channel count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CHBCDKKC@wrong?5version@
CONST	SEGMENT
??_C@_0O@CHBCDKKC@wrong?5version@ DB 'wrong version', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07ECNCNLIK@not?5PSD@
CONST	SEGMENT
??_C@_07ECNCNLIK@not?5PSD@ DB 'not PSD', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@GOOINIO@?$AAt?$AAg?$AAa?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAS?$AAT?$AAB@
CONST	SEGMENT
??_C@_1CK@GOOINIO@?$AAt?$AAg?$AAa?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAS?$AAT?$AAB@ DB 't'
	DB	00H, 'g', 00H, 'a', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'S', 00H, 'T'
	DB	00H, 'B', 00H, 'I', 00H, '_', 00H, 'r', 00H, 'g', 00H, 'b', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ILLOCNCO@bad?5palette@
CONST	SEGMENT
??_C@_0M@ILLOCNCO@bad?5palette@ DB 'bad palette', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DMAPJJO@bad?5format@
CONST	SEGMENT
??_C@_0L@DMAPJJO@bad?5format@ DB 'bad format', 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z@4JA DD 016a2H ; `stbi__tga_load'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_09DAEBACAB@bad?5masks@
CONST	SEGMENT
??_C@_09DAEBACAB@bad?5masks@ DB 'bad masks', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07JNJHIMGH@bad?5bpp@
CONST	SEGMENT
??_C@_07JNJHIMGH@bad?5bpp@ DB 'bad bpp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07MALOAKCI@invalid@
CONST	SEGMENT
??_C@_07MALOAKCI@invalid@ DB 'invalid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JDPIFELH@bad?5offset@
CONST	SEGMENT
??_C@_0L@JDPIFELH@bad?5offset@ DB 'bad offset', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ODCBCBFN@BMP?5JPEG?1PNG@
CONST	SEGMENT
??_C@_0N@ODCBCBFN@BMP?5JPEG?1PNG@ DB 'BMP JPEG/PNG', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07IMHMNOIB@BMP?5RLE@
CONST	SEGMENT
??_C@_07IMHMNOIB@BMP?5RLE@ DB 'BMP RLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KHBIBJBG@unknown?5BMP@
CONST	SEGMENT
??_C@_0M@KHBIBJBG@unknown?5BMP@ DB 'unknown BMP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IEJCHBDI@bad?5BMP@
CONST	SEGMENT
??_C@_07IEJCHBDI@bad?5BMP@ DB 'bad BMP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07IANEBNLB@not?5BMP@
CONST	SEGMENT
??_C@_07IANEBNLB@not?5BMP@ DB 'not BMP', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1CO@LIFEKNEP@?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAi@
CONST	SEGMENT
??_C@_1CO@LIFEKNEP@?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAi@ DB 'b'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, ' ', 00H, '>', 00H, '=', 00H
	DB	' ', 00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, 'b'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, ' ', 00H, '<', 00H, '=', 00H
	DB	' ', 00H, '8', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BA@EKLGALLJ@?$AAv?$AA?5?$AA?$DM?$AA?5?$AA2?$AA5?$AA6@
CONST	SEGMENT
??_C@_1BA@EKLGALLJ@?$AAv?$AA?5?$AA?$DM?$AA?5?$AA2?$AA5?$AA6@ DB 'v', 00H, ' '
	DB	00H, '<', 00H, ' ', 00H, '2', 00H, '5', 00H, '6', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__shiftsigned@@YAHIHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__shiftsigned@@YAHIHH@Z@4JA DD 014d4H ; `stbi__shiftsigned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BF@NOEEEFMF@bad?5bits_per_channel@
CONST	SEGMENT
??_C@_0BF@NOEEEFMF@bad?5bits_per_channel@ DB 'bad bits_per_channel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07MLPECBNA@no?5IDAT@
CONST	SEGMENT
??_C@_07MLPECBNA@no?5IDAT@ DB 'no IDAT', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNNCNKEO@outofdata@
CONST	SEGMENT
??_C@_09MNNCNKEO@outofdata@ DB 'outofdata', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07CKIELOEH@no?5PLTE@
CONST	SEGMENT
??_C@_07CKIELOEH@no?5PLTE@ DB 'no PLTE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ENDPGCHB@tRNS?5with?5alpha@
CONST	SEGMENT
??_C@_0BA@ENDPGCHB@tRNS?5with?5alpha@ DB 'tRNS with alpha', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KDLCCKCH@bad?5tRNS?5len@
CONST	SEGMENT
??_C@_0N@KDLCCKCH@bad?5tRNS?5len@ DB 'bad tRNS len', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CEDNNLBG@tRNS?5before?5PLTE@
CONST	SEGMENT
??_C@_0BB@CEDNNLBG@tRNS?5before?5PLTE@ DB 'tRNS before PLTE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PCPJHDKJ@tRNS?5after?5IDAT@
CONST	SEGMENT
??_C@_0BA@PCPJHDKJ@tRNS?5after?5IDAT@ DB 'tRNS after IDAT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JCPAJAKB@invalid?5PLTE@
CONST	SEGMENT
??_C@_0N@JCPAJAKB@invalid?5PLTE@ DB 'invalid PLTE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JEAFOMAF@first?5not?5IHDR@
CONST	SEGMENT
??_C@_0P@JEAFOMAF@first?5not?5IHDR@ DB 'first not IHDR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FNFBHCOO@0?9pixel?5image@
CONST	SEGMENT
??_C@_0O@FNFBHCOO@0?9pixel?5image@ DB '0-pixel image', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JCGDPBAA@bad?5interlace?5method@
CONST	SEGMENT
??_C@_0BF@JCGDPBAA@bad?5interlace?5method@ DB 'bad interlace method', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GHLIKKMD@bad?5filter?5method@
CONST	SEGMENT
??_C@_0BC@GHLIKKMD@bad?5filter?5method@ DB 'bad filter method', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDMBDDFG@bad?5comp?5method@
CONST	SEGMENT
??_C@_0BA@MDMBDDFG@bad?5comp?5method@ DB 'bad comp method', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09MBBNGCKB@bad?5ctype@
CONST	SEGMENT
??_C@_09MBBNGCKB@bad?5ctype@ DB 'bad ctype', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EJHIPKNO@1?12?14?18?116?9bit?5only@
CONST	SEGMENT
??_C@_0BE@EJHIPKNO@1?12?14?18?116?9bit?5only@ DB '1/2/4/8/16-bit only', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@POJLKMKK@bad?5IHDR?5len@
CONST	SEGMENT
??_C@_0N@POJLKMKK@bad?5IHDR?5len@ DB 'bad IHDR len', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KBHBNJOK@multiple?5IHDR@
CONST	SEGMENT
??_C@_0O@KBHBNJOK@multiple?5IHDR@ DB 'multiple IHDR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CE@GKIDJEJM@?$AAs?$AA?9?$AA?$DO?$AAi?$AAm?$AAg?$AA_?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN@
CONST	SEGMENT
??_C@_1CE@GKIDJEJM@?$AAs?$AA?9?$AA?$DO?$AAi?$AAm?$AAg?$AA_?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN@ DB 's'
	DB	00H, '-', 00H, '>', 00H, 'i', 00H, 'm', 00H, 'g', 00H, '_', 00H
	DB	'o', 00H, 'u', 00H, 't', 00H, '_', 00H, 'n', 00H, ' ', 00H, '='
	DB	00H, '=', 00H, ' ', 00H, '4', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__de_iphone@@YAXPEAUstbi__png@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__de_iphone@@YAXPEAUstbi__png@@@Z@4JA DD 01373H ; `stbi__de_iphone'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z@4JA DD 0130dH ; `stbi__compute_transparency16'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1DC@BMIDKOPK@?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo@
CONST	SEGMENT
??_C@_1DC@BMIDKOPK@?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo@ DB 'o'
	DB	00H, 'u', 00H, 't', 00H, '_', 00H, 'n', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '2', 00H, ' ', 00H, '|', 00H, '|', 00H, ' '
	DB	00H, 'o', 00H, 'u', 00H, 't', 00H, '_', 00H, 'n', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '4', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z@4JA DD 012f4H ; `stbi__compute_transparency'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1BG@FLOPDKAN@?$AAi?$AAm?$AAg?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA3@
CONST	SEGMENT
??_C@_1BG@FLOPDKAN@?$AAi?$AAm?$AAg?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA3@ DB 'i'
	DB	00H, 'm', 00H, 'g', 00H, '_', 00H, 'n', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, '3', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CC@CPJBBDGC@?$AAi?$AAm?$AAg?$AA_?$AAn?$AA?$CL?$AA1?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AA_@
CONST	SEGMENT
??_C@_1CC@CPJBBDGC@?$AAi?$AAm?$AAg?$AA_?$AAn?$AA?$CL?$AA1?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AA_@ DB 'i'
	DB	00H, 'm', 00H, 'g', 00H, '_', 00H, 'n', 00H, '+', 00H, '1', 00H
	DB	' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't'
	DB	00H, '_', 00H, 'n', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MKGNGALN@invalid?5width@
CONST	SEGMENT
??_C@_0O@MKGNGALN@invalid?5width@ DB 'invalid width', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FBBCPGMN@invalid?5filter@
CONST	SEGMENT
??_C@_0P@FBBCPGMN@invalid?5filter@ DB 'invalid filter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BHMPBBMG@not?5enough?5pixels@
CONST	SEGMENT
??_C@_0BC@BHMPBBMG@not?5enough?5pixels@ DB 'not enough pixels', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@ICDHLHK@?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AA?9?$AA?$DO?$AAi?$AAm?$AAg@
CONST	SEGMENT
??_C@_1FC@ICDHLHK@?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AA?9?$AA?$DO?$AAi?$AAm?$AAg@ DB 'o'
	DB	00H, 'u', 00H, 't', 00H, '_', 00H, 'n', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, ' ', 00H, 's', 00H, '-', 00H, '>', 00H, 'i', 00H, 'm'
	DB	00H, 'g', 00H, '_', 00H, 'n', 00H, ' ', 00H, '|', 00H, '|', 00H
	DB	' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, '_', 00H, 'n', 00H, ' '
	DB	00H, '=', 00H, '=', 00H, ' ', 00H, 's', 00H, '-', 00H, '>', 00H
	DB	'i', 00H, 'm', 00H, 'g', 00H, '_', 00H, 'n', 00H, '+', 00H, '1'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z@4JA DD 011f3H ; `stbi__create_png_image_raw'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@DMDNBACF@bad?5png?5sig@
CONST	SEGMENT
??_C@_0M@DMDNBACF@bad?5png?5sig@ DB 'bad png sig', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MCNBDLPD@bad?5compression@
CONST	SEGMENT
??_C@_0BA@MCNBDLPD@bad?5compression@ DB 'bad compression', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DOGMHEBI@no?5preset?5dict@
CONST	SEGMENT
??_C@_0P@DOGMHEBI@no?5preset?5dict@ DB 'no preset dict', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OBKOPAFL@bad?5zlib?5header@
CONST	SEGMENT
??_C@_0BA@OBKOPAFL@bad?5zlib?5header@ DB 'bad zlib header', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PIPBCKIA@read?5past?5buffer@
CONST	SEGMENT
??_C@_0BB@PIPBCKIA@read?5past?5buffer@ DB 'read past buffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IECDHMDI@zlib?5corrupt@
CONST	SEGMENT
??_C@_0N@IECDHMDI@zlib?5corrupt@ DB 'zlib corrupt', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DIAPIMGJ@bad?5dist@
CONST	SEGMENT
??_C@_08DIAPIMGJ@bad?5dist@ DB 'bad dist', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IBFIPFO@output?5buffer?5limit@
CONST	SEGMENT
??_C@_0BE@IBFIPFO@output?5buffer?5limit@ DB 'output buffer limit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MDNKOBMC@bad?5codelengths@
CONST	SEGMENT
??_C@_0BA@MDNKOBMC@bad?5codelengths@ DB 'bad codelengths', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EOHLEIKL@bad?5sizes@
CONST	SEGMENT
??_C@_09EOHLEIKL@bad?5sizes@ DB 'bad sizes', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1BG@HKNLHECB@?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA6@
CONST	SEGMENT
??_C@_1BG@HKNLHECB@?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA6@ DB 'b'
	DB	00H, 'i', 00H, 't', 00H, 's', 00H, ' ', 00H, '<', 00H, '=', 00H
	DB	' ', 00H, '1', 00H, '6', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__bit_reverse@@YAHHH@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__bit_reverse@@YAHHH@Z@4JA DD 0fdcH ; `stbi__bit_reverse'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0N@KBPNPPBJ@bad?5req_comp@
CONST	SEGMENT
??_C@_0N@KBPNPPBJ@bad?5req_comp@ DB 'bad req_comp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PNCLKCLJ@bad?5DNL?5height@
CONST	SEGMENT
??_C@_0P@PNCLKCLJ@bad?5DNL?5height@ DB 'bad DNL height', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EPMOIECP@bad?5DNL?5len@
CONST	SEGMENT
??_C@_0M@EPMOIECP@bad?5DNL?5len@ DB 'bad DNL len', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06IFCEAHIA@no?5SOF@
CONST	SEGMENT
??_C@_06IFCEAHIA@no?5SOF@ DB 'no SOF', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06CLMBLEP@no?5SOI@
CONST	SEGMENT
??_C@_06CLMBLEP@no?5SOI@ DB 'no SOI', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LJIHDFHI@bad?5TQ@
CONST	SEGMENT
??_C@_06LJIHDFHI@bad?5TQ@ DB 'bad TQ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MPLLHCJG@bad?5V@
CONST	SEGMENT
??_C@_05MPLLHCJG@bad?5V@ DB 'bad V', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05BLPKENEJ@bad?5H@
CONST	SEGMENT
??_C@_05BLPKENEJ@bad?5H@ DB 'bad H', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DAPHADHL@bad?5component?5count@
CONST	SEGMENT
??_C@_0BE@DAPHADHL@bad?5component?5count@ DB 'bad component count', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09OJDLMMBJ@too?5large@
CONST	SEGMENT
??_C@_09OJDLMMBJ@too?5large@ DB 'too large', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07BIDACDEF@0?5width@
CONST	SEGMENT
??_C@_07BIDACDEF@0?5width@ DB '0 width', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LNEGOMA@no?5header?5height@
CONST	SEGMENT
??_C@_0BB@LNEGOMA@no?5header?5height@ DB 'no header height', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BCINMEBJ@only?58?9bit@
CONST	SEGMENT
??_C@_0L@BCINMEBJ@only?58?9bit@ DB 'only 8-bit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DOFMJEMP@bad?5SOF?5len@
CONST	SEGMENT
??_C@_0M@DOFMJEMP@bad?5SOF?5len@ DB 'bad SOF len', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07EEJOMGGP@bad?5SOS@
CONST	SEGMENT
??_C@_07EEJOMGGP@bad?5SOS@ DB 'bad SOS', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JGMCBLGG@bad?5AC?5huff@
CONST	SEGMENT
??_C@_0M@JGMCBLGG@bad?5AC?5huff@ DB 'bad AC huff', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NOCCBFAC@bad?5DC?5huff@
CONST	SEGMENT
??_C@_0M@NOCCBFAC@bad?5DC?5huff@ DB 'bad DC huff', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GNEHAHOH@bad?5SOS?5len@
CONST	SEGMENT
??_C@_0M@GNEHAHOH@bad?5SOS?5len@ DB 'bad SOS len', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DHFJCMBA@bad?5SOS?5component?5count@
CONST	SEGMENT
??_C@_0BI@DHFJCMBA@bad?5SOS?5component?5count@ DB 'bad SOS component coun'
	DB	't', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NNGPHMMK@unknown?5marker@
CONST	SEGMENT
??_C@_0P@NNGPHMMK@unknown?5marker@ DB 'unknown marker', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EENLKPDI@bad?5APP?5len@
CONST	SEGMENT
??_C@_0M@EENLKPDI@bad?5APP?5len@ DB 'bad APP len', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CICAFFCH@bad?5COM?5len@
CONST	SEGMENT
??_C@_0M@CICAFFCH@bad?5COM?5len@ DB 'bad COM len', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JLGKOCGN@bad?5DHT?5header@
CONST	SEGMENT
??_C@_0P@JLGKOCGN@bad?5DHT?5header@ DB 'bad DHT header', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CNHKKDIM@bad?5DQT?5table@
CONST	SEGMENT
??_C@_0O@CNHKKDIM@bad?5DQT?5table@ DB 'bad DQT table', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BOFJCHAP@bad?5DQT?5type@
CONST	SEGMENT
??_C@_0N@BOFJCHAP@bad?5DQT?5type@ DB 'bad DQT type', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LPHNODCG@bad?5DRI?5len@
CONST	SEGMENT
??_C@_0M@LPHNODCG@bad?5DRI?5len@ DB 'bad DRI len', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KLNDOKJD@expected?5marker@
CONST	SEGMENT
??_C@_0BA@KLNDOKJD@expected?5marker@ DB 'expected marker', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@PJBJDAGM@can?8t?5merge?5dc?5and?5ac@
CONST	SEGMENT
??_C@_0BG@PJBJDAGM@can?8t?5merge?5dc?5and?5ac@ DB 'can''t merge dc and ac'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IIMLINA@bad?5huffman?5code@
CONST	SEGMENT
??_C@_0BB@IIMLINA@bad?5huffman?5code@ DB 'bad huffman code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1KE@JGKPJEBO@?$AA?$CI?$AA?$CI?$AA?$CI?$AAj?$AA?9?$AA?$DO?$AAc?$AAo?$AAd?$AAe?$AA_?$AAb?$AAu?$AAf?$AAf@
CONST	SEGMENT
??_C@_1KE@JGKPJEBO@?$AA?$CI?$AA?$CI?$AA?$CI?$AAj?$AA?9?$AA?$DO?$AAc?$AAo?$AAd?$AAe?$AA_?$AAb?$AAu?$AAf?$AAf@ DB '('
	DB	00H, '(', 00H, '(', 00H, 'j', 00H, '-', 00H, '>', 00H, 'c', 00H
	DB	'o', 00H, 'd', 00H, 'e', 00H, '_', 00H, 'b', 00H, 'u', 00H, 'f'
	DB	00H, 'f', 00H, 'e', 00H, 'r', 00H, ')', 00H, ' ', 00H, '>', 00H
	DB	'>', 00H, ' ', 00H, '(', 00H, '3', 00H, '2', 00H, ' ', 00H, '-'
	DB	00H, ' ', 00H, 'h', 00H, '-', 00H, '>', 00H, 's', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, '[', 00H, 'c', 00H, ']', 00H, ')', 00H, ')'
	DB	00H, ' ', 00H, '&', 00H, ' ', 00H, 's', 00H, 't', 00H, 'b', 00H
	DB	'i', 00H, '_', 00H, '_', 00H, 'b', 00H, 'm', 00H, 'a', 00H, 's'
	DB	00H, 'k', 00H, '[', 00H, 'h', 00H, '-', 00H, '>', 00H, 's', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, '[', 00H, 'c', 00H, ']', 00H, ']'
	DB	00H, ')', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, 'h', 00H
	DB	'-', 00H, '>', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, '['
	DB	00H, 'c', 00H, ']', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z@4JA DD 081bH ; `stbi__jpeg_huff_decode'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0BB@FOKGPEKG@bad?5code?5lengths@
CONST	SEGMENT
??_C@_0BB@FOKGPEKG@bad?5code?5lengths@ DB 'bad code lengths', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__convert_format16@@YAPEAGPEAGHHII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__convert_format16@@YAPEAGPEAGHHII@Z@4JA DD 0701H ; `stbi__convert_format16'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@MHDBFHD@unsupported@
CONST	SEGMENT
??_C@_0M@MHDBFHD@unsupported@ DB 'unsupported', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_13COJANIEC@?$AA0@
CONST	SEGMENT
??_C@_13COJANIEC@?$AA0@ DB '0', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@MABJBNAJ@?$AAr?$AAe?$AAq?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG@
CONST	SEGMENT
??_C@_1DO@MABJBNAJ@?$AAr?$AAe?$AAq?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG@ DB 'r'
	DB	00H, 'e', 00H, 'q', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'm', 00H
	DB	'p', 00H, ' ', 00H, '>', 00H, '=', 00H, ' ', 00H, '1', 00H, ' '
	DB	00H, '&', 00H, '&', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'q', 00H
	DB	'_', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, ' ', 00H, '<'
	DB	00H, '=', 00H, ' ', 00H, '4', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__convert_format@@YAPEAEPEAEHHII@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__convert_format@@YAPEAEPEAEHHII@Z@4JA DD 06c8H ; `stbi__convert_format'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0M@JPDHFAGK@can?8t?5fopen@
CONST	SEGMENT
??_C@_0M@JPDHFAGK@can?8t?5fopen@ DB 'can''t fopen', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z@4JA DD 04f3H ; `stbi__load_and_postprocess_16bit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_1GM@LFNCFCEN@?$AAr?$AAi?$AA?4?$AAb?$AAi?$AAt?$AAs?$AA_?$AAp?$AAe?$AAr?$AA_?$AAc?$AAh?$AAa@
CONST	SEGMENT
??_C@_1GM@LFNCFCEN@?$AAr?$AAi?$AA?4?$AAb?$AAi?$AAt?$AAs?$AA_?$AAp?$AAe?$AAr?$AA_?$AAc?$AAh?$AAa@ DB 'r'
	DB	00H, 'i', 00H, '.', 00H, 'b', 00H, 'i', 00H, 't', 00H, 's', 00H
	DB	'_', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '_', 00H, 'c', 00H, 'h'
	DB	00H, 'a', 00H, 'n', 00H, 'n', 00H, 'e', 00H, 'l', 00H, ' ', 00H
	DB	'=', 00H, '=', 00H, ' ', 00H, '8', 00H, ' ', 00H, '|', 00H, '|'
	DB	00H, ' ', 00H, 'r', 00H, 'i', 00H, '.', 00H, 'b', 00H, 'i', 00H
	DB	't', 00H, 's', 00H, '_', 00H, 'p', 00H, 'e', 00H, 'r', 00H, '_'
	DB	00H, 'c', 00H, 'h', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'e', 00H
	DB	'l', 00H, ' ', 00H, '=', 00H, '=', 00H, ' ', 00H, '1', 00H, '6'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
CONST	SEGMENT
??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'U', 00H, 's', 00H, 'e', 00H, 'r', 00H
	DB	's', 00H, '\', 00H, 'a', 00H, 'n', 00H, 't', 00H, 'o', 00H, 'n'
	DB	00H, '\', 00H, 'D', 00H, 'o', 00H, 'c', 00H, 'u', 00H, 'm', 00H
	DB	'e', 00H, 'n', 00H, 't', 00H, 's', 00H, '\', 00H, 'V', 00H, 'i'
	DB	00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 'S', 00H
	DB	't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H, ' ', 00H, '2'
	DB	00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H, 'L', 00H, 'i', 00H
	DB	'b', 00H, 'r', 00H, 'a', 00H, 'r', 00H, 'i', 00H, 'e', 00H, 's'
	DB	00H, '\', 00H, 's', 00H, 't', 00H, 'b', 00H, '\', 00H, 's', 00H
	DB	't', 00H, 'b', 00H, '_', 00H, 'i', 00H, 'm', 00H, 'a', 00H, 'g'
	DB	00H, 'e', 00H, '.', 00H, 'h', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z@4JA DD 04d9H ; `stbi__load_and_postprocess_8bit'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_08NOGIMCHF@outofmem@
CONST	SEGMENT
??_C@_08NOGIMCHF@outofmem@ DB 'outofmem', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CBEDEJPH@unknown?5image?5type@
CONST	SEGMENT
??_C@_0BD@CBEDEJPH@unknown?5image?5type@ DB 'unknown image type', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
?stbi__stdio_callbacks@@3Ustbi_io_callbacks@@A DQ FLAT:?stbi__stdio_read@@YAHPEAXPEADH@Z ; stbi__stdio_callbacks
	DQ	FLAT:?stbi__stdio_skip@@YAXPEAXH@Z
	DQ	FLAT:?stbi__stdio_eof@@YAHPEAX@Z
?stbi__l2h_gamma@@3MA DD 0400ccccdr		; 2.2	; stbi__l2h_gamma
?stbi__l2h_scale@@3MA DD 03f800000r		; 1	; stbi__l2h_scale
?stbi__h2l_gamma_i@@3MA DD 03ee8ba2er		; 0.454545 ; stbi__h2l_gamma_i
?stbi__h2l_scale_i@@3MA DD 03f800000r		; 1	; stbi__h2l_scale_i
?first_row_filter@@3PAEA DB 00H				; first_row_filter
	DB	01H
	DB	00H
	DB	05H
	DB	06H
	ORG $+3
?invalid_chunk@?JH@??stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z@4PADA DB 'X'
	DB	'XXX PNG chunk not known', 00H		; `stbi__parse_png_file'::`151'::invalid_chunk
	ORG $+7
?mul_table@?1??stbi__shiftsigned@@YAHIHH@Z@4PAIA DD 00H	; `stbi__shiftsigned'::`2'::mul_table
	DD	0ffH
	DD	055H
	DD	049H
	DD	011H
	DD	021H
	DD	041H
	DD	081H
	DD	01H
	ORG $+4
?shift_table@?1??stbi__shiftsigned@@YAHIHH@Z@4PAIA DD 00H ; `stbi__shiftsigned'::`2'::shift_table
	DD	00H
	DD	00H
	DD	01H
	DD	00H
	DD	02H
	DD	04H
	DD	06H
	DD	00H
_DATA	ENDS
;	COMDAT ??_C@_0CJ@NNDFOAFL@failed?5to?5allocate?5vertex?5buffe@
CONST	SEGMENT
??_C@_0CJ@NNDFOAFL@failed?5to?5allocate?5vertex?5buffe@ DB 'failed to all'
	DB	'ocate vertex buffer memory!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IGKKDGOC@failed?5to?5create?5vertex?5buffer?$CB@
CONST	SEGMENT
??_C@_0CA@IGKKDGOC@failed?5to?5create?5vertex?5buffer?$CB@ DB 'failed to '
	DB	'create vertex buffer!', 00H			; `string'
CONST	ENDS
;	COMDAT _CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
_CTA2?AVruntime_error@std@@ DD 02H
	DD	imagerel _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI2?AVruntime_error@std@@
xdata$x	SEGMENT
_TI2?AVruntime_error@std@@ DD 00H
	DD	imagerel ??1runtime_error@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0GC@BCNGEHKL@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@BCNGEHKL@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\xlocnum', 00H		; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA DD 055H ; `std::_Maklocwcs'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT ??_C@_0GC@JBJLEFAK@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@JBJLEFAK@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\xlocale', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0runtime_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7invalid_argument@std@@6B@
CONST	SEGMENT
??_7invalid_argument@std@@6B@ DQ FLAT:??_R4invalid_argument@std@@6B@ ; std::invalid_argument::`vftable'
	DQ	FLAT:??_Einvalid_argument@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT
??_7logic_error@std@@6B@ DQ FLAT:??_R4logic_error@std@@6B@ ; std::logic_error::`vftable'
	DQ	FLAT:??_Elogic_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_11LOCGONAA@@
CONST	SEGMENT
??_C@_11LOCGONAA@@ DB 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H
	DB	'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' '
	DB	00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H
	DB	' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o'
	DB	00H, '\', 00H, '2', 00H, '0', 00H, '2', 00H, '2', 00H, '\', 00H
	DB	'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H
	DB	'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M'
	DB	00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H
	DB	'.', 00H, '3', 00H, '2', 00H, '.', 00H, '3', 00H, '1', 00H, '3'
	DB	00H, '2', 00H, '6', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H
	DB	'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
CONST	SEGMENT
??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@ DB 'C:\Program F'
	DB	'iles\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.'
	DB	'32.31326\include\xmemory', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 091H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@UVertex2DTextured@cow@@AEAU12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@AEAU12@@Z DD 025061901H
	DD	01142319H
	DD	0700d0020H
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAXPEAPEAUVkCommandBuffer_T@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEAUVkCommandBuffer_T@@$$VX@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z DD 025051301H
	DD	010e2313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_address@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAVBuffer@cow@@@std@@YAAEAPEAVBuffer@cow@@AEAPEAV12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UVertex2DTextured@cow@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@AEAU34@@Z DD 025061e01H
	DD	0119231eH
	DD	070120020H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_address@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@UVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@UVertex2DTextured@cow@@U12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@$$QEAU12@@Z DD 025061901H
	DD	01142319H
	DD	0700d0020H
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@AEAU12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAUVkCommandBuffer_T@@$$V@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SAXAEAV?$allocator@PEAUVkCommandBuffer_T@@@1@QEAPEAUVkCommandBuffer_T@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$to_address@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_address@PEAPEAUVkCommandBuffer_T@@@std@@YA?A_PAEBQEAPEAUVkCommandBuffer_T@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@PEAVRenderObject@@@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@PEAPEAVRenderObject@@AEAV?$allocator@PEAVRenderObject@@@1@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAPEAVRenderObject@@PEAPEAV1@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@00@Z DD 025051d01H
	DD	0118231dH
	DD	070110039H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAPEAVRenderObject@@@std@@YA?A_TAEBQEAPEAVRenderObject@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@PEAVRenderObject@@PEAV1@X@std@@YAPEAPEAVRenderObject@@QEAPEAV1@$$QEAPEAV1@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@AEAPEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAVBuffer@cow@@@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVBuffer@cow@@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@AEAUVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAXAEAUVertex2DTextured@cow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@PEAUVertex2DTextured@cow@@AEAV?$allocator@UVertex2DTextured@cow@@@1@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUVertex2DTextured@cow@@PEAU12@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@00@Z DD 025051d01H
	DD	0118231dH
	DD	070110039H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0150H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0adH, 03H
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DD 025054c19H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
	DD	016aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcVarDesc DD 068H ; std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@UVertex2DTextured@cow@@U12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@$$QEAU34@@Z DD 025061e01H
	DD	0119231eH
	DD	070120020H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@UVertex2DTextured@cow@@U12@@std@@YAXAEAUVertex2DTextured@cow@@$$QEAU12@@Z DD 025061901H
	DD	01142319H
	DD	0700d0022H
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@PEAPEAUVkCommandBuffer_T@@AEAV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@0@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	014aH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	095H, 03H
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z DD 025054c19H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z
	DD	016aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z$rtcVarDesc DD 068H ; std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@PEAVRenderObject@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SAXAEAV?$allocator@PEAVRenderObject@@@1@QEAPEAVRenderObject@@$$QEAPEAV3@@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEAVRenderObject@@PEAV1@@std@@YAXAEAPEAVRenderObject@@$$QEAPEAV1@@Z DD 025051801H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVBuffer@cow@@$$T@std@@YAPEAVBuffer@cow@@AEAPEAV12@$$QEA$$T@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAVBuffer@cow@@AEAPEAV12@@std@@YAPEAVBuffer@cow@@AEAPEAV12@0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035051301H
	DD	010e3313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$default_delete@VBuffer@cow@@@std@@@std@@YA$$QEAU?$default_delete@VBuffer@cow@@@0@AEAU10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@PEAVBuffer@cow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4VkBufferUsageFlagBits@@@std@@YA$$QEAW4VkBufferUsageFlagBits@@AEAW41@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEA_K@std@@YAAEA_KAEA_K@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAVDevice@cow@@@std@@YAAEAVDevice@cow@@AEAV12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0156H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	0e5H, 03H
	DB	02H
	DB	'n'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DD 025054c19H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
	DD	016aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_copy<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcVarDesc DD 068H ; std::_Uninitialized_copy<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_copy<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAUVertex2DTextured@cow@@@std@@YAAEBQEAUVertex2DTextured@cow@@AEBQEAU12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YA$$QEAV?$allocator@UVertex2DTextured@cow@@@0@AEAV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z DB 06H
	DB	00H
	DB	00H
	DB	'q', 04H
	DB	02H
	DB	0d5H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z DD 025051d19H
	DD	0118231dH
	DD	07011004bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z DD 025051801H
	DD	01132318H
	DD	0700c002bH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	0122H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z DB 06H
	DB	00H
	DB	00H
	DB	011H, 03H
	DB	02H
	DB	'p'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z
	DD	imagerel $ip2state$??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z DD 025054719H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z
	DD	014aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z$rtcName$0 DB 05fH ; std::_Uninitialized_value_construct_n<std::allocator<VkCommandBuffer_T *> >
	DB	042H
	DB	061H
	DB	063H
	DB	06bH
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+7
??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z$rtcVarDesc DD 048H ; std::_Uninitialized_value_construct_n<std::allocator<VkCommandBuffer_T *> >
	DD	018H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z$rtcName$0
	ORG $+48
??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z$rtcFrameData DD 01H ; std::_Uninitialized_value_construct_n<std::allocator<VkCommandBuffer_T *> >
	DD	00H
	DQ	FLAT:??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAAEBV?$allocator@PEAUVkCommandBuffer_T@@@0@AEBV10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025051819H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z DB 06H
	DB	00H
	DB	00H
	DB	'm', 04H
	DB	02H
	DB	0b9H, 03H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z DD 025051d19H
	DD	0118231dH
	DD	07011004bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z DD 025051801H
	DD	01132318H
	DD	0700c002bH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@H@std@@YA$$QEAHAEAH@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@X@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@YAXPEAUVkVertexInputAttributeDescription@@QEAU1@AEAV?$allocator@UVkVertexInputAttributeDescription@@@0@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025051819H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@W4VkDynamicState@@@std@@@std@@YAXPEAW4VkDynamicState@@QEAW41@AEAV?$allocator@W4VkDynamicState@@@0@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy_maybe_null@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAXPEAPEAUVkCommandBuffer_T@@QEAPEAU1@AEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UVkVertexInputAttributeDescription@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVkVertexInputAttributeDescription@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy_maybe_null@UVkVertexInputAttributeDescription@@@std@@YAPEAUVkVertexInputAttributeDescription@@PEAU1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$min@_K@std@@YAAEB_KAEB_K0@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	'p'
	DB	02H
	DB	0f1H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025051811H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0W4VkDynamicState@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@W4VkDynamicState@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?4U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z DB 06H
	DB	00H
	DB	00H
	DB	092H
	DB	02H
	DB	0f5H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z DB 028H
	DD	imagerel $stateUnwindMap$??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z
	DD	imagerel $ip2state$??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z DD 035052211H
	DD	011d3322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	016dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z DB 0aH
	DB	00H
	DB	00H
	DB	'u', 02H
	DB	02H
	DB	'^'
	DB	04H
	DB	0d8H
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z
	DD	imagerel $ip2state$??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z DD 025054c19H
	DD	011d2322H
	DD	07016003bH
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z
	DD	01c2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcName$0 DB 024H ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>
	DB	053H
	DB	033H
	DB	032H
	DB	00H
	ORG $+3
??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcName$1 DB 05fH ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcName$2 DB 05fH ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcFrameData DD 03H ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>
	DD	00H
	DQ	FLAT:??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcVarDesc
	ORG $+8
??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcVarDesc DD 0d8H ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>
	DD	08H
	DQ	FLAT:??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcName$2
	DD	0a8H
	DD	010H
	DQ	FLAT:??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcName$1
	DD	064H
	DD	01H
	DQ	FLAT:??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@UVertex2DTextured@cow@@@std@@$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UVertex2DTextured@cow@@@1@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_one_at_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z DD 025051801H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA?A_T$$QEAUVertex2DTextured@cow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAUVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	011eH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z DB 0aH
	DB	00H
	DB	00H
	DB	'M', 02H
	DB	02H
	DB	'V'
	DB	04H
	DB	'V'
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z
	DD	imagerel $ip2state$??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z DD 025054219H
	DD	01132318H
	DD	0700c0037H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z
	DD	01aaH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcName$0 DB 024H ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>
	DB	053H
	DB	033H
	DB	031H
	DB	00H
	ORG $+3
??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcName$1 DB 05fH ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcName$2 DB 05fH ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcFrameData DD 03H ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>
	DD	00H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcVarDesc
	ORG $+8
??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcVarDesc DD 0d8H ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>
	DD	08H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcName$2
	DD	0a8H
	DD	010H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcName$1
	DD	064H
	DD	01H
	DQ	FLAT:??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAUVkCommandBuffer_T@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy_maybe_null@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UVkVertexInputAttributeDescription@@@std@@V?$_Vector_val@U?$_Simple_types@UVkVertexInputAttributeDescription@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	070070031H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAPEAUVkVertexInputAttributeDescription@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::~vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >
	DB	053H
	DB	032H
	DB	037H
	DB	00H
	ORG $+11
??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::~vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >
	DD	01H
	DQ	FLAT:??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::~vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >
	DD	00H
	DQ	FLAT:??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UVkVertexInputAttributeDescription@@@std@@QEAAXQEAUVkVertexInputAttributeDescription@@_K@Z DD 035051d01H
	DD	0118331dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAVRenderObject@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVRenderObject@@@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z DD 035051d01H
	DD	0118331dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_one_at_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z DD 025051801H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA?A_T$$QEAPEAVRenderObject@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy_maybe_null@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	040H
	DB	098H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	0c6H
	DB	02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z DD 025054719H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z
	DD	0faH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z$rtcName$0 DB 05fH ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z$rtcVarDesc DD 024H ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z$rtcFrameData DD 01H ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@CAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	070070031H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXQEAPEAVRenderObject@@_K1@Z DD 025052201H
	DD	011d2322H
	DD	070160031H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBA_K_K@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<RenderObject *,std::allocator<RenderObject *> >::~vector<RenderObject *,std::allocator<RenderObject *> >
	DB	053H
	DB	035H
	DB	00H
	ORG $+12
??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<RenderObject *,std::allocator<RenderObject *> >::~vector<RenderObject *,std::allocator<RenderObject *> >
	DD	01H
	DQ	FLAT:??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<RenderObject *,std::allocator<RenderObject *> >::~vector<RenderObject *,std::allocator<RenderObject *> >
	DD	00H
	DQ	FLAT:??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SA_KAEBV?$allocator@PEAVRenderObject@@@2@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAVRenderObject@@@std@@QEAAPEAPEAVRenderObject@@_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z DD 035051d01H
	DD	0118331dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAVRenderObject@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0MN@?$vec@$01M$0A@@glm@@QEAA@MN@Z DD 025051f01H
	DD	011a231fH
	DD	07013001dH
	DD	05012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z DD 025051f01H
	DD	011a231fH
	DD	07013001dH
	DD	05012H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?bind@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	041H
	DW	0584H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'%', 09H
	DB	02H
	DB	'I', 0cH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z
	DD	imagerel $ip2state$??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z DD 035064819H
	DD	0119331eH
	DD	0701200a0H
	DD	050106011H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z
	DD	04faH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$0 DB 073H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DB	068H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	053H
	DB	074H
	DB	061H
	DB	067H
	DB	065H
	DB	073H
	DB	00H
	ORG $+3
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$1 DB 062H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DB	069H
	DB	06eH
	DB	064H
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	00H
	ORG $+7
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$2 DB 061H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DB	074H
	DB	074H
	DB	072H
	DB	044H
	DB	065H
	DB	073H
	DB	063H
	DB	00H
	ORG $+7
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$3 DB 076H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DB	065H
	DB	072H
	DB	074H
	DB	065H
	DB	078H
	DB	049H
	DB	06eH
	DB	070H
	DB	075H
	DB	074H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$4 DB 069H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DB	06eH
	DB	070H
	DB	075H
	DB	074H
	DB	041H
	DB	073H
	DB	073H
	DB	065H
	DB	06dH
	DB	062H
	DB	06cH
	DB	079H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+6
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$5 DB 076H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DB	069H
	DB	065H
	DB	077H
	DB	070H
	DB	06fH
	DB	072H
	DB	074H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+3
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$6 DB 072H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DB	061H
	DB	073H
	DB	074H
	DB	065H
	DB	072H
	DB	069H
	DB	07aH
	DB	061H
	DB	074H
	DB	069H
	DB	06fH
	DB	06eH
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+6
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$7 DB 063H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DB	072H
	DB	065H
	DB	061H
	DB	074H
	DB	065H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+5
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcVarDesc DD 0270H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DD	090H
	DQ	FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$7
	DD	0210H
	DD	040H
	DQ	FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$6
	DD	01b8H
	DD	030H
	DQ	FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$5
	DD	0178H
	DD	020H
	DQ	FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$4
	DD	0128H
	DD	030H
	DQ	FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$3
	DD	0e8H
	DD	020H
	DQ	FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$2
	DD	0b8H
	DD	0cH
	DQ	FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$1
	DD	040H
	DD	060H
	DQ	FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcName$0
	ORG $+384
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcFrameData DD 08H ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	DD	00H
	DQ	FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$array@UVkWriteDescriptorSet@@$01@std@@QEAAPEAUVkWriteDescriptorSet@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$array@UVkWriteDescriptorSet@@$01@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$Descriptor@$01$01@cow@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getSet@?$Descriptor@$01$01@cow@@QEAAPEAUVkDescriptorSet_T@@I@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getLayout@?$Descriptor@$01$01@cow@@QEAAPEAPEAUVkDescriptorSetLayout_T@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$Descriptor@$01$01@cow@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$Descriptor@$01$01@cow@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$Descriptor@$01$01@cow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$Descriptor@$01$01@cow@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$Descriptor@$01$01@cow@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0319H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z DD 025054c19H
	DD	011d2322H
	DD	070160051H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0278H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcName$0 DB 06cH ; cow::Descriptor<2,2>::Descriptor<2,2>
	DB	061H
	DB	079H
	DB	06fH
	DB	075H
	DB	074H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+5
??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcName$1 DB 070H ; cow::Descriptor<2,2>::Descriptor<2,2>
	DB	06fH
	DB	06fH
	DB	06cH
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+7
??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcName$2 DB 061H ; cow::Descriptor<2,2>::Descriptor<2,2>
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+6
??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcVarDesc DD 0e8H ; cow::Descriptor<2,2>::Descriptor<2,2>
	DD	028H
	DQ	FLAT:??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcName$2
	DD	068H
	DD	028H
	DQ	FLAT:??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcName$1
	DD	028H
	DD	020H
	DQ	FLAT:??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcName$0
	ORG $+144
??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcFrameData DD 03H ; cow::Descriptor<2,2>::Descriptor<2,2>
	DD	00H
	DQ	FLAT:??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$array@UVkDescriptorPoolSize@@$01@std@@QEBAPEBUVkDescriptorPoolSize@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$array@UVkDescriptorPoolSize@@$01@std@@QEAAAEAUVkDescriptorPoolSize@@_K@Z DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$array@UVkDescriptorPoolSize@@$01@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBAPEBUVkDescriptorSetLayoutBinding@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??A?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEAAAEAUVkDescriptorSetLayoutBinding@@_K@Z DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03bH
	DW	044dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'A', 04H
	DB	02H
	DB	'<'
	DB	04H
	DB	0d1H, 0aH
	DB	02H
	DB	08aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 025054219H
	DD	01132318H
	DD	0700c0047H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0223H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 088H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@CAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	070070031H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::~vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
	DB	053H
	DB	036H
	DB	00H
	ORG $+12
??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::~vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
	DD	01H
	DQ	FLAT:??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::~vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
	DD	00H
	DQ	FLAT:??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SA_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAXQEAPEAUVkCommandBuffer_T@@_K@Z DD 035051d01H
	DD	0118331dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	031H
	DW	011acH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$18 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$17 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$15 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$13 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$12 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$11 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$10 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$8 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$7 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$5 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$4 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$3 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$2 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$1 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main$dtor$0 DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$main DB '<'
	DB	00H
	DB	00H
	DB	0e0H
	DB	02H
	DB	0caH
	DB	04H
	DB	'P'
	DB	06H
	DB	'J'
	DB	08H
	DB	0c5H, 07H
	DB	0aH
	DB	'P'
	DB	0cH
	DB	'P'
	DB	0eH
	DB	'X'
	DB	010H
	DB	'M', 0fH
	DB	012H
	DB	'y', 02H
	DB	014H
	DB	011H, 06H
	DB	016H
	DB	'<'
	DB	018H
	DB	089H, 08H
	DB	01aH
	DB	0a8H
	DB	01cH
	DB	'<'
	DB	01eH
	DB	'e', 012H
	DB	01cH
	DB	01aH
	DB	01aH
	DB	01aH
	DB	018H
	DB	01aH
	DB	016H
	DB	01aH
	DB	014H
	DB	01aH
	DB	012H
	DB	01aH
	DB	010H
	DB	01aH
	DB	0eH
	DB	01aH
	DB	0aH
	DB	'>'
	DB	08H
	DB	01aH
	DB	06H
	DB	01aH
	DB	04H
	DB	01aH
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$main DB 01eH
	DB	0eH
	DD	imagerel main$dtor$0
	DB	02eH
	DD	imagerel main$dtor$1
	DB	02eH
	DD	imagerel main$dtor$2
	DB	02eH
	DD	imagerel main$dtor$3
	DB	02eH
	DD	imagerel main$dtor$4
	DB	02eH
	DD	imagerel main$dtor$5
	DB	056H
	DD	imagerel main$dtor$7
	DB	02eH
	DD	imagerel main$dtor$8
	DB	02eH
	DD	imagerel main$dtor$10
	DB	02eH
	DD	imagerel main$dtor$11
	DB	02eH
	DD	imagerel main$dtor$12
	DB	02eH
	DD	imagerel main$dtor$13
	DB	02eH
	DD	imagerel main$dtor$15
	DB	02eH
	DD	imagerel main$dtor$17
	DB	02eH
	DD	imagerel main$dtor$18
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$main DB 028H
	DD	imagerel $stateUnwindMap$main
	DD	imagerel $ip2state$main
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$main DD	045063819H
	DD	01114316H
	DD	070040296H
	DD	050026003H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$main
	DD	014a2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
main$rtcName$0 DB 063H
	DB	06fH
	DB	06dH
	DB	06dH
	DB	061H
	DB	06eH
	DB	064H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	073H
	DB	00H
	ORG $+1
main$rtcName$1 DB 077H
	DB	069H
	DB	06eH
	DB	064H
	DB	06fH
	DB	077H
	DB	00H
	ORG $+1
main$rtcName$2 DB 064H
	DB	065H
	DB	076H
	DB	069H
	DB	063H
	DB	065H
	DB	00H
	ORG $+1
main$rtcName$3 DB 063H
	DB	06fH
	DB	06dH
	DB	06dH
	DB	061H
	DB	06eH
	DB	064H
	DB	073H
	DB	00H
	ORG $+3
main$rtcName$13 DB 06cH
	DB	061H
	DB	079H
	DB	06fH
	DB	075H
	DB	074H
	DB	00H
	ORG $+1
main$rtcName$24 DB 075H
	DB	062H
	DB	06fH
	DB	00H
main$rtcName$4 DB 075H
	DB	062H
	DB	06fH
	DB	05fH
	DB	062H
	DB	069H
	DB	06eH
	DB	064H
	DB	069H
	DB	06eH
	DB	067H
	DB	073H
	DB	00H
	ORG $+3
main$rtcName$5 DB 070H
	DB	06fH
	DB	06fH
	DB	06cH
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	073H
	DB	00H
	ORG $+2
main$rtcName$23 DB 06dH
	DB	06fH
	DB	064H
	DB	065H
	DB	06cH
	DB	073H
	DB	00H
	ORG $+5
main$rtcName$6 DB 064H
	DB	065H
	DB	073H
	DB	063H
	DB	072H
	DB	069H
	DB	070H
	DB	074H
	DB	06fH
	DB	072H
	DB	00H
	ORG $+5
main$rtcName$7 DB 064H
	DB	065H
	DB	073H
	DB	063H
	DB	072H
	DB	069H
	DB	070H
	DB	074H
	DB	06fH
	DB	072H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	073H
	DB	00H
	ORG $+6
main$rtcName$8 DB 074H
	DB	065H
	DB	078H
	DB	074H
	DB	075H
	DB	072H
	DB	065H
	DB	00H
main$rtcName$9 DB 062H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+5
main$rtcName$10 DB 069H
	DB	06dH
	DB	061H
	DB	067H
	DB	065H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+6
main$rtcName$11 DB 064H
	DB	065H
	DB	073H
	DB	063H
	DB	072H
	DB	069H
	DB	070H
	DB	074H
	DB	06fH
	DB	072H
	DB	057H
	DB	072H
	DB	069H
	DB	074H
	DB	065H
	DB	00H
main$rtcName$12 DB 070H
	DB	075H
	DB	073H
	DB	068H
	DB	043H
	DB	06fH
	DB	06eH
	DB	073H
	DB	074H
	DB	061H
	DB	06eH
	DB	074H
	DB	073H
	DB	00H
	ORG $+2
main$rtcName$14 DB 063H
	DB	072H
	DB	065H
	DB	061H
	DB	074H
	DB	065H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+1
main$rtcName$15 DB 067H
	DB	070H
	DB	073H
	DB	069H
	DB	00H
	ORG $+7
main$rtcName$16 DB 067H
	DB	072H
	DB	061H
	DB	070H
	DB	068H
	DB	069H
	DB	063H
	DB	073H
	DB	050H
	DB	069H
	DB	070H
	DB	065H
	DB	06cH
	DB	069H
	DB	06eH
	DB	065H
	DB	00H
	ORG $+7
main$rtcName$17 DB 063H
	DB	06dH
	DB	064H
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+3
main$rtcName$18 DB 076H
	DB	061H
	DB	06cH
	DB	075H
	DB	065H
	DB	00H
	ORG $+2
main$rtcName$19 DB 076H
	DB	065H
	DB	072H
	DB	074H
	DB	069H
	DB	063H
	DB	065H
	DB	073H
	DB	04dH
	DB	061H
	DB	069H
	DB	06eH
	DB	00H
	ORG $+3
main$rtcName$20 DB 076H
	DB	065H
	DB	072H
	DB	074H
	DB	069H
	DB	063H
	DB	065H
	DB	073H
	DB	04fH
	DB	074H
	DB	068H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
main$rtcName$21 DB 06dH
	DB	06fH
	DB	064H
	DB	065H
	DB	06cH
	DB	04dH
	DB	061H
	DB	069H
	DB	06eH
	DB	00H
	ORG $+6
main$rtcName$22 DB 06dH
	DB	06fH
	DB	064H
	DB	065H
	DB	06cH
	DB	04fH
	DB	074H
	DB	068H
	DB	065H
	DB	072H
	DB	00H
	ORG $+5
main$rtcName$25 DB 063H
	DB	06dH
	DB	064H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
main$rtcName$26 DB 069H
	DB	06eH
	DB	064H
	DB	065H
	DB	078H
	DB	00H
	ORG $+6
main$rtcVarDesc DD 0924H
	DD	04H
	DQ	FLAT:main$rtcName$26
	DD	08e8H
	DD	08H
	DQ	FLAT:main$rtcName$25
	DD	0878H
	DD	010H
	DQ	FLAT:main$rtcName$24
	DD	0838H
	DD	020H
	DQ	FLAT:main$rtcName$23
	DD	07f8H
	DD	028H
	DQ	FLAT:main$rtcName$22
	DD	07b8H
	DD	028H
	DQ	FLAT:main$rtcName$21
	DD	0778H
	DD	020H
	DQ	FLAT:main$rtcName$20
	DD	0738H
	DD	020H
	DQ	FLAT:main$rtcName$19
	DD	06c8H
	DD	010H
	DQ	FLAT:main$rtcName$18
	DD	0648H
	DD	020H
	DQ	FLAT:main$rtcName$17
	DD	0608H
	DD	020H
	DQ	FLAT:main$rtcName$16
	DD	0490H
	DD	0160H
	DQ	FLAT:main$rtcName$15
	DD	0438H
	DD	030H
	DQ	FLAT:main$rtcName$14
	DD	0418H
	DD	08H
	DQ	FLAT:main$rtcName$13
	DD	03e8H
	DD	0cH
	DQ	FLAT:main$rtcName$12
	DD	0350H
	DD	080H
	DQ	FLAT:main$rtcName$11
	DD	0318H
	DD	018H
	DQ	FLAT:main$rtcName$10
	DD	02e8H
	DD	018H
	DQ	FLAT:main$rtcName$9
	DD	0288H
	DD	028H
	DQ	FLAT:main$rtcName$8
	DD	0220H
	DD	050H
	DQ	FLAT:main$rtcName$7
	DD	01d8H
	DD	028H
	DQ	FLAT:main$rtcName$6
	DD	01a8H
	DD	010H
	DQ	FLAT:main$rtcName$5
	DD	0158H
	DD	030H
	DQ	FLAT:main$rtcName$4
	DD	0118H
	DD	020H
	DQ	FLAT:main$rtcName$3
	DD	0c0H
	DD	040H
	DQ	FLAT:main$rtcName$2
	DD	088H
	DD	018H
	DQ	FLAT:main$rtcName$1
	DD	048H
	DD	020H
	DQ	FLAT:main$rtcName$0
	ORG $+1296
main$rtcFrameData DD 01bH
	DD	00H
	DQ	FLAT:main$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	040H
	DB	098H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	0c6H
	DB	02H
	DB	'6'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z
	DD	imagerel $ip2state$?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z DD 025054719H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z
	DD	0faH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z$rtcName$0 DB 05fH ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_locked
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z$rtcVarDesc DD 024H ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_locked
	DD	04H
	DQ	FLAT:?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z$rtcFrameData DD 01H ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_locked
	DD	00H
	DQ	FLAT:?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range_unlocked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z DD 025051d01H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@CAXXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	070070031H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXQEAUVertex2DTextured@cow@@_K1@Z DD 025052201H
	DD	011d2322H
	DD	070160031H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBA_K_K@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?data@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	DB	053H
	DB	037H
	DB	00H
	ORG $+12
??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	DD	01H
	DQ	FLAT:??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	DD	00H
	DQ	FLAT:??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c0033H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA?AV?$allocator@UVertex2DTextured@cow@@@2@AEBV32@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA_KAEBV?$allocator@UVertex2DTextured@cow@@@2@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAPEAUVertex2DTextured@cow@@_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z DD 035051d01H
	DD	0118331dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@UVertex2DTextured@cow@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@RenderObject@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1RenderObject@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	':'
	DB	02H
	DB	'2'
	DB	04H
	DB	0aaH
	DB	06H
	DB	'('
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
	DD	imagerel $ip2state$??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DD 025051d11H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pushConstant@?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAAXPEAUVkCommandBuffer_T@@PEAUVkPipelineLayout_T@@I@Z DD 035052201H
	DD	011d3322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?draw@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0a6H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z DD 035054219H
	DD	01133318H
	DD	0700c0027H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0128H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z$rtcName$0 DB 070H ; cow::Model2DComponent<cow::Vertex2DTextured>::bind
	DB	056H
	DB	065H
	DB	072H
	DB	074H
	DB	065H
	DB	078H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	073H
	DB	00H
	ORG $+1
?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z$rtcName$1 DB 06fH ; cow::Model2DComponent<cow::Vertex2DTextured>::bind
	DB	066H
	DB	066H
	DB	073H
	DB	065H
	DB	074H
	DB	073H
	DB	00H
	ORG $+8
?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z$rtcVarDesc DD 058H ; cow::Model2DComponent<cow::Vertex2DTextured>::bind
	DD	08H
	DQ	FLAT:?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z$rtcName$1
	DD	038H
	DD	08H
	DQ	FLAT:?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z$rtcName$0
	ORG $+96
?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z$rtcFrameData DD 02H ; cow::Model2DComponent<cow::Vertex2DTextured>::bind
	DD	00H
	DQ	FLAT:?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	020aH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DB 08H
	DB	00H
	DB	00H
	DB	08eH
	DB	02H
	DB	'b'
	DB	04H
	DB	0a5H, 05H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
	DD	imagerel $ip2state$??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z DD 035054719H
	DD	0118331dH
	DD	070110033H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
	DD	0182H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z$rtcName$0 DB 062H ; cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	053H
	DB	069H
	DB	07aH
	DB	065H
	DB	00H
	ORG $+5
??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z$rtcVarDesc DD 038H ; cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>
	DD	08H
	DQ	FLAT:??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z$rtcName$0
	ORG $+48
??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z$rtcFrameData DD 01H ; cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>
	DD	00H
	DQ	FLAT:??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 025061e01H
	DD	0119231eH
	DD	070120026H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z DD 025061e01H
	DD	0119231eH
	DD	070120026H
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@Texture@cow@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	018dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?createTextureSampler@Texture@cow@@QEAAXXZ DD 025053d19H
	DD	010e2313H
	DD	0700700cfH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0660H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?createTextureSampler@Texture@cow@@QEAAXXZ$rtcName$0 DB 073H ; cow::Texture::createTextureSampler
	DB	061H
	DB	06dH
	DB	070H
	DB	06cH
	DB	065H
	DB	072H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+4
?createTextureSampler@Texture@cow@@QEAAXXZ$rtcName$1 DB 070H ; cow::Texture::createTextureSampler
	DB	072H
	DB	06fH
	DB	070H
	DB	065H
	DB	072H
	DB	074H
	DB	069H
	DB	065H
	DB	073H
	DB	00H
	ORG $+5
?createTextureSampler@Texture@cow@@QEAAXXZ$rtcVarDesc DD 0a0H ; cow::Texture::createTextureSampler
	DD	0338H
	DQ	FLAT:?createTextureSampler@Texture@cow@@QEAAXXZ$rtcName$1
	DD	030H
	DD	050H
	DQ	FLAT:?createTextureSampler@Texture@cow@@QEAAXXZ$rtcName$0
	ORG $+96
?createTextureSampler@Texture@cow@@QEAAXXZ$rtcFrameData DD 02H ; cow::Texture::createTextureSampler
	DD	00H
	DQ	FLAT:?createTextureSampler@Texture@cow@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	0114H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?createTextureImageView@Texture@cow@@QEAAXXZ DD 025053d19H
	DD	010e2313H
	DD	070070033H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0180H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?createTextureImageView@Texture@cow@@QEAAXXZ$rtcName$0 DB 076H ; cow::Texture::createTextureImageView
	DB	069H
	DB	065H
	DB	077H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+7
?createTextureImageView@Texture@cow@@QEAAXXZ$rtcVarDesc DD 030H ; cow::Texture::createTextureImageView
	DD	050H
	DQ	FLAT:?createTextureImageView@Texture@cow@@QEAAXXZ$rtcName$0
	ORG $+48
?createTextureImageView@Texture@cow@@QEAAXXZ$rtcFrameData DD 01H ; cow::Texture::createTextureImageView
	DD	00H
	DQ	FLAT:?createTextureImageView@Texture@cow@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	046H
	DW	017fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z DD 035064d19H
	DD	011e3323H
	DD	07017003aH
	DD	050156016H
	DD	imagerel __GSHandlerCheck
	DD	01c0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z$rtcName$0 DB 072H ; cow::Texture::copyBufferToImage
	DB	065H
	DB	067H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+9
?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z$rtcVarDesc DD 058H ; cow::Texture::copyBufferToImage
	DD	038H
	DQ	FLAT:?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z$rtcName$0
	ORG $+48
?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z$rtcFrameData DD 01H ; cow::Texture::copyBufferToImage
	DD	00H
	DQ	FLAT:?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	01efH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z DD 055054c19H
	DD	011d5322H
	DD	070160045H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0210H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z$rtcName$0 DB 062H ; cow::Texture::transitionImageLayout
	DB	061H
	DB	072H
	DB	072H
	DB	069H
	DB	065H
	DB	072H
	DB	00H
	ORG $+8
?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z$rtcVarDesc DD 080H ; cow::Texture::transitionImageLayout
	DD	048H
	DQ	FLAT:?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z$rtcName$0
	ORG $+48
?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z$rtcFrameData DD 01H ; cow::Texture::transitionImageLayout
	DD	00H
	DQ	FLAT:?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Texture@cow@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1Texture@cow@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1Texture@cow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Texture@cow@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1Texture@cow@@QEAA@XZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
	DB	05H
voltbl	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	02a6H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z DB 06H
	DB	00H
	DB	00H
	DB	0dH, 04H
	DB	02H
	DB	0e9H, 05H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z
	DD	imagerel $ip2state$??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z DD 045054719H
	DD	0118431dH
	DD	070110047H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z
	DD	0222H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcName$0 DB 074H ; cow::Texture::Texture
	DB	065H
	DB	078H
	DB	057H
	DB	069H
	DB	064H
	DB	074H
	DB	068H
	DB	00H
	ORG $+7
??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcName$1 DB 074H ; cow::Texture::Texture
	DB	065H
	DB	078H
	DB	048H
	DB	065H
	DB	069H
	DB	067H
	DB	068H
	DB	074H
	DB	00H
	ORG $+6
??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcName$2 DB 074H ; cow::Texture::Texture
	DB	065H
	DB	078H
	DB	043H
	DB	068H
	DB	061H
	DB	06eH
	DB	06eH
	DB	065H
	DB	06cH
	DB	073H
	DB	00H
??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcName$3 DB 062H ; cow::Texture::Texture
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+5
??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcFrameData DD 04H ; cow::Texture::Texture
	DD	00H
	DQ	FLAT:??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcVarDesc
	ORG $+8
??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcVarDesc DD 0e8H ; cow::Texture::Texture
	DD	028H
	DQ	FLAT:??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcName$3
	DD	084H
	DD	04H
	DQ	FLAT:??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcName$2
	DD	064H
	DD	04H
	DQ	FLAT:??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcName$1
	DD	044H
	DD	04H
	DQ	FLAT:??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__is_16_main@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pnm_isdigit@@YAHD@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pnm_isspace@@YAHD@Z DD 025051201H
	DD	010d2312H
	DD	07006001fH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__hdr_convert@@YAXPEAMPEAEH@Z DD 025051d01H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z DD 025051d01H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z DD 025052201H
	DD	011d2322H
	DD	07016004dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__process_gif_raster@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0051H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__gif_info_raw@@YAHPEAUstbi__context@@PEAH11@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__gif_test_raw@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	044H
	DW	06efH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z DD 025054b19H
	DD	011c2321H
	DD	070150083H
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	0400H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcName$0 DB 070H ; stbi__pic_load_core
	DB	061H
	DB	063H
	DB	06bH
	DB	065H
	DB	074H
	DB	073H
	DB	00H
?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcName$1 DB 076H ; stbi__pic_load_core
	DB	061H
	DB	06cH
	DB	075H
	DB	065H
	DB	00H
	ORG $+2
?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcName$2 DB 076H ; stbi__pic_load_core
	DB	061H
	DB	06cH
	DB	075H
	DB	065H
	DB	00H
	ORG $+10
?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcVarDesc DD 0264H ; stbi__pic_load_core
	DD	04H
	DQ	FLAT:?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcName$2
	DD	01e4H
	DD	04H
	DQ	FLAT:?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcName$1
	DD	0a8H
	DD	01eH
	DQ	FLAT:?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcName$0
	ORG $+144
?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcFrameData DD 03H ; stbi__pic_load_core
	DD	00H
	DQ	FLAT:?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__copyval@@YAXHPEAEPEBE@Z DD 025051c01H
	DD	0117231cH
	DD	070100025H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z DD 025051c01H
	DD	0117231cH
	DD	070100025H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pic_test_core@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__psd_decode_rle@@YAHPEAUstbi__context@@PEAEH@Z DD 025051d01H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z DD 025051801H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__tga_get_comp@@YAHHHPEAH@Z DD 025051b01H
	DD	0116231bH
	DD	0700f001fH
	DD	0500eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__shiftsigned@@YAHIHH@Z DD 025051b01H
	DD	0116231bH
	DD	0700f001dH
	DD	0500eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__bitcount@@YAHI@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__high_bit@@YAHI@Z DD 025051201H
	DD	010d2312H
	DD	070060021H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__bmp_test_raw@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__do_png@@YAPEAXPEAUstbi__png@@PEAH11HPEAUstbi__result_info@@@Z DD 035052201H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03fH
	DW	0e77H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z DD 045054619H
	DD	0117431cH
	DD	070100143H
	DD	0500fH
	DD	imagerel __GSHandlerCheck
	DD	0a00H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$0 DB 070H ; stbi__parse_png_file
	DB	061H
	DB	06cH
	DB	065H
	DB	074H
	DB	074H
	DB	065H
	DB	00H
?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$1 DB 074H ; stbi__parse_png_file
	DB	063H
	DB	00H
	ORG $+1
?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$2 DB 074H ; stbi__parse_png_file
	DB	063H
	DB	031H
	DB	036H
	DB	00H
	ORG $+3
?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$3 DB 063H ; stbi__parse_png_file
	DB	00H
	ORG $+2
?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$4 DB 072H ; stbi__parse_png_file
	DB	061H
	DB	077H
	DB	05fH
	DB	06cH
	DB	065H
	DB	06eH
	DB	00H
?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcVarDesc DD 06c4H ; stbi__parse_png_file
	DD	04H
	DQ	FLAT:?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$4
	DD	0628H
	DD	08H
	DQ	FLAT:?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$3
	DD	04c4H
	DD	06H
	DQ	FLAT:?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$2
	DD	04a4H
	DD	03H
	DQ	FLAT:?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$1
	DD	050H
	DD	0400H
	DQ	FLAT:?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcName$0
	ORG $+240
?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcFrameData DD 05H ; stbi__parse_png_file
	DD	00H
	DQ	FLAT:?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__de_iphone@@YAXPEAUstbi__png@@@Z DD 025051301H
	DD	010e2313H
	DD	070070041H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__unpremultiply_on_load_thread@@YAXH@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__expand_png_palette@@YAHPEAUstbi__png@@PEAEHH@Z DD 025052201H
	DD	011d2322H
	DD	070160039H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z DD 025051d01H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z DD 025051d01H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z DD 045053b01H
	DD	011d4322H
	DD	070160085H
	DD	05015H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcName$0 DB 078H ; stbi__create_png_image
	DB	06fH
	DB	072H
	DB	069H
	DB	067H
	DB	00H
	ORG $+2
?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcName$1 DB 079H ; stbi__create_png_image
	DB	06fH
	DB	072H
	DB	069H
	DB	067H
	DB	00H
	ORG $+2
?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcName$2 DB 078H ; stbi__create_png_image
	DB	073H
	DB	070H
	DB	063H
	DB	00H
	ORG $+3
?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcName$3 DB 079H ; stbi__create_png_image
	DB	073H
	DB	070H
	DB	063H
	DB	00H
	ORG $+3
?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcVarDesc DD 0188H ; stbi__create_png_image
	DD	01cH
	DQ	FLAT:?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcName$3
	DD	0148H
	DD	01cH
	DQ	FLAT:?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcName$2
	DD	0108H
	DD	01cH
	DQ	FLAT:?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcName$1
	DD	0c8H
	DD	01cH
	DQ	FLAT:?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcName$0
	ORG $+192
?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcFrameData DD 04H ; stbi__create_png_image
	DD	00H
	DQ	FLAT:?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z DD 025052201H
	DD	011d2322H
	DD	07016008dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__paeth@@YAHHHH@Z DD 025051b01H
	DD	0116231bH
	DD	0700f002dH
	DD	0500eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__check_png_header@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z DD 025052c01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z$rtcName$0 DB 063H ; stbi__get_chunk_header
	DB	00H
	ORG $+14
?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z$rtcVarDesc DD 028H ; stbi__get_chunk_header
	DD	08H
	DQ	FLAT:?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z$rtcName$0
	ORG $+48
?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z$rtcFrameData DD 01H ; stbi__get_chunk_header
	DD	00H
	DQ	FLAT:?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__parse_zlib@@YAHPEAUstbi__zbuf@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__parse_zlib_header@@YAHPEAUstbi__zbuf@@@Z DD 025051301H
	DD	010e2313H
	DD	070070029H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z DD 025052c01H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z$rtcName$0 DB 068H ; stbi__parse_uncompressed_block
	DB	065H
	DB	061H
	DB	064H
	DB	065H
	DB	072H
	DB	00H
	ORG $+9
?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z$rtcVarDesc DD 024H ; stbi__parse_uncompressed_block
	DD	04H
	DQ	FLAT:?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z$rtcName$0
	ORG $+48
?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z$rtcFrameData DD 01H ; stbi__parse_uncompressed_block
	DD	00H
	DQ	FLAT:?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03cH
	DW	0399H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z DD 025054319H
	DD	01142319H
	DD	070070201H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0ff0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcName$0 DB 07aH ; stbi__compute_huffman_codes
	DB	05fH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	06cH
	DB	065H
	DB	06eH
	DB	067H
	DB	074H
	DB	068H
	DB	00H
	ORG $+3
?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcName$1 DB 06cH ; stbi__compute_huffman_codes
	DB	065H
	DB	06eH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	073H
	DB	00H
	ORG $+7
?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcName$2 DB 063H ; stbi__compute_huffman_codes
	DB	06fH
	DB	064H
	DB	065H
	DB	06cH
	DB	065H
	DB	06eH
	DB	067H
	DB	074H
	DB	068H
	DB	05fH
	DB	073H
	DB	069H
	DB	07aH
	DB	065H
	DB	073H
	DB	00H
	ORG $+15
?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcVarDesc DD 0a28H ; stbi__compute_huffman_codes
	DD	013H
	DQ	FLAT:?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcName$2
	DD	0840H
	DD	01c7H
	DQ	FLAT:?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcName$1
	DD	030H
	DD	07e4H
	DQ	FLAT:?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcName$0
	ORG $+144
?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcFrameData DD 03H ; stbi__compute_huffman_codes
	DD	00H
	DQ	FLAT:?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__parse_huffman_block@@YAHPEAUstbi__zbuf@@@Z DD 025051301H
	DD	010e2313H
	DD	070070035H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z DD 025051d01H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__zhuffman_decode_slowpath@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	03a7H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z DD 025054719H
	DD	0118231dH
	DD	070110053H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0288H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z$rtcName$0 DB 06eH ; stbi__zbuild_huffman
	DB	065H
	DB	078H
	DB	074H
	DB	05fH
	DB	063H
	DB	06fH
	DB	064H
	DB	065H
	DB	00H
	ORG $+2
?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z$rtcName$1 DB 073H ; stbi__zbuild_huffman
	DB	069H
	DB	07aH
	DB	065H
	DB	073H
	DB	00H
	ORG $+14
?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z$rtcVarDesc DD 0f0H ; stbi__zbuild_huffman
	DD	044H
	DQ	FLAT:?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z$rtcName$1
	DD	090H
	DD	040H
	DQ	FLAT:?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z$rtcName$0
	ORG $+96
?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z$rtcFrameData DD 02H ; stbi__zbuild_huffman
	DD	00H
	DQ	FLAT:?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__bit_reverse@@YAHHH@Z DD 025051601H
	DD	01112316H
	DD	0700a001dH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__bitreverse16@@YAHH@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_info_raw@@YAHPEAUstbi__jpeg@@PEAH11@Z DD 025052201H
	DD	011d2322H
	DD	07016001fH
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	01301H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z DD 035054c19H
	DD	011d3322H
	DD	0701600abH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0548H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z$rtcName$0 DB 063H ; load_jpeg_image
	DB	06fH
	DB	075H
	DB	074H
	DB	070H
	DB	075H
	DB	074H
	DB	00H
?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z$rtcName$1 DB 072H ; load_jpeg_image
	DB	065H
	DB	073H
	DB	05fH
	DB	063H
	DB	06fH
	DB	06dH
	DB	070H
	DB	00H
	ORG $+15
?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z$rtcVarDesc DD 0160H ; load_jpeg_image
	DD	0c0H
	DQ	FLAT:?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z$rtcName$1
	DD	0118H
	DD	020H
	DQ	FLAT:?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z$rtcName$0
	ORG $+96
?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z$rtcFrameData DD 02H ; load_jpeg_image
	DD	00H
	DQ	FLAT:?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__blinn_8x8@@YAEEE@Z DD 025051601H
	DD	01112316H
	DD	0700a0021H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__YCbCr_to_RGB_simd@@YAXPEAEPEBE11HH@Z DD 025052801H
	DD	01232328H
	DD	070160261H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__YCbCr_to_RGB_row@@YAXPEAEPEBE11HH@Z DD 025052201H
	DD	011d2322H
	DD	070160039H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__resample_row_generic@@YAPEAEPEAE00HH@Z DD 025052201H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z DD 025052201H
	DD	011d2322H
	DD	0701601a9H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__resample_row_hv_2@@YAPEAEPEAE00HH@Z DD 025052201H
	DD	011d2322H
	DD	070160029H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__resample_row_h_2@@YAPEAEPEAE00HH@Z DD 025052201H
	DD	011d2322H
	DD	070160029H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__resample_row_v_2@@YAPEAEPEAE00HH@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resample_row_1@@YAPEAEPEAE00HH@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__decode_jpeg_image@@YAHPEAUstbi__jpeg@@@Z DD 025051301H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b003dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z DD 025051c01H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__process_scan_header@@YAHPEAUstbi__jpeg@@@Z DD 025051301H
	DD	010e2313H
	DD	070070035H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03aH
	DW	0738H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z DD 025054119H
	DD	01122317H
	DD	0700b0081H
	DD	0500aH
	DD	imagerel __GSHandlerCheck
	DD	03f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z$rtcName$0 DB 073H ; stbi__process_marker
	DB	069H
	DB	07aH
	DB	065H
	DB	073H
	DB	00H
	ORG $+10
?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z$rtcVarDesc DD 0110H ; stbi__process_marker
	DD	040H
	DQ	FLAT:?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z$rtcName$0
	ORG $+48
?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z$rtcFrameData DD 01H ; stbi__process_marker
	DD	00H
	DQ	FLAT:?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z DD 025051301H
	DD	010e2313H
	DD	070070035H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_dequantize@@YAXPEAFPEAG@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	036H
	DW	0ca3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z DD 045053d19H
	DD	010e4313H
	DD	0700700f7H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	07a0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z$rtcName$0 DB 064H ; stbi__parse_entropy_coded_data
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+3
?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z$rtcName$1 DB 064H ; stbi__parse_entropy_coded_data
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+3
?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z$rtcVarDesc DD 0250H ; stbi__parse_entropy_coded_data
	DD	080H
	DQ	FLAT:?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z$rtcName$1
	DD	090H
	DD	080H
	DQ	FLAT:?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z$rtcName$0
	ORG $+96
?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z$rtcFrameData DD 02H ; stbi__parse_entropy_coded_data
	DD	00H
	DQ	FLAT:?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__idct_simd@@YAXPEAEHQEAF@Z DD 025052201H
	DD	011d2322H
	DD	070100b03H
	DD	0500fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03fH
	DW	0c5bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__idct_block@@YAXPEAEHQEAF@Z DD 025054619H
	DD	0117231cH
	DD	0701000edH
	DD	0500fH
	DD	imagerel __GSHandlerCheck
	DD	0758H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__idct_block@@YAXPEAEHQEAF@Z$rtcName$0 DB 076H	; stbi__idct_block
	DB	061H
	DB	06cH
	DB	00H
	ORG $+12
?stbi__idct_block@@YAXPEAEHQEAF@Z$rtcVarDesc DD 050H	; stbi__idct_block
	DD	0100H
	DQ	FLAT:?stbi__idct_block@@YAXPEAEHQEAF@Z$rtcName$0
	ORG $+48
?stbi__idct_block@@YAXPEAEHQEAF@Z$rtcFrameData DD 01H	; stbi__idct_block
	DD	00H
	DQ	FLAT:?stbi__idct_block@@YAXPEAEHQEAF@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__clamp@@YAEH@Z DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_decode_block_prog_ac@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@PEAF@Z DD 025052201H
	DD	011d2322H
	DD	070160051H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z DD 025052201H
	DD	011d2322H
	DD	070160029H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z DD 025052201H
	DD	011d2322H
	DD	070160041H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z DD 025051801H
	DD	01132318H
	DD	0700c002dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__build_fast_ac@@YAXPEAFPEAUstbi__huffman@@@Z DD 025051801H
	DD	01132318H
	DD	0700c003dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z DD 025051801H
	DD	01132318H
	DD	0700c0039H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__convert_format16@@YAPEAGPEAGHHII@Z DD 025052101H
	DD	011c2321H
	DD	070150031H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__compute_y_16@@YAGHHH@Z DD 025051b01H
	DD	0116231bH
	DD	0700f001dH
	DD	0500eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__convert_format@@YAPEAEPEAEHHII@Z DD 025052101H
	DD	011c2321H
	DD	070150031H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__compute_y@@YAEHHH@Z DD 025051b01H
	DD	0116231bH
	DD	0700f001dH
	DD	0500eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__get32le@@YAIPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__get16le@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__get32be@@YAIPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__get16be@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z DD 025051d01H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__skip@@YAXPEAUstbi__context@@H@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__at_eof@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__get8@@YAEPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	019cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z DD 035054c19H
	DD	011d3322H
	DD	07016002dH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z$rtcName$0 DB 072H ; stbi__loadf_main
	DB	069H
	DB	00H
	ORG $+13
?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z$rtcVarDesc DD 058H ; stbi__loadf_main
	DD	0cH
	DQ	FLAT:?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z$rtcName$0
	ORG $+48
?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z$rtcFrameData DD 01H ; stbi__loadf_main
	DD	00H
	DQ	FLAT:?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	08cH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z DD 025054219H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z$rtcName$0 DB 066H	; stbi__fopen
	DB	00H
	ORG $+14
?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z$rtcVarDesc DD 028H	; stbi__fopen
	DD	08H
	DQ	FLAT:?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z$rtcName$0
	ORG $+48
?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z$rtcFrameData DD 01H	; stbi__fopen
	DD	00H
	DQ	FLAT:?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__float_postprocess@@YAXPEAMPEAH11H@Z DD 025052201H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	01f7H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z DD 045054c19H
	DD	011d4322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0168H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z$rtcName$0 DB 072H ; stbi__load_and_postprocess_16bit
	DB	069H
	DB	00H
	ORG $+13
?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z$rtcVarDesc DD 048H ; stbi__load_and_postprocess_16bit
	DD	0cH
	DQ	FLAT:?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z$rtcName$0
	ORG $+48
?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z$rtcFrameData DD 01H ; stbi__load_and_postprocess_16bit
	DD	00H
	DQ	FLAT:?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	01f1H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z DD 045054c19H
	DD	011d4322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0168H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z$rtcName$0 DB 072H ; stbi__load_and_postprocess_8bit
	DB	069H
	DB	00H
	ORG $+13
?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z$rtcVarDesc DD 048H ; stbi__load_and_postprocess_8bit
	DD	0cH
	DQ	FLAT:?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z$rtcName$0
	ORG $+48
?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z$rtcFrameData DD 01H ; stbi__load_and_postprocess_8bit
	DD	00H
	DQ	FLAT:?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__vertical_flip_slices@@YAXPEAXHHHH@Z DD 025052101H
	DD	011c2321H
	DD	070150029H
	DD	05014H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	044H
	DW	01e6H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__vertical_flip@@YAXPEAXHHH@Z DD 025054b19H
	DD	011c2321H
	DD	07015019fH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	0ce0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__vertical_flip@@YAXPEAXHHH@Z$rtcName$0 DB 074H	; stbi__vertical_flip
	DB	065H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
?stbi__vertical_flip@@YAXPEAXHHH@Z$rtcVarDesc DD 070H	; stbi__vertical_flip
	DD	0800H
	DQ	FLAT:?stbi__vertical_flip@@YAXPEAXHHH@Z$rtcName$0
	ORG $+48
?stbi__vertical_flip@@YAXPEAXHHH@Z$rtcFrameData DD 01H	; stbi__vertical_flip
	DD	00H
	DQ	FLAT:?stbi__vertical_flip@@YAXPEAXHHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z DD 025052101H
	DD	011c2321H
	DD	070150029H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__convert_16_to_8@@YAPEAEPEAGHHH@Z DD 025052101H
	DD	011c2321H
	DD	070150029H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z DD 045052201H
	DD	011d4322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z DD 025052101H
	DD	011c2321H
	DD	070150035H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__ldr_to_hdr@@YAPEAMPEAEHHH@Z DD 035052101H
	DD	011c3321H
	DD	07015002fH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__malloc_mad4@@YAPEAXHHHHH@Z DD 035052001H
	DD	011b3320H
	DD	07014001fH
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__malloc_mad3@@YAPEAXHHHH@Z DD 025052001H
	DD	011b2320H
	DD	07014001dH
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__malloc_mad2@@YAPEAXHHH@Z DD 025051b01H
	DD	0116231bH
	DD	0700f001dH
	DD	0500eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__mad4sizes_valid@@YAHHHHHH@Z DD 025052001H
	DD	011b2320H
	DD	07014001fH
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__mad3sizes_valid@@YAHHHHH@Z DD 025052001H
	DD	011b2320H
	DD	07014001fH
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__mad2sizes_valid@@YAHHHH@Z DD 025051b01H
	DD	0116231bH
	DD	0700f001fH
	DD	0500eH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__mul2sizes_valid@@YAHHH@Z DD 025051601H
	DD	01112316H
	DD	0700a001fH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__addsizes_valid@@YAHHH@Z DD 025051601H
	DD	01112316H
	DD	0700a001fH
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__malloc@@YAPEAX_K@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__err@@YAHPEBD@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pnm_is16@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	01f3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z DD 025054c19H
	DD	011d2322H
	DD	070160031H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0178H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0 DB 064H ; stbi__pnm_info
	DB	075H
	DB	06dH
	DB	06dH
	DB	079H
	DB	00H
	ORG $+2
?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$1 DB 063H ; stbi__pnm_info
	DB	00H
	ORG $+6
?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc DD 064H ; stbi__pnm_info
	DD	01H
	DQ	FLAT:?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$1
	DD	044H
	DD	04H
	DQ	FLAT:?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0
	ORG $+96
?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData DD 02H ; stbi__pnm_info
	DD	00H
	DQ	FLAT:?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pnm_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD 035052201H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pnm_test@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__gif_info@@YAHPEAUstbi__context@@PEAH11@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	04bH
	DW	0449H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z DD 035055219H
	DD	01233328H
	DD	0701611ffH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	08fe0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z$rtcName$0 DB 067H ; stbi__load_gif_main
	DB	00H
	ORG $+14
?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z$rtcVarDesc DD 0c0H ; stbi__load_gif_main
	DD	08870H
	DQ	FLAT:?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z$rtcName$0
	ORG $+48
?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z$rtcFrameData DD 01H ; stbi__load_gif_main
	DD	00H
	DQ	FLAT:?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	04bH
	DW	014dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD 035055219H
	DD	01233328H
	DD	0701611ddH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	08ed8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0 DB 067H ; stbi__gif_load
	DB	00H
	ORG $+14
?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc DD 060H ; stbi__gif_load
	DD	08870H
	DQ	FLAT:?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0
	ORG $+48
?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData DD 01H ; stbi__gif_load
	DD	00H
	DQ	FLAT:?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__gif_test@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	02b0H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z DD 025054c19H
	DD	011d2322H
	DD	07016003bH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	01c0H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0 DB 064H ; stbi__pic_info
	DB	075H
	DB	06dH
	DB	06dH
	DB	079H
	DB	00H
	ORG $+2
?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$1 DB 070H ; stbi__pic_info
	DB	061H
	DB	063H
	DB	06bH
	DB	065H
	DB	074H
	DB	073H
	DB	00H
?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc DD 0a8H ; stbi__pic_info
	DD	01eH
	DQ	FLAT:?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$1
	DD	084H
	DD	04H
	DQ	FLAT:?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0
	ORG $+96
?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData DD 02H ; stbi__pic_info
	DD	00H
	DQ	FLAT:?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	02efH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD 035054c19H
	DD	011d3322H
	DD	070160033H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0188H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0 DB 069H ; stbi__pic_load
	DB	06eH
	DB	074H
	DB	065H
	DB	072H
	DB	06eH
	DB	061H
	DB	06cH
	DB	05fH
	DB	063H
	DB	06fH
	DB	06dH
	DB	070H
	DB	00H
	ORG $+2
?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc DD 0b4H ; stbi__pic_load
	DD	04H
	DQ	FLAT:?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0
	ORG $+48
?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData DD 01H ; stbi__pic_load
	DD	00H
	DQ	FLAT:?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__pic_test@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0262H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z DD 025054c19H
	DD	011d2322H
	DD	0701600ddH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	06d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0 DB 062H ; stbi__hdr_info
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$1 DB 074H ; stbi__hdr_info
	DB	06fH
	DB	06bH
	DB	065H
	DB	06eH
	DB	00H
	ORG $+2
?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$2 DB 064H ; stbi__hdr_info
	DB	075H
	DB	06dH
	DB	06dH
	DB	079H
	DB	00H
	ORG $+2
?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData DD 03H ; stbi__hdr_info
	DD	00H
	DQ	FLAT:?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc
	ORG $+8
?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc DD 0484H ; stbi__hdr_info
	DD	04H
	DQ	FLAT:?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$2
	DD	0448H
	DD	08H
	DQ	FLAT:?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$1
	DD	030H
	DD	0400H
	DQ	FLAT:?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0a09H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD 035054c19H
	DD	011d3322H
	DD	070160137H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	09a8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0 DB 062H ; stbi__hdr_load
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+1
?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$1 DB 074H ; stbi__hdr_load
	DB	06fH
	DB	06bH
	DB	065H
	DB	06eH
	DB	00H
	ORG $+2
?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$2 DB 072H ; stbi__hdr_load
	DB	067H
	DB	062H
	DB	065H
	DB	00H
	ORG $+3
?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$3 DB 072H ; stbi__hdr_load
	DB	067H
	DB	062H
	DB	065H
	DB	00H
	ORG $+3
?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc DD 0674H ; stbi__hdr_load
	DD	04H
	DQ	FLAT:?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$3
	DD	0654H
	DD	04H
	DQ	FLAT:?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$2
	DD	0458H
	DD	08H
	DQ	FLAT:?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$1
	DD	040H
	DD	0400H
	DQ	FLAT:?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0
	ORG $+192
?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData DD 04H ; stbi__hdr_load
	DD	00H
	DQ	FLAT:?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__hdr_test@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__psd_is16@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	01beH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z DD 025054c19H
	DD	011d2322H
	DD	070160029H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0 DB 064H ; stbi__psd_info
	DB	075H
	DB	06dH
	DB	06dH
	DB	079H
	DB	00H
	ORG $+10
?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc DD 044H ; stbi__psd_info
	DD	04H
	DQ	FLAT:?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0
	ORG $+48
?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData DD 01H ; stbi__psd_info
	DD	00H
	DQ	FLAT:?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z DD 035052201H
	DD	011d3322H
	DD	070160097H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__psd_test@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__tga_info@@YAHPEAUstbi__context@@PEAH11@Z DD 025052201H
	DD	011d2322H
	DD	07016003dH
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0b9eH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD 035054c19H
	DD	011d3322H
	DD	0701600d3H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0688H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0 DB 074H ; stbi__tga_load
	DB	067H
	DB	061H
	DB	05fH
	DB	072H
	DB	067H
	DB	062H
	DB	031H
	DB	036H
	DB	00H
	ORG $+6
?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$1 DB 072H ; stbi__tga_load
	DB	061H
	DB	077H
	DB	05fH
	DB	064H
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+7
?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc DD 0294H ; stbi__tga_load
	DD	04H
	DQ	FLAT:?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$1
	DD	01d4H
	DD	04H
	DQ	FLAT:?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0
	ORG $+96
?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData DD 02H ; stbi__tga_load
	DD	00H
	DQ	FLAT:?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__tga_test@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070029H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0134H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z DD 025054c19H
	DD	011d2322H
	DD	070160029H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0 DB 069H ; stbi__bmp_info
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+11
?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc DD 048H ; stbi__bmp_info
	DD	024H
	DQ	FLAT:?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0
	ORG $+48
?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData DD 01H ; stbi__bmp_info
	DD	00H
	DQ	FLAT:?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0126bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD 035054c19H
	DD	011d3322H
	DD	07016019bH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0cc8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0 DB 070H ; stbi__bmp_load
	DB	061H
	DB	06cH
	DB	00H
?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$1 DB 069H ; stbi__bmp_load
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+7
?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc DD 05f8H ; stbi__bmp_load
	DD	024H
	DQ	FLAT:?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$1
	DD	0100H
	DD	0400H
	DQ	FLAT:?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0
	ORG $+96
?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData DD 02H ; stbi__bmp_load
	DD	00H
	DQ	FLAT:?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__bmp_test@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__png_is16@@YAHPEAUstbi__context@@@Z DD 025053d19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__png_is16@@YAHPEAUstbi__context@@@Z$rtcName$0 DB 070H ; stbi__png_is16
	DB	00H
	ORG $+14
?stbi__png_is16@@YAHPEAUstbi__context@@@Z$rtcVarDesc DD 028H ; stbi__png_is16
	DD	028H
	DQ	FLAT:?stbi__png_is16@@YAHPEAUstbi__context@@@Z$rtcName$0
	ORG $+48
?stbi__png_is16@@YAHPEAUstbi__context@@@Z$rtcFrameData DD 01H ; stbi__png_is16
	DD	00H
	DQ	FLAT:?stbi__png_is16@@YAHPEAUstbi__context@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	097H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z DD 025054c19H
	DD	011d2322H
	DD	070160025H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0 DB 070H ; stbi__png_info
	DB	00H
	ORG $+14
?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc DD 028H ; stbi__png_info
	DD	028H
	DQ	FLAT:?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcName$0
	ORG $+48
?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData DD 01H ; stbi__png_info
	DD	00H
	DQ	FLAT:?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0adH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD 035054c19H
	DD	011d3322H
	DD	070160027H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0128H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0 DB 070H ; stbi__png_load
	DB	00H
	ORG $+14
?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc DD 038H ; stbi__png_load
	DD	028H
	DQ	FLAT:?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcName$0
	ORG $+48
?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData DD 01H ; stbi__png_load
	DD	00H
	DQ	FLAT:?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__png_test@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_info@@YAHPEAUstbi__context@@PEAH11@Z DD 025052201H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z DD 035052201H
	DD	011d3322H
	DD	070160027H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__jpeg_test@@YAHPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__rewind@@YAXPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__stdio_eof@@YAHPEAX@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__stdio_skip@@YAXPEAXH@Z DD 025051701H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__stdio_read@@YAHPEAXPEADH@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z DD 025061e01H
	DD	0119231eH
	DD	07012001eH
	DD	050106011H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z DD 025051d01H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__sse2_available@@YAHXZ DD 025050f01H
	DD	010a230fH
	DD	070030021H
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	02bH
	DB	07bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?stbi__cpuid3@@YAHXZ DD 025063219H
	DD	010b2310H
	DD	070040022H
	DD	050023003H
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?stbi__cpuid3@@YAHXZ$rtcName$0 DB 069H			; stbi__cpuid3
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+11
?stbi__cpuid3@@YAHXZ$rtcVarDesc DD 028H			; stbi__cpuid3
	DD	010H
	DQ	FLAT:?stbi__cpuid3@@YAHXZ$rtcName$0
	ORG $+48
?stbi__cpuid3@@YAHXZ$rtcFrameData DD 01H		; stbi__cpuid3
	DD	00H
	DQ	FLAT:?stbi__cpuid3@@YAHXZ$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	04aH
	DB	0d3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_zlib_decode_noheader_buffer DD 035055119H
	DD	01223327H
	DD	0701502cbH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	01648H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_zlib_decode_noheader_buffer$rtcName$0 DB 061H
	DB	00H
	ORG $+14
stbi_zlib_decode_noheader_buffer$rtcVarDesc DD 040H
	DD	01000H
	DQ	FLAT:stbi_zlib_decode_noheader_buffer$rtcName$0
	ORG $+48
stbi_zlib_decode_noheader_buffer$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_zlib_decode_noheader_buffer$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	045H
	DW	0110H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_zlib_decode_noheader_malloc DD 035054c19H
	DD	011d3322H
	DD	0701002cfH
	DD	0500fH
	DD	imagerel __GSHandlerCheck
	DD	01668H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_zlib_decode_noheader_malloc$rtcName$0 DB 061H
	DB	00H
	ORG $+14
stbi_zlib_decode_noheader_malloc$rtcVarDesc DD 040H
	DD	01000H
	DQ	FLAT:stbi_zlib_decode_noheader_malloc$rtcName$0
	ORG $+48
stbi_zlib_decode_noheader_malloc$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_zlib_decode_noheader_malloc$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	04aH
	DB	0d3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_zlib_decode_buffer DD 035055119H
	DD	01223327H
	DD	0701502cbH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	01648H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_zlib_decode_buffer$rtcName$0 DB 061H
	DB	00H
	ORG $+14
stbi_zlib_decode_buffer$rtcVarDesc DD 040H
	DD	01000H
	DQ	FLAT:stbi_zlib_decode_buffer$rtcName$0
	ORG $+48
stbi_zlib_decode_buffer$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_zlib_decode_buffer$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_zlib_decode_malloc DD 025051c01H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	04aH
	DW	011dH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_zlib_decode_malloc_guesssize_headerflag DD 035055119H
	DD	01223327H
	DD	0701502cfH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	01668H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_zlib_decode_malloc_guesssize_headerflag$rtcName$0 DB 061H
	DB	00H
	ORG $+14
stbi_zlib_decode_malloc_guesssize_headerflag$rtcVarDesc DD 040H
	DD	01000H
	DQ	FLAT:stbi_zlib_decode_malloc_guesssize_headerflag$rtcName$0
	ORG $+48
stbi_zlib_decode_malloc_guesssize_headerflag$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_zlib_decode_malloc_guesssize_headerflag$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	04aH
	DW	011bH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_zlib_decode_malloc_guesssize DD 035055119H
	DD	01223327H
	DD	0701502cfH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	01668H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_zlib_decode_malloc_guesssize$rtcName$0 DB 061H
	DB	00H
	ORG $+14
stbi_zlib_decode_malloc_guesssize$rtcVarDesc DD 040H
	DD	01000H
	DQ	FLAT:stbi_zlib_decode_malloc_guesssize$rtcName$0
	ORG $+48
stbi_zlib_decode_malloc_guesssize$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_zlib_decode_malloc_guesssize$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_set_flip_vertically_on_load_thread DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_convert_iphone_png_to_rgb_thread DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_set_flip_vertically_on_load DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_convert_iphone_png_to_rgb DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_set_unpremultiply_on_load DD 025051201H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0a5H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_is_16_bit_from_file DD 025053d19H
	DD	010e2313H
	DD	070070045H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0218H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_is_16_bit_from_file$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_is_16_bit_from_file$rtcVarDesc DD 050H
	DD	0e0H
	DQ	FLAT:stbi_is_16_bit_from_file$rtcName$0
	ORG $+48
stbi_is_16_bit_from_file$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_is_16_bit_from_file$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_is_16_bit DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0c9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_info_from_file DD 025054c19H
	DD	011d2322H
	DD	070160045H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0218H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_info_from_file$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_info_from_file$rtcVarDesc DD 050H
	DD	0e0H
	DQ	FLAT:stbi_info_from_file$rtcName$0
	ORG $+48
stbi_info_from_file$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_info_from_file$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_info DD 025052201H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	084H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_is_16_bit_from_callbacks DD 025054219H
	DD	01132318H
	DD	0700c003dH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	01d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_is_16_bit_from_callbacks$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_is_16_bit_from_callbacks$rtcVarDesc DD 030H
	DD	0e0H
	DQ	FLAT:stbi_is_16_bit_from_callbacks$rtcName$0
	ORG $+48
stbi_is_16_bit_from_callbacks$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_is_16_bit_from_callbacks$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03aH
	DB	083H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_is_16_bit_from_memory DD 025054119H
	DD	01122317H
	DD	0700b003dH
	DD	0500aH
	DD	imagerel __GSHandlerCheck
	DD	01d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_is_16_bit_from_memory$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_is_16_bit_from_memory$rtcVarDesc DD 030H
	DD	0e0H
	DQ	FLAT:stbi_is_16_bit_from_memory$rtcName$0
	ORG $+48
stbi_is_16_bit_from_memory$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_is_16_bit_from_memory$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0a3H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_info_from_callbacks DD 025054c19H
	DD	011d2322H
	DD	07016003dH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	01d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_info_from_callbacks$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_info_from_callbacks$rtcVarDesc DD 030H
	DD	0e0H
	DQ	FLAT:stbi_info_from_callbacks$rtcName$0
	ORG $+48
stbi_info_from_callbacks$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_info_from_callbacks$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	044H
	DB	0a2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_info_from_memory DD 025054b19H
	DD	011c2321H
	DD	07015003dH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	01d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_info_from_memory$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_info_from_memory$rtcVarDesc DD 030H
	DD	0e0H
	DQ	FLAT:stbi_info_from_memory$rtcName$0
	ORG $+48
stbi_info_from_memory$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_info_from_memory$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_image_free DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_failure_reason DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	09fH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_is_hdr_from_file DD 025053d19H
	DD	010e2313H
	DD	070070045H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0218H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_is_hdr_from_file$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_is_hdr_from_file$rtcVarDesc DD 070H
	DD	0e0H
	DQ	FLAT:stbi_is_hdr_from_file$rtcName$0
	ORG $+48
stbi_is_hdr_from_file$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_is_hdr_from_file$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_is_hdr DD 025051301H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03aH
	DB	083H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_is_hdr_from_memory DD 025054119H
	DD	01122317H
	DD	0700b003dH
	DD	0500aH
	DD	imagerel __GSHandlerCheck
	DD	01d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_is_hdr_from_memory$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_is_hdr_from_memory$rtcVarDesc DD 030H
	DD	0e0H
	DQ	FLAT:stbi_is_hdr_from_memory$rtcName$0
	ORG $+48
stbi_is_hdr_from_memory$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_is_hdr_from_memory$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	084H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_is_hdr_from_callbacks DD 025054219H
	DD	01132318H
	DD	0700c003dH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	01d8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_is_hdr_from_callbacks$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_is_hdr_from_callbacks$rtcVarDesc DD 030H
	DD	0e0H
	DQ	FLAT:stbi_is_hdr_from_callbacks$rtcName$0
	ORG $+48
stbi_is_hdr_from_callbacks$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_is_hdr_from_callbacks$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_ldr_to_hdr_scale DD 025051401H
	DD	010f2314H
	DD	07008001dH
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_ldr_to_hdr_gamma DD 025051401H
	DD	010f2314H
	DD	07008001dH
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_hdr_to_ldr_scale DD 025051401H
	DD	010f2314H
	DD	07008001dH
	DD	05007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_hdr_to_ldr_gamma DD 025051401H
	DD	010f2314H
	DD	07008001dH
	DD	05007H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0a6H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_loadf_from_file DD 035054c19H
	DD	011d3322H
	DD	07016003fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	01e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_loadf_from_file$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_loadf_from_file$rtcVarDesc DD 040H
	DD	0e0H
	DQ	FLAT:stbi_loadf_from_file$rtcName$0
	ORG $+48
stbi_loadf_from_file$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_loadf_from_file$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_loadf DD 035052201H
	DD	011d3322H
	DD	070160027H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0adH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_loadf_from_callbacks DD 035054c19H
	DD	011d3322H
	DD	07016003fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	01e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_loadf_from_callbacks$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_loadf_from_callbacks$rtcVarDesc DD 040H
	DD	0e0H
	DQ	FLAT:stbi_loadf_from_callbacks$rtcName$0
	ORG $+48
stbi_loadf_from_callbacks$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_loadf_from_callbacks$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	044H
	DB	0acH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_loadf_from_memory DD 035054b19H
	DD	011c3321H
	DD	07015003fH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	01e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_loadf_from_memory$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_loadf_from_memory$rtcVarDesc DD 040H
	DD	0e0H
	DQ	FLAT:stbi_loadf_from_memory$rtcName$0
	ORG $+48
stbi_loadf_from_memory$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_loadf_from_memory$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0e0H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_load_from_file_16 DD 035054c19H
	DD	011d3322H
	DD	070160043H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0208H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_load_from_file_16$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_load_from_file_16$rtcVarDesc DD 060H
	DD	0e0H
	DQ	FLAT:stbi_load_from_file_16$rtcName$0
	ORG $+48
stbi_load_from_file_16$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_load_from_file_16$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_load_16 DD 035052201H
	DD	011d3322H
	DD	070160027H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0adH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_load_16_from_callbacks DD 035054c19H
	DD	011d3322H
	DD	07016003fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	01e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_load_16_from_callbacks$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_load_16_from_callbacks$rtcVarDesc DD 040H
	DD	0e0H
	DQ	FLAT:stbi_load_16_from_callbacks$rtcName$0
	ORG $+48
stbi_load_16_from_callbacks$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_load_16_from_callbacks$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	044H
	DB	0acH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_load_16_from_memory DD 035054b19H
	DD	011c3321H
	DD	07015003fH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	01e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_load_16_from_memory$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_load_16_from_memory$rtcVarDesc DD 040H
	DD	0e0H
	DQ	FLAT:stbi_load_16_from_memory$rtcName$0
	ORG $+48
stbi_load_16_from_memory$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_load_16_from_memory$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	044H
	DW	0159H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_load_gif_from_memory DD 045054b19H
	DD	011c4321H
	DD	070150045H
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	0218H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_load_gif_from_memory$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_load_gif_from_memory$rtcVarDesc DD 070H
	DD	0e0H
	DQ	FLAT:stbi_load_gif_from_memory$rtcName$0
	ORG $+48
stbi_load_gif_from_memory$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_load_gif_from_memory$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0e0H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_load_from_file DD 035054c19H
	DD	011d3322H
	DD	070160043H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0208H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_load_from_file$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_load_from_file$rtcVarDesc DD 060H
	DD	0e0H
	DQ	FLAT:stbi_load_from_file$rtcName$0
	ORG $+48
stbi_load_from_file$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_load_from_file$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_load DD 035052201H
	DD	011d3322H
	DD	070160027H
	DD	05015H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	045H
	DB	0adH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_load_from_callbacks DD 035054c19H
	DD	011d3322H
	DD	07016003fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	01e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_load_from_callbacks$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_load_from_callbacks$rtcVarDesc DD 040H
	DD	0e0H
	DQ	FLAT:stbi_load_from_callbacks$rtcName$0
	ORG $+48
stbi_load_from_callbacks$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_load_from_callbacks$rtcVarDesc
CONST	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	044H
	DB	0acH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$stbi_load_from_memory DD 035054b19H
	DD	011c3321H
	DD	07015003fH
	DD	05014H
	DD	imagerel __GSHandlerCheck
	DD	01e8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
stbi_load_from_memory$rtcName$0 DB 073H
	DB	00H
	ORG $+14
stbi_load_from_memory$rtcVarDesc DD 040H
	DD	0e0H
	DQ	FLAT:stbi_load_from_memory$rtcName$0
	ORG $+48
stbi_load_from_memory$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:stbi_load_from_memory$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0EmptyObject@cow@@AEAA@I@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1EmptyObject@cow@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?create@EmptyObject@cow@@SA?AV12@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?reset@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAXPEAVBuffer@cow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAPEAVBuffer@cow@@XZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@VBuffer@cow@@@std@@QEBAXPEAVBuffer@cow@@@Z DD 025051801H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1GraphicsPipelineSimpleInfo@cow@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ DD 025051319H
	DD	010e2313H
	DD	070070031H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	0b2H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ DD 025053d19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::~vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >
	DB	053H
	DB	031H
	DB	032H
	DB	00H
	ORG $+11
??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::~vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >
	DD	01H
	DQ	FLAT:??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::~vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >
	DD	00H
	DQ	FLAT:??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@W4VkDynamicState@@@std@@QEAAXQEAW4VkDynamicState@@_K@Z DD 035051d01H
	DD	0118331dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@W4VkDynamicState@@@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GBuffer@cow@@QEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@Buffer@cow@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	03fH
	DW	02bfH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?createBuffer@Buffer@cow@@AEAAXII@Z DD 025054619H
	DD	0117231cH
	DD	0701000a7H
	DD	0500fH
	DD	imagerel __GSHandlerCheck
	DD	0520H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?createBuffer@Buffer@cow@@AEAAXII@Z$rtcName$0 DB 063H	; cow::Buffer::createBuffer
	DB	072H
	DB	065H
	DB	061H
	DB	074H
	DB	065H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+5
?createBuffer@Buffer@cow@@AEAAXII@Z$rtcName$1 DB 06dH	; cow::Buffer::createBuffer
	DB	065H
	DB	06dH
	DB	052H
	DB	065H
	DB	071H
	DB	075H
	DB	069H
	DB	072H
	DB	065H
	DB	06dH
	DB	065H
	DB	06eH
	DB	074H
	DB	073H
	DB	00H
?createBuffer@Buffer@cow@@AEAAXII@Z$rtcName$2 DB 061H	; cow::Buffer::createBuffer
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+6
?createBuffer@Buffer@cow@@AEAAXII@Z$rtcName$3 DB 06dH	; cow::Buffer::createBuffer
	DB	065H
	DB	06dH
	DB	050H
	DB	072H
	DB	06fH
	DB	070H
	DB	065H
	DB	072H
	DB	074H
	DB	069H
	DB	065H
	DB	073H
	DB	00H
	ORG $+2
?createBuffer@Buffer@cow@@AEAAXII@Z$rtcVarDesc DD 0f0H	; cow::Buffer::createBuffer
	DD	0208H
	DQ	FLAT:?createBuffer@Buffer@cow@@AEAAXII@Z$rtcName$3
	DD	0a8H
	DD	020H
	DQ	FLAT:?createBuffer@Buffer@cow@@AEAAXII@Z$rtcName$2
	DD	078H
	DD	018H
	DQ	FLAT:?createBuffer@Buffer@cow@@AEAAXII@Z$rtcName$1
	DD	028H
	DD	038H
	DQ	FLAT:?createBuffer@Buffer@cow@@AEAAXII@Z$rtcName$0
	ORG $+192
?createBuffer@Buffer@cow@@AEAAXII@Z$rtcFrameData DD 04H	; cow::Buffer::createBuffer
	DD	00H
	DQ	FLAT:?createBuffer@Buffer@cow@@AEAAXII@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	0210H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z DD 035054719H
	DD	0118331dH
	DD	070110049H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0238H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$0 DB 061H ; cow::Buffer::copy
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+6
?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$1 DB 063H ; cow::Buffer::copy
	DB	06fH
	DB	06dH
	DB	06dH
	DB	061H
	DB	06eH
	DB	064H
	DB	042H
	DB	075H
	DB	066H
	DB	066H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$2 DB 062H ; cow::Buffer::copy
	DB	065H
	DB	067H
	DB	069H
	DB	06eH
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+6
?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$3 DB 063H ; cow::Buffer::copy
	DB	06fH
	DB	070H
	DB	079H
	DB	052H
	DB	065H
	DB	067H
	DB	069H
	DB	06fH
	DB	06eH
	DB	00H
	ORG $+5
?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$4 DB 073H ; cow::Buffer::copy
	DB	075H
	DB	062H
	DB	06dH
	DB	069H
	DB	074H
	DB	049H
	DB	06eH
	DB	066H
	DB	06fH
	DB	00H
	ORG $+5
?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcVarDesc DD 0110H ; cow::Buffer::copy
	DD	048H
	DQ	FLAT:?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$4
	DD	0d8H
	DD	018H
	DQ	FLAT:?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$3
	DD	098H
	DD	020H
	DQ	FLAT:?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$2
	DD	078H
	DD	08H
	DQ	FLAT:?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcName$0
	ORG $+240
?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcFrameData DD 05H ; cow::Buffer::copy
	DD	00H
	DQ	FLAT:?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?unmap@Buffer@cow@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z DD 035051d01H
	DD	0118331dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1Buffer@cow@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1Buffer@cow@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1Buffer@cow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Buffer@cow@@QEAA@XZ DD 025051319H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1Buffer@cow@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z DD 025052201H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@GraphicsCommands@cow@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getCurrentImageIndex@GraphicsCommands@cow@@QEAAIXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getCurrentFrame@Swapchain@cow@@QEBA_KXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getRenderPass@Swapchain@cow@@QEBAPEAUVkRenderPass_T@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@Device@cow@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?bindImageMemory@Device@cow@@QEBA?AW4VkResult@@PEAUVkImage_T@@PEAUVkDeviceMemory_T@@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getGraphicsQueue@Device@cow@@QEAAPEAUVkQueue_T@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getPhysicalDevice@Device@cow@@QEAAPEAUVkPhysicalDevice_T@@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@Window@cow@@QEAAX_K@Z DD 05051601H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?shouldClose@Window@cow@@QEBA_NXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z DD 035051d01H
	DD	0118331dH
	DD	07011002bH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Maklocwcs@std@@YAPEA_WPEB_W@Z DD 035051301H
	DD	010e3313H
	DD	070070027H
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DW	040H
	DW	0231H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z DD 035054719H
	DD	0118331dH
	DD	070110047H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0228H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$0 DB 05fH ; std::_Maklocstr<wchar_t>
	DB	057H
	DB	063H
	DB	00H
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$1 DB 05fH ; std::_Maklocstr<wchar_t>
	DB	04dH
	DB	062H
	DB	073H
	DB	074H
	DB	031H
	DB	00H
	ORG $+1
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$2 DB 05fH ; std::_Maklocstr<wchar_t>
	DB	04dH
	DB	062H
	DB	073H
	DB	074H
	DB	032H
	DB	00H
	ORG $+13
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcVarDesc DD 0158H ; std::_Maklocstr<wchar_t>
	DD	08H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$2
	DD	0f8H
	DD	08H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$1
	DD	0d4H
	DD	02H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcName$0
	ORG $+144
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcFrameData DD 03H ; std::_Maklocstr<wchar_t>
	DD	00H
	DQ	FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1runtime_error@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@PEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Ginvalid_argument@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0invalid_argument@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1invalid_argument@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0invalid_argument@std@@QEAA@PEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Glogic_error@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0logic_error@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1logic_error@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0logic_error@std@@QEAA@PEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 025051801H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025051801H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Basic_container_proxy_ptr12@std@@IEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	036H
	DB	07eH
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ DD 025053d19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all_locked_v3
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	04H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all_locked_v3
	DD	00H
	DQ	FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ DD 025051301H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035051801H
	DD	01133318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025050f01H
	DD	010a230fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025051701H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025051301H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	03bH
	DB	0b9H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 025054219H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0108H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0exception@std@@QEAA@QEBD@Z$rtcName$0 DB 05fH		; std::exception::exception
	DB	049H
	DB	06eH
	DB	069H
	DB	074H
	DB	044H
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+6
??0exception@std@@QEAA@QEBD@Z$rtcVarDesc DD 028H	; std::exception::exception
	DD	010H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+48
??0exception@std@@QEAA@QEBD@Z$rtcFrameData DD 01H	; std::exception::exception
	DD	00H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?pow@@YAMMM@Z DD 035051a01H
	DD	0115331aH
	DD	0700e001fH
	DD	0500dH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ldexp@@YAMMH@Z DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$wmemcpy DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?is_constant_evaluated@std@@YA_NXZ DD 025050f01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ldexpf DD 035051801H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025051d01H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct_at@UVertex2DTextured@cow@@AEAU12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@AEAU12@@Z
_TEXT	SEGMENT
$T1 = 200
_Location$ = 256
<_Args_0>$ = 264
??$construct_at@UVertex2DTextured@cow@@AEAU12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@AEAU12@@Z PROC ; std::construct_at<cow::Vertex2DTextured,cow::Vertex2DTextured &,void>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 135
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 136
	mov	rcx, QWORD PTR _Location$[rbp]
	call	??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z ; std::_Voidify_iter<cow::Vertex2DTextured *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured &>
	mov	rdi, QWORD PTR $T1[rbp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR $T1[rbp]
; Line 137
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$construct_at@UVertex2DTextured@cow@@AEAU12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@AEAU12@@Z ENDP ; std::construct_at<cow::Vertex2DTextured,cow::Vertex2DTextured &,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Voidify_iter@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAXPEAPEAUVkCommandBuffer_T@@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Voidify_iter@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAXPEAPEAUVkCommandBuffer_T@@@Z PROC ; std::_Voidify_iter<VkCommandBuffer_T * *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 123
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 125
	mov	rax, QWORD PTR _It$[rbp]
; Line 129
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Voidify_iter@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAXPEAPEAUVkCommandBuffer_T@@@Z ENDP ; std::_Voidify_iter<VkCommandBuffer_T * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct_at@PEAUVkCommandBuffer_T@@$$VX@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv74 = 248
tv72 = 256
_Location$ = 304
??$construct_at@PEAUVkCommandBuffer_T@@$$VX@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z PROC ; std::construct_at<VkCommandBuffer_T *,void>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 135
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 136
	mov	QWORD PTR $T1[rbp], 8
	mov	rcx, QWORD PTR _Location$[rbp]
	call	??$_Voidify_iter@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAXPEAPEAUVkCommandBuffer_T@@@Z ; std::_Voidify_iter<VkCommandBuffer_T * *>
	mov	QWORD PTR tv74[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR tv72[rbp], rax
	mov	rdx, QWORD PTR tv74[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T2[rbp], rax
	mov	rdi, QWORD PTR $T2[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR $T1[rbp]
	rep stosb
	mov	rax, QWORD PTR $T2[rbp]
; Line 137
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
??$construct_at@PEAUVkCommandBuffer_T@@$$VX@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z ENDP ; std::construct_at<VkCommandBuffer_T *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$to_address@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@@Z
_TEXT	SEGMENT
_Val$ = 224
??$to_address@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@@Z PROC ; std::to_address<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 207
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 210
	mov	rax, QWORD PTR _Val$[rbp]
; Line 211
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$to_address@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@@Z ENDP ; std::to_address<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z
_TEXT	SEGMENT
_Val$ = 224
??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z PROC ; std::_To_address<RenderObject * *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 3936
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 3938
	mov	rax, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$to_address@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@@Z ; std::to_address<RenderObject *>
; Line 3939
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z ENDP ; std::_To_address<RenderObject * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AEAPEAVBuffer@cow@@@std@@YAAEAPEAVBuffer@cow@@AEAPEAV12@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAPEAVBuffer@cow@@@std@@YAAEAPEAVBuffer@cow@@AEAPEAV12@@Z PROC ; std::forward<cow::Buffer * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEAPEAVBuffer@cow@@@std@@YAAEAPEAVBuffer@cow@@AEAPEAV12@@Z ENDP ; std::forward<cow::Buffer * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UVertex2DTextured@cow@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@AEAU34@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@UVertex2DTextured@cow@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@AEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::construct<cow::Vertex2DTextured,cow::Vertex2DTextured &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 673
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 675
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@construct
; Line 676
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured &>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$construct_at@UVertex2DTextured@cow@@AEAU12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@AEAU12@@Z ; std::construct_at<cow::Vertex2DTextured,cow::Vertex2DTextured &,void>
; Line 677
	jmp	SHORT $LN3@construct
$LN2@construct:
; Line 680
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z ; std::_Voidify_iter<cow::Vertex2DTextured *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured &>
	mov	rdi, QWORD PTR $T1[rbp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN3@construct:
; Line 682
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$construct@UVertex2DTextured@cow@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@AEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::construct<cow::Vertex2DTextured,cow::Vertex2DTextured &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z PROC ; std::forward<cow::Vertex2DTextured &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z ENDP ; std::forward<cow::Vertex2DTextured &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$to_address@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@@Z
_TEXT	SEGMENT
_Val$ = 224
??$to_address@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@@Z PROC ; std::to_address<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 207
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 210
	mov	rax, QWORD PTR _Val$[rbp]
; Line 211
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$to_address@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@@Z ENDP ; std::to_address<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z
_TEXT	SEGMENT
_Val$ = 224
??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z PROC ; std::_To_address<cow::Vertex2DTextured *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 3936
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 3938
	mov	rax, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$to_address@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@@Z ; std::to_address<cow::Vertex2DTextured>
; Line 3939
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z ENDP ; std::_To_address<cow::Vertex2DTextured *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_back@UVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z
_TEXT	SEGMENT
tv78 = 192
tv76 = 200
tv74 = 208
this$ = 256
<_Vals_0>$ = 264
??$_Emplace_back@UVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Emplace_back<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1655
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1656
	mov	rcx, QWORD PTR <_Vals_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	QWORD PTR tv78[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ; std::_Unfancy<cow::Vertex2DTextured>
	mov	QWORD PTR tv76[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv74[rbp], rax
	mov	r8, QWORD PTR tv78[rbp]
	mov	rdx, QWORD PTR tv76[rbp]
	mov	rcx, QWORD PTR tv74[rbp]
	call	??$construct@UVertex2DTextured@cow@@U12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::construct<cow::Vertex2DTextured,cow::Vertex2DTextured>
; Line 1657
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax
; Line 1658
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back@UVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Emplace_back<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z PROC ; std::_Voidify_iter<cow::Vertex2DTextured *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 123
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 125
	mov	rax, QWORD PTR _It$[rbp]
; Line 129
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z ENDP ; std::_Voidify_iter<cow::Vertex2DTextured *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct_at@UVertex2DTextured@cow@@U12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@$$QEAU12@@Z
_TEXT	SEGMENT
$T1 = 200
_Location$ = 256
<_Args_0>$ = 264
??$construct_at@UVertex2DTextured@cow@@U12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@$$QEAU12@@Z PROC ; std::construct_at<cow::Vertex2DTextured,cow::Vertex2DTextured,void>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 135
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 136
	mov	rcx, QWORD PTR _Location$[rbp]
	call	??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z ; std::_Voidify_iter<cow::Vertex2DTextured *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	rdi, QWORD PTR $T1[rbp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
	mov	rax, QWORD PTR $T1[rbp]
; Line 137
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$construct_at@UVertex2DTextured@cow@@U12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@$$QEAU12@@Z ENDP ; std::construct_at<cow::Vertex2DTextured,cow::Vertex2DTextured,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@AEAU12@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@AEAU12@@Z PROC ; std::addressof<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
; Line 252
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D567F1CA_xstddef
	call	__CheckForDebuggerJustMyCode
; Line 253
	mov	rax, QWORD PTR _Val$[rbp]
; Line 254
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@AEAU12@@Z ENDP ; std::addressof<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@PEAUVkCommandBuffer_T@@$$V@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SAXAEAV?$allocator@PEAUVkCommandBuffer_T@@@1@QEAPEAUVkCommandBuffer_T@@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv78 = 248
tv76 = 256
__formal$ = 304
_Ptr$ = 312
??$construct@PEAUVkCommandBuffer_T@@$$V@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SAXAEAV?$allocator@PEAUVkCommandBuffer_T@@@1@QEAPEAUVkCommandBuffer_T@@@Z PROC ; std::_Default_allocator_traits<std::allocator<VkCommandBuffer_T *> >::construct<VkCommandBuffer_T *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 673
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 675
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@construct
; Line 676
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$construct_at@PEAUVkCommandBuffer_T@@$$VX@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z ; std::construct_at<VkCommandBuffer_T *,void>
; Line 677
	jmp	SHORT $LN3@construct
$LN2@construct:
; Line 680
	mov	QWORD PTR $T1[rbp], 8
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Voidify_iter@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAXPEAPEAUVkCommandBuffer_T@@@Z ; std::_Voidify_iter<VkCommandBuffer_T * *>
	mov	QWORD PTR tv78[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR tv76[rbp], rax
	mov	rdx, QWORD PTR tv78[rbp]
	mov	rcx, QWORD PTR tv76[rbp]
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T2[rbp], rax
	mov	rdi, QWORD PTR $T2[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR $T1[rbp]
	rep stosb
$LN3@construct:
; Line 682
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
??$construct@PEAUVkCommandBuffer_T@@$$V@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SAXAEAV?$allocator@PEAUVkCommandBuffer_T@@@1@QEAPEAUVkCommandBuffer_T@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<VkCommandBuffer_T *> >::construct<VkCommandBuffer_T *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$to_address@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z
_TEXT	SEGMENT
_Val$ = 224
??$to_address@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z PROC ; std::to_address<VkCommandBuffer_T *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 207
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 210
	mov	rax, QWORD PTR _Val$[rbp]
; Line 211
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$to_address@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z ENDP ; std::to_address<VkCommandBuffer_T *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_To_address@PEAPEAUVkCommandBuffer_T@@@std@@YA?A_PAEBQEAPEAUVkCommandBuffer_T@@@Z
_TEXT	SEGMENT
_Val$ = 224
??$_To_address@PEAPEAUVkCommandBuffer_T@@@std@@YA?A_PAEBQEAPEAUVkCommandBuffer_T@@@Z PROC ; std::_To_address<VkCommandBuffer_T * *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 3936
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 3938
	mov	rax, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$to_address@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@@Z ; std::to_address<VkCommandBuffer_T *>
; Line 3939
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_To_address@PEAPEAUVkCommandBuffer_T@@@std@@YA?A_PAEBQEAPEAUVkCommandBuffer_T@@@Z ENDP ; std::_To_address<VkCommandBuffer_T * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_back@PEAVRenderObject@@@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z
_TEXT	SEGMENT
tv78 = 192
tv76 = 200
tv74 = 208
this$ = 256
<_Vals_0>$ = 264
??$_Emplace_back@PEAVRenderObject@@@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Emplace_back<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1655
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1656
	mov	rcx, QWORD PTR <_Vals_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	QWORD PTR tv78[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z ; std::_Unfancy<RenderObject *>
	mov	QWORD PTR tv76[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv74[rbp], rax
	mov	r8, QWORD PTR tv78[rbp]
	mov	rdx, QWORD PTR tv76[rbp]
	mov	rcx, QWORD PTR tv74[rbp]
	call	??$construct@PEAVRenderObject@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SAXAEAV?$allocator@PEAVRenderObject@@@1@QEAPEAVRenderObject@@$$QEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<RenderObject *> >::construct<RenderObject *,RenderObject *>
; Line 1657
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 8
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax
; Line 1658
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back@PEAVRenderObject@@@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Emplace_back<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ
_TEXT	SEGMENT
this$ = 224
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1660
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1661
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
; Line 1662
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
; Line 1663
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::~_Uninitialized_backout_al<std::allocator<RenderObject *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1650
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1651
	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ; std::_Destroy_range<std::allocator<RenderObject *> >
; Line 1652
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::~_Uninitialized_backout_al<std::allocator<RenderObject *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@PEAPEAVRenderObject@@AEAV?$allocator@PEAVRenderObject@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Dest$ = 232
_Al_$ = 240
??0?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@PEAPEAVRenderObject@@AEAV?$allocator@PEAVRenderObject@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Uninitialized_backout_al<std::allocator<RenderObject *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1645
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Al_$[rbp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@PEAPEAVRenderObject@@AEAV?$allocator@PEAVRenderObject@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Uninitialized_backout_al<std::allocator<RenderObject *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Copy_memmove@PEAPEAVRenderObject@@PEAPEAV1@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 8
_LastPtr$ = 40
_DestPtr$ = 72
_First_ch$ = 104
_Last_ch$ = 136
_Dest_ch$ = 168
_Count$ = 200
_First$ = 448
_Last$ = 456
_Dest$ = 464
??$_Copy_memmove@PEAPEAVRenderObject@@PEAPEAV1@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@00@Z PROC ; std::_Copy_memmove<RenderObject * *,RenderObject * *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 4035
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 456				; 000001c8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 4036
	lea	rcx, QWORD PTR _First$[rbp]
	call	??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z ; std::_To_address<RenderObject * *>
	mov	QWORD PTR _FirstPtr$[rbp], rax
; Line 4037
	lea	rcx, QWORD PTR _Last$[rbp]
	call	??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z ; std::_To_address<RenderObject * *>
	mov	QWORD PTR _LastPtr$[rbp], rax
; Line 4038
	lea	rcx, QWORD PTR _Dest$[rbp]
	call	??$_To_address@PEAPEAVRenderObject@@@std@@YA?A_PAEBQEAPEAVRenderObject@@@Z ; std::_To_address<RenderObject * *>
	mov	QWORD PTR _DestPtr$[rbp], rax
; Line 4039
	mov	rax, QWORD PTR _FirstPtr$[rbp]
	mov	QWORD PTR _First_ch$[rbp], rax
; Line 4040
	mov	rax, QWORD PTR _LastPtr$[rbp]
	mov	QWORD PTR _Last_ch$[rbp], rax
; Line 4041
	mov	rax, QWORD PTR _DestPtr$[rbp]
	mov	QWORD PTR _Dest_ch$[rbp], rax
; Line 4042
	mov	rax, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Last_ch$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rbp], rax
; Line 4043
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	call	memmove
; Line 4045
	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	add	rcx, rax
	mov	rax, rcx
; Line 4049
	lea	rsp, QWORD PTR [rbp+424]
	pop	rdi
	pop	rbp
	ret	0
??$_Copy_memmove@PEAPEAVRenderObject@@PEAPEAV1@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@00@Z ENDP ; std::_Copy_memmove<RenderObject * *,RenderObject * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_unwrapped@AEBQEAPEAVRenderObject@@@std@@YA?A_TAEBQEAPEAVRenderObject@@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Get_unwrapped@AEBQEAPEAVRenderObject@@@std@@YA?A_TAEBQEAPEAVRenderObject@@@Z PROC ; std::_Get_unwrapped<RenderObject * * const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 1270
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 1273
	mov	rax, QWORD PTR _It$[rbp]
	mov	rax, QWORD PTR [rax]
; Line 1279
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_unwrapped@AEBQEAPEAVRenderObject@@@std@@YA?A_TAEBQEAPEAVRenderObject@@@Z ENDP ; std::_Get_unwrapped<RenderObject * * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z PROC ; std::_Voidify_iter<RenderObject * *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 123
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 125
	mov	rax, QWORD PTR _It$[rbp]
; Line 129
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z ENDP ; std::_Voidify_iter<RenderObject * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct_at@PEAVRenderObject@@PEAV1@X@std@@YAPEAPEAVRenderObject@@QEAPEAV1@$$QEAPEAV1@@Z
_TEXT	SEGMENT
$T1 = 200
_Location$ = 256
<_Args_0>$ = 264
??$construct_at@PEAVRenderObject@@PEAV1@X@std@@YAPEAPEAVRenderObject@@QEAPEAV1@$$QEAPEAV1@@Z PROC ; std::construct_at<RenderObject *,RenderObject *,void>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 135
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 136
	mov	rcx, QWORD PTR _Location$[rbp]
	call	??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z ; std::_Voidify_iter<RenderObject * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	rcx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR $T1[rbp]
; Line 137
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$construct_at@PEAVRenderObject@@PEAV1@X@std@@YAPEAPEAVRenderObject@@QEAPEAV1@$$QEAPEAV1@@Z ENDP ; std::construct_at<RenderObject *,RenderObject *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@AEAPEAV1@@Z PROC ; std::addressof<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
; Line 252
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D567F1CA_xstddef
	call	__CheckForDebuggerJustMyCode
; Line 253
	mov	rax, QWORD PTR _Val$[rbp]
; Line 254
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@AEAPEAV1@@Z ENDP ; std::addressof<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0AEAPEAVBuffer@cow@@@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVBuffer@cow@@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
<_Val2_0>$ = 240
??$?0AEAPEAVBuffer@cow@@@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVBuffer@cow@@@Z PROC ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1><cow::Buffer * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1370
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR <_Val2_0>$[rbp]
	call	??$forward@AEAPEAVBuffer@cow@@@std@@YAAEAPEAVBuffer@cow@@AEAPEAV12@@Z ; std::forward<cow::Buffer * &>
	mov	rcx, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0AEAPEAVBuffer@cow@@@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVBuffer@cow@@@Z ENDP ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1><cow::Buffer * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_back@AEAUVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAXAEAUVertex2DTextured@cow@@@Z
_TEXT	SEGMENT
tv78 = 192
tv76 = 200
tv74 = 208
this$ = 256
<_Vals_0>$ = 264
??$_Emplace_back@AEAUVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAXAEAUVertex2DTextured@cow@@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Emplace_back<cow::Vertex2DTextured &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1655
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1656
	mov	rcx, QWORD PTR <_Vals_0>$[rbp]
	call	??$forward@AEAUVertex2DTextured@cow@@@std@@YAAEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured &>
	mov	QWORD PTR tv78[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ; std::_Unfancy<cow::Vertex2DTextured>
	mov	QWORD PTR tv76[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv74[rbp], rax
	mov	r8, QWORD PTR tv78[rbp]
	mov	rdx, QWORD PTR tv76[rbp]
	mov	rcx, QWORD PTR tv74[rbp]
	call	??$construct@UVertex2DTextured@cow@@AEAU12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@AEAU34@@Z ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::construct<cow::Vertex2DTextured,cow::Vertex2DTextured &>
; Line 1657
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 16
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax
; Line 1658
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back@AEAUVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAXAEAUVertex2DTextured@cow@@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Emplace_back<cow::Vertex2DTextured &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ
_TEXT	SEGMENT
this$ = 224
?_Release@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1660
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1661
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
; Line 1662
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
; Line 1663
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::~_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1650
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1651
	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Destroy_range<std::allocator<cow::Vertex2DTextured> >
; Line 1652
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::~_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@PEAUVertex2DTextured@cow@@AEAV?$allocator@UVertex2DTextured@cow@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Dest$ = 232
_Al_$ = 240
??0?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@PEAUVertex2DTextured@cow@@AEAV?$allocator@UVertex2DTextured@cow@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1645
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Al_$[rbp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@PEAUVertex2DTextured@cow@@AEAV?$allocator@UVertex2DTextured@cow@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Copy_memmove@PEAUVertex2DTextured@cow@@PEAU12@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@00@Z
_TEXT	SEGMENT
_FirstPtr$ = 8
_LastPtr$ = 40
_DestPtr$ = 72
_First_ch$ = 104
_Last_ch$ = 136
_Dest_ch$ = 168
_Count$ = 200
_First$ = 448
_Last$ = 456
_Dest$ = 464
??$_Copy_memmove@PEAUVertex2DTextured@cow@@PEAU12@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@00@Z PROC ; std::_Copy_memmove<cow::Vertex2DTextured *,cow::Vertex2DTextured *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 4035
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 456				; 000001c8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 4036
	lea	rcx, QWORD PTR _First$[rbp]
	call	??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z ; std::_To_address<cow::Vertex2DTextured *>
	mov	QWORD PTR _FirstPtr$[rbp], rax
; Line 4037
	lea	rcx, QWORD PTR _Last$[rbp]
	call	??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z ; std::_To_address<cow::Vertex2DTextured *>
	mov	QWORD PTR _LastPtr$[rbp], rax
; Line 4038
	lea	rcx, QWORD PTR _Dest$[rbp]
	call	??$_To_address@PEAUVertex2DTextured@cow@@@std@@YA?A_PAEBQEAUVertex2DTextured@cow@@@Z ; std::_To_address<cow::Vertex2DTextured *>
	mov	QWORD PTR _DestPtr$[rbp], rax
; Line 4039
	mov	rax, QWORD PTR _FirstPtr$[rbp]
	mov	QWORD PTR _First_ch$[rbp], rax
; Line 4040
	mov	rax, QWORD PTR _LastPtr$[rbp]
	mov	QWORD PTR _Last_ch$[rbp], rax
; Line 4041
	mov	rax, QWORD PTR _DestPtr$[rbp]
	mov	QWORD PTR _Dest_ch$[rbp], rax
; Line 4042
	mov	rax, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Last_ch$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rbp], rax
; Line 4043
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	call	memmove
; Line 4045
	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	add	rcx, rax
	mov	rax, rcx
; Line 4049
	lea	rsp, QWORD PTR [rbp+424]
	pop	rdi
	pop	rbp
	ret	0
??$_Copy_memmove@PEAUVertex2DTextured@cow@@PEAU12@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@00@Z ENDP ; std::_Copy_memmove<cow::Vertex2DTextured *,cow::Vertex2DTextured *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z PROC ; std::_Get_unwrapped<cow::Vertex2DTextured * const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 1270
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 1273
	mov	rax, QWORD PTR _It$[rbp]
	mov	rax, QWORD PTR [rax]
; Line 1279
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z ENDP ; std::_Get_unwrapped<cow::Vertex2DTextured * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z PROC ; std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1734
$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1738
	lea	rcx, QWORD PTR _First$[rbp]
	call	??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z ; std::_Get_unwrapped<cow::Vertex2DTextured * const &>
	mov	QWORD PTR _UFirst$[rbp], rax
; Line 1739
	lea	rcx, QWORD PTR _Last$[rbp]
	call	??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z ; std::_Get_unwrapped<cow::Vertex2DTextured * const &>
	mov	QWORD PTR _ULast$[rbp], rax
; Line 1743
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Uninitiali
; Line 1746
	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ; std::_Unfancy<cow::Vertex2DTextured>
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rbp]
	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$_Copy_memmove@PEAUVertex2DTextured@cow@@PEAU12@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@00@Z ; std::_Copy_memmove<cow::Vertex2DTextured *,cow::Vertex2DTextured *>
; Line 1747
	mov	rax, QWORD PTR _UFirst$[rbp]
	mov	rcx, QWORD PTR _ULast$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR _Dest$[rbp]
	add	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@Uninitiali
$LN5@Uninitiali:
; Line 1751
	mov	edx, 24
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Dest$[rbp]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@PEAUVertex2DTextured@cow@@AEAV?$allocator@UVertex2DTextured@cow@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
	npad	1
; Line 1752
	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rbp]
	add	rax, 16
	mov	QWORD PTR _UFirst$[rbp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rbp]
	cmp	QWORD PTR _UFirst$[rbp], rax
	je	SHORT $LN3@Uninitiali
; Line 1753
	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$move@AEAUVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::move<cow::Vertex2DTextured &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??$_Emplace_back@UVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Emplace_back<cow::Vertex2DTextured>
; Line 1754
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
; Line 1756
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Release
	mov	QWORD PTR $T4[rbp], rax
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::~_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
	mov	rax, QWORD PTR $T4[rbp]
$LN1@Uninitiali:
; Line 1757
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ENDP ; std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
?dtor$0@?0???$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::~_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@UVertex2DTextured@cow@@U12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@$$QEAU34@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@UVertex2DTextured@cow@@U12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@$$QEAU34@@Z PROC ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::construct<cow::Vertex2DTextured,cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 673
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 256				; 00000100H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 675
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@construct
; Line 676
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$construct_at@UVertex2DTextured@cow@@U12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@$$QEAU12@@Z ; std::construct_at<cow::Vertex2DTextured,cow::Vertex2DTextured,void>
; Line 677
	jmp	SHORT $LN3@construct
$LN2@construct:
; Line 680
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z ; std::_Voidify_iter<cow::Vertex2DTextured *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	rdi, QWORD PTR $T1[rbp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN3@construct:
; Line 682
	lea	rsp, QWORD PTR [rbp+224]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$construct@UVertex2DTextured@cow@@U12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@$$QEAU34@@Z ENDP ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::construct<cow::Vertex2DTextured,cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z PROC ; std::_Unfancy<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
; Line 265
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D567F1CA_xstddef
	call	__CheckForDebuggerJustMyCode
; Line 266
	mov	rax, QWORD PTR _Ptr$[rbp]
; Line 267
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ENDP ; std::_Unfancy<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_in_place@UVertex2DTextured@cow@@U12@@std@@YAXAEAUVertex2DTextured@cow@@$$QEAU12@@Z
_TEXT	SEGMENT
$T1 = 200
tv77 = 216
tv75 = 224
_Obj$ = 272
<_Args_0>$ = 280
??$_Construct_in_place@UVertex2DTextured@cow@@U12@@std@@YAXAEAUVertex2DTextured@cow@@$$QEAU12@@Z PROC ; std::_Construct_in_place<cow::Vertex2DTextured,cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 142
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 144
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Construct_
; Line 145
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	QWORD PTR tv77[rbp], rax
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@AEAU12@@Z ; std::addressof<cow::Vertex2DTextured>
	mov	QWORD PTR tv75[rbp], rax
	mov	rdx, QWORD PTR tv77[rbp]
	mov	rcx, QWORD PTR tv75[rbp]
	call	??$construct_at@UVertex2DTextured@cow@@U12@X@std@@YAPEAUVertex2DTextured@cow@@QEAU12@$$QEAU12@@Z ; std::construct_at<cow::Vertex2DTextured,cow::Vertex2DTextured,void>
; Line 146
	jmp	SHORT $LN3@Construct_
$LN2@Construct_:
; Line 149
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@AEAU12@@Z ; std::addressof<cow::Vertex2DTextured>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAUVertex2DTextured@cow@@@std@@YAPEAXPEAUVertex2DTextured@cow@@@Z ; std::_Voidify_iter<cow::Vertex2DTextured *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	rdi, QWORD PTR $T1[rbp]
	mov	rsi, rax
	mov	ecx, 16
	rep movsb
$LN3@Construct_:
; Line 151
	lea	rsp, QWORD PTR [rbp+240]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$_Construct_in_place@UVertex2DTextured@cow@@U12@@std@@YAXAEAUVertex2DTextured@cow@@$$QEAU12@@Z ENDP ; std::_Construct_in_place<cow::Vertex2DTextured,cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv73 = 192
tv71 = 200
this$ = 240
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAXXZ PROC ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Emplace_back<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1655
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1656
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z ; std::_Unfancy<VkCommandBuffer_T *>
	mov	QWORD PTR tv73[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv71[rbp], rax
	mov	rdx, QWORD PTR tv73[rbp]
	mov	rcx, QWORD PTR tv71[rbp]
	call	??$construct@PEAUVkCommandBuffer_T@@$$V@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SAXAEAV?$allocator@PEAUVkCommandBuffer_T@@@1@QEAPEAUVkCommandBuffer_T@@@Z ; std::_Default_allocator_traits<std::allocator<VkCommandBuffer_T *> >::construct<VkCommandBuffer_T *>
; Line 1657
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	add	rax, 8
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax
; Line 1658
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAXXZ ENDP ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Emplace_back<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z PROC ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ
_TEXT	SEGMENT
this$ = 224
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1660
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1661
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
; Line 1662
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
; Line 1663
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ PROC ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::~_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1650
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1651
	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [rax+16]
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAXPEAPEAUVkCommandBuffer_T@@QEAPEAU1@AEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z ; std::_Destroy_range<std::allocator<VkCommandBuffer_T *> >
; Line 1652
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ENDP ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::~_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@PEAPEAUVkCommandBuffer_T@@AEAV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Dest$ = 232
_Al_$ = 240
??0?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@PEAPEAUVkCommandBuffer_T@@AEAV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z PROC ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1645
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR [rax+8], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Al_$[rbp]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@PEAPEAUVkCommandBuffer_T@@AEAV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ENDP ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Zero_range@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@0@Z
_TEXT	SEGMENT
_First_ch$ = 8
_Last_ch$ = 40
_First$ = 288
_Last$ = 296
??$_Zero_range@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@0@Z PROC ; std::_Zero_range<VkCommandBuffer_T * *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1824
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1825
	lea	rcx, QWORD PTR _First$[rbp]
	call	??$_To_address@PEAPEAUVkCommandBuffer_T@@@std@@YA?A_PAEBQEAPEAUVkCommandBuffer_T@@@Z ; std::_To_address<VkCommandBuffer_T * *>
	mov	QWORD PTR _First_ch$[rbp], rax
; Line 1826
	lea	rcx, QWORD PTR _Last$[rbp]
	call	??$_To_address@PEAPEAUVkCommandBuffer_T@@@std@@YA?A_PAEBQEAPEAUVkCommandBuffer_T@@@Z ; std::_To_address<VkCommandBuffer_T * *>
	mov	QWORD PTR _Last_ch$[rbp], rax
; Line 1827
	mov	rax, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Last_ch$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	r8, rax
	xor	edx, edx
	mov	rcx, QWORD PTR _First_ch$[rbp]
	call	memset
; Line 1828
	mov	rax, QWORD PTR _Last$[rbp]
; Line 1829
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Zero_range@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@0@Z ENDP ; std::_Zero_range<VkCommandBuffer_T * *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z PROC ; std::_Unfancy<VkCommandBuffer_T *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
; Line 265
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D567F1CA_xstddef
	call	__CheckForDebuggerJustMyCode
; Line 266
	mov	rax, QWORD PTR _Ptr$[rbp]
; Line 267
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z ENDP ; std::_Unfancy<VkCommandBuffer_T *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 659
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 662
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@deallocate
; Line 663
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::deallocate
; Line 664
	jmp	SHORT $LN3@deallocate
$LN2@deallocate:
; Line 668
	imul	rax, QWORD PTR _Count$[rbp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
$LN3@deallocate:
; Line 670
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z PROC ; std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1734
$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1738
	lea	rcx, QWORD PTR _First$[rbp]
	call	??$_Get_unwrapped@AEBQEAPEAVRenderObject@@@std@@YA?A_TAEBQEAPEAVRenderObject@@@Z ; std::_Get_unwrapped<RenderObject * * const &>
	mov	QWORD PTR _UFirst$[rbp], rax
; Line 1739
	lea	rcx, QWORD PTR _Last$[rbp]
	call	??$_Get_unwrapped@AEBQEAPEAVRenderObject@@@std@@YA?A_TAEBQEAPEAVRenderObject@@@Z ; std::_Get_unwrapped<RenderObject * * const &>
	mov	QWORD PTR _ULast$[rbp], rax
; Line 1743
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Uninitiali
; Line 1746
	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z ; std::_Unfancy<RenderObject *>
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rbp]
	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$_Copy_memmove@PEAPEAVRenderObject@@PEAPEAV1@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@00@Z ; std::_Copy_memmove<RenderObject * *,RenderObject * *>
; Line 1747
	mov	rax, QWORD PTR _UFirst$[rbp]
	mov	rcx, QWORD PTR _ULast$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	rcx, QWORD PTR _Dest$[rbp]
	lea	rax, QWORD PTR [rcx+rax*8]
	jmp	SHORT $LN1@Uninitiali
$LN5@Uninitiali:
; Line 1751
	mov	edx, 24
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Dest$[rbp]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@PEAPEAVRenderObject@@AEAV?$allocator@PEAVRenderObject@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Uninitialized_backout_al<std::allocator<RenderObject *> >
	npad	1
; Line 1752
	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rbp]
	add	rax, 8
	mov	QWORD PTR _UFirst$[rbp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rbp]
	cmp	QWORD PTR _UFirst$[rbp], rax
	je	SHORT $LN3@Uninitiali
; Line 1753
	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$move@AEAPEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::move<RenderObject * &>
	mov	rdx, rax
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??$_Emplace_back@PEAVRenderObject@@@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Emplace_back<RenderObject *>
; Line 1754
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
; Line 1756
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::_Release
	mov	QWORD PTR $T4[rbp], rax
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::~_Uninitialized_backout_al<std::allocator<RenderObject *> >
	mov	rax, QWORD PTR $T4[rbp]
$LN1@Uninitiali:
; Line 1757
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ENDP ; std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
?dtor$0@?0???$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z@4HA PROC ; `std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<RenderObject *> >::~_Uninitialized_backout_al<std::allocator<RenderObject *> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z@4HA ENDP ; `std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct@PEAVRenderObject@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SAXAEAV?$allocator@PEAVRenderObject@@@1@QEAPEAVRenderObject@@$$QEAPEAV3@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@PEAVRenderObject@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SAXAEAV?$allocator@PEAVRenderObject@@@1@QEAPEAVRenderObject@@$$QEAPEAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<RenderObject *> >::construct<RenderObject *,RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 673
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 675
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@construct
; Line 676
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$construct_at@PEAVRenderObject@@PEAV1@X@std@@YAPEAPEAVRenderObject@@QEAPEAV1@$$QEAPEAV1@@Z ; std::construct_at<RenderObject *,RenderObject *,void>
; Line 677
	jmp	SHORT $LN3@construct
$LN2@construct:
; Line 680
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z ; std::_Voidify_iter<RenderObject * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	rcx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN3@construct:
; Line 682
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$construct@PEAVRenderObject@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SAXAEAV?$allocator@PEAVRenderObject@@@1@QEAPEAVRenderObject@@$$QEAPEAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<RenderObject *> >::construct<RenderObject *,RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z PROC ; std::_Unfancy<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
; Line 265
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D567F1CA_xstddef
	call	__CheckForDebuggerJustMyCode
; Line 266
	mov	rax, QWORD PTR _Ptr$[rbp]
; Line 267
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z ENDP ; std::_Unfancy<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_in_place@PEAVRenderObject@@PEAV1@@std@@YAXAEAPEAVRenderObject@@$$QEAPEAV1@@Z
_TEXT	SEGMENT
$T1 = 200
tv77 = 216
tv75 = 224
_Obj$ = 272
<_Args_0>$ = 280
??$_Construct_in_place@PEAVRenderObject@@PEAV1@@std@@YAXAEAPEAVRenderObject@@$$QEAPEAV1@@Z PROC ; std::_Construct_in_place<RenderObject *,RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 142
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 144
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Construct_
; Line 145
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	QWORD PTR tv77[rbp], rax
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@AEAPEAV1@@Z ; std::addressof<RenderObject *>
	mov	QWORD PTR tv75[rbp], rax
	mov	rdx, QWORD PTR tv77[rbp]
	mov	rcx, QWORD PTR tv75[rbp]
	call	??$construct_at@PEAVRenderObject@@PEAV1@X@std@@YAPEAPEAVRenderObject@@QEAPEAV1@$$QEAPEAV1@@Z ; std::construct_at<RenderObject *,RenderObject *,void>
; Line 146
	jmp	SHORT $LN3@Construct_
$LN2@Construct_:
; Line 149
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@AEAPEAV1@@Z ; std::addressof<RenderObject *>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAPEAVRenderObject@@@std@@YAPEAXPEAPEAVRenderObject@@@Z ; std::_Voidify_iter<RenderObject * *>
	mov	rdx, rax
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	rcx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rcx], rax
$LN3@Construct_:
; Line 151
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
??$_Construct_in_place@PEAVRenderObject@@PEAV1@@std@@YAXAEAPEAVRenderObject@@$$QEAPEAV1@@Z ENDP ; std::_Construct_in_place<RenderObject *,RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 55
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 56
	mov	BYTE PTR _Overflow_is_possible$[rbp], 1
; Line 59
	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rbp], rax
; Line 60
	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o
; Line 61
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:
; Line 65
	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
$LN3@Get_size_o:
; Line 66
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$exchange@PEAVBuffer@cow@@$$T@std@@YAPEAVBuffer@cow@@AEAPEAV12@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 8
_Val$ = 256
_New_val$ = 264
??$exchange@PEAVBuffer@cow@@$$T@std@@YAPEAVBuffer@cow@@AEAPEAV12@$$QEA$$T@Z PROC ; std::exchange<cow::Buffer *,std::nullptr_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
; Line 605
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__227866D8_utility
	call	__CheckForDebuggerJustMyCode
; Line 607
	mov	rax, QWORD PTR _Val$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rbp], rax
; Line 608
	mov	rax, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR _New_val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
; Line 609
	mov	rax, QWORD PTR _Old_val$[rbp]
; Line 610
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$exchange@PEAVBuffer@cow@@$$T@std@@YAPEAVBuffer@cow@@AEAPEAV12@$$QEA$$T@Z ENDP ; std::exchange<cow::Buffer *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$exchange@PEAVBuffer@cow@@AEAPEAV12@@std@@YAPEAVBuffer@cow@@AEAPEAV12@0@Z
_TEXT	SEGMENT
_Old_val$ = 8
_Val$ = 256
_New_val$ = 264
??$exchange@PEAVBuffer@cow@@AEAPEAV12@@std@@YAPEAVBuffer@cow@@AEAPEAV12@0@Z PROC ; std::exchange<cow::Buffer *,cow::Buffer * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
; Line 605
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__227866D8_utility
	call	__CheckForDebuggerJustMyCode
; Line 607
	mov	rax, QWORD PTR _Val$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rbp], rax
; Line 608
	mov	rax, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR _New_val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
; Line 609
	mov	rax, QWORD PTR _Old_val$[rbp]
; Line 610
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$exchange@PEAVBuffer@cow@@AEAPEAV12@@std@@YAPEAVBuffer@cow@@AEAPEAV12@0@Z ENDP ; std::exchange<cow::Buffer *,cow::Buffer * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 8
_Ptr_container$ = 40
_Ptr$ = 72
_Bytes$ = 320
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 127
$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 129
	mov	rax, QWORD PTR _Bytes$[rbp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rbp], rax
; Line 130
	mov	rax, QWORD PTR _Bytes$[rbp]
	cmp	QWORD PTR _Block_size$[rbp], rax
	ja	SHORT $LN8@Allocate_m
; Line 131
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:
; Line 134
	mov	rcx, QWORD PTR _Block_size$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:
; Line 135
	cmp	QWORD PTR _Ptr_container$[rbp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 135				; 00000087H
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 135				; 00000087H
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m
; Line 136
	mov	rax, QWORD PTR _Ptr_container$[rbp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rbp], rax
; Line 137
	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rcx+rax], rdx
; Line 140
	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx
; Line 142
	mov	rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:
; Line 143
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@U?$default_delete@VBuffer@cow@@@std@@@std@@YA$$QEAU?$default_delete@VBuffer@cow@@@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@U?$default_delete@VBuffer@cow@@@std@@@std@@YA$$QEAU?$default_delete@VBuffer@cow@@@0@AEAU10@@Z PROC ; std::forward<std::default_delete<cow::Buffer> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@U?$default_delete@VBuffer@cow@@@std@@@std@@YA$$QEAU?$default_delete@VBuffer@cow@@@0@AEAU10@@Z ENDP ; std::forward<std::default_delete<cow::Buffer> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@V?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
; Line 252
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D567F1CA_xstddef
	call	__CheckForDebuggerJustMyCode
; Line 253
	mov	rax, QWORD PTR _Val$[rbp]
; Line 254
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@V?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@PEAVBuffer@cow@@@Z
_TEXT	SEGMENT
$T1 = 196
tv70 = 216
this$ = 256
_Ptr$ = 264
??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@PEAVBuffer@cow@@@Z PROC ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> ><std::default_delete<cow::Buffer>,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3182
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv70[rbp], rax
	lea	r8, QWORD PTR _Ptr$[rbp]
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR tv70[rbp]
	call	??$?0AEAPEAVBuffer@cow@@@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAVBuffer@cow@@@Z ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1><cow::Buffer * &>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@PEAVBuffer@cow@@@Z ENDP ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> ><std::default_delete<cow::Buffer>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@W4VkBufferUsageFlagBits@@@std@@YA$$QEAW4VkBufferUsageFlagBits@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@W4VkBufferUsageFlagBits@@@std@@YA$$QEAW4VkBufferUsageFlagBits@@AEAW41@@Z PROC ; std::forward<enum VkBufferUsageFlagBits>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@W4VkBufferUsageFlagBits@@@std@@YA$$QEAW4VkBufferUsageFlagBits@@AEAW41@@Z ENDP ; std::forward<enum VkBufferUsageFlagBits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AEA_K@std@@YAAEA_KAEA_K@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEA_K@std@@YAAEA_KAEA_K@Z PROC		; std::forward<unsigned __int64 &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEA_K@std@@YAAEA_KAEA_K@Z ENDP		; std::forward<unsigned __int64 &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AEAVDevice@cow@@@std@@YAAEAVDevice@cow@@AEAV12@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAVDevice@cow@@@std@@YAAEAVDevice@cow@@AEAV12@@Z PROC ; std::forward<cow::Device &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEAVDevice@cow@@@std@@YAAEAVDevice@cow@@AEAV12@@Z ENDP ; std::forward<cow::Device &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0$$V@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1370
$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0$$V@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z PROC ; std::_Uninitialized_copy<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1673
$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 38					; 00000026H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1678
	lea	rcx, QWORD PTR _First$[rbp]
	call	??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z ; std::_Get_unwrapped<cow::Vertex2DTextured * const &>
	mov	QWORD PTR _UFirst$[rbp], rax
; Line 1679
	lea	rcx, QWORD PTR _Last$[rbp]
	call	??$_Get_unwrapped@AEBQEAUVertex2DTextured@cow@@@std@@YA?A_TAEBQEAUVertex2DTextured@cow@@@Z ; std::_Get_unwrapped<cow::Vertex2DTextured * const &>
	mov	QWORD PTR _ULast$[rbp], rax
; Line 1684
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Uninitiali
; Line 1687
	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ; std::_Unfancy<cow::Vertex2DTextured>
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rbp]
	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$_Copy_memmove@PEAUVertex2DTextured@cow@@PEAU12@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@00@Z ; std::_Copy_memmove<cow::Vertex2DTextured *,cow::Vertex2DTextured *>
; Line 1688
	mov	rax, QWORD PTR _UFirst$[rbp]
	mov	rcx, QWORD PTR _ULast$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR _Dest$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Dest$[rbp], rax
; Line 1689
	mov	rax, QWORD PTR _Dest$[rbp]
	jmp	SHORT $LN1@Uninitiali
$LN5@Uninitiali:
; Line 1693
	mov	edx, 24
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Dest$[rbp]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@PEAUVertex2DTextured@cow@@AEAV?$allocator@UVertex2DTextured@cow@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
	npad	1
; Line 1694
	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _UFirst$[rbp]
	add	rax, 16
	mov	QWORD PTR _UFirst$[rbp], rax
$LN4@Uninitiali:
	mov	rax, QWORD PTR _ULast$[rbp]
	cmp	QWORD PTR _UFirst$[rbp], rax
	je	SHORT $LN3@Uninitiali
; Line 1695
	mov	rdx, QWORD PTR _UFirst$[rbp]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??$_Emplace_back@AEAUVertex2DTextured@cow@@@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAXAEAUVertex2DTextured@cow@@@Z ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Emplace_back<cow::Vertex2DTextured &>
; Line 1696
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
; Line 1698
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::_Release
	mov	QWORD PTR $T4[rbp], rax
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::~_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
	mov	rax, QWORD PTR $T4[rbp]
$LN1@Uninitiali:
; Line 1699
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ENDP ; std::_Uninitialized_copy<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Backout$ = 72
$T4 = 312
__$ArrayPad$ = 328
_First$ = 368
_Last$ = 376
_Dest$ = 384
_Al$ = 392
?dtor$0@?0???$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA PROC ; `std::_Uninitialized_copy<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >::~_Uninitialized_backout_al<std::allocator<cow::Vertex2DTextured> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z@4HA ENDP ; `std::_Uninitialized_copy<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AEBQEAUVertex2DTextured@cow@@@std@@YAAEBQEAUVertex2DTextured@cow@@AEBQEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBQEAUVertex2DTextured@cow@@@std@@YAAEBQEAUVertex2DTextured@cow@@AEBQEAU12@@Z PROC ; std::forward<cow::Vertex2DTextured * const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEBQEAUVertex2DTextured@cow@@@std@@YAAEBQEAUVertex2DTextured@cow@@AEBQEAU12@@Z ENDP ; std::forward<cow::Vertex2DTextured * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tidy_guard@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Tidy_guard@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >::~_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 33
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 34
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard
; Line 35
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Tidy
$LN2@Tidy_guard:
; Line 37
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Tidy_guard@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >::~_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YA$$QEAV?$allocator@UVertex2DTextured@cow@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YA$$QEAV?$allocator@UVertex2DTextured@cow@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YA$$QEAV?$allocator@UVertex2DTextured@cow@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv134 = 536
tv132 = 544
this$ = 592
_Whereptr$ = 600
<_Val_0>$ = 608
??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_reallocate<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 836
$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 600				; 00000258H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 838
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 839
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 840
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 841
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 845
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereptr$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Whereoff$[rbp], rax
; Line 846
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Oldsize$[rbp], rax
; Line 848
	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::max_size
	cmp	QWORD PTR _Oldsize$[rbp], rax
	jne	SHORT $LN2@Emplace_re
; Line 849
	call	?_Xlength@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@CAXXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Xlength
$LN2@Emplace_re:
; Line 852
	mov	rax, QWORD PTR _Oldsize$[rbp]
	inc	rax
	mov	QWORD PTR _Newsize$[rbp], rax
; Line 853
	mov	rdx, QWORD PTR _Newsize$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Calculate_growth@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBA_K_K@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rbp], rax
; Line 855
	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAPEAUVertex2DTextured@cow@@_K@Z ; std::allocator<cow::Vertex2DTextured>::allocate
	mov	QWORD PTR _Newvec$[rbp], rax
; Line 856
	imul	rax, QWORD PTR _Whereoff$[rbp], 16
	mov	rcx, QWORD PTR _Newvec$[rbp]
	lea	rax, QWORD PTR [rcx+rax+16]
	mov	QWORD PTR _Constructed_last$[rbp], rax
; Line 857
	mov	rax, QWORD PTR _Constructed_last$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax
; Line 860
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	QWORD PTR tv134[rbp], rax
	imul	rax, QWORD PTR _Whereoff$[rbp], 16
	mov	rcx, QWORD PTR _Newvec$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	??$_Unfancy@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ; std::_Unfancy<cow::Vertex2DTextured>
	mov	QWORD PTR tv132[rbp], rax
	mov	r8, QWORD PTR tv134[rbp]
	mov	rdx, QWORD PTR tv132[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$construct@UVertex2DTextured@cow@@U12@@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SAXAEAV?$allocator@UVertex2DTextured@cow@@@1@QEAUVertex2DTextured@cow@@$$QEAU34@@Z ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::construct<cow::Vertex2DTextured,cow::Vertex2DTextured>
; Line 861
	imul	rax, QWORD PTR _Whereoff$[rbp], 16
	mov	rcx, QWORD PTR _Newvec$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Constructed_first$[rbp], rax
; Line 863
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Whereptr$[rbp], rax
	jne	SHORT $LN4@Emplace_re
; Line 865
	mov	r9, QWORD PTR _Al$[rbp]
	mov	r8, QWORD PTR _Newvec$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
; Line 869
	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:
; Line 870
	mov	r9, QWORD PTR _Al$[rbp]
	mov	r8, QWORD PTR _Newvec$[rbp]
	mov	rdx, QWORD PTR _Whereptr$[rbp]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
; Line 871
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax
; Line 872
	imul	rax, QWORD PTR _Whereoff$[rbp], 16
	mov	rcx, QWORD PTR _Newvec$[rbp]
	lea	rax, QWORD PTR [rcx+rax+16]
	mov	r9, QWORD PTR _Al$[rbp]
	mov	r8, rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereptr$[rbp]
	call	??$_Uninitialized_move@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Uninitialized_move<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
	npad	1
$LN5@Emplace_re:
	jmp	SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:
; Line 880
	mov	r9, QWORD PTR _Newcapacity$[rbp]
	mov	r8, QWORD PTR _Newsize$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Change_array@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXQEAUVertex2DTextured@cow@@_K1@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Change_array
; Line 881
	imul	rax, QWORD PTR _Whereoff$[rbp], 16
	mov	rcx, QWORD PTR _Newvec$[rbp]
	add	rcx, rax
	mov	rax, rcx
; Line 882
	lea	rsp, QWORD PTR [rbp+568]
	pop	rdi
	pop	rbp
	ret	0
$LN11@Emplace_re:
??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_reallocate<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv134 = 536
tv132 = 544
this$ = 592
_Whereptr$ = 600
<_Val_0>$ = 608
?catch$0@?0???$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z@4HA PROC ; `std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_reallocate<cow::Vertex2DTextured>'::`1'::catch$0
; Line 874
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z$0:
; Line 875
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Constructed_last$[rbp]
	mov	rcx, QWORD PTR _Constructed_first$[rbp]
	call	??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Destroy_range<std::allocator<cow::Vertex2DTextured> >
; Line 876
	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z ; std::allocator<cow::Vertex2DTextured>::deallocate
; Line 877
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
; Line 878
	lea	rax, $LN10@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z@4HA ENDP ; `std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_reallocate<cow::Vertex2DTextured>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_back_with_unused_capacity@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Mylast$ = 40
_Result$ = 72
tv74 = 280
tv72 = 288
this$ = 336
<_Val_0>$ = 344
??$_Emplace_back_with_unused_capacity@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_back_with_unused_capacity<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 813
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 815
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 816
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 821
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	QWORD PTR tv74[rbp], rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv72[rbp], rax
	mov	rdx, QWORD PTR tv74[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	??$_Construct_in_place@UVertex2DTextured@cow@@U12@@std@@YAXAEAUVertex2DTextured@cow@@$$QEAU12@@Z ; std::_Construct_in_place<cow::Vertex2DTextured,cow::Vertex2DTextured>
; Line 828
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range
; Line 829
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Result$[rbp], rax
; Line 830
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 16
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 832
	mov	rax, QWORD PTR _Result$[rbp]
; Line 833
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back_with_unused_capacity@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_back_with_unused_capacity<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z
_TEXT	SEGMENT
_PFirst$4 = 8
_Backout$ = 40
$T5 = 280
__$ArrayPad$ = 296
_First$ = 336
_Count$ = 344
_Al$ = 352
??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<VkCommandBuffer_T *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1833
$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1838
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@Uninitiali
; Line 1841
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Unfancy@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z ; std::_Unfancy<VkCommandBuffer_T *>
	mov	QWORD PTR _PFirst$4[rbp], rax
; Line 1842
	mov	rax, QWORD PTR _PFirst$4[rbp]
	mov	rcx, QWORD PTR _Count$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rdx, rax
	mov	rcx, QWORD PTR _PFirst$4[rbp]
	call	??$_Zero_range@PEAPEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@QEAPEAU1@0@Z ; std::_Zero_range<VkCommandBuffer_T * *>
; Line 1843
	mov	rax, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR _Count$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	jmp	SHORT $LN1@Uninitiali
$LN5@Uninitiali:
; Line 1847
	mov	edx, 24
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?__autoclassinit2@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??0?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@PEAPEAUVkCommandBuffer_T@@AEAV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >
	npad	1
; Line 1848
	jmp	SHORT $LN4@Uninitiali
$LN2@Uninitiali:
	mov	rax, QWORD PTR _Count$[rbp]
	dec	rax
	mov	QWORD PTR _Count$[rbp], rax
$LN4@Uninitiali:
	cmp	QWORD PTR _Count$[rbp], 0
	jbe	SHORT $LN3@Uninitiali
; Line 1849
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??$_Emplace_back@$$V@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAXXZ ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Emplace_back<>
; Line 1850
	jmp	SHORT $LN2@Uninitiali
$LN3@Uninitiali:
; Line 1852
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	?_Release@?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::_Release
	mov	QWORD PTR $T5[rbp], rax
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::~_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >
	mov	rax, QWORD PTR $T5[rbp]
$LN1@Uninitiali:
; Line 1853
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<VkCommandBuffer_T *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_PFirst$4 = 8
_Backout$ = 40
$T5 = 280
__$ArrayPad$ = 296
_First$ = 336
_Count$ = 344
_Al$ = 352
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z@4HA PROC ; `std::_Uninitialized_value_construct_n<std::allocator<VkCommandBuffer_T *> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Backout$[rbp]
	call	??1?$_Uninitialized_backout_al@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ; std::_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >::~_Uninitialized_backout_al<std::allocator<VkCommandBuffer_T *> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z@4HA ENDP ; `std::_Uninitialized_value_construct_n<std::allocator<VkCommandBuffer_T *> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Tidy_guard@V?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Tidy_guard@V?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >::~_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 33
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 34
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard
; Line 35
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Tidy
$LN2@Tidy_guard:
; Line 37
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Tidy_guard@V?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >::~_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAAEBV?$allocator@PEAUVkCommandBuffer_T@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAAEBV?$allocator@PEAUVkCommandBuffer_T@@@0@AEBV10@@Z PROC ; std::forward<std::allocator<VkCommandBuffer_T *> const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAAEBV?$allocator@PEAUVkCommandBuffer_T@@@0@AEBV10@@Z ENDP ; std::forward<std::allocator<VkCommandBuffer_T *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 972
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 976
	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	npad	1
; Line 981
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv134 = 536
tv132 = 544
this$ = 592
_Whereptr$ = 600
<_Val_0>$ = 608
??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_reallocate<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 836
$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 600				; 00000258H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 838
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 839
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 840
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 841
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 845
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereptr$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	QWORD PTR _Whereoff$[rbp], rax
; Line 846
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	QWORD PTR _Oldsize$[rbp], rax
; Line 848
	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::max_size
	cmp	QWORD PTR _Oldsize$[rbp], rax
	jne	SHORT $LN2@Emplace_re
; Line 849
	call	?_Xlength@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@CAXXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Xlength
$LN2@Emplace_re:
; Line 852
	mov	rax, QWORD PTR _Oldsize$[rbp]
	inc	rax
	mov	QWORD PTR _Newsize$[rbp], rax
; Line 853
	mov	rdx, QWORD PTR _Newsize$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Calculate_growth@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBA_K_K@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rbp], rax
; Line 855
	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@PEAVRenderObject@@@std@@QEAAPEAPEAVRenderObject@@_K@Z ; std::allocator<RenderObject *>::allocate
	mov	QWORD PTR _Newvec$[rbp], rax
; Line 856
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
	mov	QWORD PTR _Constructed_last$[rbp], rax
; Line 857
	mov	rax, QWORD PTR _Constructed_last$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax
; Line 860
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	QWORD PTR tv134[rbp], rax
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, rax
	call	??$_Unfancy@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z ; std::_Unfancy<RenderObject *>
	mov	QWORD PTR tv132[rbp], rax
	mov	r8, QWORD PTR tv134[rbp]
	mov	rdx, QWORD PTR tv132[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$construct@PEAVRenderObject@@PEAV1@@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SAXAEAV?$allocator@PEAVRenderObject@@@1@QEAPEAVRenderObject@@$$QEAPEAV3@@Z ; std::_Default_allocator_traits<std::allocator<RenderObject *> >::construct<RenderObject *,RenderObject *>
; Line 861
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR _Constructed_first$[rbp], rax
; Line 863
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Whereptr$[rbp], rax
	jne	SHORT $LN4@Emplace_re
; Line 865
	mov	r9, QWORD PTR _Al$[rbp]
	mov	r8, QWORD PTR _Newvec$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ; std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >
; Line 869
	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:
; Line 870
	mov	r9, QWORD PTR _Al$[rbp]
	mov	r8, QWORD PTR _Newvec$[rbp]
	mov	rdx, QWORD PTR _Whereptr$[rbp]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ; std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >
; Line 871
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax
; Line 872
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
	mov	r9, QWORD PTR _Al$[rbp]
	mov	r8, rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereptr$[rbp]
	call	??$_Uninitialized_move@PEAPEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@YAPEAPEAVRenderObject@@QEAPEAV1@0PEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ; std::_Uninitialized_move<RenderObject * *,std::allocator<RenderObject *> >
	npad	1
$LN5@Emplace_re:
	jmp	SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:
; Line 880
	mov	r9, QWORD PTR _Newcapacity$[rbp]
	mov	r8, QWORD PTR _Newsize$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Change_array@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXQEAPEAVRenderObject@@_K1@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Change_array
; Line 881
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
; Line 882
	lea	rsp, QWORD PTR [rbp+568]
	pop	rdi
	pop	rbp
	ret	0
$LN11@Emplace_re:
??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_reallocate<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv134 = 536
tv132 = 544
this$ = 592
_Whereptr$ = 600
<_Val_0>$ = 608
?catch$0@?0???$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z@4HA PROC ; `std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_reallocate<RenderObject *>'::`1'::catch$0
; Line 874
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z$0:
; Line 875
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Constructed_last$[rbp]
	mov	rcx, QWORD PTR _Constructed_first$[rbp]
	call	??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ; std::_Destroy_range<std::allocator<RenderObject *> >
; Line 876
	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z ; std::allocator<RenderObject *>::deallocate
; Line 877
	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1
; Line 878
	lea	rax, $LN10@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z@4HA ENDP ; `std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_reallocate<RenderObject *>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_back_with_unused_capacity@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Mylast$ = 40
_Result$ = 72
tv74 = 280
tv72 = 288
this$ = 336
<_Val_0>$ = 344
??$_Emplace_back_with_unused_capacity@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_back_with_unused_capacity<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 813
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 815
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 816
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 821
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	QWORD PTR tv74[rbp], rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv72[rbp], rax
	mov	rdx, QWORD PTR tv74[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	??$_Construct_in_place@PEAVRenderObject@@PEAV1@@std@@YAXAEAPEAVRenderObject@@$$QEAPEAV1@@Z ; std::_Construct_in_place<RenderObject *,RenderObject *>
; Line 828
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range
; Line 829
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Result$[rbp], rax
; Line 830
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 832
	mov	rax, QWORD PTR _Result$[rbp]
; Line 833
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back_with_unused_capacity@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_back_with_unused_capacity<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@H@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@H@std@@YA$$QEAHAEAH@Z PROC			; std::forward<int>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@H@std@@YA$$QEAHAEAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@X@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 200
tv78 = 216
_Location$ = 256
<_Args_0>$ = 264
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@X@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z PROC ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,void>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 135
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 136
	mov	rcx, QWORD PTR _Location$[rbp]
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv78[rbp], rax
	mov	rdx, QWORD PTR tv78[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
; Line 137
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@X@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z PROC ; std::_Voidify_iter<std::_Container_proxy *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 123
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 125
	mov	rax, QWORD PTR _It$[rbp]
; Line 129
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ENDP ; std::_Voidify_iter<std::_Container_proxy *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
; Line 252
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D567F1CA_xstddef
	call	__CheckForDebuggerJustMyCode
; Line 253
	mov	rax, QWORD PTR _Val$[rbp]
; Line 254
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 55
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 56
	mov	BYTE PTR _Overflow_is_possible$[rbp], 1
; Line 59
	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rbp], rax
; Line 60
	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o
; Line 61
	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:
; Line 65
	imul	rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:
; Line 66
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@YAXPEAUVkVertexInputAttributeDescription@@QEAU1@AEAV?$allocator@UVkVertexInputAttributeDescription@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@YAXPEAUVkVertexInputAttributeDescription@@QEAU1@AEAV?$allocator@UVkVertexInputAttributeDescription@@@0@@Z PROC ; std::_Destroy_range<std::allocator<VkVertexInputAttributeDescription> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 939
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 947
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@YAXPEAUVkVertexInputAttributeDescription@@QEAU1@AEAV?$allocator@UVkVertexInputAttributeDescription@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<VkVertexInputAttributeDescription> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 224
_Bytes$ = 232
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 242
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 245
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Deallocate
; Line 246
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??3@YAXPEAX@Z				; operator delete
; Line 247
	jmp	SHORT $LN3@Deallocate
$LN2@Deallocate:
; Line 251
	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN4@Deallocate
; Line 252
	lea	rdx, QWORD PTR _Bytes$[rbp]
	lea	rcx, QWORD PTR _Ptr$[rbp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
$LN4@Deallocate:
; Line 255
	mov	rdx, QWORD PTR _Bytes$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1
$LN3@Deallocate:
; Line 257
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 221
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 225
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Allocate
; Line 228
	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN3@Allocate
; Line 229
	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:
$LN2@Allocate:
; Line 234
	cmp	QWORD PTR _Bytes$[rbp], 0
	je	SHORT $LN4@Allocate
; Line 235
	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN4@Allocate:
; Line 238
	xor	eax, eax
$LN1@Allocate:
; Line 239
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@V?$allocator@W4VkDynamicState@@@std@@@std@@YAXPEAW4VkDynamicState@@QEAW41@AEAV?$allocator@W4VkDynamicState@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@W4VkDynamicState@@@std@@@std@@YAXPEAW4VkDynamicState@@QEAW41@AEAV?$allocator@W4VkDynamicState@@@0@@Z PROC ; std::_Destroy_range<std::allocator<enum VkDynamicState> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 939
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 947
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@W4VkDynamicState@@@std@@@std@@YAXPEAW4VkDynamicState@@QEAW41@AEAV?$allocator@W4VkDynamicState@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<enum VkDynamicState> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy_maybe_null@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy_maybe_null@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z PROC ; std::_Unfancy_maybe_null<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 427
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 428
	mov	rax, QWORD PTR _Ptr$[rbp]
; Line 429
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy_maybe_null@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ENDP ; std::_Unfancy_maybe_null<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z PROC ; std::_Destroy_range<std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 939
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 947
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAXPEAPEAUVkCommandBuffer_T@@QEAPEAU1@AEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAXPEAPEAUVkCommandBuffer_T@@QEAPEAU1@AEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z PROC ; std::_Destroy_range<std::allocator<VkCommandBuffer_T *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 939
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 947
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAXPEAPEAUVkCommandBuffer_T@@QEAPEAU1@AEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<VkCommandBuffer_T *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z PROC ; std::_Destroy_range<std::allocator<RenderObject *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 939
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 947
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<RenderObject *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0UVkVertexInputAttributeDescription@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVkVertexInputAttributeDescription@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0UVkVertexInputAttributeDescription@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVkVertexInputAttributeDescription@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><VkVertexInputAttributeDescription>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 823
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0UVkVertexInputAttributeDescription@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVkVertexInputAttributeDescription@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><VkVertexInputAttributeDescription>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy_maybe_null@UVkVertexInputAttributeDescription@@@std@@YAPEAUVkVertexInputAttributeDescription@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy_maybe_null@UVkVertexInputAttributeDescription@@@std@@YAPEAUVkVertexInputAttributeDescription@@PEAU1@@Z PROC ; std::_Unfancy_maybe_null<VkVertexInputAttributeDescription>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 427
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 428
	mov	rax, QWORD PTR _Ptr$[rbp]
; Line 429
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy_maybe_null@UVkVertexInputAttributeDescription@@@std@@YAPEAUVkVertexInputAttributeDescription@@PEAU1@@Z ENDP ; std::_Unfancy_maybe_null<VkVertexInputAttributeDescription>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
; Line 265
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D567F1CA_xstddef
	call	__CheckForDebuggerJustMyCode
; Line 266
	mov	rax, QWORD PTR _Ptr$[rbp]
; Line 267
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1334
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1335
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Container_
; Line 1336
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
$LN2@Container_:
; Line 1338
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Al_$ = 264
_Mycont$ = 272
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1320
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Al_$[rbp]
	mov	QWORD PTR [rax+8], rcx
; Line 1322
	mov	edx, 1
	mov	rcx, QWORD PTR _Al_$[rbp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 1323
	mov	rcx, QWORD PTR _Mycont$[rbp]
	call	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
; Line 1324
	mov	rax, QWORD PTR _Mycont$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
; Line 1325
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$min@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 216
_Left$ = 256
_Right$ = 264
??$min@_K@std@@YAAEB_KAEB_K0@Z PROC			; std::min<unsigned __int64>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
; Line 64
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__227866D8_utility
	call	__CheckForDebuggerJustMyCode
; Line 66
	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@min
	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR tv65[rbp], rax
	jmp	SHORT $LN4@min
$LN3@min:
	mov	rax, QWORD PTR _Left$[rbp]
	mov	QWORD PTR tv65[rbp], rax
$LN4@min:
	mov	rax, QWORD PTR tv65[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]
; Line 67
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$min@_K@std@@YAAEB_KAEB_K0@Z ENDP			; std::min<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\ostream
; Line 123
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__F0102D72_ostream
	call	__CheckForDebuggerJustMyCode
; Line 124
	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+8]
; Line 125
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Zero_uncaught_exceptions$ = 4
tv71 = 212
this$ = 256
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\ostream
; Line 108
$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__F0102D72_ostream
	call	__CheckForDebuggerJustMyCode
; Line 114
	call	?uncaught_exceptions@std@@YAHXZ		; std::uncaught_exceptions
	test	eax, eax
	jne	SHORT $LN4@sentry
	mov	BYTE PTR tv71[rbp], 1
	jmp	SHORT $LN5@sentry
$LN4@sentry:
	mov	BYTE PTR tv71[rbp], 0
$LN5@sentry:
	movzx	eax, BYTE PTR tv71[rbp]
	mov	BYTE PTR _Zero_uncaught_exceptions$[rbp], al
; Line 117
	movzx	eax, BYTE PTR _Zero_uncaught_exceptions$[rbp]
	test	eax, eax
	je	SHORT $LN2@sentry
; Line 118
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
$LN2@sentry:
; Line 120
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	npad	1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\ostream
; Line 91
$LN7:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__F0102D72_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Ostr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
	npad	1
; Line 92
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@sentry
; Line 93
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 0
; Line 94
	jmp	$LN1@sentry
$LN2@sentry:
; Line 97
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Tied$[rbp], rax
; Line 98
	cmp	QWORD PTR _Tied$[rbp], 0
	je	SHORT $LN4@sentry
	mov	rax, QWORD PTR _Ostr$[rbp]
	cmp	QWORD PTR _Tied$[rbp], rax
	jne	SHORT $LN3@sentry
$LN4@sentry:
; Line 99
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+8], 1
; Line 100
	jmp	SHORT $LN1@sentry
$LN3@sentry:
; Line 103
	mov	rcx, QWORD PTR _Tied$[rbp]
	call	QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
; Line 104
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
	mov	rcx, QWORD PTR this$[rbp]
	mov	BYTE PTR [rcx+8], al
$LN1@sentry:
; Line 105
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 8
tv72 = 216
this$ = 256
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\ostream
; Line 77
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__F0102D72_ostream
	call	__CheckForDebuggerJustMyCode
; Line 78
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR tv72[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv72[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rbp], rax
; Line 79
	cmp	QWORD PTR _Rdbuf$[rbp], 0
	je	SHORT $LN2@Sentry_bas
; Line 80
	mov	rax, QWORD PTR _Rdbuf$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rbp]
	call	QWORD PTR [rax+16]
	npad	1
$LN2@Sentry_bas:
; Line 82
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 8
tv73 = 216
this$ = 256
_Ostr$ = 264
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\ostream
; Line 70
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__F0102D72_ostream
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 71
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv73[rbp], rax
	mov	rax, QWORD PTR tv73[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR tv73[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR _Rdbuf$[rbp], rax
; Line 72
	cmp	QWORD PTR _Rdbuf$[rbp], 0
	je	SHORT $LN2@Sentry_bas
; Line 73
	mov	rax, QWORD PTR _Rdbuf$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Rdbuf$[rbp]
	call	QWORD PTR [rax+8]
$LN2@Sentry_bas:
; Line 75
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1>::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1370
$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$allocator@W4VkDynamicState@@@std@@QEAA@XZ ; std::allocator<enum VkDynamicState>::allocator<enum VkDynamicState>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<enum VkDynamicState> >::_Vector_val<std::_Simple_types<enum VkDynamicState> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1>::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0W4VkDynamicState@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@W4VkDynamicState@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0W4VkDynamicState@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@W4VkDynamicState@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><enum VkDynamicState>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 823
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0W4VkDynamicState@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@W4VkDynamicState@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><enum VkDynamicState>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?4U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??$?4U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator=<std::default_delete<cow::Buffer>,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3224
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
; Line 3225
	mov	rcx, QWORD PTR _Right$[rbp]
	call	??$addressof@V?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@@std@@YAPEAV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAV10@@Z ; std::addressof<std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> > >
	cmp	QWORD PTR this$[rbp], rax
	je	SHORT $LN2@operator
; Line 3226
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?release@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAPEAVBuffer@cow@@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::release
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?reset@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAXPEAVBuffer@cow@@@Z ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::reset
; Line 3227
	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Get_first
	mov	rcx, rax
	call	??$forward@U?$default_delete@VBuffer@cow@@@std@@@std@@YA$$QEAU?$default_delete@VBuffer@cow@@@0@AEAU10@@Z ; std::forward<std::default_delete<cow::Buffer> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Get_first
$LN2@operator:
; Line 3229
	mov	rax, QWORD PTR this$[rbp]
; Line 3230
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?4U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator=<std::default_delete<cow::Buffer>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 260
tv130 = 276
tv128 = 280
tv94 = 288
tv92 = 296
tv131 = 304
__$ReturnUdt$ = 352
<_Args_0>$ = 360
<_Args_1>$ = 368
<_Args_2>$ = 376
<_Args_3>$ = 384
??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z PROC ; std::make_unique<cow::Buffer,cow::Device &,unsigned __int64 &,enum VkBufferUsageFlagBits,int,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3422
$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	mov	DWORD PTR $T3[rbp], 0
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
; Line 3423
	mov	ecx, 40					; 00000028H
	call	??2@YAPEAX_K@Z				; operator new
	mov	QWORD PTR $T2[rbp], rax
	cmp	QWORD PTR $T2[rbp], 0
	je	$LN3@make_uniqu
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR $T2[rbp]
	call	?__autoclassinit2@Buffer@cow@@QEAAX_K@Z
	mov	rcx, QWORD PTR <_Args_3>$[rbp]
	call	??$forward@H@std@@YA$$QEAHAEAH@Z	; std::forward<int>
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv130[rbp], eax
	mov	rcx, QWORD PTR <_Args_2>$[rbp]
	call	??$forward@W4VkBufferUsageFlagBits@@@std@@YA$$QEAW4VkBufferUsageFlagBits@@AEAW41@@Z ; std::forward<enum VkBufferUsageFlagBits>
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv128[rbp], eax
	mov	rcx, QWORD PTR <_Args_1>$[rbp]
	call	??$forward@AEA_K@std@@YAAEA_KAEA_K@Z	; std::forward<unsigned __int64 &>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv94[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEAVDevice@cow@@@std@@YAAEAVDevice@cow@@AEAV12@@Z ; std::forward<cow::Device &>
	mov	QWORD PTR tv92[rbp], rax
	mov	eax, DWORD PTR tv130[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR tv128[rbp]
	mov	r8, QWORD PTR tv94[rbp]
	mov	rdx, QWORD PTR tv92[rbp]
	mov	rcx, QWORD PTR $T2[rbp]
	call	??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z	; cow::Buffer::Buffer
	mov	QWORD PTR tv131[rbp], rax
	jmp	SHORT $LN4@make_uniqu
$LN3@make_uniqu:
	mov	QWORD PTR tv131[rbp], 0
$LN4@make_uniqu:
	mov	rax, QWORD PTR tv131[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@PEAVBuffer@cow@@@Z ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> ><std::default_delete<cow::Buffer>,0>
	mov	eax, DWORD PTR $T3[rbp]
	or	eax, 1
	mov	DWORD PTR $T3[rbp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 3424
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z ENDP ; std::make_unique<cow::Buffer,cow::Device &,unsigned __int64 &,enum VkBufferUsageFlagBits,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 260
tv130 = 276
tv128 = 280
tv94 = 288
tv92 = 296
tv131 = 304
__$ReturnUdt$ = 352
<_Args_0>$ = 360
<_Args_1>$ = 368
<_Args_2>$ = 376
<_Args_3>$ = 384
?dtor$0@?0???$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z@4HA PROC ; `std::make_unique<cow::Buffer,cow::Device &,unsigned __int64 &,enum VkBufferUsageFlagBits,int,0>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR $T2[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z@4HA ENDP ; `std::make_unique<cow::Buffer,cow::Device &,unsigned __int64 &,enum VkBufferUsageFlagBits,int,0>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
tv69 = 216
this$ = 256
??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> ><std::default_delete<cow::Buffer>,0>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3169
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv69[rbp], rax
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	??$?0$$V@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1><>
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> ><std::default_delete<cow::Buffer>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1370
$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$allocator@UVertex2DTextured@cow@@@std@@QEAA@XZ ; std::allocator<cow::Vertex2DTextured>::allocator<cow::Vertex2DTextured>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z
_TEXT	SEGMENT
_Al$ = 8
_Alproxy$ = 40
$S32$ = 68
_My_data$ = 104
_Proxy$ = 136
_Guard$6 = 184
tv131 = 392
tv129 = 400
tv95 = 408
__$ArrayPad$ = 416
this$ = 464
_Count$ = 472
<_Val_0>$ = 480
<_Val_1>$ = 488
??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1902
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 472				; 000001d8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+504]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1907
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 1908
	mov	rdx, QWORD PTR _Al$[rbp]
	lea	rcx, QWORD PTR $S32$[rbp]
	call	??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><cow::Vertex2DTextured>
	lea	rax, QWORD PTR $S32$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax
; Line 1909
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1910
	mov	r8, QWORD PTR _My_data$[rbp]
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1
; Line 1911
	cmp	QWORD PTR _Count$[rbp], 0
	je	$LN2@Construct_
; Line 1912
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Buy_nonzero@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Buy_nonzero
; Line 1913
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _Guard$6[rbp], rax
; Line 1920
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv131[rbp], rax
	mov	rcx, QWORD PTR <_Val_1>$[rbp]
	call	??$forward@AEBQEAUVertex2DTextured@cow@@@std@@YAAEBQEAUVertex2DTextured@cow@@AEBQEAU12@@Z ; std::forward<cow::Vertex2DTextured * const &>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv129[rbp], rax
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBQEAUVertex2DTextured@cow@@@std@@YAAEBQEAUVertex2DTextured@cow@@AEBQEAU12@@Z ; std::forward<cow::Vertex2DTextured * const &>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv95[rbp], rax
	mov	r9, QWORD PTR _Al$[rbp]
	mov	r8, QWORD PTR tv131[rbp]
	mov	rdx, QWORD PTR tv129[rbp]
	mov	rcx, QWORD PTR tv95[rbp]
	call	??$_Uninitialized_copy@PEAUVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAPEAUVertex2DTextured@cow@@QEAU12@0PEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Uninitialized_copy<cow::Vertex2DTextured *,std::allocator<cow::Vertex2DTextured> >
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 1925
	mov	QWORD PTR _Guard$6[rbp], 0
; Line 1926
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >::~_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >
$LN2@Construct_:
; Line 1928
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1
; Line 1929
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+440]
	pop	rdi
	pop	rbp
	ret	0
??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_Alproxy$ = 40
$S32$ = 68
_My_data$ = 104
_Proxy$ = 136
_Guard$6 = 184
tv131 = 392
tv129 = 400
tv95 = 408
__$ArrayPad$ = 416
this$ = 464
_Count$ = 472
<_Val_0>$ = 480
<_Val_1>$ = 488
?dtor$0@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA PROC ; `std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA ENDP ; `std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_Alproxy$ = 40
$S32$ = 68
_My_data$ = 104
_Proxy$ = 136
_Guard$6 = 184
tv131 = 392
tv129 = 400
tv95 = 408
__$ArrayPad$ = 416
this$ = 464
_Count$ = 472
<_Val_0>$ = 480
<_Val_1>$ = 488
?dtor$1@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA PROC ; `std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >::~_Tidy_guard<std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z@4HA ENDP ; `std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0V?$allocator@UVertex2DTextured@cow@@@std@@$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UVertex2DTextured@cow@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
??$?0V?$allocator@UVertex2DTextured@cow@@@std@@$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UVertex2DTextured@cow@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1><std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1375
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Val1$[rbp]
	call	??$forward@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YA$$QEAV?$allocator@UVertex2DTextured@cow@@@0@AEAV10@@Z ; std::forward<std::allocator<cow::Vertex2DTextured> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0V?$allocator@UVertex2DTextured@cow@@@std@@$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UVertex2DTextured@cow@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1><std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 823
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_one_at_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Mylast$ = 40
tv83 = 248
tv81 = 256
this$ = 304
<_Val_0>$ = 312
??$_Emplace_one_at_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_one_at_back<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 800
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 802
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 803
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 805
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN2@Emplace_on
; Line 806
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_back_with_unused_capacity@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_back_with_unused_capacity<cow::Vertex2DTextured>
	jmp	SHORT $LN1@Emplace_on
$LN2@Emplace_on:
; Line 809
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	QWORD PTR tv83[rbp], rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv81[rbp], rax
	mov	r8, QWORD PTR tv83[rbp]
	mov	rdx, QWORD PTR tv81[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_reallocate@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAPEAUVertex2DTextured@cow@@QEAU23@$$QEAU23@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_reallocate<cow::Vertex2DTextured>
$LN1@Emplace_on:
; Line 810
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_one_at_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_one_at_back<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z PROC ; std::forward<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ENDP ; std::forward<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$emplace_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA?A_T$$QEAUVertex2DTextured@cow@@@Z
_TEXT	SEGMENT
_Result$ = 8
this$ = 256
<_Val_0>$ = 264
??$emplace_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA?A_T$$QEAUVertex2DTextured@cow@@@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::emplace_back<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 886
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 888
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@UVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::forward<cow::Vertex2DTextured>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_one_at_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAUVertex2DTextured@cow@@$$QEAU23@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Emplace_one_at_back<cow::Vertex2DTextured>
	mov	QWORD PTR _Result$[rbp], rax
; Line 890
	mov	rax, QWORD PTR _Result$[rbp]
; Line 894
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$emplace_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA?A_T$$QEAUVertex2DTextured@cow@@@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::emplace_back<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AEAUVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAUVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z PROC ; std::move<cow::Vertex2DTextured &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1352
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1353
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1354
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$move@AEAUVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ENDP ; std::move<cow::Vertex2DTextured &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_Al$ = 8
_Alproxy$ = 40
$S31$ = 68
_My_data$ = 104
_Proxy$ = 136
_Guard$6 = 184
__$ArrayPad$ = 392
this$ = 432
_Count$ = 440
??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1902
$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 440				; 000001b8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+472]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1907
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 1908
	mov	rdx, QWORD PTR _Al$[rbp]
	lea	rcx, QWORD PTR $S31$[rbp]
	call	??$?0PEAUVkCommandBuffer_T@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><VkCommandBuffer_T *>
	lea	rax, QWORD PTR $S31$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax
; Line 1909
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1910
	mov	r8, QWORD PTR _My_data$[rbp]
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1
; Line 1911
	cmp	QWORD PTR _Count$[rbp], 0
	je	SHORT $LN2@Construct_
; Line 1912
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Buy_nonzero@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Buy_nonzero
; Line 1913
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _Guard$6[rbp], rax
; Line 1915
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Uninitialized_value_construct_n@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@_KAEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<VkCommandBuffer_T *> >
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 1925
	mov	QWORD PTR _Guard$6[rbp], 0
; Line 1926
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >::~_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >
$LN2@Construct_:
; Line 1928
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1
; Line 1929
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+408]
	pop	rdi
	pop	rbp
	ret	0
??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_Alproxy$ = 40
$S31$ = 68
_My_data$ = 104
_Proxy$ = 136
_Guard$6 = 184
__$ArrayPad$ = 392
this$ = 432
_Count$ = 440
?dtor$0@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_Alproxy$ = 40
$S31$ = 68
_My_data$ = 104
_Proxy$ = 136
_Guard$6 = 184
__$ArrayPad$ = 392
this$ = 432
_Count$ = 440
?dtor$1@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA PROC ; `std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >::~_Tidy_guard<std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z@4HA ENDP ; `std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
??$?0AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1><std::allocator<VkCommandBuffer_T *> const &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1375
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Val1$[rbp]
	call	??$forward@AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAAEBV?$allocator@PEAUVkCommandBuffer_T@@@0@AEBV10@@Z ; std::forward<std::allocator<VkCommandBuffer_T *> const &>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1><std::allocator<VkCommandBuffer_T *> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0PEAUVkCommandBuffer_T@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0PEAUVkCommandBuffer_T@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><VkCommandBuffer_T *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 823
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0PEAUVkCommandBuffer_T@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><VkCommandBuffer_T *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy_maybe_null@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy_maybe_null@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z PROC ; std::_Unfancy_maybe_null<VkCommandBuffer_T *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 427
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 428
	mov	rax, QWORD PTR _Ptr$[rbp]
; Line 429
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy_maybe_null@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z ENDP ; std::_Unfancy_maybe_null<VkCommandBuffer_T *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UVkVertexInputAttributeDescription@@@std@@V?$_Vector_val@U?$_Simple_types@UVkVertexInputAttributeDescription@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@UVkVertexInputAttributeDescription@@@std@@V?$_Vector_val@U?$_Simple_types@UVkVertexInputAttributeDescription@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<VkVertexInputAttributeDescription>,std::_Vector_val<std::_Simple_types<VkVertexInputAttributeDescription> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1377
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1378
	mov	rax, QWORD PTR this$[rbp]
; Line 1379
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UVkVertexInputAttributeDescription@@@std@@V?$_Vector_val@U?$_Simple_types@UVkVertexInputAttributeDescription@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<VkVertexInputAttributeDescription>,std::_Vector_val<std::_Simple_types<VkVertexInputAttributeDescription> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ PROC ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2027
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2028
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UVkVertexInputAttributeDescription@@@std@@V?$_Vector_val@U?$_Simple_types@UVkVertexInputAttributeDescription@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ ; std::_Compressed_pair<std::allocator<VkVertexInputAttributeDescription>,std::_Vector_val<std::_Simple_types<VkVertexInputAttributeDescription> >,1>::_Get_first
; Line 2029
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ ENDP ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Myend$ = 136
this$ = 384
?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ PROC ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1881
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1882
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 1883
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1884
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 1885
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 1886
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax
; Line 1888
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
; Line 1890
	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy
; Line 1891
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@YAXPEAUVkVertexInputAttributeDescription@@QEAU1@AEAV?$allocator@UVkVertexInputAttributeDescription@@@0@@Z ; std::_Destroy_range<std::allocator<VkVertexInputAttributeDescription> >
; Line 1893
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@UVkVertexInputAttributeDescription@@@std@@QEAAXQEAUVkVertexInputAttributeDescription@@_K@Z ; std::allocator<VkVertexInputAttributeDescription>::deallocate
; Line 1895
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1896
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1897
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:
; Line 1899
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ ENDP ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?size@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEBA_KXZ PROC ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1713
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1714
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1715
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4
; Line 1716
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?size@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAPEAUVkVertexInputAttributeDescription@@XZ
_TEXT	SEGMENT
this$ = 224
?data@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAPEAUVkVertexInputAttributeDescription@@XZ PROC ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::data, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1632
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1633
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy_maybe_null@UVkVertexInputAttributeDescription@@@std@@YAPEAUVkVertexInputAttributeDescription@@PEAU1@@Z ; std::_Unfancy_maybe_null<VkVertexInputAttributeDescription>
; Line 1634
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?data@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAPEAUVkVertexInputAttributeDescription@@XZ ENDP ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S27$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ PROC ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::~vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 790
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 791
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAXXZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::_Tidy
; Line 793
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@AEAAAEAV?$allocator@UVkVertexInputAttributeDescription@@@2@XZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S27$[rbp]
	call	??$?0UVkVertexInputAttributeDescription@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVkVertexInputAttributeDescription@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><VkVertexInputAttributeDescription>
	lea	rax, QWORD PTR $S27$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax
; Line 794
	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
; Line 796
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ ENDP ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::~vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@UVkVertexInputAttributeDescription@@@std@@QEAAXQEAUVkVertexInputAttributeDescription@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@UVkVertexInputAttributeDescription@@@std@@QEAAXQEAUVkVertexInputAttributeDescription@@_K@Z PROC ; std::allocator<VkVertexInputAttributeDescription>::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 827
$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
$LN4@deallocate:
; Line 828
	cmp	QWORD PTR _Ptr$[rbp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rbp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate
; Line 830
	imul	rax, QWORD PTR _Count$[rbp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
; Line 831
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@UVkVertexInputAttributeDescription@@@std@@QEAAXQEAUVkVertexInputAttributeDescription@@_K@Z ENDP ; std::allocator<VkVertexInputAttributeDescription>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 8
$T1 = 232
this$ = 288
_Al$ = 296
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1056
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1057
	mov	edx, 1
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR _New_proxy$[rbp], rax
; Line 1058
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR _New_proxy$[rbp]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
; Line 1059
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _New_proxy$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1060
	mov	rax, QWORD PTR _New_proxy$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1061
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1><>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1370
$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$allocator@PEAVRenderObject@@@std@@QEAA@XZ ; std::allocator<RenderObject *>::allocator<RenderObject *>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<RenderObject *> >::_Vector_val<std::_Simple_types<RenderObject *> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 984
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 988
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
; Line 989
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 8
_Val$ = 256
_New_val$ = 264
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\utility
; Line 605
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__227866D8_utility
	call	__CheckForDebuggerJustMyCode
; Line 607
	mov	rax, QWORD PTR _Val$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rbp], rax
; Line 608
	mov	rax, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR _New_val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx
; Line 609
	mov	rax, QWORD PTR _Old_val$[rbp]
; Line 610
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0PEAVRenderObject@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVRenderObject@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0PEAVRenderObject@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVRenderObject@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 823
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0PEAVRenderObject@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVRenderObject@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 833
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 834
	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; Line 835
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 827
$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
$LN4@deallocate:
; Line 828
	cmp	QWORD PTR _Ptr$[rbp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rbp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate
; Line 830
	imul	rax, QWORD PTR _Count$[rbp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
; Line 831
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@U_Container_proxy@std@@@std@@QEAAXQEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Emplace_one_at_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Mylast$ = 40
tv83 = 248
tv81 = 256
this$ = 304
<_Val_0>$ = 312
??$_Emplace_one_at_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_one_at_back<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 800
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 802
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 803
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 805
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN2@Emplace_on
; Line 806
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_back_with_unused_capacity@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_back_with_unused_capacity<RenderObject *>
	jmp	SHORT $LN1@Emplace_on
$LN2@Emplace_on:
; Line 809
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	QWORD PTR tv83[rbp], rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv81[rbp], rax
	mov	r8, QWORD PTR tv83[rbp]
	mov	rdx, QWORD PTR tv81[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_reallocate@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAPEAPEAVRenderObject@@QEAPEAV2@$$QEAPEAV2@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_reallocate<RenderObject *>
$LN1@Emplace_on:
; Line 810
	lea	rsp, QWORD PTR [rbp+280]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_one_at_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_one_at_back<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z PROC ; std::forward<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1341
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1342
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1343
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ENDP ; std::forward<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$emplace_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA?A_T$$QEAPEAVRenderObject@@@Z
_TEXT	SEGMENT
_Result$ = 8
this$ = 256
<_Val_0>$ = 264
??$emplace_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA?A_T$$QEAPEAVRenderObject@@@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::emplace_back<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 886
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 888
	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@PEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::forward<RenderObject *>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_one_at_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAPEAVRenderObject@@$$QEAPEAV2@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Emplace_one_at_back<RenderObject *>
	mov	QWORD PTR _Result$[rbp], rax
; Line 890
	mov	rax, QWORD PTR _Result$[rbp]
; Line 894
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$emplace_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA?A_T$$QEAPEAVRenderObject@@@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::emplace_back<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$move@AEAPEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAPEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z PROC ; std::move<RenderObject * &>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\type_traits
; Line 1352
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4CC0724B_type_traits
	call	__CheckForDebuggerJustMyCode
; Line 1353
	mov	rax, QWORD PTR _Arg$[rbp]
; Line 1354
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$move@AEAPEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ENDP ; std::move<RenderObject * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Unfancy_maybe_null@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy_maybe_null@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z PROC ; std::_Unfancy_maybe_null<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 427
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 428
	mov	rax, QWORD PTR _Ptr$[rbp]
; Line 429
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy_maybe_null@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z ENDP ; std::_Unfancy_maybe_null<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1381
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1382
	mov	rax, QWORD PTR this$[rbp]
; Line 1383
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1377
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1378
	mov	rax, QWORD PTR this$[rbp]
; Line 1379
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<RenderObject *> >::_Vector_val<std::_Simple_types<RenderObject *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 392
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<RenderObject *> >::_Vector_val<std::_Simple_types<RenderObject *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2031
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2032
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Get_first
; Line 2033
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2027
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2028
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Get_first
; Line 2029
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Orphan_range@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2012
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2015
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Orphan_ran
; Line 2016
	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range_unlocked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_unlocked
; Line 2017
	jmp	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 2020
	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_locked
$LN3@Orphan_ran:
; Line 2022
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z
_TEXT	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
_First$ = 264
_Last$ = 272
?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_locked, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2007
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2008
	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1
; Line 2009
	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range_unlocked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_unlocked
	npad	1
; Line 2010
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
_First$ = 264
_Last$ = 272
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z@4HA PROC ; `std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z@4HA ENDP ; `std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range_unlocked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z
_TEXT	SEGMENT
_Pnext$ = 8
_Pnextptr$1 = 40
_Temp$2 = 72
_Temp$3 = 104
this$ = 352
_First$ = 360
_Last$ = 368
?_Orphan_range_unlocked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_unlocked, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1992
$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1993
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_ran:
; Line 1994
	mov	rax, QWORD PTR _Pnext$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran
; Line 1995
	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rbp], rax
; Line 1996
	mov	rax, QWORD PTR _First$[rbp]
	cmp	QWORD PTR _Pnextptr$1[rbp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rbp]
	cmp	QWORD PTR _Last$[rbp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:
; Line 1997
	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rbp], rax
; Line 1998
	mov	rax, QWORD PTR _Temp$2[rbp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rbp], rax
; Line 1999
	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:
; Line 2000
	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rbp], rax
; Line 2001
	mov	rax, QWORD PTR _Temp$3[rbp]
	mov	QWORD PTR [rax], 0
; Line 2002
	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rcx, QWORD PTR _Temp$3[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:
; Line 2004
	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:
; Line 2005
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range_unlocked@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAXPEAPEAVRenderObject@@0@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlength@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@CAXXZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Xlength, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1983
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1984
	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:
; Line 1985
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Xlength@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@CAXXZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Myend$ = 136
this$ = 384
?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1881
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1882
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 1883
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1884
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 1885
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 1886
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax
; Line 1888
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
; Line 1890
	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy
; Line 1891
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ; std::_Destroy_range<std::allocator<RenderObject *> >
; Line 1893
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z ; std::allocator<RenderObject *>::deallocate
; Line 1895
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1896
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1897
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:
; Line 1899
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Change_array@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXQEAPEAVRenderObject@@_K1@Z
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Myend$ = 136
this$ = 384
_Newvec$ = 392
_Newsize$ = 400
_Newcapacity$ = 408
?_Change_array@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXQEAPEAVRenderObject@@_K1@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Change_array, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1859
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1861
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 1862
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1863
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 1864
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 1865
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax
; Line 1867
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
; Line 1869
	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr
; Line 1870
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@PEAVRenderObject@@@std@@@std@@YAXPEAPEAVRenderObject@@QEAPEAV1@AEAV?$allocator@PEAVRenderObject@@@0@@Z ; std::_Destroy_range<std::allocator<RenderObject *> >
; Line 1872
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z ; std::allocator<RenderObject *>::deallocate
$LN2@Change_arr:
; Line 1875
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1876
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newsize$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 1877
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newcapacity$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 1879
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Change_array@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXQEAPEAVRenderObject@@_K1@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Calculate_growth@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 8
_Max$ = 40
_Geometric$ = 72
this$ = 320
_Newsize$ = 328
?_Calculate_growth@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Calculate_growth, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1807
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1809
	mov	rcx, QWORD PTR this$[rbp]
	call	?capacity@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::capacity
	mov	QWORD PTR _Oldcapacity$[rbp], rax
; Line 1810
	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::max_size
	mov	QWORD PTR _Max$[rbp], rax
; Line 1812
	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rbp], rax
	jbe	SHORT $LN2@Calculate_
; Line 1813
	mov	rax, QWORD PTR _Max$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:
; Line 1816
	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rbp], rax
; Line 1818
	mov	rax, QWORD PTR _Newsize$[rbp]
	cmp	QWORD PTR _Geometric$[rbp], rax
	jae	SHORT $LN3@Calculate_
; Line 1819
	mov	rax, QWORD PTR _Newsize$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:
; Line 1822
	mov	rax, QWORD PTR _Geometric$[rbp]
$LN1@Calculate_:
; Line 1823
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?_Calculate_growth@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?capacity@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::capacity, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1723
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1724
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1725
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 3
; Line 1726
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?capacity@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
this$ = 288
?max_size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1718
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1719
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEBAAEBV?$allocator@PEAVRenderObject@@@2@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SA_KAEBV?$allocator@PEAVRenderObject@@@2@@Z ; std::_Default_allocator_traits<std::allocator<RenderObject *> >::max_size
	mov	QWORD PTR $T1[rbp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]
; Line 1721
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1713
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1714
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1715
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 3
; Line 1716
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ
_TEXT	SEGMENT
this$ = 224
?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::data, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1632
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1633
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy_maybe_null@PEAVRenderObject@@@std@@YAPEAPEAVRenderObject@@PEAPEAV1@@Z ; std::_Unfancy_maybe_null<RenderObject *>
; Line 1634
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
?push_back@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::push_back, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 900
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 902
	mov	rcx, QWORD PTR _Val$[rbp]
	call	??$move@AEAPEAVRenderObject@@@std@@YA$$QEAPEAVRenderObject@@AEAPEAV1@@Z ; std::move<RenderObject * &>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	??$emplace_back@PEAVRenderObject@@@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA?A_T$$QEAPEAVRenderObject@@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::emplace_back<RenderObject *>
; Line 903
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S5$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::~vector<RenderObject *,std::allocator<RenderObject *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 790
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 791
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAXXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Tidy
; Line 793
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S5$[rbp]
	call	??$?0PEAVRenderObject@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVRenderObject@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RenderObject *>
	lea	rax, QWORD PTR $S5$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax
; Line 794
	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
; Line 796
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::~vector<RenderObject *,std::allocator<RenderObject *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv83 = 248
tv69 = 248
this$ = 288
??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ PROC ; std::vector<RenderObject *,std::allocator<RenderObject *> >::vector<RenderObject *,std::allocator<RenderObject *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 659
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv69[rbp], rax
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@PEAVRenderObject@@@std@@V?$_Vector_val@U?$_Simple_types@PEAVRenderObject@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1>::_Compressed_pair<std::allocator<RenderObject *>,std::_Vector_val<std::_Simple_types<RenderObject *> >,1><>
; Line 660
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv83[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@AEAAAEAV?$allocator@PEAVRenderObject@@@2@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0PEAVRenderObject@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAVRenderObject@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><RenderObject *>
	mov	rdx, rax
	mov	rcx, QWORD PTR tv83[rbp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 661
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ENDP ; std::vector<RenderObject *,std::allocator<RenderObject *> >::vector<RenderObject *,std::allocator<RenderObject *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SA_KAEBV?$allocator@PEAVRenderObject@@@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SA_KAEBV?$allocator@PEAVRenderObject@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<RenderObject *> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 693
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 694
	mov	rax, 2305843009213693951		; 1fffffffffffffffH
; Line 695
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAVRenderObject@@@std@@@std@@SA_KAEBV?$allocator@PEAVRenderObject@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<RenderObject *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@PEAVRenderObject@@@std@@QEAAPEAPEAVRenderObject@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@PEAVRenderObject@@@std@@QEAAPEAPEAVRenderObject@@_K@Z PROC ; std::allocator<RenderObject *>::allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 833
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 834
	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; Line 835
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@PEAVRenderObject@@@std@@QEAAPEAPEAVRenderObject@@_K@Z ENDP ; std::allocator<RenderObject *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z PROC ; std::allocator<RenderObject *>::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 827
$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
$LN4@deallocate:
; Line 828
	cmp	QWORD PTR _Ptr$[rbp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rbp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate
; Line 830
	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
; Line 831
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@PEAVRenderObject@@@std@@QEAAXQEAPEAVRenderObject@@_K@Z ENDP ; std::allocator<RenderObject *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@PEAVRenderObject@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@PEAVRenderObject@@@std@@QEAA@XZ PROC	; std::allocator<RenderObject *>::allocator<RenderObject *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 819
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$allocator@PEAVRenderObject@@@std@@QEAA@XZ ENDP	; std::allocator<RenderObject *>::allocator<RenderObject *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0MN@?$vec@$01M$0A@@glm@@QEAA@MN@Z
_TEXT	SEGMENT
this$ = 224
_x$ = 232
_y$ = 240
??$?0MN@?$vec@$01M$0A@@glm@@QEAA@MN@Z PROC		; glm::vec<2,float,0>::vec<2,float,0><float,double>, COMDAT
; File E:\VulkanSDK\1.3.216.0\Include\glm\detail\type_vec2.inl
; Line 55
$LN3:
	movsd	QWORD PTR [rsp+24], xmm2
	movss	DWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C29399E7_type_vec2@inl
	call	__CheckForDebuggerJustMyCode
; Line 53
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR _x$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 54
	cvtsd2ss xmm0, QWORD PTR _y$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+4], xmm0
; Line 55
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0MN@?$vec@$01M$0A@@glm@@QEAA@MN@Z ENDP		; glm::vec<2,float,0>::vec<2,float,0><float,double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z
_TEXT	SEGMENT
this$ = 224
_x$ = 232
_y$ = 240
??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z PROC		; glm::vec<2,float,0>::vec<2,float,0><double,double>, COMDAT
; File E:\VulkanSDK\1.3.216.0\Include\glm\detail\type_vec2.inl
; Line 55
$LN3:
	movsd	QWORD PTR [rsp+24], xmm2
	movsd	QWORD PTR [rsp+16], xmm1
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__C29399E7_type_vec2@inl
	call	__CheckForDebuggerJustMyCode
; Line 53
	cvtsd2ss xmm0, QWORD PTR _x$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax], xmm0
; Line 54
	cvtsd2ss xmm0, QWORD PTR _y$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+4], xmm0
; Line 55
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z ENDP		; glm::vec<2,float,0>::vec<2,float,0><double,double>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAX_K@Z PROC ; cow::GraphicsPipeline<cow::Vertex2DTextured>::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAX_K@Z ENDP ; cow::GraphicsPipeline<cow::Vertex2DTextured>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?bind@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z
_TEXT	SEGMENT
this$ = 224
cmdBuffer$ = 232
?bind@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z PROC ; cow::GraphicsPipeline<cow::Vertex2DTextured>::bind, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Pipelines.hpp
; Line 123
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__32DA32DB_Pipelines@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [rax+16]
	xor	edx, edx
	mov	rcx, QWORD PTR cmdBuffer$[rbp]
	call	vkCmdBindPipeline
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?bind@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ENDP ; cow::GraphicsPipeline<cow::Vertex2DTextured>::bind
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ
_TEXT	SEGMENT
tv128 = 192
tv85 = 192
tv74 = 192
tv94 = 200
tv83 = 200
tv72 = 200
this$ = 240
??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ PROC ; cow::GraphicsPipeline<cow::Vertex2DTextured>::~GraphicsPipeline<cow::Vertex2DTextured>, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Pipelines.hpp
; Line 117
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__32DA32DB_Pipelines@hpp
	call	__CheckForDebuggerJustMyCode
; Line 118
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv74[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv72[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv74[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	vkDestroyShaderModule
; Line 119
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv85[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv83[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv85[rbp]
	mov	rcx, QWORD PTR tv83[rbp]
	call	vkDestroyShaderModule
; Line 120
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv128[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv94[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv128[rbp]
	mov	rcx, QWORD PTR tv94[rbp]
	call	vkDestroyPipeline
	npad	1
; Line 121
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ ENDP ; cow::GraphicsPipeline<cow::Vertex2DTextured>::~GraphicsPipeline<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z
_TEXT	SEGMENT
shaderStages$ = 16
bindDesc$ = 136
attrDesc$ = 184
vertexInputInfo$ = 248
inputAssemblyInfo$ = 328
viewportInfo$ = 392
rasterizationInfo$ = 480
createInfo$ = 576
$T11 = 1128
$T12 = 1176
tv210 = 1208
tv86 = 1208
tv75 = 1208
tv84 = 1216
tv73 = 1216
__$ArrayPad$ = 1224
this$ = 1264
device$ = 1272
pCreateInfo$ = 1280
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z PROC ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Pipelines.hpp
; Line 13
$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 1280				; 00000500H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 212				; 000000d4H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1320]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__32DA32DB_Pipelines@hpp
	call	__CheckForDebuggerJustMyCode
; Line 12
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR device$[rbp]
	mov	QWORD PTR [rax+24], rcx
; Line 14
	mov	rax, QWORD PTR pCreateInfo$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv75[rbp], rax
	mov	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv73[rbp], rax
	mov	rdx, QWORD PTR tv75[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	?createShaderModule@cow@@YAPEAUVkShaderModule_T@@PEAUVkDevice_T@@PEBD@Z ; cow::createShaderModule
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 15
	mov	rax, QWORD PTR pCreateInfo$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv86[rbp], rax
	mov	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv84[rbp], rax
	mov	rdx, QWORD PTR tv86[rbp]
	mov	rcx, QWORD PTR tv84[rbp]
	call	?createShaderModule@cow@@YAPEAUVkShaderModule_T@@PEAUVkDevice_T@@PEBD@Z ; cow::createShaderModule
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax
; Line 17
	lea	rax, QWORD PTR shaderStages$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 96					; 00000060H
	rep stosb
; Line 18
	mov	eax, 48					; 00000030H
	imul	rax, rax, 0
	mov	DWORD PTR shaderStages$[rbp+rax], 18
; Line 19
	mov	eax, 48					; 00000030H
	imul	rax, rax, 0
	mov	DWORD PTR shaderStages$[rbp+rax+20], 1
; Line 20
	mov	eax, 48					; 00000030H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR shaderStages$[rbp+rax+24], rcx
; Line 21
	mov	eax, 48					; 00000030H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR pCreateInfo$[rbp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR shaderStages$[rbp+rax+32], rcx
; Line 22
	mov	eax, 48					; 00000030H
	imul	rax, rax, 0
	mov	DWORD PTR shaderStages$[rbp+rax+16], 0
; Line 23
	mov	eax, 48					; 00000030H
	imul	rax, rax, 0
	mov	QWORD PTR shaderStages$[rbp+rax+8], 0
; Line 24
	mov	eax, 48					; 00000030H
	imul	rax, rax, 0
	mov	QWORD PTR shaderStages$[rbp+rax+40], 0
; Line 26
	mov	eax, 48					; 00000030H
	imul	rax, rax, 1
	mov	DWORD PTR shaderStages$[rbp+rax], 18
; Line 27
	mov	eax, 48					; 00000030H
	imul	rax, rax, 1
	mov	DWORD PTR shaderStages$[rbp+rax+20], 16
; Line 28
	mov	eax, 48					; 00000030H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR shaderStages$[rbp+rax+24], rcx
; Line 29
	mov	eax, 48					; 00000030H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR pCreateInfo$[rbp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR shaderStages$[rbp+rax+32], rcx
; Line 30
	mov	eax, 48					; 00000030H
	imul	rax, rax, 1
	mov	DWORD PTR shaderStages$[rbp+rax+16], 0
; Line 31
	mov	eax, 48					; 00000030H
	imul	rax, rax, 1
	mov	QWORD PTR shaderStages$[rbp+rax+8], 0
; Line 32
	mov	eax, 48					; 00000030H
	imul	rax, rax, 1
	mov	QWORD PTR shaderStages$[rbp+rax+40], 0
; Line 38
	lea	rcx, QWORD PTR $T11[rbp]
	call	?bindingDesc@Vertex2DTextured@cow@@SA?AUVkVertexInputBindingDescription@@XZ ; cow::Vertex2DTextured::bindingDesc
	lea	rcx, QWORD PTR bindDesc$[rbp]
	mov	rdi, rcx
	mov	rsi, rax
	mov	ecx, 12
	rep movsb
; Line 39
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR attrDesc$[rbp]
	call	?__autoclassinit2@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAX_K@Z
	lea	rcx, QWORD PTR attrDesc$[rbp]
	call	?attributeDesc@Vertex2DTextured@cow@@SA?AV?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@XZ ; cow::Vertex2DTextured::attributeDesc
	npad	1
; Line 41
	lea	rax, QWORD PTR vertexInputInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
; Line 42
	mov	DWORD PTR vertexInputInfo$[rbp], 19
; Line 43
	lea	rcx, QWORD PTR attrDesc$[rbp]
	call	?size@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEBA_KXZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::size
	mov	DWORD PTR vertexInputInfo$[rbp+32], eax
; Line 44
	mov	DWORD PTR vertexInputInfo$[rbp+20], 1
; Line 45
	lea	rcx, QWORD PTR attrDesc$[rbp]
	call	?data@?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAAPEAUVkVertexInputAttributeDescription@@XZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::data
	mov	QWORD PTR vertexInputInfo$[rbp+40], rax
; Line 46
	lea	rax, QWORD PTR bindDesc$[rbp]
	mov	QWORD PTR vertexInputInfo$[rbp+24], rax
; Line 51
	lea	rax, QWORD PTR inputAssemblyInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 32					; 00000020H
	rep stosb
; Line 52
	mov	DWORD PTR inputAssemblyInfo$[rbp], 20
; Line 53
	mov	DWORD PTR inputAssemblyInfo$[rbp+20], 3
; Line 54
	mov	DWORD PTR inputAssemblyInfo$[rbp+24], 0
; Line 55
	mov	DWORD PTR inputAssemblyInfo$[rbp+16], 0
; Line 56
	mov	QWORD PTR inputAssemblyInfo$[rbp+8], 0
; Line 60
	lea	rax, QWORD PTR viewportInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
; Line 61
	mov	DWORD PTR viewportInfo$[rbp], 22
; Line 62
	mov	DWORD PTR viewportInfo$[rbp+20], 1
; Line 63
	mov	QWORD PTR viewportInfo$[rbp+24], 0
; Line 64
	mov	DWORD PTR viewportInfo$[rbp+32], 1
; Line 65
	mov	QWORD PTR viewportInfo$[rbp+40], 0
; Line 69
	lea	rax, QWORD PTR rasterizationInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 64					; 00000040H
	rep stosb
; Line 70
	mov	DWORD PTR rasterizationInfo$[rbp], 23
; Line 71
	mov	DWORD PTR rasterizationInfo$[rbp+20], 0
; Line 72
	mov	DWORD PTR rasterizationInfo$[rbp+24], 0
; Line 73
	mov	DWORD PTR rasterizationInfo$[rbp+28], 0
; Line 74
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR rasterizationInfo$[rbp+56], xmm0
; Line 75
	mov	DWORD PTR rasterizationInfo$[rbp+32], 0
; Line 76
	mov	DWORD PTR rasterizationInfo$[rbp+36], 1
; Line 77
	mov	DWORD PTR rasterizationInfo$[rbp+40], 0
; Line 78
	xorps	xmm0, xmm0
	movss	DWORD PTR rasterizationInfo$[rbp+44], xmm0
; Line 79
	xorps	xmm0, xmm0
	movss	DWORD PTR rasterizationInfo$[rbp+48], xmm0
; Line 80
	xorps	xmm0, xmm0
	movss	DWORD PTR rasterizationInfo$[rbp+52], xmm0
; Line 84
	lea	rax, QWORD PTR createInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 144				; 00000090H
	rep stosb
; Line 85
	mov	DWORD PTR createInfo$[rbp], 28
; Line 86
	mov	QWORD PTR createInfo$[rbp+8], 0
; Line 87
	mov	DWORD PTR createInfo$[rbp+16], 0
; Line 88
	mov	DWORD PTR createInfo$[rbp+20], 2
; Line 89
	lea	rax, QWORD PTR shaderStages$[rbp]
	mov	QWORD PTR createInfo$[rbp+24], rax
; Line 90
	lea	rax, QWORD PTR vertexInputInfo$[rbp]
	mov	QWORD PTR createInfo$[rbp+32], rax
; Line 91
	lea	rax, QWORD PTR inputAssemblyInfo$[rbp]
	mov	QWORD PTR createInfo$[rbp+40], rax
; Line 92
	mov	QWORD PTR createInfo$[rbp+48], 0
; Line 93
	lea	rax, QWORD PTR viewportInfo$[rbp]
	mov	QWORD PTR createInfo$[rbp+56], rax
; Line 94
	lea	rax, QWORD PTR rasterizationInfo$[rbp]
	mov	QWORD PTR createInfo$[rbp+64], rax
; Line 95
	mov	rax, QWORD PTR pCreateInfo$[rbp]
	add	rax, 24
	mov	QWORD PTR createInfo$[rbp+72], rax
; Line 96
	mov	rax, QWORD PTR pCreateInfo$[rbp]
	add	rax, 160				; 000000a0H
	mov	QWORD PTR createInfo$[rbp+80], rax
; Line 97
	mov	rax, QWORD PTR pCreateInfo$[rbp]
	add	rax, 104				; 00000068H
	mov	QWORD PTR createInfo$[rbp+88], rax
; Line 98
	mov	rax, QWORD PTR pCreateInfo$[rbp]
	add	rax, 296				; 00000128H
	mov	QWORD PTR createInfo$[rbp+96], rax
; Line 99
	mov	rax, QWORD PTR pCreateInfo$[rbp]
	mov	rax, QWORD PTR [rax+328]
	mov	QWORD PTR createInfo$[rbp+104], rax
; Line 100
	mov	rax, QWORD PTR pCreateInfo$[rbp]
	mov	rax, QWORD PTR [rax+336]
	mov	QWORD PTR createInfo$[rbp+112], rax
; Line 101
	mov	rax, QWORD PTR pCreateInfo$[rbp]
	mov	eax, DWORD PTR [rax+344]
	mov	DWORD PTR createInfo$[rbp+120], eax
; Line 102
	mov	QWORD PTR createInfo$[rbp+128], 0
; Line 103
	mov	DWORD PTR createInfo$[rbp+136], -1
; Line 111
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	QWORD PTR tv210[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	rcx, QWORD PTR tv210[rbp]
	mov	QWORD PTR [rsp+40], rcx
	mov	QWORD PTR [rsp+32], 0
	lea	r9, QWORD PTR createInfo$[rbp]
	mov	r8d, 1
	xor	edx, edx
	mov	rcx, rax
	call	vkCreateGraphicsPipelines
	test	eax, eax
	je	SHORT $LN2@GraphicsPi
; Line 113
	lea	rdx, OFFSET FLAT:??_C@_0CD@JOEKPGKM@failed?5to?5create?5graphics?5pipel@
	lea	rcx, QWORD PTR $T12[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T12[rbp]
	call	_CxxThrowException
	npad	1
$LN2@GraphicsPi:
; Line 115
	lea	rcx, QWORD PTR attrDesc$[rbp]
	call	??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::~vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1232]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN5@GraphicsPi:
??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z ENDP ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
shaderStages$ = 16
bindDesc$ = 136
attrDesc$ = 184
vertexInputInfo$ = 248
inputAssemblyInfo$ = 328
viewportInfo$ = 392
rasterizationInfo$ = 480
createInfo$ = 576
$T11 = 1128
$T12 = 1176
tv210 = 1208
tv86 = 1208
tv75 = 1208
tv84 = 1216
tv73 = 1216
__$ArrayPad$ = 1224
this$ = 1264
device$ = 1272
pCreateInfo$ = 1280
?dtor$0@?0???0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z@4HA PROC ; `cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	lea	rcx, QWORD PTR attrDesc$[rbp]
	call	??1?$vector@UVkVertexInputAttributeDescription@@V?$allocator@UVkVertexInputAttributeDescription@@@std@@@std@@QEAA@XZ ; std::vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >::~vector<VkVertexInputAttributeDescription,std::allocator<VkVertexInputAttributeDescription> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z@4HA ENDP ; `cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$array@UVkWriteDescriptorSet@@$01@std@@QEAAPEAUVkWriteDescriptorSet@@XZ
_TEXT	SEGMENT
this$ = 224
?data@?$array@UVkWriteDescriptorSet@@$01@std@@QEAAPEAUVkWriteDescriptorSet@@XZ PROC ; std::array<VkWriteDescriptorSet,2>::data, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\array
; Line 590
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__125A2BD9_array
	call	__CheckForDebuggerJustMyCode
; Line 591
	mov	rax, QWORD PTR this$[rbp]
; Line 592
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?data@?$array@UVkWriteDescriptorSet@@$01@std@@QEAAPEAUVkWriteDescriptorSet@@XZ ENDP ; std::array<VkWriteDescriptorSet,2>::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Pos$ = 232
??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z PROC ; std::array<VkWriteDescriptorSet,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\array
; Line 557
$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__125A2BD9_array
	call	__CheckForDebuggerJustMyCode
$LN4@operator:
; Line 559
	cmp	QWORD PTR _Pos$[rbp], 2
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BN@HMIFLIEM@array?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 559				; 0000022fH
	lea	rdx, OFFSET FLAT:??_C@_0GA@LKBGKKAK@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 559				; 0000022fH
	lea	r8, OFFSET FLAT:??_C@_1MA@HADHJGPP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1DO@NCBLADDF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
; Line 562
	imul	rax, QWORD PTR _Pos$[rbp], 64		; 00000040H
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, rax
	mov	rax, rcx
; Line 563
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ENDP ; std::array<VkWriteDescriptorSet,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$array@UVkWriteDescriptorSet@@$01@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 224
?size@?$array@UVkWriteDescriptorSet@@$01@std@@QEBA_KXZ PROC ; std::array<VkWriteDescriptorSet,2>::size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\array
; Line 529
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__125A2BD9_array
	call	__CheckForDebuggerJustMyCode
; Line 530
	mov	eax, 2
; Line 531
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?size@?$array@UVkWriteDescriptorSet@@$01@std@@QEBA_KXZ ENDP ; std::array<VkWriteDescriptorSet,2>::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$Descriptor@$01$01@cow@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$Descriptor@$01$01@cow@@QEAAX_K@Z PROC ; cow::Descriptor<2,2>::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$Descriptor@$01$01@cow@@QEAAX_K@Z ENDP ; cow::Descriptor<2,2>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getSet@?$Descriptor@$01$01@cow@@QEAAPEAUVkDescriptorSet_T@@I@Z
_TEXT	SEGMENT
this$ = 224
index$ = 232
?getSet@?$Descriptor@$01$01@cow@@QEAAPEAUVkDescriptorSet_T@@I@Z PROC ; cow::Descriptor<2,2>::getSet, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Descriptors.hpp
; Line 69
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BE4B800C_Descriptors@hpp
	call	__CheckForDebuggerJustMyCode
	mov	eax, DWORD PTR index$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rcx+rax*8]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getSet@?$Descriptor@$01$01@cow@@QEAAPEAUVkDescriptorSet_T@@I@Z ENDP ; cow::Descriptor<2,2>::getSet
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getLayout@?$Descriptor@$01$01@cow@@QEAAPEAPEAUVkDescriptorSetLayout_T@@XZ
_TEXT	SEGMENT
this$ = 224
?getLayout@?$Descriptor@$01$01@cow@@QEAAPEAPEAUVkDescriptorSetLayout_T@@XZ PROC ; cow::Descriptor<2,2>::getLayout, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Descriptors.hpp
; Line 68
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BE4B800C_Descriptors@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getLayout@?$Descriptor@$01$01@cow@@QEAAPEAPEAUVkDescriptorSetLayout_T@@XZ ENDP ; cow::Descriptor<2,2>::getLayout
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$Descriptor@$01$01@cow@@QEAA@XZ
_TEXT	SEGMENT
tv85 = 192
tv74 = 192
tv83 = 200
tv72 = 200
this$ = 240
??1?$Descriptor@$01$01@cow@@QEAA@XZ PROC		; cow::Descriptor<2,2>::~Descriptor<2,2>, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Descriptors.hpp
; Line 62
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__BE4B800C_Descriptors@hpp
	call	__CheckForDebuggerJustMyCode
; Line 63
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv74[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv72[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv74[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	vkDestroyDescriptorSetLayout
; Line 64
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv85[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv83[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv85[rbp]
	mov	rcx, QWORD PTR tv83[rbp]
	call	vkDestroyDescriptorPool
	npad	1
; Line 65
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??1?$Descriptor@$01$01@cow@@QEAA@XZ ENDP		; cow::Descriptor<2,2>::~Descriptor<2,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z
_TEXT	SEGMENT
layoutInfo$ = 8
poolInfo$ = 72
layouts$ = 136
i$6 = 168
allocInfo$ = 200
$T7 = 456
$T8 = 504
$T9 = 552
tv179 = 584
tv130 = 584
tv76 = 584
tv177 = 592
__$ArrayPad$ = 600
this$ = 640
device$ = 648
bindings$ = 656
pools$ = 664
descriptorSetCount$ = 672
??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z PROC ; cow::Descriptor<2,2>::Descriptor<2,2>, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Descriptors.hpp
; Line 16
$LN10:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 648				; 00000288H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 106				; 0000006aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+680]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__BE4B800C_Descriptors@hpp
	call	__CheckForDebuggerJustMyCode
; Line 15
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR descriptorSetCount$[rbp]
	mov	DWORD PTR [rax+24], ecx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR device$[rbp]
	mov	QWORD PTR [rax+32], rcx
; Line 18
	lea	rax, QWORD PTR layoutInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 32					; 00000020H
	rep stosb
; Line 19
	mov	DWORD PTR layoutInfo$[rbp], 32		; 00000020H
; Line 20
	mov	rcx, QWORD PTR bindings$[rbp]
	call	?size@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBA_KXZ ; std::array<VkDescriptorSetLayoutBinding,2>::size
	mov	DWORD PTR layoutInfo$[rbp+20], eax
; Line 21
	mov	rcx, QWORD PTR bindings$[rbp]
	call	?data@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBAPEBUVkDescriptorSetLayoutBinding@@XZ ; std::array<VkDescriptorSetLayoutBinding,2>::data
	mov	QWORD PTR layoutInfo$[rbp+24], rax
; Line 22
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR tv76[rbp], rax
	mov	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	rcx, QWORD PTR tv76[rbp]
	mov	r9, rcx
	xor	r8d, r8d
	lea	rdx, QWORD PTR layoutInfo$[rbp]
	mov	rcx, rax
	call	vkCreateDescriptorSetLayout
	test	eax, eax
	je	SHORT $LN5@Descriptor
; Line 24
	lea	rdx, OFFSET FLAT:??_C@_0CI@HPIEGNFK@failed?5to?5create?5descriptor?5set@
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T7[rbp]
	call	_CxxThrowException
$LN5@Descriptor:
; Line 28
	lea	rax, QWORD PTR poolInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 40					; 00000028H
	rep stosb
; Line 29
	mov	DWORD PTR poolInfo$[rbp], 33		; 00000021H
; Line 30
	mov	rcx, QWORD PTR pools$[rbp]
	call	?size@?$array@UVkDescriptorPoolSize@@$01@std@@QEBA_KXZ ; std::array<VkDescriptorPoolSize,2>::size
	mov	DWORD PTR poolInfo$[rbp+24], eax
; Line 31
	mov	rcx, QWORD PTR pools$[rbp]
	call	?data@?$array@UVkDescriptorPoolSize@@$01@std@@QEBAPEBUVkDescriptorPoolSize@@XZ ; std::array<VkDescriptorPoolSize,2>::data
	mov	QWORD PTR poolInfo$[rbp+32], rax
; Line 32
	mov	eax, DWORD PTR descriptorSetCount$[rbp]
	mov	DWORD PTR poolInfo$[rbp+20], eax
; Line 34
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	QWORD PTR tv130[rbp], rax
	mov	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	rcx, QWORD PTR tv130[rbp]
	mov	r9, rcx
	xor	r8d, r8d
	lea	rdx, QWORD PTR poolInfo$[rbp]
	mov	rcx, rax
	call	vkCreateDescriptorPool
	test	eax, eax
	je	SHORT $LN6@Descriptor
; Line 36
	lea	rdx, OFFSET FLAT:??_C@_0CC@ENOKJEPG@failed?5to?5create?5descriptor?5poo@
	lea	rcx, QWORD PTR $T8[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T8[rbp]
	call	_CxxThrowException
$LN6@Descriptor:
; Line 39
	mov	eax, DWORD PTR descriptorSetCount$[rbp]
	mov	edx, 8
	mov	ecx, eax
	call	QWORD PTR __imp_calloc
	mov	QWORD PTR layouts$[rbp], rax
; Line 40
	mov	QWORD PTR i$6[rbp], 0
	jmp	SHORT $LN4@Descriptor
$LN2@Descriptor:
	mov	rax, QWORD PTR i$6[rbp]
	inc	rax
	mov	QWORD PTR i$6[rbp], rax
$LN4@Descriptor:
	mov	eax, DWORD PTR descriptorSetCount$[rbp]
	cmp	QWORD PTR i$6[rbp], rax
	jae	SHORT $LN3@Descriptor
; Line 42
	cmp	QWORD PTR layouts$[rbp], 0
	je	SHORT $LN7@Descriptor
; Line 44
	mov	rax, QWORD PTR layouts$[rbp]
	mov	rcx, QWORD PTR i$6[rbp]
	mov	rdx, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rdx+8]
	mov	QWORD PTR [rax+rcx*8], rdx
$LN7@Descriptor:
; Line 46
	jmp	SHORT $LN2@Descriptor
$LN3@Descriptor:
; Line 48
	lea	rax, QWORD PTR allocInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 40					; 00000028H
	rep stosb
; Line 49
	mov	DWORD PTR allocInfo$[rbp], 34		; 00000022H
; Line 50
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR allocInfo$[rbp+16], rax
; Line 51
	mov	eax, DWORD PTR descriptorSetCount$[rbp]
	mov	DWORD PTR allocInfo$[rbp+24], eax
; Line 52
	mov	rax, QWORD PTR layouts$[rbp]
	mov	QWORD PTR allocInfo$[rbp+32], rax
; Line 54
	mov	eax, DWORD PTR descriptorSetCount$[rbp]
	mov	edx, 8
	mov	ecx, eax
	call	QWORD PTR __imp_calloc
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 55
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv179[rbp], rax
	mov	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv177[rbp], rax
	mov	r8, QWORD PTR tv179[rbp]
	lea	rdx, QWORD PTR allocInfo$[rbp]
	mov	rcx, QWORD PTR tv177[rbp]
	call	vkAllocateDescriptorSets
	test	eax, eax
	je	SHORT $LN8@Descriptor
; Line 57
	lea	rdx, OFFSET FLAT:??_C@_0CE@KOBEGADE@failed?5to?5allocate?5descriptor?5s@
	lea	rcx, QWORD PTR $T9[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T9[rbp]
	call	_CxxThrowException
$LN8@Descriptor:
; Line 59
	mov	rcx, QWORD PTR layouts$[rbp]
	call	QWORD PTR __imp_free
; Line 60
	mov	rax, QWORD PTR this$[rbp]
$LN9@Descriptor:
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+616]
	pop	rdi
	pop	rbp
	ret	0
??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z ENDP ; cow::Descriptor<2,2>::Descriptor<2,2>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$array@UVkDescriptorPoolSize@@$01@std@@QEBAPEBUVkDescriptorPoolSize@@XZ
_TEXT	SEGMENT
this$ = 224
?data@?$array@UVkDescriptorPoolSize@@$01@std@@QEBAPEBUVkDescriptorPoolSize@@XZ PROC ; std::array<VkDescriptorPoolSize,2>::data, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\array
; Line 594
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__125A2BD9_array
	call	__CheckForDebuggerJustMyCode
; Line 595
	mov	rax, QWORD PTR this$[rbp]
; Line 596
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?data@?$array@UVkDescriptorPoolSize@@$01@std@@QEBAPEBUVkDescriptorPoolSize@@XZ ENDP ; std::array<VkDescriptorPoolSize,2>::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$array@UVkDescriptorPoolSize@@$01@std@@QEAAAEAUVkDescriptorPoolSize@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Pos$ = 232
??A?$array@UVkDescriptorPoolSize@@$01@std@@QEAAAEAUVkDescriptorPoolSize@@_K@Z PROC ; std::array<VkDescriptorPoolSize,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\array
; Line 557
$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__125A2BD9_array
	call	__CheckForDebuggerJustMyCode
$LN4@operator:
; Line 559
	cmp	QWORD PTR _Pos$[rbp], 2
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BN@HMIFLIEM@array?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 559				; 0000022fH
	lea	rdx, OFFSET FLAT:??_C@_0GA@LKBGKKAK@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 559				; 0000022fH
	lea	r8, OFFSET FLAT:??_C@_1MA@HADHJGPP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1DO@NCBLADDF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
; Line 562
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Pos$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
; Line 563
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$array@UVkDescriptorPoolSize@@$01@std@@QEAAAEAUVkDescriptorPoolSize@@_K@Z ENDP ; std::array<VkDescriptorPoolSize,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$array@UVkDescriptorPoolSize@@$01@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 224
?size@?$array@UVkDescriptorPoolSize@@$01@std@@QEBA_KXZ PROC ; std::array<VkDescriptorPoolSize,2>::size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\array
; Line 529
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__125A2BD9_array
	call	__CheckForDebuggerJustMyCode
; Line 530
	mov	eax, 2
; Line 531
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?size@?$array@UVkDescriptorPoolSize@@$01@std@@QEBA_KXZ ENDP ; std::array<VkDescriptorPoolSize,2>::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBAPEBUVkDescriptorSetLayoutBinding@@XZ
_TEXT	SEGMENT
this$ = 224
?data@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBAPEBUVkDescriptorSetLayoutBinding@@XZ PROC ; std::array<VkDescriptorSetLayoutBinding,2>::data, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\array
; Line 594
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__125A2BD9_array
	call	__CheckForDebuggerJustMyCode
; Line 595
	mov	rax, QWORD PTR this$[rbp]
; Line 596
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?data@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBAPEBUVkDescriptorSetLayoutBinding@@XZ ENDP ; std::array<VkDescriptorSetLayoutBinding,2>::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??A?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEAAAEAUVkDescriptorSetLayoutBinding@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Pos$ = 232
??A?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEAAAEAUVkDescriptorSetLayoutBinding@@_K@Z PROC ; std::array<VkDescriptorSetLayoutBinding,2>::operator[], COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\array
; Line 557
$LN12:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__125A2BD9_array
	call	__CheckForDebuggerJustMyCode
$LN4@operator:
; Line 559
	cmp	QWORD PTR _Pos$[rbp], 2
	jae	SHORT $LN7@operator
	jmp	SHORT $LN9@operator
$LN7@operator:
	lea	rax, OFFSET FLAT:??_C@_0BN@HMIFLIEM@array?5subscript?5out?5of?5range@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 559				; 0000022fH
	lea	rdx, OFFSET FLAT:??_C@_0GA@LKBGKKAK@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
	xor	eax, eax
$LN11@operator:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 559				; 0000022fH
	lea	r8, OFFSET FLAT:??_C@_1MA@HADHJGPP@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1DO@NCBLADDF@?$AA?$CC?$AAa?$AAr?$AAr?$AAa?$AAy?$AA?5?$AAs?$AAu?$AAb?$AAs?$AAc?$AAr?$AAi?$AAp@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@operator
$LN9@operator:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@operator
; Line 562
	imul	rax, QWORD PTR _Pos$[rbp], 24
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, rax
	mov	rax, rcx
; Line 563
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??A?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEAAAEAUVkDescriptorSetLayoutBinding@@_K@Z ENDP ; std::array<VkDescriptorSetLayoutBinding,2>::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 224
?size@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBA_KXZ PROC ; std::array<VkDescriptorSetLayoutBinding,2>::size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\array
; Line 529
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__125A2BD9_array
	call	__CheckForDebuggerJustMyCode
; Line 530
	mov	eax, 2
; Line 531
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?size@?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEBA_KXZ ENDP ; std::array<VkDescriptorSetLayoutBinding,2>::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\ostream
; Line 757
$LN25:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 568				; 00000238H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+600]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__F0102D72_ostream
	call	__CheckForDebuggerJustMyCode
; Line 762
	mov	DWORD PTR _State$[rbp], 0
; Line 763
	mov	rcx, QWORD PTR _Val$[rbp]
	call	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
	mov	QWORD PTR _Count$[rbp], rax
; Line 764
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	test	rax, rax
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	cmp	rax, QWORD PTR _Count$[rbp]
	jle	SHORT $LN17@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
	sub	rax, QWORD PTR _Count$[rbp]
	mov	QWORD PTR tv137[rbp], rax
	jmp	SHORT $LN18@operator
$LN17@operator:
	mov	QWORD PTR tv137[rbp], 0
$LN18@operator:
	mov	rax, QWORD PTR tv137[rbp]
	mov	QWORD PTR _Pad$[rbp], rax
; Line 765
	mov	rdx, QWORD PTR _Ostr$[rbp]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
	npad	1
; Line 767
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN8@operator
; Line 768
	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
; Line 769
	jmp	$LN9@operator
$LN8@operator:
; Line 771
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
	mov	DWORD PTR tv139[rbp], eax
	mov	eax, DWORD PTR tv139[rbp]
	and	eax, 448				; 000001c0H
	cmp	eax, 64					; 00000040H
	je	$LN11@operator
; Line 772
	jmp	SHORT $LN4@operator
$LN2@operator:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN4@operator:
	cmp	QWORD PTR _Pad$[rbp], 0
	jle	$LN11@operator
; Line 773
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv311[rbp], rax
	mov	rax, QWORD PTR tv311[rbp]
	mov	QWORD PTR tv194[rbp], rax
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv312[rbp], al
	movzx	eax, BYTE PTR tv312[rbp]
	mov	BYTE PTR tv192[rbp], al
	movzx	edx, BYTE PTR tv192[rbp]
	mov	rcx, QWORD PTR tv194[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv313[rbp], eax
	mov	eax, DWORD PTR tv313[rbp]
	mov	DWORD PTR $T4[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T5[rbp], eax
	lea	rdx, QWORD PTR $T4[rbp]
	lea	rcx, QWORD PTR $T5[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN12@operator
; Line 774
	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
; Line 775
	jmp	SHORT $LN11@operator
$LN12@operator:
; Line 777
	jmp	$LN2@operator
$LN11@operator:
; Line 780
	cmp	DWORD PTR _State$[rbp], 0
	jne	SHORT $LN13@operator
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv314[rbp], rax
	mov	rax, QWORD PTR tv314[rbp]
	mov	QWORD PTR tv219[rbp], rax
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR tv219[rbp]
	call	QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
	mov	QWORD PTR tv315[rbp], rax
	mov	rax, QWORD PTR _Count$[rbp]
	cmp	QWORD PTR tv315[rbp], rax
	je	SHORT $LN13@operator
; Line 781
	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
$LN13@operator:
; Line 784
	cmp	DWORD PTR _State$[rbp], 0
	jne	$LN14@operator
; Line 785
	jmp	SHORT $LN7@operator
$LN5@operator:
	mov	rax, QWORD PTR _Pad$[rbp]
	dec	rax
	mov	QWORD PTR _Pad$[rbp], rax
$LN7@operator:
	cmp	QWORD PTR _Pad$[rbp], 0
	jle	$LN14@operator
; Line 786
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
	mov	QWORD PTR tv316[rbp], rax
	mov	rax, QWORD PTR tv316[rbp]
	mov	QWORD PTR tv256[rbp], rax
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, rax
	call	QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
	mov	BYTE PTR tv317[rbp], al
	movzx	eax, BYTE PTR tv317[rbp]
	mov	BYTE PTR tv254[rbp], al
	movzx	edx, BYTE PTR tv254[rbp]
	mov	rcx, QWORD PTR tv256[rbp]
	call	QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
	mov	DWORD PTR tv318[rbp], eax
	mov	eax, DWORD PTR tv318[rbp]
	mov	DWORD PTR $T6[rbp], eax
	call	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
	mov	DWORD PTR $T7[rbp], eax
	lea	rdx, QWORD PTR $T6[rbp]
	lea	rcx, QWORD PTR $T7[rbp]
	call	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN15@operator
; Line 787
	mov	eax, DWORD PTR _State$[rbp]
	or	eax, 4
	mov	DWORD PTR _State$[rbp], eax
; Line 788
	jmp	SHORT $LN14@operator
$LN15@operator:
; Line 790
	jmp	$LN5@operator
$LN14@operator:
; Line 793
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv277[rbp], rax
	xor	edx, edx
	mov	rcx, QWORD PTR tv277[rbp]
	call	QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
	npad	1
	jmp	SHORT $LN9@operator
$LN23@operator:
$LN9@operator:
; Line 797
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv306[rbp], rax
	xor	r8d, r8d
	mov	edx, DWORD PTR _State$[rbp]
	mov	rcx, QWORD PTR tv306[rbp]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
; Line 798
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	QWORD PTR $T8[rbp], rax
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	mov	rax, QWORD PTR $T8[rbp]
; Line 799
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+536]
	pop	rdi
	pop	rbp
	ret	0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Ok$[rbp]
	call	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
; Line 794
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
	mov	rax, QWORD PTR _Ostr$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR _Ostr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tv291[rbp], rax
	mov	r8b, 1
	mov	edx, 4
	mov	rcx, QWORD PTR tv291[rbp]
	call	QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
	npad	1
	lea	rax, $LN23@catch$1
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1381
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1382
	mov	rax, QWORD PTR this$[rbp]
; Line 1383
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1377
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1378
	mov	rax, QWORD PTR this$[rbp]
; Line 1379
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 392
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2031
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2032
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Get_first
; Line 2033
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2027
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2028
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Get_first
; Line 2029
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlength@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@CAXXZ PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Xlength, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1983
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1984
	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:
; Line 1985
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Xlength@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@CAXXZ ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Myend$ = 136
this$ = 384
?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1881
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1882
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 1883
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1884
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 1885
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 1886
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax
; Line 1888
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
; Line 1890
	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy
; Line 1891
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@YAXPEAPEAUVkCommandBuffer_T@@QEAPEAU1@AEAV?$allocator@PEAUVkCommandBuffer_T@@@0@@Z ; std::_Destroy_range<std::allocator<VkCommandBuffer_T *> >
; Line 1893
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAXQEAPEAUVkCommandBuffer_T@@_K@Z ; std::allocator<VkCommandBuffer_T *>::deallocate
; Line 1895
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1896
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1897
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:
; Line 1899
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Buy_nonzero@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
_Newcapacity$ = 232
?_Buy_nonzero@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Buy_nonzero, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1841
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1852
	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::max_size
	cmp	QWORD PTR _Newcapacity$[rbp], rax
	jbe	SHORT $LN2@Buy_nonzer
; Line 1853
	call	?_Xlength@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@CAXXZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Xlength
$LN2@Buy_nonzer:
; Line 1856
	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Buy_raw@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Buy_raw
$LN3@Buy_nonzer:
; Line 1857
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Buy_nonzero@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Buy_raw@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
_Newvec$ = 136
tv77 = 344
this$ = 384
_Newcapacity$ = 392
?_Buy_raw@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Buy_raw, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1825
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1827
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1828
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 1829
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 1830
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax
; Line 1835
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal
	mov	QWORD PTR tv77[rbp], rax
	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	?allocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@_K@Z ; std::allocator<VkCommandBuffer_T *>::allocate
	mov	QWORD PTR _Newvec$[rbp], rax
; Line 1836
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1837
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1838
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newcapacity$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 1839
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Buy_raw@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
this$ = 288
?max_size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1718
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1719
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEBAAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SA_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@@Z ; std::_Default_allocator_traits<std::allocator<VkCommandBuffer_T *> >::max_size
	mov	QWORD PTR $T1[rbp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]
; Line 1721
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1713
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1714
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1715
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 3
; Line 1716
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ
_TEXT	SEGMENT
this$ = 224
?data@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::data, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1632
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1633
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy_maybe_null@PEAUVkCommandBuffer_T@@@std@@YAPEAPEAUVkCommandBuffer_T@@PEAPEAU1@@Z ; std::_Unfancy_maybe_null<VkCommandBuffer_T *>
; Line 1634
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?data@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S6$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::~vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 790
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 791
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAXXZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Tidy
; Line 793
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAAEAV?$allocator@PEAUVkCommandBuffer_T@@@2@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S6$[rbp]
	call	??$?0PEAUVkCommandBuffer_T@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><VkCommandBuffer_T *>
	lea	rax, QWORD PTR $S6$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax
; Line 794
	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
; Line 796
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::~vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z
_TEXT	SEGMENT
$T1 = 196
tv70 = 216
this$ = 256
_Count$ = 264
_Al$ = 272
??0?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z PROC ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 668
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv70[rbp], rax
	mov	r8, QWORD PTR _Al$[rbp]
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR tv70[rbp]
	call	??$?0AEBV?$allocator@PEAUVkCommandBuffer_T@@@std@@$$V@?$_Compressed_pair@V?$allocator@PEAUVkCommandBuffer_T@@@std@@V?$_Vector_val@U?$_Simple_types@PEAUVkCommandBuffer_T@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ; std::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1>::_Compressed_pair<std::allocator<VkCommandBuffer_T *>,std::_Vector_val<std::_Simple_types<VkCommandBuffer_T *> >,1><std::allocator<VkCommandBuffer_T *> const &>
; Line 669
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Construct_n@$$V@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@AEAAX_K@Z ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::_Construct_n<>
; Line 670
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ENDP ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SA_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SA_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<VkCommandBuffer_T *> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 693
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 694
	mov	rax, 2305843009213693951		; 1fffffffffffffffH
; Line 695
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@SA_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<VkCommandBuffer_T *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@_K@Z PROC ; std::allocator<VkCommandBuffer_T *>::allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 833
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 834
	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; Line 835
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@_K@Z ENDP ; std::allocator<VkCommandBuffer_T *>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAXQEAPEAUVkCommandBuffer_T@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAXQEAPEAUVkCommandBuffer_T@@_K@Z PROC ; std::allocator<VkCommandBuffer_T *>::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 827
$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
$LN4@deallocate:
; Line 828
	cmp	QWORD PTR _Ptr$[rbp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rbp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate
; Line 830
	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
; Line 831
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAAXQEAPEAUVkCommandBuffer_T@@_K@Z ENDP ; std::allocator<VkCommandBuffer_T *>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAA@XZ PROC ; std::allocator<VkCommandBuffer_T *>::allocator<VkCommandBuffer_T *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 819
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAA@XZ ENDP ; std::allocator<VkCommandBuffer_T *>::allocator<VkCommandBuffer_T *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT main
_TEXT	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main	PROC						; COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Source.cpp
; Line 37
$LN37:
	push	rbp
	push	rsi
	push	rdi
	mov	eax, 5296				; 000014b0H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 924				; 0000039cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__D63E6CC3_Source@cpp
	call	__CheckForDebuggerJustMyCode
; Line 38
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR commandBuffers$[rbp]
	call	?__autoclassinit2@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAX_K@Z
	lea	rcx, QWORD PTR $T40[rbp]
	call	??0?$allocator@PEAUVkCommandBuffer_T@@@std@@QEAA@XZ ; std::allocator<VkCommandBuffer_T *>::allocator<VkCommandBuffer_T *>
	mov	r8, rax
	mov	edx, 2
	lea	rcx, QWORD PTR commandBuffers$[rbp]
	call	??0?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@_KAEBV?$allocator@PEAUVkCommandBuffer_T@@@1@@Z ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
	npad	1
; Line 40
	lea	rdx, OFFSET FLAT:??_C@_02PHMGELLB@?6?6@
	mov	rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
	mov	QWORD PTR tv82[rbp], rax
	mov	edx, 160				; 000000a0H
	mov	rcx, QWORD PTR tv82[rbp]
	call	QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_K@Z
	lea	rdx, OFFSET FLAT:??_C@_02PHMGELLB@?6?6@
	mov	rcx, rax
	call	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
; Line 41
	mov	edx, 24
	lea	rcx, QWORD PTR window$[rbp]
	call	?__autoclassinit2@Window@cow@@QEAAX_K@Z
	lea	r9, OFFSET FLAT:??_C@_04MEMAJGDJ@name@
	mov	r8d, 500				; 000001f4H
	mov	edx, 800				; 00000320H
	lea	rcx, QWORD PTR window$[rbp]
	call	??0Window@cow@@QEAA@HHPEBD@Z		; cow::Window::Window
	npad	1
; Line 43
	mov	edx, 64					; 00000040H
	lea	rcx, QWORD PTR device$[rbp]
	call	?__autoclassinit2@Device@cow@@QEAAX_K@Z
	xor	r9d, r9d
	xor	r8d, r8d
	lea	rdx, QWORD PTR window$[rbp]
	lea	rcx, QWORD PTR device$[rbp]
	call	??0Device@cow@@QEAA@AEAVWindow@1@PEAII@Z ; cow::Device::Device
	npad	1
; Line 45
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR commands$[rbp]
	call	?__autoclassinit2@GraphicsCommands@cow@@QEAAX_K@Z
	lea	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR commands$[rbp]
	call	??0GraphicsCommands@cow@@QEAA@AEAVDevice@1@@Z ; cow::GraphicsCommands::GraphicsCommands
	npad	1
; Line 47
	lea	rax, QWORD PTR ubo_bindings$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
; Line 49
	mov	DWORD PTR $T41[rbp], 0
	mov	DWORD PTR $T41[rbp+4], 6
	mov	DWORD PTR $T41[rbp+8], 1
	mov	DWORD PTR $T41[rbp+12], 1
	mov	QWORD PTR $T41[rbp+16], 0
	lea	rax, QWORD PTR $T42[rbp]
	lea	rcx, QWORD PTR $T41[rbp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 24
	rep movsb
	xor	edx, edx
	lea	rcx, QWORD PTR ubo_bindings$[rbp]
	call	??A?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEAAAEAUVkDescriptorSetLayoutBinding@@_K@Z ; std::array<VkDescriptorSetLayoutBinding,2>::operator[]
	lea	rcx, QWORD PTR $T42[rbp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 24
	rep movsb
; Line 51
	mov	DWORD PTR $T43[rbp], 1
	mov	DWORD PTR $T43[rbp+4], 1
	mov	DWORD PTR $T43[rbp+8], 1
	mov	DWORD PTR $T43[rbp+12], 16
	mov	QWORD PTR $T43[rbp+16], 0
	lea	rax, QWORD PTR $T44[rbp]
	lea	rcx, QWORD PTR $T43[rbp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 24
	rep movsb
	mov	edx, 1
	lea	rcx, QWORD PTR ubo_bindings$[rbp]
	call	??A?$array@UVkDescriptorSetLayoutBinding@@$01@std@@QEAAAEAUVkDescriptorSetLayoutBinding@@_K@Z ; std::array<VkDescriptorSetLayoutBinding,2>::operator[]
	lea	rcx, QWORD PTR $T44[rbp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 24
	rep movsb
; Line 52
	lea	rax, QWORD PTR poolSizes$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 54
	mov	DWORD PTR $T45[rbp], 6
	mov	DWORD PTR $T45[rbp+4], 2
	mov	rax, QWORD PTR $T45[rbp]
	mov	QWORD PTR $T46[rbp], rax
	xor	edx, edx
	lea	rcx, QWORD PTR poolSizes$[rbp]
	call	??A?$array@UVkDescriptorPoolSize@@$01@std@@QEAAAEAUVkDescriptorPoolSize@@_K@Z ; std::array<VkDescriptorPoolSize,2>::operator[]
	mov	rcx, QWORD PTR $T46[rbp]
	mov	QWORD PTR [rax], rcx
; Line 56
	mov	DWORD PTR $T47[rbp], 1
	mov	DWORD PTR $T47[rbp+4], 2
	mov	rax, QWORD PTR $T47[rbp]
	mov	QWORD PTR $T48[rbp], rax
	mov	edx, 1
	lea	rcx, QWORD PTR poolSizes$[rbp]
	call	??A?$array@UVkDescriptorPoolSize@@$01@std@@QEAAAEAUVkDescriptorPoolSize@@_K@Z ; std::array<VkDescriptorPoolSize,2>::operator[]
	mov	rcx, QWORD PTR $T48[rbp]
	mov	QWORD PTR [rax], rcx
; Line 58
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR descriptor$[rbp]
	call	?__autoclassinit2@?$Descriptor@$01$01@cow@@QEAAX_K@Z
	lea	rax, QWORD PTR $T68[rbp]
	lea	rcx, QWORD PTR poolSizes$[rbp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
	lea	rax, QWORD PTR $T67[rbp]
	lea	rcx, QWORD PTR ubo_bindings$[rbp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 48					; 00000030H
	rep movsb
	mov	DWORD PTR [rsp+32], 2
	lea	r9, QWORD PTR $T68[rbp]
	lea	r8, QWORD PTR $T67[rbp]
	lea	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR descriptor$[rbp]
	call	??0?$Descriptor@$01$01@cow@@QEAA@AEAVDevice@1@V?$array@UVkDescriptorSetLayoutBinding@@$01@std@@V?$array@UVkDescriptorPoolSize@@$01@4@I@Z ; cow::Descriptor<2,2>::Descriptor<2,2>
	npad	1
; Line 61
	mov	DWORD PTR [rsp+32], 6
	mov	r9d, 16
	mov	r8d, 8
	lea	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR descriptorBuffers$[rbp]
	call	??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z	; cow::Buffer::Buffer
	npad	1
; Line 67
	mov	DWORD PTR [rsp+32], 6
	mov	r9d, 16
	mov	r8d, 8
	lea	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR descriptorBuffers$[rbp+40]
	call	??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z	; cow::Buffer::Buffer
	npad	1
; Line 75
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR texture$[rbp]
	call	?__autoclassinit2@Texture@cow@@QEAAX_K@Z
	lea	r8, OFFSET FLAT:??_C@_0CL@BLGJKHJK@C?3?2Users?2anton?2Downloads?2pic_go@
	lea	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR texture$[rbp]
	call	??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z ; cow::Texture::Texture
	npad	1
; Line 76
	lea	rcx, QWORD PTR texture$[rbp]
	call	?createTextureImageView@Texture@cow@@QEAAXXZ ; cow::Texture::createTextureImageView
; Line 77
	lea	rcx, QWORD PTR texture$[rbp]
	call	?createTextureSampler@Texture@cow@@QEAAXXZ ; cow::Texture::createTextureSampler
; Line 78
	mov	QWORD PTR i$30[rbp], 0
	jmp	SHORT $LN4@main
$LN2@main:
	mov	rax, QWORD PTR i$30[rbp]
	inc	rax
	mov	QWORD PTR i$30[rbp], rax
$LN4@main:
	cmp	QWORD PTR i$30[rbp], 2
	jae	$LN3@main
; Line 82
	lea	rax, QWORD PTR bufferInfo$31[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 24
	rep stosb
; Line 83
	imul	rax, QWORD PTR i$30[rbp], 40		; 00000028H
	lea	rax, QWORD PTR descriptorBuffers$[rbp+rax]
	mov	rcx, rax
	call	?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ	; cow::Buffer::get
	mov	QWORD PTR bufferInfo$31[rbp], rax
; Line 84
	mov	QWORD PTR bufferInfo$31[rbp+8], 0
; Line 85
	mov	QWORD PTR bufferInfo$31[rbp+16], 8
; Line 88
	lea	rax, QWORD PTR imageInfo$32[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 24
	rep stosb
; Line 89
	mov	DWORD PTR imageInfo$32[rbp+16], 5
; Line 90
	mov	rax, QWORD PTR texture$[rbp+8]
	mov	QWORD PTR imageInfo$32[rbp+8], rax
; Line 91
	mov	rax, QWORD PTR texture$[rbp+16]
	mov	QWORD PTR imageInfo$32[rbp], rax
; Line 93
	lea	rax, QWORD PTR descriptorWrite$33[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 128				; 00000080H
	rep stosb
; Line 94
	xor	edx, edx
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax], 35			; 00000023H
; Line 95
	mov	edx, DWORD PTR i$30[rbp]
	lea	rcx, QWORD PTR descriptor$[rbp]
	call	?getSet@?$Descriptor@$01$01@cow@@QEAAPEAUVkDescriptorSet_T@@I@Z ; cow::Descriptor<2,2>::getSet
	mov	QWORD PTR tv259[rbp], rax
	xor	edx, edx
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	rcx, QWORD PTR tv259[rbp]
	mov	QWORD PTR [rax+16], rcx
; Line 96
	xor	edx, edx
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax+24], 0
; Line 97
	xor	edx, edx
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax+28], 0
; Line 98
	xor	edx, edx
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax+36], 6
; Line 99
	xor	edx, edx
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax+32], 1
; Line 100
	xor	edx, edx
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	lea	rcx, QWORD PTR bufferInfo$31[rbp]
	mov	QWORD PTR [rax+48], rcx
; Line 101
	xor	edx, edx
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	QWORD PTR [rax+40], 0
; Line 102
	xor	edx, edx
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	QWORD PTR [rax+56], 0
; Line 104
	mov	edx, 1
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax], 35			; 00000023H
; Line 105
	mov	edx, DWORD PTR i$30[rbp]
	lea	rcx, QWORD PTR descriptor$[rbp]
	call	?getSet@?$Descriptor@$01$01@cow@@QEAAPEAUVkDescriptorSet_T@@I@Z ; cow::Descriptor<2,2>::getSet
	mov	QWORD PTR tv300[rbp], rax
	mov	edx, 1
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	rcx, QWORD PTR tv300[rbp]
	mov	QWORD PTR [rax+16], rcx
; Line 106
	mov	edx, 1
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax+24], 1
; Line 107
	mov	edx, 1
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax+28], 0
; Line 108
	mov	edx, 1
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax+36], 1
; Line 109
	mov	edx, 1
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	mov	DWORD PTR [rax+32], 1
; Line 110
	mov	edx, 1
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	??A?$array@UVkWriteDescriptorSet@@$01@std@@QEAAAEAUVkWriteDescriptorSet@@_K@Z ; std::array<VkWriteDescriptorSet,2>::operator[]
	lea	rcx, QWORD PTR imageInfo$32[rbp]
	mov	QWORD PTR [rax+40], rcx
; Line 113
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	?data@?$array@UVkWriteDescriptorSet@@$01@std@@QEAAPEAUVkWriteDescriptorSet@@XZ ; std::array<VkWriteDescriptorSet,2>::data
	mov	QWORD PTR tv338[rbp], rax
	lea	rcx, QWORD PTR descriptorWrite$33[rbp]
	call	?size@?$array@UVkWriteDescriptorSet@@$01@std@@QEBA_KXZ ; std::array<VkWriteDescriptorSet,2>::size
	mov	DWORD PTR tv336[rbp], eax
	lea	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv334[rbp], rax
	mov	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8, QWORD PTR tv338[rbp]
	mov	edx, DWORD PTR tv336[rbp]
	mov	rcx, QWORD PTR tv334[rbp]
	call	vkUpdateDescriptorSets
; Line 115
	jmp	$LN2@main
$LN3@main:
; Line 117
	lea	rax, QWORD PTR pushConstants$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 12
	rep stosb
; Line 118
	mov	DWORD PTR pushConstants$[rbp+4], 0
; Line 119
	mov	DWORD PTR pushConstants$[rbp], 17
; Line 120
	mov	DWORD PTR pushConstants$[rbp+8], 8
; Line 123
	lea	rax, QWORD PTR createInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 48					; 00000030H
	rep stosb
; Line 124
	mov	DWORD PTR createInfo$[rbp], 30
; Line 125
	mov	DWORD PTR createInfo$[rbp+32], 1
; Line 126
	lea	rax, QWORD PTR pushConstants$[rbp]
	mov	QWORD PTR createInfo$[rbp+40], rax
; Line 127
	mov	DWORD PTR createInfo$[rbp+20], 1
; Line 128
	lea	rcx, QWORD PTR descriptor$[rbp]
	call	?getLayout@?$Descriptor@$01$01@cow@@QEAAPEAPEAUVkDescriptorSetLayout_T@@XZ ; cow::Descriptor<2,2>::getLayout
	mov	QWORD PTR createInfo$[rbp+24], rax
; Line 130
	lea	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	lea	r9, QWORD PTR layout$[rbp]
	xor	r8d, r8d
	lea	rdx, QWORD PTR createInfo$[rbp]
	mov	rcx, rax
	call	vkCreatePipelineLayout
	test	eax, eax
	je	SHORT $LN10@main
; Line 132
	lea	rdx, OFFSET FLAT:??_C@_0CD@CAAGOMDP@failed?5to?5create?5a?5pipeline?5lay@
	lea	rcx, QWORD PTR $T49[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T49[rbp]
	call	_CxxThrowException
$LN10@main:
; Line 134
	lea	rax, QWORD PTR gpsi$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 264				; 00000108H
	rep stosb
	lea	rcx, QWORD PTR gpsi$[rbp+264]
	call	??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >
	npad	1
	lea	rax, QWORD PTR gpsi$[rbp+296]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 56					; 00000038H
	rep stosb
; Line 135
	lea	rax, OFFSET FLAT:??_C@_04GHJNJNPO@main@
	mov	QWORD PTR gpsi$[rbp+16], rax
; Line 136
	lea	rax, OFFSET FLAT:??_C@_0EJ@HKLAAGEK@C?3?2Users?2anton?2source?2repos?2GPU@
	mov	QWORD PTR gpsi$[rbp+8], rax
; Line 137
	lea	rax, OFFSET FLAT:??_C@_0EJ@HDHKIKGP@C?3?2Users?2anton?2source?2repos?2GPU@
	mov	QWORD PTR gpsi$[rbp], rax
; Line 138
	lea	rcx, QWORD PTR commands$[rbp]
	call	??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ ; std::unique_ptr<cow::Swapchain,std::default_delete<cow::Swapchain> >::operator->
	mov	rcx, rax
	call	?getRenderPass@Swapchain@cow@@QEBAPEAUVkRenderPass_T@@XZ ; cow::Swapchain::getRenderPass
	mov	QWORD PTR gpsi$[rbp+336], rax
; Line 139
	mov	rax, QWORD PTR layout$[rbp]
	mov	QWORD PTR gpsi$[rbp+328], rax
; Line 142
	lea	rcx, QWORD PTR gpsi$[rbp]
	call	?defaultGraphicsPipeline@GraphicsPipelineSimpleInfo@cow@@SAXAEAU12@@Z ; cow::GraphicsPipelineSimpleInfo::defaultGraphicsPipeline
; Line 144
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR graphicsPipeline$[rbp]
	call	?__autoclassinit2@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAX_K@Z
	lea	r8, QWORD PTR gpsi$[rbp]
	lea	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR graphicsPipeline$[rbp]
	call	??0?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@PEAUGraphicsPipelineSimpleInfo@1@@Z ; cow::GraphicsPipeline<cow::Vertex2DTextured>::GraphicsPipeline<cow::Vertex2DTextured>
	npad	1
; Line 146
	lea	rax, QWORD PTR cmdAllocInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 32					; 00000020H
	rep stosb
; Line 147
	mov	DWORD PTR cmdAllocInfo$[rbp], 40	; 00000028H
; Line 148
	mov	DWORD PTR cmdAllocInfo$[rbp+24], 0
; Line 149
	lea	rcx, QWORD PTR device$[rbp]
	call	?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ ; cow::Device::getCommandPool
	mov	QWORD PTR cmdAllocInfo$[rbp+16], rax
; Line 150
	lea	rcx, QWORD PTR commandBuffers$[rbp]
	call	?size@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEBA_KXZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::size
	mov	DWORD PTR cmdAllocInfo$[rbp+28], eax
; Line 152
	lea	rcx, QWORD PTR commandBuffers$[rbp]
	call	?data@?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAAPEAPEAUVkCommandBuffer_T@@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::data
	mov	QWORD PTR tv437[rbp], rax
	lea	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv435[rbp], rax
	mov	r8, QWORD PTR tv437[rbp]
	lea	rdx, QWORD PTR cmdAllocInfo$[rbp]
	mov	rcx, QWORD PTR tv435[rbp]
	call	vkAllocateCommandBuffers
	test	eax, eax
	je	SHORT $LN11@main
; Line 154
	lea	rdx, OFFSET FLAT:??_C@_0CD@DMDCDDIA@failed?5to?5allocate?5command?5buff@
	lea	rcx, QWORD PTR $T50[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T50[rbp]
	call	_CxxThrowException
$LN11@main:
; Line 156
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR offset$[rbp], xmm0
; Line 157
	xorps	xmm0, xmm0
	movss	DWORD PTR colorChange$[rbp], xmm0
; Line 159
	lea	rax, QWORD PTR value$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 160
	mov	eax, 4
	imul	rax, rax, 0
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR value$[rbp+rax], xmm0
; Line 161
	mov	eax, 4
	imul	rax, rax, 1
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR value$[rbp+rax], xmm0
; Line 162
	mov	eax, 4
	imul	rax, rax, 2
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR value$[rbp+rax], xmm0
; Line 163
	mov	eax, 4
	imul	rax, rax, 3
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR value$[rbp+rax], xmm0
; Line 165
	movss	xmm0, DWORD PTR __real@bf800000
	movss	DWORD PTR outside$[rbp], xmm0
; Line 166
	movss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR to_the_side$[rbp], xmm0
; Line 168
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR verticesMain$[rbp]
	call	?__autoclassinit2@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z
	lea	rcx, QWORD PTR verticesMain$[rbp]
	call	??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	npad	1
; Line 169
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR verticesOther$[rbp]
	call	?__autoclassinit2@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z
	lea	rcx, QWORD PTR verticesOther$[rbp]
	call	??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	npad	1
; Line 180
	movsd	xmm2, QWORD PTR __real@bfe0000000000000
	movsd	xmm1, QWORD PTR __real@3fe0000000000000
	lea	rcx, QWORD PTR $T51[rbp]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	xorps	xmm2, xmm2
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR $T51[rbp+8]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	lea	rdx, QWORD PTR $T51[rbp]
	lea	rcx, QWORD PTR verticesMain$[rbp]
	call	?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::push_back
; Line 181
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR $T52[rbp]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	movsd	xmm2, QWORD PTR __real@3ff0000000000000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T52[rbp+8]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	lea	rdx, QWORD PTR $T52[rbp]
	lea	rcx, QWORD PTR verticesMain$[rbp]
	call	?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::push_back
; Line 182
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T53[rbp]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T53[rbp+8]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	lea	rdx, QWORD PTR $T53[rbp]
	lea	rcx, QWORD PTR verticesMain$[rbp]
	call	?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::push_back
; Line 185
	movss	xmm0, DWORD PTR __real@bf800000
	addss	xmm0, DWORD PTR offset$[rbp]
	movsd	xmm2, QWORD PTR __real@bfdccccccccccccd
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T54[rbp]
	call	??$?0MN@?$vec@$01M$0A@@glm@@QEAA@MN@Z	; glm::vec<2,float,0>::vec<2,float,0><float,double>
	xorps	xmm2, xmm2
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR $T54[rbp+8]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	lea	rdx, QWORD PTR $T54[rbp]
	lea	rcx, QWORD PTR verticesOther$[rbp]
	call	?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::push_back
; Line 186
	cvtss2sd xmm0, DWORD PTR offset$[rbp]
	movsd	xmm1, QWORD PTR __real@bfe0000000000000
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T55[rbp]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	movsd	xmm2, QWORD PTR __real@3ff0000000000000
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T55[rbp+8]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	lea	rdx, QWORD PTR $T55[rbp]
	lea	rcx, QWORD PTR verticesOther$[rbp]
	call	?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::push_back
; Line 187
	cvtss2sd xmm0, DWORD PTR offset$[rbp]
	movsd	xmm1, QWORD PTR __real@bff8000000000000
	addsd	xmm1, xmm0
	movaps	xmm0, xmm1
	movsd	xmm2, QWORD PTR __real@3fe0000000000000
	movaps	xmm1, xmm0
	lea	rcx, QWORD PTR $T56[rbp]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	movsd	xmm2, QWORD PTR __real@3ff0000000000000
	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rcx, QWORD PTR $T56[rbp+8]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	lea	rdx, QWORD PTR $T56[rbp]
	lea	rcx, QWORD PTR verticesOther$[rbp]
	call	?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::push_back
; Line 188
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR modelMain$[rbp]
	call	?__autoclassinit2@RenderObject@@QEAAX_K@Z
	lea	rax, QWORD PTR $T57[rbp]
	mov	QWORD PTR $T58[rbp], rax
	lea	rdx, QWORD PTR verticesMain$[rbp]
	mov	rcx, QWORD PTR $T58[rbp]
	call	??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	mov	QWORD PTR tv819[rbp], rax
	mov	r8, QWORD PTR tv819[rbp]
	lea	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR modelMain$[rbp]
	call	??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z ; RenderObject::RenderObject
	npad	1
; Line 189
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR modelOther$[rbp]
	call	?__autoclassinit2@RenderObject@@QEAAX_K@Z
	lea	rax, QWORD PTR $T59[rbp]
	mov	QWORD PTR $T60[rbp], rax
	lea	rdx, QWORD PTR verticesOther$[rbp]
	mov	rcx, QWORD PTR $T60[rbp]
	call	??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	mov	QWORD PTR tv822[rbp], rax
	mov	r8, QWORD PTR tv822[rbp]
	lea	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR modelOther$[rbp]
	call	??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z ; RenderObject::RenderObject
	npad	1
; Line 190
	mov	edx, 32					; 00000020H
	lea	rcx, QWORD PTR models$[rbp]
	call	?__autoclassinit2@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX_K@Z
	lea	rcx, QWORD PTR models$[rbp]
	call	??0?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::vector<RenderObject *,std::allocator<RenderObject *> >
	npad	1
; Line 191
	lea	rax, QWORD PTR modelMain$[rbp]
	mov	QWORD PTR $T61[rbp], rax
	lea	rdx, QWORD PTR $T61[rbp]
	lea	rcx, QWORD PTR models$[rbp]
	call	?push_back@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::push_back
; Line 192
	lea	rax, QWORD PTR modelOther$[rbp]
	mov	QWORD PTR $T62[rbp], rax
	lea	rdx, QWORD PTR $T62[rbp]
	lea	rcx, QWORD PTR models$[rbp]
	call	?push_back@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAX$$QEAPEAVRenderObject@@@Z ; std::vector<RenderObject *,std::allocator<RenderObject *> >::push_back
; Line 194
	lea	rax, QWORD PTR ubo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
$LN5@main:
; Line 196
	lea	rcx, QWORD PTR window$[rbp]
	call	?shouldClose@Window@cow@@QEBA_NXZ	; cow::Window::shouldClose
	movzx	eax, al
	test	eax, eax
	jne	$LN6@main
; Line 198
	call	glfwPollEvents
; Line 199
	lea	rcx, QWORD PTR commands$[rbp]
	call	??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ ; std::unique_ptr<cow::Swapchain,std::default_delete<cow::Swapchain> >::operator->
	mov	rcx, rax
	call	?getCurrentFrame@Swapchain@cow@@QEBA_KXZ ; cow::Swapchain::getCurrentFrame
	mov	QWORD PTR frameIndex$34[rbp], rax
; Line 200
	lea	rcx, QWORD PTR commands$[rbp]
	call	?getCurrentImageIndex@GraphicsCommands@cow@@QEAAIXZ ; cow::GraphicsCommands::getCurrentImageIndex
	mov	DWORD PTR imageIndex$35[rbp], eax
; Line 203
	lea	rcx, QWORD PTR commands$[rbp]
	call	?begin@GraphicsCommands@cow@@QEAAPEAUVkCommandBuffer_T@@XZ ; cow::GraphicsCommands::begin
	mov	QWORD PTR cmdBuffer$36[rbp], rax
; Line 204
	lea	rax, QWORD PTR $T69[rbp]
	lea	rcx, QWORD PTR value$[rbp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 16
	rep movsb
	lea	r8, QWORD PTR $T69[rbp]
	mov	rdx, QWORD PTR cmdBuffer$36[rbp]
	lea	rcx, QWORD PTR commands$[rbp]
	call	?beginRenderPass@GraphicsCommands@cow@@QEAAXPEAUVkCommandBuffer_T@@TVkClearColorValue@@@Z ; cow::GraphicsCommands::beginRenderPass
; Line 205
	mov	rdx, QWORD PTR cmdBuffer$36[rbp]
	lea	rcx, QWORD PTR graphicsPipeline$[rbp]
	call	?bind@?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ; cow::GraphicsPipeline<cow::Vertex2DTextured>::bind
; Line 207
	mov	eax, 8
	imul	rax, rax, 0
	cvtss2sd xmm0, DWORD PTR ubo$[rbp+rax]
	addsd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	mov	eax, 8
	imul	rax, rax, 0
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ubo$[rbp+rax], xmm0
; Line 208
	mov	eax, 8
	imul	rax, rax, 1
	cvtss2sd xmm0, DWORD PTR ubo$[rbp+rax]
	addsd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	mov	eax, 8
	imul	rax, rax, 1
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR ubo$[rbp+rax], xmm0
; Line 210
	cvtss2sd xmm0, DWORD PTR offset$[rbp]
	addsd	xmm0, QWORD PTR __real@3f1a36e2eb1c432d
	cvtsd2ss xmm0, xmm0
	movss	DWORD PTR offset$[rbp], xmm0
; Line 211
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T63[rbp]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	mov	rax, QWORD PTR $T63[rbp]
	mov	QWORD PTR modelOther$[rbp+32], rax
; Line 212
	xorps	xmm2, xmm2
	xorps	xmm1, xmm1
	lea	rcx, QWORD PTR $T64[rbp]
	call	??$?0NN@?$vec@$01M$0A@@glm@@QEAA@NN@Z	; glm::vec<2,float,0>::vec<2,float,0><double,double>
	mov	rax, QWORD PTR $T64[rbp]
	mov	QWORD PTR modelMain$[rbp+32], rax
; Line 214
	imul	rax, QWORD PTR frameIndex$34[rbp], 40	; 00000028H
	lea	rax, QWORD PTR descriptorBuffers$[rbp+rax]
	mov	QWORD PTR tv694[rbp], rax
	xor	r8d, r8d
	mov	rdx, -1
	mov	rcx, QWORD PTR tv694[rbp]
	call	?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z ; cow::Buffer::map
; Line 215
	imul	rax, QWORD PTR frameIndex$34[rbp], 40	; 00000028H
	lea	rax, QWORD PTR descriptorBuffers$[rbp+rax]
	mov	QWORD PTR tv702[rbp], rax
	xor	r9d, r9d
	mov	r8d, 8
	lea	rdx, QWORD PTR ubo$[rbp]
	mov	rcx, QWORD PTR tv702[rbp]
	call	?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z	; cow::Buffer::write
; Line 216
	imul	rax, QWORD PTR frameIndex$34[rbp], 40	; 00000028H
	lea	rax, QWORD PTR descriptorBuffers$[rbp+rax]
	mov	rcx, rax
	call	?unmap@Buffer@cow@@QEAAXXZ		; cow::Buffer::unmap
; Line 218
	mov	rax, QWORD PTR descriptor$[rbp]
	mov	rcx, QWORD PTR frameIndex$34[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	mov	r8, QWORD PTR layout$[rbp]
	xor	edx, edx
	mov	rcx, QWORD PTR cmdBuffer$36[rbp]
	call	vkCmdBindDescriptorSets
; Line 224
	mov	QWORD PTR i$37[rbp], 0
	jmp	SHORT $LN9@main
$LN7@main:
	mov	rax, QWORD PTR i$37[rbp]
	inc	rax
	mov	QWORD PTR i$37[rbp], rax
$LN9@main:
	lea	rcx, QWORD PTR models$[rbp]
	call	?size@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEBA_KXZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::size
	cmp	QWORD PTR i$37[rbp], rax
	jae	$LN8@main
; Line 226
	lea	rcx, QWORD PTR models$[rbp]
	call	?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::data
	mov	rcx, QWORD PTR i$37[rbp]
	mov	rax, QWORD PTR [rax+rcx*8]
	add	rax, 32					; 00000020H
	mov	QWORD PTR tv736[rbp], rax
	mov	rax, QWORD PTR layout$[rbp]
	mov	QWORD PTR tv734[rbp], rax
	mov	rax, QWORD PTR cmdBuffer$36[rbp]
	mov	QWORD PTR tv732[rbp], rax
	mov	r9d, 17
	mov	r8, QWORD PTR tv734[rbp]
	mov	rdx, QWORD PTR tv732[rbp]
	mov	rcx, QWORD PTR tv736[rbp]
	call	?pushConstant@?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAAXPEAUVkCommandBuffer_T@@PEAUVkPipelineLayout_T@@I@Z ; cow::PushConstantComponent<SimplePushConstantData>::pushConstant
; Line 227
	lea	rcx, QWORD PTR models$[rbp]
	call	?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::data
	mov	rcx, QWORD PTR i$37[rbp]
	mov	rax, QWORD PTR [rax+rcx*8]
	add	rax, 8
	mov	QWORD PTR tv750[rbp], rax
	mov	rax, QWORD PTR cmdBuffer$36[rbp]
	mov	QWORD PTR tv748[rbp], rax
	mov	rdx, QWORD PTR tv748[rbp]
	mov	rcx, QWORD PTR tv750[rbp]
	call	?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ; cow::Model2DComponent<cow::Vertex2DTextured>::bind
; Line 228
	lea	rcx, QWORD PTR models$[rbp]
	call	?data@?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAAPEAPEAVRenderObject@@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::data
	mov	rcx, QWORD PTR i$37[rbp]
	mov	rax, QWORD PTR [rax+rcx*8]
	add	rax, 8
	mov	QWORD PTR tv764[rbp], rax
	mov	rax, QWORD PTR cmdBuffer$36[rbp]
	mov	QWORD PTR tv762[rbp], rax
	mov	rdx, QWORD PTR tv762[rbp]
	mov	rcx, QWORD PTR tv764[rbp]
	call	?draw@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ; cow::Model2DComponent<cow::Vertex2DTextured>::draw
; Line 229
	jmp	$LN7@main
$LN8@main:
; Line 232
	mov	rcx, QWORD PTR cmdBuffer$36[rbp]
	call	vkCmdEndRenderPass
; Line 233
	mov	rcx, QWORD PTR cmdBuffer$36[rbp]
	call	vkEndCommandBuffer
	test	eax, eax
	je	SHORT $LN12@main
; Line 235
	lea	rdx, OFFSET FLAT:??_C@_0BI@KCJMGAAL@failed?5to?5end?5cmdBuffer@
	lea	rcx, QWORD PTR $T65[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T65[rbp]
	call	_CxxThrowException
$LN12@main:
; Line 237
	lea	rcx, QWORD PTR commands$[rbp]
	call	?getCurrentImageIndex@GraphicsCommands@cow@@QEAAIXZ ; cow::GraphicsCommands::getCurrentImageIndex
	mov	DWORD PTR index$38[rbp], eax
; Line 238
	lea	rcx, QWORD PTR commands$[rbp]
	call	??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ ; std::unique_ptr<cow::Swapchain,std::default_delete<cow::Swapchain> >::operator->
	mov	QWORD PTR tv782[rbp], rax
	lea	r8, QWORD PTR index$38[rbp]
	lea	rdx, QWORD PTR cmdBuffer$36[rbp]
	mov	rcx, QWORD PTR tv782[rbp]
	call	?submit@Swapchain@cow@@QEAA?AW4VkResult@@PEBQEAUVkCommandBuffer_T@@PEAI@Z ; cow::Swapchain::submit
	mov	DWORD PTR result$39[rbp], eax
; Line 240
	cmp	DWORD PTR result$39[rbp], 0
	je	SHORT $LN13@main
; Line 242
	lea	rdx, OFFSET FLAT:??_C@_0BB@LLDEEIKC@ASFDHFHUFDUHUYIF@
	lea	rcx, QWORD PTR $T66[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T66[rbp]
	call	_CxxThrowException
$LN13@main:
; Line 244
	lea	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	rcx, rax
	call	vkDeviceWaitIdle
; Line 245
	jmp	$LN5@main
$LN6@main:
; Line 246
	mov	rax, QWORD PTR layout$[rbp]
	mov	QWORD PTR tv799[rbp], rax
	lea	rcx, QWORD PTR device$[rbp]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv797[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv799[rbp]
	mov	rcx, QWORD PTR tv797[rbp]
	call	vkDestroyPipelineLayout
	npad	1
; Line 248
	lea	rcx, QWORD PTR models$[rbp]
	call	??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::~vector<RenderObject *,std::allocator<RenderObject *> >
	npad	1
	lea	rcx, QWORD PTR modelOther$[rbp]
	call	??1RenderObject@@QEAA@XZ		; RenderObject::~RenderObject
	npad	1
	lea	rcx, QWORD PTR modelMain$[rbp]
	call	??1RenderObject@@QEAA@XZ		; RenderObject::~RenderObject
	npad	1
	lea	rcx, QWORD PTR verticesOther$[rbp]
	call	??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	npad	1
	lea	rcx, QWORD PTR verticesMain$[rbp]
	call	??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	npad	1
	lea	rcx, QWORD PTR graphicsPipeline$[rbp]
	call	??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ ; cow::GraphicsPipeline<cow::Vertex2DTextured>::~GraphicsPipeline<cow::Vertex2DTextured>
	npad	1
	lea	rcx, QWORD PTR gpsi$[rbp]
	call	??1GraphicsPipelineSimpleInfo@cow@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR texture$[rbp]
	call	??1Texture@cow@@QEAA@XZ			; cow::Texture::~Texture
	npad	1
	lea	r9, OFFSET FLAT:??1Buffer@cow@@QEAA@XZ	; cow::Buffer::~Buffer
	mov	r8d, 2
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR descriptorBuffers$[rbp]
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	npad	1
	lea	rcx, QWORD PTR descriptor$[rbp]
	call	??1?$Descriptor@$01$01@cow@@QEAA@XZ	; cow::Descriptor<2,2>::~Descriptor<2,2>
	npad	1
	lea	rcx, QWORD PTR commands$[rbp]
	call	??1GraphicsCommands@cow@@QEAA@XZ	; cow::GraphicsCommands::~GraphicsCommands
	npad	1
	lea	rcx, QWORD PTR device$[rbp]
	call	??1Device@cow@@QEAA@XZ			; cow::Device::~Device
	npad	1
	lea	rcx, QWORD PTR window$[rbp]
	call	??1Window@cow@@QEAA@XZ			; cow::Window::~Window
	npad	1
	lea	rcx, QWORD PTR commandBuffers$[rbp]
	call	??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::~vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
	jmp	SHORT $LN35@main
	jmp	SHORT $LN34@main
$LN35@main:
	xor	eax, eax
$LN34@main:
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:main$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+5232]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
$LN36@main:
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$0 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR commandBuffers$[rbp]
	call	??1?$vector@PEAUVkCommandBuffer_T@@V?$allocator@PEAUVkCommandBuffer_T@@@std@@@std@@QEAA@XZ ; std::vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >::~vector<VkCommandBuffer_T *,std::allocator<VkCommandBuffer_T *> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$0 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$1 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR window$[rbp]
	call	??1Window@cow@@QEAA@XZ			; cow::Window::~Window
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$1 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$2 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR device$[rbp]
	call	??1Device@cow@@QEAA@XZ			; cow::Device::~Device
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$2 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$3 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR commands$[rbp]
	call	??1GraphicsCommands@cow@@QEAA@XZ	; cow::GraphicsCommands::~GraphicsCommands
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$3 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$4 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR descriptor$[rbp]
	call	??1?$Descriptor@$01$01@cow@@QEAA@XZ	; cow::Descriptor<2,2>::~Descriptor<2,2>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$4 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$5 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR descriptorBuffers$[rbp]
	call	??1Buffer@cow@@QEAA@XZ			; cow::Buffer::~Buffer
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$5 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$7 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	r9, OFFSET FLAT:??1Buffer@cow@@QEAA@XZ	; cow::Buffer::~Buffer
	mov	r8d, 2
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR descriptorBuffers$[rbp]
	call	??_M@YAXPEAX_K1P6AX0@Z@Z
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$7 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$8 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR texture$[rbp]
	call	??1Texture@cow@@QEAA@XZ			; cow::Texture::~Texture
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$8 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$10 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR gpsi$[rbp]
	call	??1GraphicsPipelineSimpleInfo@cow@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$10 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$11 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR graphicsPipeline$[rbp]
	call	??1?$GraphicsPipeline@UVertex2DTextured@cow@@@cow@@QEAA@XZ ; cow::GraphicsPipeline<cow::Vertex2DTextured>::~GraphicsPipeline<cow::Vertex2DTextured>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$11 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$12 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR verticesMain$[rbp]
	call	??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$12 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$13 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR verticesOther$[rbp]
	call	??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$13 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$15 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR modelMain$[rbp]
	call	??1RenderObject@@QEAA@XZ		; RenderObject::~RenderObject
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$15 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$17 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR modelOther$[rbp]
	call	??1RenderObject@@QEAA@XZ		; RenderObject::~RenderObject
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$17 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
commandBuffers$ = 8
window$ = 72
device$ = 128
commands$ = 216
ubo_bindings$ = 280
poolSizes$ = 360
descriptor$ = 408
descriptorBuffers$ = 480
texture$ = 584
i$30 = 648
bufferInfo$31 = 680
imageInfo$32 = 728
descriptorWrite$33 = 784
pushConstants$ = 936
layout$ = 984
createInfo$ = 1016
gpsi$ = 1104
graphicsPipeline$ = 1480
cmdAllocInfo$ = 1544
offset$ = 1604
colorChange$ = 1636
value$ = 1672
outside$ = 1716
to_the_side$ = 1748
verticesMain$ = 1784
verticesOther$ = 1848
modelMain$ = 1912
modelOther$ = 1976
models$ = 2040
ubo$ = 2104
frameIndex$34 = 2152
imageIndex$35 = 2180
cmdBuffer$36 = 2216
i$37 = 2248
index$38 = 2276
result$39 = 2308
$T40 = 3876
$T41 = 3912
$T42 = 3960
$T43 = 4008
$T44 = 4056
$T45 = 4100
$T46 = 4136
$T47 = 4164
$T48 = 4200
$T49 = 4232
$T50 = 4280
$T51 = 4328
$T52 = 4376
$T53 = 4424
$T54 = 4472
$T55 = 4520
$T56 = 4568
$T57 = 4616
$T58 = 4680
$T59 = 4712
$T60 = 4776
$T61 = 4808
$T62 = 4840
$T63 = 4868
$T64 = 4900
$T65 = 4936
$T66 = 4984
$T67 = 5040
$T68 = 5120
$T69 = 5168
tv822 = 5192
tv819 = 5192
tv799 = 5192
tv782 = 5192
tv764 = 5192
tv750 = 5192
tv736 = 5192
tv702 = 5192
tv694 = 5192
tv437 = 5192
tv338 = 5192
tv300 = 5192
tv259 = 5192
tv82 = 5192
tv797 = 5200
tv762 = 5200
tv748 = 5200
tv734 = 5200
tv435 = 5200
tv336 = 5200
tv732 = 5208
tv334 = 5208
__$ArrayPad$ = 5216
main$dtor$18 PROC
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR models$[rbp]
	call	??1?$vector@PEAVRenderObject@@V?$allocator@PEAVRenderObject@@@std@@@std@@QEAA@XZ ; std::vector<RenderObject *,std::allocator<RenderObject *> >::~vector<RenderObject *,std::allocator<RenderObject *> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
main$dtor$18 ENDP
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX_K@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1381
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1382
	mov	rax, QWORD PTR this$[rbp]
; Line 1383
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1377
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1378
	mov	rax, QWORD PTR this$[rbp]
; Line 1379
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 392
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2031
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2032
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Get_first
; Line 2033
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2027
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2028
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Get_first
; Line 2029
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Orphan_range@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2012
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2015
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Orphan_ran
; Line 2016
	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range_unlocked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_unlocked
; Line 2017
	jmp	SHORT $LN3@Orphan_ran
$LN2@Orphan_ran:
; Line 2020
	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_locked
$LN3@Orphan_ran:
; Line 2022
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z
_TEXT	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
_First$ = 264
_Last$ = 272
?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_locked, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2007
$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2008
	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1
; Line 2009
	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range_unlocked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_unlocked
	npad	1
; Line 2010
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_locked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
_First$ = 264
_Last$ = 272
?dtor$0@?0??_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z@4HA PROC ; `std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_locked'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??_Orphan_range_locked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z@4HA ENDP ; `std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_locked'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_range_unlocked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z
_TEXT	SEGMENT
_Pnext$ = 8
_Pnextptr$1 = 40
_Temp$2 = 72
_Temp$3 = 104
this$ = 352
_First$ = 360
_Last$ = 368
?_Orphan_range_unlocked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_unlocked, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1992
$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1993
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_ran:
; Line 1994
	mov	rax, QWORD PTR _Pnext$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran
; Line 1995
	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$1[rbp], rax
; Line 1996
	mov	rax, QWORD PTR _First$[rbp]
	cmp	QWORD PTR _Pnextptr$1[rbp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$1[rbp]
	cmp	QWORD PTR _Last$[rbp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:
; Line 1997
	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$2[rbp], rax
; Line 1998
	mov	rax, QWORD PTR _Temp$2[rbp]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rbp], rax
; Line 1999
	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:
; Line 2000
	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Temp$3[rbp], rax
; Line 2001
	mov	rax, QWORD PTR _Temp$3[rbp]
	mov	QWORD PTR [rax], 0
; Line 2002
	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rcx, QWORD PTR _Temp$3[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
$LN5@Orphan_ran:
; Line 2004
	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:
; Line 2005
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range_unlocked@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAXPEAUVertex2DTextured@cow@@0@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Orphan_range_unlocked
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Xlength@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@CAXXZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Xlength, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1983
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1984
	lea	rcx, OFFSET FLAT:??_C@_0BA@FOIKENOD@vector?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:
; Line 1985
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Xlength@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@CAXXZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Myend$ = 136
this$ = 384
?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1881
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1882
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 1883
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1884
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 1885
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 1886
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax
; Line 1888
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
; Line 1890
	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy
; Line 1891
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Destroy_range<std::allocator<cow::Vertex2DTextured> >
; Line 1893
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z ; std::allocator<cow::Vertex2DTextured>::deallocate
; Line 1895
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1896
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1897
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:
; Line 1899
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Change_array@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXQEAUVertex2DTextured@cow@@_K1@Z
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Myend$ = 136
this$ = 384
_Newvec$ = 392
_Newsize$ = 400
_Newcapacity$ = 408
?_Change_array@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXQEAUVertex2DTextured@cow@@_K1@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Change_array, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1859
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1861
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 1862
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1863
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 1864
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 1865
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax
; Line 1867
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
; Line 1869
	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr
; Line 1870
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@YAXPEAUVertex2DTextured@cow@@QEAU12@AEAV?$allocator@UVertex2DTextured@cow@@@0@@Z ; std::_Destroy_range<std::allocator<cow::Vertex2DTextured> >
; Line 1872
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 4
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z ; std::allocator<cow::Vertex2DTextured>::deallocate
$LN2@Change_arr:
; Line 1875
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1876
	imul	rax, QWORD PTR _Newsize$[rbp], 16
	mov	rcx, QWORD PTR _Newvec$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 1877
	imul	rax, QWORD PTR _Newcapacity$[rbp], 16
	mov	rcx, QWORD PTR _Newvec$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 1879
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Change_array@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXQEAUVertex2DTextured@cow@@_K1@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Buy_nonzero@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
_Newcapacity$ = 232
?_Buy_nonzero@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Buy_nonzero, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1841
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1852
	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::max_size
	cmp	QWORD PTR _Newcapacity$[rbp], rax
	jbe	SHORT $LN2@Buy_nonzer
; Line 1853
	call	?_Xlength@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@CAXXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Xlength
$LN2@Buy_nonzer:
; Line 1856
	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Buy_raw@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Buy_raw
$LN3@Buy_nonzer:
; Line 1857
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Buy_nonzero@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Buy_raw@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
_Newvec$ = 136
tv77 = 344
this$ = 384
_Newcapacity$ = 392
?_Buy_raw@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Buy_raw, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1825
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1827
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1828
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 1829
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 1830
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax
; Line 1835
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
	mov	QWORD PTR tv77[rbp], rax
	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	?allocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAPEAUVertex2DTextured@cow@@_K@Z ; std::allocator<cow::Vertex2DTextured>::allocate
	mov	QWORD PTR _Newvec$[rbp], rax
; Line 1836
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1837
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1838
	imul	rax, QWORD PTR _Newcapacity$[rbp], 16
	mov	rcx, QWORD PTR _Newvec$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 1839
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Buy_raw@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Calculate_growth@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 8
_Max$ = 40
_Geometric$ = 72
this$ = 320
_Newsize$ = 328
?_Calculate_growth@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Calculate_growth, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1807
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1809
	mov	rcx, QWORD PTR this$[rbp]
	call	?capacity@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::capacity
	mov	QWORD PTR _Oldcapacity$[rbp], rax
; Line 1810
	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::max_size
	mov	QWORD PTR _Max$[rbp], rax
; Line 1812
	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Max$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rbp], rax
	jbe	SHORT $LN2@Calculate_
; Line 1813
	mov	rax, QWORD PTR _Max$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:
; Line 1816
	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rbp], rax
; Line 1818
	mov	rax, QWORD PTR _Newsize$[rbp]
	cmp	QWORD PTR _Geometric$[rbp], rax
	jae	SHORT $LN3@Calculate_
; Line 1819
	mov	rax, QWORD PTR _Newsize$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:
; Line 1822
	mov	rax, QWORD PTR _Geometric$[rbp]
$LN1@Calculate_:
; Line 1823
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?_Calculate_growth@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?capacity@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?capacity@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::capacity, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1723
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1724
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1725
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 4
; Line 1726
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?capacity@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
this$ = 288
?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1718
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1719
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA_KAEBV?$allocator@UVertex2DTextured@cow@@@2@@Z ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::max_size
	mov	QWORD PTR $T1[rbp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$min@_K@std@@YAAEB_KAEB_K0@Z		; std::min<unsigned __int64>
	mov	rax, QWORD PTR [rax]
; Line 1721
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1713
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1714
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1715
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4
; Line 1716
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?data@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ
_TEXT	SEGMENT
this$ = 224
?data@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::data, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1632
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1633
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Unfancy_maybe_null@UVertex2DTextured@cow@@@std@@YAPEAUVertex2DTextured@cow@@PEAU12@@Z ; std::_Unfancy_maybe_null<cow::Vertex2DTextured>
; Line 1634
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?data@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::push_back, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 900
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 902
	mov	rcx, QWORD PTR _Val$[rbp]
	call	??$move@AEAUVertex2DTextured@cow@@@std@@YA$$QEAUVertex2DTextured@cow@@AEAU12@@Z ; std::move<cow::Vertex2DTextured &>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	??$emplace_back@UVertex2DTextured@cow@@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA?A_T$$QEAUVertex2DTextured@cow@@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::emplace_back<cow::Vertex2DTextured>
; Line 903
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAX$$QEAUVertex2DTextured@cow@@@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S7$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 790
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 791
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAXXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Tidy
; Line 793
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S7$[rbp]
	call	??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><cow::Vertex2DTextured>
	lea	rax, QWORD PTR $S7$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax
; Line 794
	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
; Line 796
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Right_data$ = 8
_Count$ = 40
$T1 = 260
$T2 = 292
$T3 = 324
tv78 = 344
tv76 = 352
this$ = 400
_Right$ = 408
??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 707
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv78[rbp], rax
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEBAAEBV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T1[rbp]
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA?AV?$allocator@UVertex2DTextured@cow@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::select_on_container_copy_construction
	mov	QWORD PTR tv76[rbp], rax
	movzx	eax, BYTE PTR $T2[rbp]
	mov	BYTE PTR $T3[rbp], al
	mov	r8, QWORD PTR tv76[rbp]
	movzx	edx, BYTE PTR $T3[rbp]
	mov	rcx, QWORD PTR tv78[rbp]
	call	??$?0V?$allocator@UVertex2DTextured@cow@@@std@@$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@UVertex2DTextured@cow@@@1@@Z ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1><std::allocator<cow::Vertex2DTextured> >
; Line 708
	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR _Right_data$[rbp], rax
; Line 709
	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	rcx, QWORD PTR _Right_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+16]
	sub	rax, rcx
	sar	rax, 4
	mov	QWORD PTR _Count$[rbp], rax
; Line 710
	mov	rax, QWORD PTR _Right_data$[rbp]
	add	rax, 16
	mov	rcx, QWORD PTR _Right_data$[rbp]
	add	rcx, 8
	mov	r9, rax
	mov	r8, rcx
	mov	rdx, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Construct_n@AEBQEAUVertex2DTextured@cow@@AEBQEAU12@@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAX_KAEBQEAUVertex2DTextured@cow@@1@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Construct_n<cow::Vertex2DTextured * const &,cow::Vertex2DTextured * const &>
; Line 711
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+376]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv83 = 248
tv69 = 248
this$ = 288
??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ PROC ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 659
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv69[rbp], rax
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@UVertex2DTextured@cow@@@std@@V?$_Vector_val@U?$_Simple_types@UVertex2DTextured@cow@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1>::_Compressed_pair<std::allocator<cow::Vertex2DTextured>,std::_Vector_val<std::_Simple_types<cow::Vertex2DTextured> >,1><>
; Line 660
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv83[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@AEAAAEAV?$allocator@UVertex2DTextured@cow@@@2@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0UVertex2DTextured@cow@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@UVertex2DTextured@cow@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><cow::Vertex2DTextured>
	mov	rdx, rax
	mov	rcx, QWORD PTR tv83[rbp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 661
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ENDP ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA?AV?$allocator@UVertex2DTextured@cow@@@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 224
_Al$ = 232
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA?AV?$allocator@UVertex2DTextured@cow@@@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::select_on_container_copy_construction, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 697
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 698
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 699
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA?AV?$allocator@UVertex2DTextured@cow@@@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA_KAEBV?$allocator@UVertex2DTextured@cow@@@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA_KAEBV?$allocator@UVertex2DTextured@cow@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::max_size, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 693
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 694
	mov	rax, 1152921504606846975		; 0fffffffffffffffH
; Line 695
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@SA_KAEBV?$allocator@UVertex2DTextured@cow@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<cow::Vertex2DTextured> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?allocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAPEAUVertex2DTextured@cow@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAPEAUVertex2DTextured@cow@@_K@Z PROC ; std::allocator<cow::Vertex2DTextured>::allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 833
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 834
	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
; Line 835
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAPEAUVertex2DTextured@cow@@_K@Z ENDP ; std::allocator<cow::Vertex2DTextured>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z PROC ; std::allocator<cow::Vertex2DTextured>::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 827
$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
$LN4@deallocate:
; Line 828
	cmp	QWORD PTR _Ptr$[rbp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rbp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate
; Line 830
	imul	rax, QWORD PTR _Count$[rbp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
; Line 831
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@UVertex2DTextured@cow@@@std@@QEAAXQEAUVertex2DTextured@cow@@_K@Z ENDP ; std::allocator<cow::Vertex2DTextured>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@UVertex2DTextured@cow@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@UVertex2DTextured@cow@@@std@@QEAA@XZ PROC ; std::allocator<cow::Vertex2DTextured>::allocator<cow::Vertex2DTextured>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 819
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$allocator@UVertex2DTextured@cow@@@std@@QEAA@XZ ENDP ; std::allocator<cow::Vertex2DTextured>::allocator<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@RenderObject@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@RenderObject@@QEAAX_K@Z PROC		; RenderObject::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@RenderObject@@QEAAX_K@Z ENDP		; RenderObject::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1RenderObject@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1RenderObject@@QEAA@XZ PROC				; RenderObject::~RenderObject, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Source.cpp
; Line 33
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D63E6CC3_Source@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??1?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ ; cow::PushConstantComponent<SimplePushConstantData>::~PushConstantComponent<SimplePushConstantData>
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??1?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@XZ ; cow::Model2DComponent<cow::Vertex2DTextured>::~Model2DComponent<cow::Vertex2DTextured>
	mov	rcx, QWORD PTR this$[rbp]
	call	??1EmptyObject@cow@@QEAA@XZ		; cow::EmptyObject::~EmptyObject
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1RenderObject@@QEAA@XZ ENDP				; RenderObject::~RenderObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 264
tv82 = 280
tv147 = 288
this$ = 336
device$ = 344
vertices2d$ = 352
??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z PROC ; RenderObject::RenderObject, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Source.cpp
; Line 28
$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D63E6CC3_Source@cpp
	call	__CheckForDebuggerJustMyCode
; Line 26
	mov	rcx, QWORD PTR this$[rbp]
	call	?create@EmptyObject@cow@@SA?AV12@XZ	; cow::EmptyObject::create
	npad	1
; Line 27
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR tv82[rbp], rax
	lea	rax, QWORD PTR $T1[rbp]
	mov	QWORD PTR $T2[rbp], rax
	mov	rdx, QWORD PTR vertices2d$[rbp]
	mov	rcx, QWORD PTR $T2[rbp]
	call	??0?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	mov	QWORD PTR tv147[rbp], rax
	mov	r8, QWORD PTR tv147[rbp]
	mov	rdx, QWORD PTR device$[rbp]
	mov	rcx, QWORD PTR tv82[rbp]
	call	??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z ; cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>
	npad	1
; Line 28
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ ; cow::PushConstantComponent<SimplePushConstantData>::PushConstantComponent<SimplePushConstantData>
	npad	1
	mov	rcx, QWORD PTR vertices2d$[rbp]
	call	??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
??0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z ENDP ; RenderObject::RenderObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 264
tv82 = 280
tv147 = 288
this$ = 336
device$ = 344
vertices2d$ = 352
?dtor$0@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA PROC ; `RenderObject::RenderObject'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR vertices2d$[rbp]
	call	??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA ENDP ; `RenderObject::RenderObject'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 264
tv82 = 280
tv147 = 288
this$ = 336
device$ = 344
vertices2d$ = 352
?dtor$1@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA PROC ; `RenderObject::RenderObject'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1EmptyObject@cow@@QEAA@XZ		; cow::EmptyObject::~EmptyObject
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA ENDP ; `RenderObject::RenderObject'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 264
tv82 = 280
tv147 = 288
this$ = 336
device$ = 344
vertices2d$ = 352
?dtor$3@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA PROC ; `RenderObject::RenderObject'::`1'::dtor$3
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@XZ ; cow::Model2DComponent<cow::Vertex2DTextured>::~Model2DComponent<cow::Vertex2DTextured>
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$3@?0???0RenderObject@@QEAA@AEAVDevice@cow@@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA ENDP ; `RenderObject::RenderObject'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pushConstant@?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAAXPEAUVkCommandBuffer_T@@PEAUVkPipelineLayout_T@@I@Z
_TEXT	SEGMENT
this$ = 224
cmdBuffer$ = 232
layout$ = 240
flags$ = 248
?pushConstant@?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAAXPEAUVkCommandBuffer_T@@PEAUVkPipelineLayout_T@@I@Z PROC ; cow::PushConstantComponent<SimplePushConstantData>::pushConstant, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\PushConstant.hpp
; Line 14
$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__E4C9D0F0_PushConstant@hpp
	call	__CheckForDebuggerJustMyCode
; Line 15
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 8
	xor	r9d, r9d
	mov	r8d, DWORD PTR flags$[rbp]
	mov	rdx, QWORD PTR layout$[rbp]
	mov	rcx, QWORD PTR cmdBuffer$[rbp]
	call	vkCmdPushConstants
; Line 23
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pushConstant@?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAAXPEAUVkCommandBuffer_T@@PEAUVkPipelineLayout_T@@I@Z ENDP ; cow::PushConstantComponent<SimplePushConstantData>::pushConstant
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ PROC ; cow::PushConstantComponent<SimplePushConstantData>::~PushConstantComponent<SimplePushConstantData>, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\PushConstant.hpp
; Line 12
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E4C9D0F0_PushConstant@hpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ ENDP ; cow::PushConstantComponent<SimplePushConstantData>::~PushConstantComponent<SimplePushConstantData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ PROC ; cow::PushConstantComponent<SimplePushConstantData>::PushConstantComponent<SimplePushConstantData>, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\PushConstant.hpp
; Line 11
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E4C9D0F0_PushConstant@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$PushConstantComponent@USimplePushConstantData@@@cow@@QEAA@XZ ENDP ; cow::PushConstantComponent<SimplePushConstantData>::PushConstantComponent<SimplePushConstantData>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?draw@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z
_TEXT	SEGMENT
this$ = 224
cmdBuffer$ = 232
?draw@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z PROC ; cow::Model2DComponent<cow::Vertex2DTextured>::draw, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Model.hpp
; Line 68
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__880AEF67_Model@hpp
	call	__CheckForDebuggerJustMyCode
; Line 69
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, 1
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR [rax+16]
	mov	rcx, QWORD PTR cmdBuffer$[rbp]
	call	vkCmdDraw
; Line 70
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?draw@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ENDP ; cow::Model2DComponent<cow::Vertex2DTextured>::draw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z
_TEXT	SEGMENT
pVertexBuffers$ = 8
offsets$ = 40
__$ArrayPad$ = 248
this$ = 288
cmdBuffer$ = 296
?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z PROC ; cow::Model2DComponent<cow::Vertex2DTextured>::bind, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Model.hpp
; Line 62
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+344]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__880AEF67_Model@hpp
	call	__CheckForDebuggerJustMyCode
; Line 63
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator->
	mov	rcx, rax
	call	?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ	; cow::Buffer::get
	mov	QWORD PTR pVertexBuffers$[rbp], rax
; Line 64
	mov	QWORD PTR offsets$[rbp], 0
; Line 65
	lea	rax, QWORD PTR offsets$[rbp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR pVertexBuffers$[rbp]
	mov	r8d, 1
	xor	edx, edx
	mov	rcx, QWORD PTR cmdBuffer$[rbp]
	call	vkCmdBindVertexBuffers
; Line 66
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?bind@?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ENDP ; cow::Model2DComponent<cow::Vertex2DTextured>::bind
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@XZ PROC ; cow::Model2DComponent<cow::Vertex2DTextured>::~Model2DComponent<cow::Vertex2DTextured>, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Model.hpp
; Line 60
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__880AEF67_Model@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::~unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@XZ ENDP ; cow::Model2DComponent<cow::Vertex2DTextured>::~Model2DComponent<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z
_TEXT	SEGMENT
bufferSize$ = 8
$T4 = 228
$T5 = 260
$T6 = 296
tv160 = 312
tv151 = 312
tv136 = 312
tv149 = 320
tv147 = 328
__$ArrayPad$ = 336
this$ = 384
device$ = 392
vertices2d$ = 400
??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z PROC ; cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Model.hpp
; Line 26
$LN8:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+440]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__880AEF67_Model@hpp
	call	__CheckForDebuggerJustMyCode
; Line 25
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR device$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 26
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??$?0U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> ><std::default_delete<cow::Buffer>,0>
	npad	1
; Line 25
	mov	rcx, QWORD PTR vertices2d$[rbp]
	call	?size@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEBA_KXZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::size
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+16], eax
; Line 27
	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax+16], 3
	jb	SHORT $LN3@Model2DCom
	lea	rax, OFFSET FLAT:??_C@_0BP@JNGFJPNG@Vertex?5Count?5must?5be?5atleast?53@
	test	rax, rax
	jne	SHORT $LN4@Model2DCom
$LN3@Model2DCom:
	mov	r8d, 27
	lea	rdx, OFFSET FLAT:??_C@_1GI@LIMMMBDB@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1GK@IDNJBOAD@?$AAv?$AAe?$AAr?$AAt?$AAe?$AAx?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?5?$AA?$DO?$AA?$DN?$AA?5@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN4@Model2DCom:
; Line 28
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	imul	rax, rax, 16
	mov	QWORD PTR bufferSize$[rbp], rax
; Line 30
	mov	DWORD PTR $T4[rbp], 3
	mov	DWORD PTR $T5[rbp], 128			; 00000080H
	lea	rax, QWORD PTR $T4[rbp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR $T5[rbp]
	lea	r8, QWORD PTR bufferSize$[rbp]
	mov	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR $T6[rbp]
	call	??$make_unique@VBuffer@cow@@AEAVDevice@2@AEA_KW4VkBufferUsageFlagBits@@H$0A@@std@@YA?AV?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@0@AEAVDevice@cow@@AEA_K$$QEAW4VkBufferUsageFlagBits@@$$QEAH@Z ; std::make_unique<cow::Buffer,cow::Device &,unsigned __int64 &,enum VkBufferUsageFlagBits,int,0>
	mov	QWORD PTR tv160[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdx, QWORD PTR tv160[rbp]
	mov	rcx, rax
	call	??$?4U?$default_delete@VBuffer@cow@@@std@@$0A@@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator=<std::default_delete<cow::Buffer>,0>
	lea	rcx, QWORD PTR $T6[rbp]
	call	??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::~unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >
; Line 36
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator->
	mov	QWORD PTR tv136[rbp], rax
	xor	r8d, r8d
	mov	rdx, -1
	mov	rcx, QWORD PTR tv136[rbp]
	call	?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z ; cow::Buffer::map
; Line 37
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator->
	mov	QWORD PTR tv151[rbp], rax
	mov	rax, QWORD PTR bufferSize$[rbp]
	mov	QWORD PTR tv149[rbp], rax
	mov	rcx, QWORD PTR vertices2d$[rbp]
	call	?data@?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAAPEAUVertex2DTextured@cow@@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::data
	mov	QWORD PTR tv147[rbp], rax
	xor	r9d, r9d
	mov	r8, QWORD PTR tv149[rbp]
	mov	rdx, QWORD PTR tv147[rbp]
	mov	rcx, QWORD PTR tv151[rbp]
	call	?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z	; cow::Buffer::write
; Line 38
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator->
	mov	rcx, rax
	call	?unmap@Buffer@cow@@QEAAXXZ		; cow::Buffer::unmap
	npad	1
; Line 39
	mov	rcx, QWORD PTR vertices2d$[rbp]
	call	??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
??0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z ENDP ; cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
bufferSize$ = 8
$T4 = 228
$T5 = 260
$T6 = 296
tv160 = 312
tv151 = 312
tv136 = 312
tv149 = 320
tv147 = 328
__$ArrayPad$ = 336
this$ = 384
device$ = 392
vertices2d$ = 400
?dtor$0@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA PROC ; `cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR vertices2d$[rbp]
	call	??1?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@QEAA@XZ ; std::vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >::~vector<cow::Vertex2DTextured,std::allocator<cow::Vertex2DTextured> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA ENDP ; `cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
bufferSize$ = 8
$T4 = 228
$T5 = 260
$T6 = 296
tv160 = 312
tv151 = 312
tv136 = 312
tv149 = 320
tv147 = 328
__$ArrayPad$ = 336
this$ = 384
device$ = 392
vertices2d$ = 400
?dtor$1@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA PROC ; `cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR this$[rbp]
	add	rcx, 8
	call	??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::~unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$Model2DComponent@UVertex2DTextured@cow@@@cow@@QEAA@AEAVDevice@1@V?$vector@UVertex2DTextured@cow@@V?$allocator@UVertex2DTextured@cow@@@std@@@std@@@Z@4HA ENDP ; `cow::Model2DComponent<cow::Vertex2DTextured>::Model2DComponent<cow::Vertex2DTextured>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 200
tv93 = 264
tv85 = 264
this$ = 304
__formal$ = 312
_Lobj$ = 320
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xloctime
; Line 171
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B6EC6CD7_xloctime
	call	__CheckForDebuggerJustMyCode
; Line 172
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
	mov	rcx, QWORD PTR this$[rbp]
	lea	rdi, QWORD PTR [rcx+44]
	mov	rsi, rax
	mov	ecx, 44					; 0000002cH
	rep movsb
; Line 174
	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN2@Getvals
; Line 175
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 176
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 178
	lea	rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+32], rax
; Line 179
	jmp	$LN3@Getvals
$LN2@Getvals:
; Line 180
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 44					; 0000002cH
	mov	QWORD PTR tv85[rbp], rax
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
	mov	rcx, QWORD PTR tv85[rbp]
	mov	r8, rcx
	xor	edx, edx
	mov	rcx, rax
	call	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 181
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 44					; 0000002cH
	mov	QWORD PTR tv93[rbp], rax
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
	mov	rcx, QWORD PTR tv93[rbp]
	mov	r8, rcx
	xor	edx, edx
	mov	rcx, rax
	call	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 182
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 44					; 0000002cH
	mov	r8, rax
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
	call	??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ; std::_Maklocstr<wchar_t>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+32], rax
$LN3@Getvals:
; Line 184
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$_Getvals@_W@?$time_get@_WV?$istreambuf_iterator@_WU?$char_traits@_W@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<wchar_t,std::istreambuf_iterator<wchar_t,std::char_traits<wchar_t> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z
_TEXT	SEGMENT
$T1 = 200
tv93 = 264
tv85 = 264
this$ = 304
__formal$ = 312
_Lobj$ = 320
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z PROC ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xloctime
; Line 171
$LN5:
	mov	QWORD PTR [rsp+24], r8
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 304				; 00000130H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__B6EC6CD7_xloctime
	call	__CheckForDebuggerJustMyCode
; Line 172
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_Getcvt@_Locinfo@std@@QEBA?AU_Cvtvec@@XZ
	mov	rcx, QWORD PTR this$[rbp]
	lea	rdi, QWORD PTR [rcx+44]
	mov	rsi, rax
	mov	ecx, 44					; 0000002cH
	rep movsb
; Line 174
	xor	eax, eax
	cmp	eax, 1
	je	SHORT $LN2@Getvals
; Line 175
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_W_Getdays@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 176
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_W_Getmonths@_Locinfo@std@@QEBAPEBGXZ
	mov	rcx, rax
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 178
	lea	rcx, OFFSET FLAT:??_C@_1BK@MHIKGOKE@?$AA?3?$AAA?$AAM?$AA?3?$AAa?$AAm?$AA?3?$AAP?$AAM?$AA?3?$AAp?$AAm@
	call	?_Maklocwcs@std@@YAPEA_WPEB_W@Z		; std::_Maklocwcs
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+32], rax
; Line 179
	jmp	$LN3@Getvals
$LN2@Getvals:
; Line 180
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 44					; 0000002cH
	mov	QWORD PTR tv85[rbp], rax
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_Getdays@_Locinfo@std@@QEBAPEBDXZ
	mov	rcx, QWORD PTR tv85[rbp]
	mov	r8, rcx
	xor	edx, edx
	mov	rcx, rax
	call	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 181
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 44					; 0000002cH
	mov	QWORD PTR tv93[rbp], rax
	mov	rcx, QWORD PTR _Lobj$[rbp]
	call	QWORD PTR __imp_?_Getmonths@_Locinfo@std@@QEBAPEBDXZ
	mov	rcx, QWORD PTR tv93[rbp]
	mov	r8, rcx
	xor	edx, edx
	mov	rcx, rax
	call	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 182
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 44					; 0000002cH
	mov	r8, rax
	xor	edx, edx
	lea	rcx, OFFSET FLAT:??_C@_0N@LPFKKEBD@?3AM?3am?3PM?3pm@
	call	??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ; std::_Maklocstr<char>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+32], rax
$LN3@Getvals:
; Line 184
	lea	rsp, QWORD PTR [rbp+272]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
??$_Getvals@_W@?$time_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@IEAAX_WAEBV_Locinfo@1@@Z ENDP ; std::time_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::_Getvals<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@Texture@cow@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@Texture@cow@@QEAAX_K@Z PROC		; cow::Texture::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@Texture@cow@@QEAAX_K@Z ENDP		; cow::Texture::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createTextureSampler@Texture@cow@@QEAAXXZ
_TEXT	SEGMENT
samplerInfo$ = 16
properties$ = 128
$T5 = 1560
tv78 = 1592
__$ArrayPad$ = 1600
this$ = 1648
?createTextureSampler@Texture@cow@@QEAAXXZ PROC		; cow::Texture::createTextureSampler, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Texture.hpp
; Line 111
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1656				; 00000678H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 262				; 00000106H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1688]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__15323767_Texture@hpp
	call	__CheckForDebuggerJustMyCode
; Line 112
	lea	rax, QWORD PTR samplerInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 80					; 00000050H
	rep stosb
; Line 113
	mov	DWORD PTR samplerInfo$[rbp], 31
; Line 114
	mov	DWORD PTR samplerInfo$[rbp+20], 1
; Line 115
	mov	DWORD PTR samplerInfo$[rbp+24], 1
; Line 116
	mov	DWORD PTR samplerInfo$[rbp+32], 0
; Line 117
	mov	DWORD PTR samplerInfo$[rbp+36], 0
; Line 118
	mov	DWORD PTR samplerInfo$[rbp+40], 0
; Line 119
	mov	DWORD PTR samplerInfo$[rbp+48], 1
; Line 121
	lea	rax, QWORD PTR properties$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 824				; 00000338H
	rep stosb
; Line 122
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getPhysicalDevice@Device@cow@@QEAAPEAUVkPhysicalDevice_T@@XZ ; cow::Device::getPhysicalDevice
	lea	rdx, QWORD PTR properties$[rbp]
	mov	rcx, rax
	call	vkGetPhysicalDeviceProperties
; Line 124
	movss	xmm0, DWORD PTR properties$[rbp+568]
	movss	DWORD PTR samplerInfo$[rbp+52], xmm0
; Line 125
	mov	DWORD PTR samplerInfo$[rbp+72], 3
; Line 126
	mov	DWORD PTR samplerInfo$[rbp+76], 0
; Line 127
	mov	DWORD PTR samplerInfo$[rbp+56], 0
; Line 128
	mov	DWORD PTR samplerInfo$[rbp+60], 7
; Line 129
	mov	DWORD PTR samplerInfo$[rbp+28], 1
; Line 130
	xorps	xmm0, xmm0
	movss	DWORD PTR samplerInfo$[rbp+44], xmm0
; Line 131
	xorps	xmm0, xmm0
	movss	DWORD PTR samplerInfo$[rbp+64], xmm0
; Line 132
	xorps	xmm0, xmm0
	movss	DWORD PTR samplerInfo$[rbp+68], xmm0
; Line 133
	mov	DWORD PTR samplerInfo$[rbp+48], 0
; Line 134
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR samplerInfo$[rbp+52], xmm0
; Line 136
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	QWORD PTR tv78[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	rcx, QWORD PTR tv78[rbp]
	mov	r9, rcx
	xor	r8d, r8d
	lea	rdx, QWORD PTR samplerInfo$[rbp]
	mov	rcx, rax
	call	vkCreateSampler
	test	eax, eax
	je	SHORT $LN2@createText
; Line 138
	lea	rdx, OFFSET FLAT:??_C@_0CC@ELCOLLBC@failed?5to?5create?5texture?5sample@
	lea	rcx, QWORD PTR $T5[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T5[rbp]
	call	_CxxThrowException
$LN2@createText:
$LN3@createText:
; Line 140
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?createTextureSampler@Texture@cow@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1624]
	pop	rdi
	pop	rbp
	ret	0
?createTextureSampler@Texture@cow@@QEAAXXZ ENDP		; cow::Texture::createTextureSampler
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createTextureImageView@Texture@cow@@QEAAXXZ
_TEXT	SEGMENT
viewInfo$ = 16
$T4 = 312
tv70 = 344
__$ArrayPad$ = 352
this$ = 400
?createTextureImageView@Texture@cow@@QEAAXXZ PROC	; cow::Texture::createTextureImageView, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Texture.hpp
; Line 94
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+440]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__15323767_Texture@hpp
	call	__CheckForDebuggerJustMyCode
; Line 95
	lea	rax, QWORD PTR viewInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 80					; 00000050H
	rep stosb
; Line 96
	mov	DWORD PTR viewInfo$[rbp], 15
; Line 97
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR viewInfo$[rbp+24], rax
; Line 98
	mov	DWORD PTR viewInfo$[rbp+32], 1
; Line 99
	mov	DWORD PTR viewInfo$[rbp+36], 43		; 0000002bH
; Line 100
	mov	DWORD PTR viewInfo$[rbp+56], 1
; Line 101
	mov	DWORD PTR viewInfo$[rbp+60], 0
; Line 102
	mov	DWORD PTR viewInfo$[rbp+64], 1
; Line 103
	mov	DWORD PTR viewInfo$[rbp+68], 0
; Line 104
	mov	DWORD PTR viewInfo$[rbp+72], 1
; Line 105
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR tv70[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	rcx, QWORD PTR tv70[rbp]
	mov	r9, rcx
	xor	r8d, r8d
	lea	rdx, QWORD PTR viewInfo$[rbp]
	mov	rcx, rax
	call	vkCreateImageView
	test	eax, eax
	je	SHORT $LN2@createText
; Line 107
	lea	rdx, OFFSET FLAT:??_C@_0CF@NBFKCJOJ@failed?5to?5create?5texture?5image?5@
	lea	rcx, QWORD PTR $T4[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T4[rbp]
	call	_CxxThrowException
$LN2@createText:
$LN3@createText:
; Line 109
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?createTextureImageView@Texture@cow@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+376]
	pop	rdi
	pop	rbp
	ret	0
?createTextureImageView@Texture@cow@@QEAAXXZ ENDP	; cow::Texture::createTextureImageView
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z
_TEXT	SEGMENT
commandBuffer$ = 8
region$ = 40
$T4 = 312
$T5 = 360
tv81 = 392
__$ArrayPad$ = 400
this$ = 448
buffer$ = 456
image$ = 464
width$ = 472
height$ = 480
?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z PROC ; cow::Texture::copyBufferToImage, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Texture.hpp
; Line 65
$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 464				; 000001d0H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+504]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__15323767_Texture@hpp
	call	__CheckForDebuggerJustMyCode
; Line 66
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?beginSingleTimeCommands@Device@cow@@QEAAPEAUVkCommandBuffer_T@@XZ ; cow::Device::beginSingleTimeCommands
	mov	QWORD PTR commandBuffer$[rbp], rax
; Line 67
	lea	rax, QWORD PTR region$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 56					; 00000038H
	rep stosb
; Line 68
	mov	QWORD PTR region$[rbp], 0
; Line 69
	mov	DWORD PTR region$[rbp+8], 0
; Line 70
	mov	DWORD PTR region$[rbp+12], 0
; Line 72
	mov	DWORD PTR region$[rbp+16], 1
; Line 73
	mov	DWORD PTR region$[rbp+20], 0
; Line 74
	mov	DWORD PTR region$[rbp+24], 0
; Line 75
	mov	DWORD PTR region$[rbp+28], 1
; Line 77
	mov	DWORD PTR $T4[rbp], 0
	mov	DWORD PTR $T4[rbp+4], 0
	mov	DWORD PTR $T4[rbp+8], 0
	lea	rax, QWORD PTR region$[rbp+32]
	lea	rcx, QWORD PTR $T4[rbp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 78
	mov	eax, DWORD PTR width$[rbp]
	mov	DWORD PTR $T5[rbp], eax
	mov	eax, DWORD PTR height$[rbp]
	mov	DWORD PTR $T5[rbp+4], eax
	mov	DWORD PTR $T5[rbp+8], 1
	lea	rax, QWORD PTR region$[rbp+44]
	lea	rcx, QWORD PTR $T5[rbp]
	mov	rdi, rax
	mov	rsi, rcx
	mov	ecx, 12
	rep movsb
; Line 83
	lea	rax, QWORD PTR region$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 1
	mov	r9d, 7
	mov	r8, QWORD PTR image$[rbp]
	mov	rdx, QWORD PTR buffer$[rbp]
	mov	rcx, QWORD PTR commandBuffer$[rbp]
	call	vkCmdCopyBufferToImage
; Line 91
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR tv81[rbp], rax
	mov	rdx, QWORD PTR commandBuffer$[rbp]
	mov	rcx, QWORD PTR tv81[rbp]
	call	?endSingleTimeCommands@Device@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ; cow::Device::endSingleTimeCommands
; Line 92
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+416]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z ENDP ; cow::Texture::copyBufferToImage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z
_TEXT	SEGMENT
commandBuffer$ = 8
barrier$ = 48
sourceStage$ = 148
destinationStage$ = 180
$T4 = 408
tv93 = 440
__$ArrayPad$ = 448
this$ = 496
image$ = 504
format$ = 512
oldLayout$ = 520
newLayout$ = 528
?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z PROC ; cow::Texture::transitionImageLayout, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Texture.hpp
; Line 13
$LN7:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+80]
	lea	rdi, QWORD PTR [rsp+80]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__15323767_Texture@hpp
	call	__CheckForDebuggerJustMyCode
; Line 14
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?beginSingleTimeCommands@Device@cow@@QEAAPEAUVkCommandBuffer_T@@XZ ; cow::Device::beginSingleTimeCommands
	mov	QWORD PTR commandBuffer$[rbp], rax
; Line 16
	lea	rax, QWORD PTR barrier$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 72					; 00000048H
	rep stosb
; Line 17
	mov	DWORD PTR barrier$[rbp], 45		; 0000002dH
; Line 18
	mov	eax, DWORD PTR oldLayout$[rbp]
	mov	DWORD PTR barrier$[rbp+24], eax
; Line 19
	mov	eax, DWORD PTR newLayout$[rbp]
	mov	DWORD PTR barrier$[rbp+28], eax
; Line 20
	mov	DWORD PTR barrier$[rbp+32], -1		; ffffffffH
; Line 21
	mov	DWORD PTR barrier$[rbp+36], -1		; ffffffffH
; Line 22
	mov	rax, QWORD PTR image$[rbp]
	mov	QWORD PTR barrier$[rbp+40], rax
; Line 23
	mov	DWORD PTR barrier$[rbp+48], 1
; Line 24
	mov	DWORD PTR barrier$[rbp+52], 0
; Line 25
	mov	DWORD PTR barrier$[rbp+56], 1
; Line 26
	mov	DWORD PTR barrier$[rbp+60], 0
; Line 27
	mov	DWORD PTR barrier$[rbp+64], 1
; Line 28
	mov	DWORD PTR barrier$[rbp+16], 0
; Line 29
	mov	DWORD PTR barrier$[rbp+20], 0
; Line 34
	cmp	DWORD PTR oldLayout$[rbp], 0
	jne	SHORT $LN2@transition
	cmp	DWORD PTR newLayout$[rbp], 7
	jne	SHORT $LN2@transition
; Line 35
	mov	DWORD PTR barrier$[rbp+16], 0
; Line 36
	mov	DWORD PTR barrier$[rbp+20], 4096	; 00001000H
; Line 38
	mov	DWORD PTR sourceStage$[rbp], 1
; Line 39
	mov	DWORD PTR destinationStage$[rbp], 4096	; 00001000H
; Line 40
	jmp	SHORT $LN3@transition
$LN2@transition:
; Line 41
	cmp	DWORD PTR oldLayout$[rbp], 7
	jne	SHORT $LN4@transition
	cmp	DWORD PTR newLayout$[rbp], 5
	jne	SHORT $LN4@transition
; Line 42
	mov	DWORD PTR barrier$[rbp+16], 4096	; 00001000H
; Line 43
	mov	DWORD PTR barrier$[rbp+20], 32		; 00000020H
; Line 45
	mov	DWORD PTR sourceStage$[rbp], 4096	; 00001000H
; Line 46
	mov	DWORD PTR destinationStage$[rbp], 128	; 00000080H
; Line 47
	jmp	SHORT $LN5@transition
$LN4@transition:
; Line 49
	lea	rdx, OFFSET FLAT:??_C@_0BP@GBFHPONC@unsupported?5layout?5transition?$CB@
	lea	rcx, QWORD PTR $T4[rbp]
	call	??0invalid_argument@std@@QEAA@PEBD@Z	; std::invalid_argument::invalid_argument
	lea	rdx, OFFSET FLAT:_TI3?AVinvalid_argument@std@@
	lea	rcx, QWORD PTR $T4[rbp]
	call	_CxxThrowException
$LN5@transition:
$LN3@transition:
; Line 53
	lea	rax, QWORD PTR barrier$[rbp]
	mov	QWORD PTR [rsp+72], rax
	mov	DWORD PTR [rsp+64], 1
	mov	QWORD PTR [rsp+56], 0
	mov	DWORD PTR [rsp+48], 0
	mov	QWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR destinationStage$[rbp]
	mov	edx, DWORD PTR sourceStage$[rbp]
	mov	rcx, QWORD PTR commandBuffer$[rbp]
	call	vkCmdPipelineBarrier
; Line 62
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR tv93[rbp], rax
	mov	rdx, QWORD PTR commandBuffer$[rbp]
	mov	rcx, QWORD PTR tv93[rbp]
	call	?endSingleTimeCommands@Device@cow@@QEAAXPEAUVkCommandBuffer_T@@@Z ; cow::Device::endSingleTimeCommands
$LN6@transition:
; Line 63
	lea	rcx, QWORD PTR [rbp-80]
	lea	rdx, OFFSET FLAT:?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+472]
	pop	rdi
	pop	rbp
	ret	0
?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z ENDP ; cow::Texture::transitionImageLayout
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Texture@cow@@QEAA@XZ
_TEXT	SEGMENT
tv139 = 192
tv128 = 192
tv85 = 192
tv74 = 192
tv137 = 200
tv94 = 200
tv83 = 200
tv72 = 200
this$ = 240
??1Texture@cow@@QEAA@XZ PROC				; cow::Texture::~Texture, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Texture.hpp
; Line 192
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__15323767_Texture@hpp
	call	__CheckForDebuggerJustMyCode
; Line 193
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv74[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv72[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv74[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	vkDestroySampler
; Line 195
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv85[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv83[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv85[rbp]
	mov	rcx, QWORD PTR tv83[rbp]
	call	vkDestroyImageView
; Line 197
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv128[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv94[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv128[rbp]
	mov	rcx, QWORD PTR tv94[rbp]
	call	vkDestroyImage
; Line 199
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR tv139[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv137[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv139[rbp]
	mov	rcx, QWORD PTR tv137[rbp]
	call	vkFreeMemory
	npad	1
; Line 200
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??1Texture@cow@@QEAA@XZ ENDP				; cow::Texture::~Texture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z
_TEXT	SEGMENT
texWidth$ = 4
texHeight$ = 36
texChannels$ = 68
pixels$ = 104
imageSize$ = 136
buffer$ = 168
$T7 = 424
tv169 = 452
tv167 = 456
tv165 = 464
tv163 = 472
__$ArrayPad$ = 480
this$ = 528
device$ = 536
filepath$ = 544
??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z PROC		; cow::Texture::Texture, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Texture.hpp
; Line 154
$LN6:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 568				; 00000238H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+600]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__15323767_Texture@hpp
	call	__CheckForDebuggerJustMyCode
; Line 153
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR device$[rbp]
	mov	QWORD PTR [rax+32], rcx
; Line 157
	mov	DWORD PTR [rsp+32], 4
	lea	r9, QWORD PTR texChannels$[rbp]
	lea	r8, QWORD PTR texHeight$[rbp]
	lea	rdx, QWORD PTR texWidth$[rbp]
	mov	rcx, QWORD PTR filepath$[rbp]
	call	stbi_load
	mov	QWORD PTR pixels$[rbp], rax
; Line 158
	mov	eax, DWORD PTR texWidth$[rbp]
	imul	eax, DWORD PTR texHeight$[rbp]
	shl	eax, 2
	cdqe
	mov	QWORD PTR imageSize$[rbp], rax
; Line 159
	cmp	QWORD PTR pixels$[rbp], 0
	jne	SHORT $LN2@Texture
; Line 161
	lea	rdx, OFFSET FLAT:??_C@_0BO@FBGJBNOK@failed?5to?5load?5texture?5image?$CB@
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T7[rbp]
	call	_CxxThrowException
$LN2@Texture:
; Line 163
	mov	edx, 40					; 00000028H
	lea	rcx, QWORD PTR buffer$[rbp]
	call	?__autoclassinit2@Buffer@cow@@QEAAX_K@Z
	mov	DWORD PTR [rsp+32], 6
	mov	r9d, 1
	mov	r8, QWORD PTR imageSize$[rbp]
	mov	rdx, QWORD PTR device$[rbp]
	lea	rcx, QWORD PTR buffer$[rbp]
	call	??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z	; cow::Buffer::Buffer
	npad	1
; Line 169
	xor	r8d, r8d
	mov	rdx, -1
	lea	rcx, QWORD PTR buffer$[rbp]
	call	?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z ; cow::Buffer::map
; Line 170
	xor	r9d, r9d
	mov	r8, QWORD PTR imageSize$[rbp]
	mov	rdx, QWORD PTR pixels$[rbp]
	lea	rcx, QWORD PTR buffer$[rbp]
	call	?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z	; cow::Buffer::write
; Line 171
	lea	rcx, QWORD PTR buffer$[rbp]
	call	?unmap@Buffer@cow@@QEAAXXZ		; cow::Buffer::unmap
; Line 172
	mov	rcx, QWORD PTR pixels$[rbp]
	call	stbi_image_free
; Line 173
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rsp+56], rax
	mov	DWORD PTR [rsp+48], 0
	mov	DWORD PTR [rsp+40], 0
	mov	DWORD PTR [rsp+32], 6
	mov	r9d, 43					; 0000002bH
	mov	r8d, DWORD PTR texHeight$[rbp]
	mov	edx, DWORD PTR texWidth$[rbp]
	mov	rcx, QWORD PTR device$[rbp]
	call	?createImage2D@Device@cow@@QEAAXIIW4VkFormat@@IW4VkImageTiling@@W4VkImageLayout@@PEAPEAUVkImage_T@@@Z ; cow::Device::createImage2D
; Line 182
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	r8, rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR device$[rbp]
	call	?allocateImageMemory@Device@cow@@QEAAXPEAUVkImage_T@@PEAPEAUVkDeviceMemory_T@@@Z ; cow::Device::allocateImageMemory
; Line 184
	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [rax+24]
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR device$[rbp]
	call	?bindImageMemory@Device@cow@@QEBA?AW4VkResult@@PEAUVkImage_T@@PEAUVkDeviceMemory_T@@@Z ; cow::Device::bindImageMemory
; Line 186
	mov	DWORD PTR [rsp+32], 7
	xor	r9d, r9d
	mov	r8d, 43					; 0000002bH
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z ; cow::Texture::transitionImageLayout
; Line 187
	mov	eax, DWORD PTR texHeight$[rbp]
	mov	DWORD PTR tv169[rbp], eax
	mov	eax, DWORD PTR texWidth$[rbp]
	mov	DWORD PTR tv167[rbp], eax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv165[rbp], rax
	lea	rcx, QWORD PTR buffer$[rbp]
	call	?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ	; cow::Buffer::get
	mov	QWORD PTR tv163[rbp], rax
	mov	eax, DWORD PTR tv169[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR tv167[rbp]
	mov	r8, QWORD PTR tv165[rbp]
	mov	rdx, QWORD PTR tv163[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?copyBufferToImage@Texture@cow@@QEAAXPEAUVkBuffer_T@@PEAUVkImage_T@@II@Z ; cow::Texture::copyBufferToImage
; Line 188
	mov	DWORD PTR [rsp+32], 5
	mov	r9d, 7
	mov	r8d, 43					; 0000002bH
	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?transitionImageLayout@Texture@cow@@QEAAXPEAUVkImage_T@@W4VkFormat@@W4VkImageLayout@@2@Z ; cow::Texture::transitionImageLayout
	npad	1
; Line 189
	lea	rcx, QWORD PTR buffer$[rbp]
	call	??1Buffer@cow@@QEAA@XZ			; cow::Buffer::~Buffer
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+504]
	pop	rdi
	pop	rbp
	ret	0
$LN5@Texture:
??0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z ENDP		; cow::Texture::Texture
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
texWidth$ = 4
texHeight$ = 36
texChannels$ = 68
pixels$ = 104
imageSize$ = 136
buffer$ = 168
$T7 = 424
tv169 = 452
tv167 = 456
tv165 = 464
tv163 = 472
__$ArrayPad$ = 480
this$ = 528
device$ = 536
filepath$ = 544
?dtor$0@?0???0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z@4HA PROC ; `cow::Texture::Texture'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+64]
	lea	rcx, QWORD PTR buffer$[rbp]
	call	??1Buffer@cow@@QEAA@XZ			; cow::Buffer::~Buffer
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0Texture@cow@@QEAA@AEAVDevice@1@PEBD@Z@4HA ENDP ; `cow::Texture::Texture'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__is_16_main@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
s$ = 224
?stbi__is_16_main@@YAHPEAUstbi__context@@@Z PROC	; stbi__is_16_main, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7584
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7586
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__png_is16@@YAHPEAUstbi__context@@@Z ; stbi__png_is16
	test	eax, eax
	je	SHORT $LN2@stbi__is_1
	mov	eax, 1
	jmp	SHORT $LN1@stbi__is_1
$LN2@stbi__is_1:
; Line 7590
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__psd_is16@@YAHPEAUstbi__context@@@Z ; stbi__psd_is16
	test	eax, eax
	je	SHORT $LN3@stbi__is_1
	mov	eax, 1
	jmp	SHORT $LN1@stbi__is_1
$LN3@stbi__is_1:
; Line 7594
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_is16@@YAHPEAUstbi__context@@@Z ; stbi__pnm_is16
	test	eax, eax
	je	SHORT $LN4@stbi__is_1
	mov	eax, 1
	jmp	SHORT $LN1@stbi__is_1
$LN4@stbi__is_1:
; Line 7596
	xor	eax, eax
$LN1@stbi__is_1:
; Line 7597
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__is_16_main@@YAHPEAUstbi__context@@@Z ENDP	; stbi__is_16_main
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
s$ = 224
x$ = 232
y$ = 240
comp$ = 248
?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__info_main, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7542
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7544
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__jpeg_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__jpeg_info
	test	eax, eax
	je	SHORT $LN2@stbi__info
	mov	eax, 1
	jmp	$LN1@stbi__info
$LN2@stbi__info:
; Line 7548
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__png_info
	test	eax, eax
	je	SHORT $LN3@stbi__info
	mov	eax, 1
	jmp	$LN1@stbi__info
$LN3@stbi__info:
; Line 7552
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__gif_info
	test	eax, eax
	je	SHORT $LN4@stbi__info
	mov	eax, 1
	jmp	$LN1@stbi__info
$LN4@stbi__info:
; Line 7556
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__bmp_info
	test	eax, eax
	je	SHORT $LN5@stbi__info
	mov	eax, 1
	jmp	$LN1@stbi__info
$LN5@stbi__info:
; Line 7560
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__psd_info
	test	eax, eax
	je	SHORT $LN6@stbi__info
	mov	eax, 1
	jmp	$LN1@stbi__info
$LN6@stbi__info:
; Line 7564
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__pic_info
	test	eax, eax
	je	SHORT $LN7@stbi__info
	mov	eax, 1
	jmp	$LN1@stbi__info
$LN7@stbi__info:
; Line 7568
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__pnm_info
	test	eax, eax
	je	SHORT $LN8@stbi__info
	mov	eax, 1
	jmp	SHORT $LN1@stbi__info
$LN8@stbi__info:
; Line 7572
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__hdr_info
	test	eax, eax
	je	SHORT $LN9@stbi__info
	mov	eax, 1
	jmp	SHORT $LN1@stbi__info
$LN9@stbi__info:
; Line 7577
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__tga_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__tga_info
	test	eax, eax
	je	SHORT $LN10@stbi__info
; Line 7578
	mov	eax, 1
	jmp	SHORT $LN1@stbi__info
$LN10@stbi__info:
; Line 7580
	lea	rcx, OFFSET FLAT:??_C@_0BD@CBEDEJPH@unknown?5image?5type@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
$LN1@stbi__info:
; Line 7581
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__info_main
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z
_TEXT	SEGMENT
value$ = 4
s$ = 256
c$ = 264
?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z PROC ; stbi__pnm_getinteger, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7483
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7484
	mov	DWORD PTR value$[rbp], 0
$LN2@stbi__pnm_:
; Line 7486
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	jne	SHORT $LN3@stbi__pnm_
	mov	rax, QWORD PTR c$[rbp]
	movzx	ecx, BYTE PTR [rax]
	call	?stbi__pnm_isdigit@@YAHD@Z		; stbi__pnm_isdigit
	test	eax, eax
	je	SHORT $LN3@stbi__pnm_
; Line 7487
	imul	eax, DWORD PTR value$[rbp], 10
	mov	rcx, QWORD PTR c$[rbp]
	movsx	ecx, BYTE PTR [rcx]
	lea	eax, DWORD PTR [rax+rcx-48]
	mov	DWORD PTR value$[rbp], eax
; Line 7488
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR c$[rbp]
	mov	BYTE PTR [rcx], al
; Line 7489
	jmp	SHORT $LN2@stbi__pnm_
$LN3@stbi__pnm_:
; Line 7491
	mov	eax, DWORD PTR value$[rbp]
; Line 7492
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z ENDP ; stbi__pnm_getinteger
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pnm_isdigit@@YAHD@Z
_TEXT	SEGMENT
tv68 = 192
c$ = 240
?stbi__pnm_isdigit@@YAHD@Z PROC				; stbi__pnm_isdigit, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7478
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7479
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN3@stbi__pnm_
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN3@stbi__pnm_
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN4@stbi__pnm_
$LN3@stbi__pnm_:
	mov	DWORD PTR tv68[rbp], 0
$LN4@stbi__pnm_:
	mov	eax, DWORD PTR tv68[rbp]
; Line 7480
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pnm_isdigit@@YAHD@Z ENDP				; stbi__pnm_isdigit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z
_TEXT	SEGMENT
s$ = 224
c$ = 232
?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z PROC ; stbi__pnm_skip_whitespace, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7464
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
$LN2@stbi__pnm_:
$LN5@stbi__pnm_:
; Line 7466
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	jne	SHORT $LN6@stbi__pnm_
	mov	rax, QWORD PTR c$[rbp]
	movzx	ecx, BYTE PTR [rax]
	call	?stbi__pnm_isspace@@YAHD@Z		; stbi__pnm_isspace
	test	eax, eax
	je	SHORT $LN6@stbi__pnm_
; Line 7467
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR c$[rbp]
	mov	BYTE PTR [rcx], al
	jmp	SHORT $LN5@stbi__pnm_
$LN6@stbi__pnm_:
; Line 7469
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	jne	SHORT $LN10@stbi__pnm_
	mov	rax, QWORD PTR c$[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 35					; 00000023H
	je	SHORT $LN9@stbi__pnm_
$LN10@stbi__pnm_:
; Line 7470
	jmp	SHORT $LN3@stbi__pnm_
$LN9@stbi__pnm_:
$LN7@stbi__pnm_:
; Line 7472
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	jne	SHORT $LN8@stbi__pnm_
	mov	rax, QWORD PTR c$[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 10
	je	SHORT $LN8@stbi__pnm_
	mov	rax, QWORD PTR c$[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 13
	je	SHORT $LN8@stbi__pnm_
; Line 7473
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR c$[rbp]
	mov	BYTE PTR [rcx], al
	jmp	SHORT $LN7@stbi__pnm_
$LN8@stbi__pnm_:
; Line 7474
	jmp	$LN2@stbi__pnm_
$LN3@stbi__pnm_:
; Line 7475
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z ENDP ; stbi__pnm_skip_whitespace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pnm_isspace@@YAHD@Z
_TEXT	SEGMENT
tv76 = 192
c$ = 240
?stbi__pnm_isspace@@YAHD@Z PROC				; stbi__pnm_isspace, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7459
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7460
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN3@stbi__pnm_
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 9
	je	SHORT $LN3@stbi__pnm_
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 10
	je	SHORT $LN3@stbi__pnm_
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 11
	je	SHORT $LN3@stbi__pnm_
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 12
	je	SHORT $LN3@stbi__pnm_
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 13
	je	SHORT $LN3@stbi__pnm_
	mov	DWORD PTR tv76[rbp], 0
	jmp	SHORT $LN4@stbi__pnm_
$LN3@stbi__pnm_:
	mov	DWORD PTR tv76[rbp], 1
$LN4@stbi__pnm_:
	mov	eax, DWORD PTR tv76[rbp]
; Line 7461
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pnm_isspace@@YAHD@Z ENDP				; stbi__pnm_isspace
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__hdr_convert@@YAXPEAMPEAEH@Z
_TEXT	SEGMENT
f1$1 = 4
tv151 = 212
output$ = 256
input$ = 264
req_comp$ = 272
?stbi__hdr_convert@@YAXPEAMPEAEH@Z PROC			; stbi__hdr_convert, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7054
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7055
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	$LN4@stbi__hdr_
; Line 7058
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	sub	eax, 136				; 00000088H
	mov	edx, eax
	movss	xmm0, DWORD PTR __real@3f800000
	call	?ldexp@@YAMMH@Z				; ldexp
	movss	DWORD PTR f1$1[rbp], xmm0
; Line 7059
	cmp	DWORD PTR req_comp$[rbp], 2
	jg	SHORT $LN6@stbi__hdr_
; Line 7060
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR input$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR input$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR f1$1[rbp]
	divss	xmm0, DWORD PTR __real@40400000
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR output$[rbp]
	movss	DWORD PTR [rcx+rax], xmm0
	jmp	$LN7@stbi__hdr_
$LN6@stbi__hdr_:
; Line 7062
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR f1$1[rbp]
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR output$[rbp]
	movss	DWORD PTR [rcx+rax], xmm0
; Line 7063
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR f1$1[rbp]
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR output$[rbp]
	movss	DWORD PTR [rcx+rax], xmm0
; Line 7064
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR f1$1[rbp]
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR output$[rbp]
	movss	DWORD PTR [rcx+rax], xmm0
$LN7@stbi__hdr_:
; Line 7066
	cmp	DWORD PTR req_comp$[rbp], 2
	jne	SHORT $LN8@stbi__hdr_
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR output$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax], xmm0
$LN8@stbi__hdr_:
; Line 7067
	cmp	DWORD PTR req_comp$[rbp], 4
	jne	SHORT $LN9@stbi__hdr_
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR output$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax], xmm0
$LN9@stbi__hdr_:
; Line 7068
	jmp	$LN5@stbi__hdr_
$LN4@stbi__hdr_:
; Line 7069
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR tv151[rbp], eax
	cmp	DWORD PTR tv151[rbp], 1
	je	$LN13@stbi__hdr_
	cmp	DWORD PTR tv151[rbp], 2
	je	SHORT $LN12@stbi__hdr_
	cmp	DWORD PTR tv151[rbp], 3
	je	SHORT $LN11@stbi__hdr_
	cmp	DWORD PTR tv151[rbp], 4
	je	SHORT $LN10@stbi__hdr_
	jmp	$LN2@stbi__hdr_
$LN10@stbi__hdr_:
; Line 7070
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR output$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax], xmm0
$LN11@stbi__hdr_:
; Line 7071
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR output$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rcx+rax], xmm0
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR output$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rcx+rax], xmm0
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR output$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rcx+rax], xmm0
; Line 7072
	jmp	SHORT $LN2@stbi__hdr_
$LN12@stbi__hdr_:
; Line 7073
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR output$[rbp]
	movss	xmm0, DWORD PTR __real@3f800000
	movss	DWORD PTR [rcx+rax], xmm0
$LN13@stbi__hdr_:
; Line 7074
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR output$[rbp]
	xorps	xmm0, xmm0
	movss	DWORD PTR [rcx+rax], xmm0
$LN2@stbi__hdr_:
$LN5@stbi__hdr_:
; Line 7078
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__hdr_convert@@YAXPEAMPEAEH@Z ENDP			; stbi__hdr_convert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z
_TEXT	SEGMENT
len$ = 4
c$ = 36
z$ = 288
buffer$ = 296
?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z PROC ; stbi__hdr_gettoken, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7032
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7033
	mov	DWORD PTR len$[rbp], 0
; Line 7034
	mov	BYTE PTR c$[rbp], 0
; Line 7036
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR c$[rbp], al
$LN2@stbi__hdr_:
; Line 7038
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	jne	SHORT $LN3@stbi__hdr_
	movsx	eax, BYTE PTR c$[rbp]
	cmp	eax, 10
	je	SHORT $LN3@stbi__hdr_
; Line 7039
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR buffer$[rbp]
	movzx	edx, BYTE PTR c$[rbp]
	mov	BYTE PTR [rcx+rax], dl
	mov	eax, DWORD PTR len$[rbp]
	inc	eax
	mov	DWORD PTR len$[rbp], eax
; Line 7040
	cmp	DWORD PTR len$[rbp], 1023		; 000003ffH
	jne	SHORT $LN6@stbi__hdr_
$LN4@stbi__hdr_:
; Line 7042
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	jne	SHORT $LN5@stbi__hdr_
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 10
	je	SHORT $LN5@stbi__hdr_
; Line 7043
	jmp	SHORT $LN4@stbi__hdr_
$LN5@stbi__hdr_:
; Line 7044
	jmp	SHORT $LN3@stbi__hdr_
$LN6@stbi__hdr_:
; Line 7046
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR c$[rbp], al
; Line 7047
	jmp	SHORT $LN2@stbi__hdr_
$LN3@stbi__hdr_:
; Line 7049
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR buffer$[rbp]
	mov	BYTE PTR [rcx+rax], 0
; Line 7050
	mov	rax, QWORD PTR buffer$[rbp]
; Line 7051
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z ENDP ; stbi__hdr_gettoken
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z
_TEXT	SEGMENT
i$ = 4
s$ = 256
signature$ = 264
?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z PROC	; stbi__hdr_test_core, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7010
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7012
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__hdr_
$LN2@stbi__hdr_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__hdr_:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR signature$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN3@stbi__hdr_
; Line 7013
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR signature$[rbp]
	movsx	ecx, BYTE PTR [rdx+rcx]
	cmp	eax, ecx
	je	SHORT $LN5@stbi__hdr_
; Line 7014
	xor	eax, eax
	jmp	SHORT $LN1@stbi__hdr_
$LN5@stbi__hdr_:
	jmp	SHORT $LN2@stbi__hdr_
$LN3@stbi__hdr_:
; Line 7015
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7016
	mov	eax, 1
$LN1@stbi__hdr_:
; Line 7017
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z ENDP	; stbi__hdr_test_core
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z
_TEXT	SEGMENT
tv78 = 192
g$ = 240
out$ = 248
delays$ = 256
?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z PROC ; stbi__load_gif_main_outofmem, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6875
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6876
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_free
; Line 6877
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_free
; Line 6878
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_free
; Line 6880
	cmp	QWORD PTR out$[rbp], 0
	je	SHORT $LN2@stbi__load
	mov	rcx, QWORD PTR out$[rbp]
	call	QWORD PTR __imp_free
$LN2@stbi__load:
; Line 6881
	cmp	QWORD PTR delays$[rbp], 0
	je	SHORT $LN3@stbi__load
	mov	rax, QWORD PTR delays$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@stbi__load
	mov	rax, QWORD PTR delays$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_free
$LN3@stbi__load:
; Line 6882
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN5@stbi__load
	mov	DWORD PTR tv78[rbp], 0
	jmp	SHORT $LN6@stbi__load
$LN5@stbi__load:
	mov	DWORD PTR tv78[rbp], 0
$LN6@stbi__load:
	movsxd	rax, DWORD PTR tv78[rbp]
; Line 6883
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z ENDP ; stbi__load_gif_main_outofmem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z
_TEXT	SEGMENT
dispose$ = 4
first_frame$ = 36
pi$ = 68
pcount$ = 100
tag$1 = 132
x$2 = 164
y$3 = 196
w$4 = 228
h$5 = 260
o$6 = 296
len$7 = 324
ext$8 = 356
tv413 = 564
tv318 = 564
tv299 = 564
tv252 = 564
tv234 = 564
tv143 = 564
tv83 = 564
tv583 = 568
s$ = 608
g$ = 616
comp$ = 624
req_comp$ = 632
two_back$ = 640
?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z PROC ; stbi__gif_load_next, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6701
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 616				; 00000268H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6709
	mov	DWORD PTR first_frame$[rbp], 0
; Line 6710
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+8], 0
	jne	$LN18@stbi__gif_
; Line 6711
	xor	r9d, r9d
	mov	r8, QWORD PTR comp$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z ; stbi__gif_header
	test	eax, eax
	jne	SHORT $LN20@stbi__gif_
	xor	eax, eax
	jmp	$LN1@stbi__gif_
$LN20@stbi__gif_:
; Line 6712
	xor	r9d, r9d
	mov	rax, QWORD PTR g$[rbp]
	mov	r8d, DWORD PTR [rax+4]
	mov	rax, QWORD PTR g$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	ecx, 4
	call	?stbi__mad3sizes_valid@@YAHHHHH@Z	; stbi__mad3sizes_valid
	test	eax, eax
	jne	SHORT $LN21@stbi__gif_
; Line 6713
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN55@stbi__gif_
	mov	DWORD PTR tv83[rbp], 0
	jmp	SHORT $LN56@stbi__gif_
$LN55@stbi__gif_:
	mov	DWORD PTR tv83[rbp], 0
$LN56@stbi__gif_:
	movsxd	rax, DWORD PTR tv83[rbp]
	jmp	$LN1@stbi__gif_
$LN21@stbi__gif_:
; Line 6714
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR pcount$[rbp], eax
; Line 6715
	mov	eax, DWORD PTR pcount$[rbp]
	shl	eax, 2
	cdqe
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+8], rax
; Line 6716
	mov	eax, DWORD PTR pcount$[rbp]
	shl	eax, 2
	cdqe
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 6717
	movsxd	rax, DWORD PTR pcount$[rbp]
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 6718
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN23@stbi__gif_
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN23@stbi__gif_
	mov	rax, QWORD PTR g$[rbp]
	cmp	QWORD PTR [rax+24], 0
	jne	SHORT $LN22@stbi__gif_
$LN23@stbi__gif_:
; Line 6719
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN57@stbi__gif_
	mov	DWORD PTR tv143[rbp], 0
	jmp	SHORT $LN58@stbi__gif_
$LN57@stbi__gif_:
	mov	DWORD PTR tv143[rbp], 0
$LN58@stbi__gif_:
	movsxd	rax, DWORD PTR tv143[rbp]
	jmp	$LN1@stbi__gif_
$LN22@stbi__gif_:
; Line 6724
	mov	eax, DWORD PTR pcount$[rbp]
	shl	eax, 2
	cdqe
	mov	r8, rax
	xor	edx, edx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	memset
; Line 6725
	mov	eax, DWORD PTR pcount$[rbp]
	shl	eax, 2
	cdqe
	mov	r8, rax
	xor	edx, edx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	memset
; Line 6726
	movsxd	rax, DWORD PTR pcount$[rbp]
	mov	r8, rax
	xor	edx, edx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	memset
; Line 6727
	mov	DWORD PTR first_frame$[rbp], 1
; Line 6728
	jmp	$LN19@stbi__gif_
$LN18@stbi__gif_:
; Line 6730
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+48]
	and	eax, 28
	sar	eax, 2
	mov	DWORD PTR dispose$[rbp], eax
; Line 6731
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR pcount$[rbp], eax
; Line 6733
	cmp	DWORD PTR dispose$[rbp], 3
	jne	SHORT $LN24@stbi__gif_
	cmp	QWORD PTR two_back$[rbp], 0
	jne	SHORT $LN24@stbi__gif_
; Line 6734
	mov	DWORD PTR dispose$[rbp], 2
$LN24@stbi__gif_:
; Line 6737
	cmp	DWORD PTR dispose$[rbp], 3
	jne	SHORT $LN25@stbi__gif_
; Line 6738
	mov	DWORD PTR pi$[rbp], 0
	jmp	SHORT $LN4@stbi__gif_
$LN2@stbi__gif_:
	mov	eax, DWORD PTR pi$[rbp]
	inc	eax
	mov	DWORD PTR pi$[rbp], eax
$LN4@stbi__gif_:
	mov	eax, DWORD PTR pcount$[rbp]
	cmp	DWORD PTR pi$[rbp], eax
	jge	SHORT $LN3@stbi__gif_
; Line 6739
	movsxd	rax, DWORD PTR pi$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN27@stbi__gif_
; Line 6740
	mov	eax, DWORD PTR pi$[rbp]
	shl	eax, 2
	cdqe
	mov	rcx, QWORD PTR two_back$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, DWORD PTR pi$[rbp]
	shl	ecx, 2
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR [rdx+8]
	add	rdx, rcx
	mov	rcx, rdx
	mov	r8d, 4
	mov	rdx, rax
	call	memcpy
$LN27@stbi__gif_:
; Line 6742
	jmp	SHORT $LN2@stbi__gif_
$LN3@stbi__gif_:
; Line 6743
	jmp	SHORT $LN26@stbi__gif_
$LN25@stbi__gif_:
	cmp	DWORD PTR dispose$[rbp], 2
	jne	SHORT $LN28@stbi__gif_
; Line 6745
	mov	DWORD PTR pi$[rbp], 0
	jmp	SHORT $LN7@stbi__gif_
$LN5@stbi__gif_:
	mov	eax, DWORD PTR pi$[rbp]
	inc	eax
	mov	DWORD PTR pi$[rbp], eax
$LN7@stbi__gif_:
	mov	eax, DWORD PTR pcount$[rbp]
	cmp	DWORD PTR pi$[rbp], eax
	jge	SHORT $LN6@stbi__gif_
; Line 6746
	movsxd	rax, DWORD PTR pi$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	SHORT $LN30@stbi__gif_
; Line 6747
	mov	eax, DWORD PTR pi$[rbp]
	shl	eax, 2
	cdqe
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+16]
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, DWORD PTR pi$[rbp]
	shl	ecx, 2
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR [rdx+8]
	add	rdx, rcx
	mov	rcx, rdx
	mov	r8d, 4
	mov	rdx, rax
	call	memcpy
$LN30@stbi__gif_:
; Line 6749
	jmp	SHORT $LN5@stbi__gif_
$LN6@stbi__gif_:
$LN28@stbi__gif_:
$LN26@stbi__gif_:
; Line 6758
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax]
	shl	eax, 2
	mov	rcx, QWORD PTR g$[rbp]
	imul	eax, DWORD PTR [rcx+4]
	cdqe
	mov	r8, rax
	mov	rax, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR [rax+8]
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	memcpy
$LN19@stbi__gif_:
; Line 6762
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx+4]
	cdqe
	mov	r8, rax
	xor	edx, edx
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	memset
$LN8@stbi__gif_:
; Line 6765
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tag$1[rbp], eax
; Line 6766
	mov	eax, DWORD PTR tag$1[rbp]
	mov	DWORD PTR tv234[rbp], eax
	cmp	DWORD PTR tv234[rbp], 33		; 00000021H
	je	$LN44@stbi__gif_
	cmp	DWORD PTR tv234[rbp], 44		; 0000002cH
	je	SHORT $LN31@stbi__gif_
	cmp	DWORD PTR tv234[rbp], 59		; 0000003bH
	je	$LN52@stbi__gif_
	jmp	$LN53@stbi__gif_
$LN31@stbi__gif_:
; Line 6772
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR x$2[rbp], eax
; Line 6773
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR y$3[rbp], eax
; Line 6774
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR w$4[rbp], eax
; Line 6775
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR h$5[rbp], eax
; Line 6776
	mov	eax, DWORD PTR w$4[rbp]
	mov	ecx, DWORD PTR x$2[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR g$[rbp]
	cmp	eax, DWORD PTR [rcx]
	jg	SHORT $LN33@stbi__gif_
	mov	eax, DWORD PTR h$5[rbp]
	mov	ecx, DWORD PTR y$3[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR g$[rbp]
	cmp	eax, DWORD PTR [rcx+4]
	jle	SHORT $LN32@stbi__gif_
$LN33@stbi__gif_:
; Line 6777
	lea	rcx, OFFSET FLAT:??_C@_0BF@GIAALCNJ@bad?5Image?5Descriptor@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN59@stbi__gif_
	mov	DWORD PTR tv252[rbp], 0
	jmp	SHORT $LN60@stbi__gif_
$LN59@stbi__gif_:
	mov	DWORD PTR tv252[rbp], 0
$LN60@stbi__gif_:
	movsxd	rax, DWORD PTR tv252[rbp]
	jmp	$LN1@stbi__gif_
$LN32@stbi__gif_:
; Line 6779
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax]
	shl	eax, 2
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34916], eax
; Line 6780
	mov	eax, DWORD PTR x$2[rbp]
	shl	eax, 2
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34892], eax
; Line 6781
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR y$3[rbp]
	imul	ecx, DWORD PTR [rax+34916]
	mov	eax, ecx
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34896], eax
; Line 6782
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34892]
	mov	ecx, DWORD PTR w$4[rbp]
	lea	eax, DWORD PTR [rax+rcx*4]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34900], eax
; Line 6783
	mov	rax, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR h$5[rbp]
	imul	ecx, DWORD PTR [rax+34916]
	mov	eax, ecx
	mov	rcx, QWORD PTR g$[rbp]
	add	eax, DWORD PTR [rcx+34896]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34904], eax
; Line 6784
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+34892]
	mov	DWORD PTR [rax+34908], ecx
; Line 6785
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+34896]
	mov	DWORD PTR [rax+34912], ecx
; Line 6791
	cmp	DWORD PTR w$4[rbp], 0
	jne	SHORT $LN34@stbi__gif_
; Line 6792
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+34904]
	mov	DWORD PTR [rax+34912], ecx
$LN34@stbi__gif_:
; Line 6794
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34888], eax
; Line 6796
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34888]
	and	eax, 64					; 00000040H
	test	eax, eax
	je	SHORT $LN35@stbi__gif_
; Line 6797
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34916]
	shl	eax, 3
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34884], eax
; Line 6798
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+34880], 3
; Line 6799
	jmp	SHORT $LN36@stbi__gif_
$LN35@stbi__gif_:
; Line 6800
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+34916]
	mov	DWORD PTR [rax+34884], ecx
; Line 6801
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+34880], 0
$LN36@stbi__gif_:
; Line 6804
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34888]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	$LN37@stbi__gif_
; Line 6805
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+48]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN61@stbi__gif_
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+44]
	mov	DWORD PTR tv299[rbp], eax
	jmp	SHORT $LN62@stbi__gif_
$LN61@stbi__gif_:
	mov	DWORD PTR tv299[rbp], -1
$LN62@stbi__gif_:
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34888]
	and	eax, 7
	mov	ecx, 2
	mov	DWORD PTR tv583[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv583[rbp]
	shl	eax, cl
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 1076				; 00000434H
	mov	r9d, DWORD PTR tv299[rbp]
	mov	r8d, eax
	mov	rdx, rcx
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z ; stbi__gif_parse_colortable
; Line 6806
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 1076				; 00000434H
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+34872], rax
	jmp	SHORT $LN38@stbi__gif_
$LN37@stbi__gif_:
; Line 6807
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+32]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN39@stbi__gif_
; Line 6808
	mov	rax, QWORD PTR g$[rbp]
	add	rax, 52					; 00000034H
	mov	rcx, QWORD PTR g$[rbp]
	mov	QWORD PTR [rcx+34872], rax
; Line 6809
	jmp	SHORT $LN40@stbi__gif_
$LN39@stbi__gif_:
; Line 6810
	lea	rcx, OFFSET FLAT:??_C@_0BE@NAMJKDNF@missing?5color?5table@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN63@stbi__gif_
	mov	DWORD PTR tv318[rbp], 0
	jmp	SHORT $LN64@stbi__gif_
$LN63@stbi__gif_:
	mov	DWORD PTR tv318[rbp], 0
$LN64@stbi__gif_:
	movsxd	rax, DWORD PTR tv318[rbp]
	jmp	$LN1@stbi__gif_
$LN40@stbi__gif_:
$LN38@stbi__gif_:
; Line 6812
	mov	rdx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__process_gif_raster@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@@Z ; stbi__process_gif_raster
	mov	QWORD PTR o$6[rbp], rax
; Line 6813
	cmp	QWORD PTR o$6[rbp], 0
	jne	SHORT $LN41@stbi__gif_
	xor	eax, eax
	jmp	$LN1@stbi__gif_
$LN41@stbi__gif_:
; Line 6816
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR pcount$[rbp], eax
; Line 6817
	cmp	DWORD PTR first_frame$[rbp], 0
	je	$LN42@stbi__gif_
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+36], 0
	jle	$LN42@stbi__gif_
; Line 6819
	mov	DWORD PTR pi$[rbp], 0
	jmp	SHORT $LN15@stbi__gif_
$LN13@stbi__gif_:
	mov	eax, DWORD PTR pi$[rbp]
	inc	eax
	mov	DWORD PTR pi$[rbp], eax
$LN15@stbi__gif_:
	mov	eax, DWORD PTR pcount$[rbp]
	cmp	DWORD PTR pi$[rbp], eax
	jge	SHORT $LN14@stbi__gif_
; Line 6820
	movsxd	rax, DWORD PTR pi$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	jne	SHORT $LN43@stbi__gif_
; Line 6821
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+36]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax*4+52]
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	BYTE PTR [rax+rcx], 255			; 000000ffH
; Line 6822
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+36]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax*4+52]
	mov	ecx, DWORD PTR pi$[rbp]
	shl	ecx, 2
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR g$[rbp]
	mov	rdx, QWORD PTR [rdx+8]
	add	rdx, rcx
	mov	rcx, rdx
	mov	r8d, 4
	mov	rdx, rax
	call	memcpy
$LN43@stbi__gif_:
; Line 6824
	jmp	$LN13@stbi__gif_
$LN14@stbi__gif_:
$LN42@stbi__gif_:
; Line 6827
	mov	rax, QWORD PTR o$6[rbp]
	jmp	$LN1@stbi__gif_
$LN44@stbi__gif_:
; Line 6833
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR ext$8[rbp], eax
; Line 6834
	cmp	DWORD PTR ext$8[rbp], 249		; 000000f9H
	jne	$LN45@stbi__gif_
; Line 6835
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR len$7[rbp], eax
; Line 6836
	cmp	DWORD PTR len$7[rbp], 4
	jne	$LN46@stbi__gif_
; Line 6837
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+48], eax
; Line 6838
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	imul	eax, eax, 10
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34920], eax
; Line 6841
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+44], 0
	jl	SHORT $LN48@stbi__gif_
; Line 6842
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+44]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax*4+52]
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	BYTE PTR [rax+rcx], 255			; 000000ffH
$LN48@stbi__gif_:
; Line 6844
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+48]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN49@stbi__gif_
; Line 6845
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+44], eax
; Line 6846
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+44], 0
	jl	SHORT $LN51@stbi__gif_
; Line 6847
	mov	rax, QWORD PTR g$[rbp]
	movsxd	rax, DWORD PTR [rax+44]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax*4+52]
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	BYTE PTR [rax+rcx], 0
$LN51@stbi__gif_:
; Line 6849
	jmp	SHORT $LN50@stbi__gif_
$LN49@stbi__gif_:
; Line 6851
	mov	edx, 1
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 6852
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+44], -1
$LN50@stbi__gif_:
; Line 6854
	jmp	SHORT $LN47@stbi__gif_
$LN46@stbi__gif_:
; Line 6855
	mov	edx, DWORD PTR len$7[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 6856
	jmp	SHORT $LN11@stbi__gif_
$LN47@stbi__gif_:
$LN45@stbi__gif_:
$LN16@stbi__gif_:
; Line 6859
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR len$7[rbp], eax
	cmp	DWORD PTR len$7[rbp], 0
	je	SHORT $LN17@stbi__gif_
; Line 6860
	mov	edx, DWORD PTR len$7[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 6861
	jmp	SHORT $LN16@stbi__gif_
$LN17@stbi__gif_:
; Line 6862
	jmp	SHORT $LN11@stbi__gif_
$LN52@stbi__gif_:
; Line 6866
	mov	rax, QWORD PTR s$[rbp]
	jmp	SHORT $LN1@stbi__gif_
$LN53@stbi__gif_:
; Line 6869
	lea	rcx, OFFSET FLAT:??_C@_0N@DJABBOOH@unknown?5code@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN65@stbi__gif_
	mov	DWORD PTR tv413[rbp], 0
	jmp	SHORT $LN66@stbi__gif_
$LN65@stbi__gif_:
	mov	DWORD PTR tv413[rbp], 0
$LN66@stbi__gif_:
	movsxd	rax, DWORD PTR tv413[rbp]
	jmp	SHORT $LN1@stbi__gif_
$LN11@stbi__gif_:
; Line 6871
	jmp	$LN8@stbi__gif_
$LN1@stbi__gif_:
; Line 6872
	lea	rsp, QWORD PTR [rbp+584]
	pop	rdi
	pop	rbp
	ret	0
?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z ENDP ; stbi__gif_load_next
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__process_gif_raster@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@@Z
_TEXT	SEGMENT
lzw_cs$ = 4
len$ = 36
init_code$ = 68
first$ = 100
codesize$ = 132
codemask$ = 164
avail$ = 196
oldcode$ = 228
bits$ = 260
valid_bits$ = 292
clear$ = 324
p$ = 360
code$1 = 388
tv303 = 596
tv276 = 596
tv249 = 596
tv245 = 596
tv212 = 596
tv199 = 596
tv194 = 596
tv177 = 596
tv163 = 596
tv172 = 600
s$ = 640
g$ = 648
?stbi__process_gif_raster@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@@Z PROC ; stbi__process_gif_raster, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6614
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 648				; 00000288H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6621
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR lzw_cs$[rbp], al
; Line 6622
	movzx	eax, BYTE PTR lzw_cs$[rbp]
	cmp	eax, 12
	jle	SHORT $LN10@stbi__proc
	xor	eax, eax
	jmp	$LN1@stbi__proc
$LN10@stbi__proc:
; Line 6623
	movzx	eax, BYTE PTR lzw_cs$[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv245[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv245[rbp]
	shl	eax, cl
	mov	DWORD PTR clear$[rbp], eax
; Line 6624
	mov	DWORD PTR first$[rbp], 1
; Line 6625
	movzx	eax, BYTE PTR lzw_cs$[rbp]
	inc	eax
	mov	DWORD PTR codesize$[rbp], eax
; Line 6626
	mov	eax, DWORD PTR codesize$[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv249[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv249[rbp]
	shl	eax, cl
	dec	eax
	mov	DWORD PTR codemask$[rbp], eax
; Line 6627
	mov	DWORD PTR bits$[rbp], 0
; Line 6628
	mov	DWORD PTR valid_bits$[rbp], 0
; Line 6629
	mov	DWORD PTR init_code$[rbp], 0
	jmp	SHORT $LN4@stbi__proc
$LN2@stbi__proc:
	mov	eax, DWORD PTR init_code$[rbp]
	inc	eax
	mov	DWORD PTR init_code$[rbp], eax
$LN4@stbi__proc:
	mov	eax, DWORD PTR clear$[rbp]
	cmp	DWORD PTR init_code$[rbp], eax
	jge	SHORT $LN3@stbi__proc
; Line 6630
	movsxd	rax, DWORD PTR init_code$[rbp]
	mov	ecx, -1
	mov	rdx, QWORD PTR g$[rbp]
	mov	WORD PTR [rdx+rax*4+2100], cx
; Line 6631
	movsxd	rax, DWORD PTR init_code$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	edx, BYTE PTR init_code$[rbp]
	mov	BYTE PTR [rcx+rax*4+2102], dl
; Line 6632
	movsxd	rax, DWORD PTR init_code$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	edx, BYTE PTR init_code$[rbp]
	mov	BYTE PTR [rcx+rax*4+2103], dl
; Line 6633
	jmp	SHORT $LN2@stbi__proc
$LN3@stbi__proc:
; Line 6636
	mov	eax, DWORD PTR clear$[rbp]
	add	eax, 2
	mov	DWORD PTR avail$[rbp], eax
; Line 6637
	mov	DWORD PTR oldcode$[rbp], -1
; Line 6639
	mov	DWORD PTR len$[rbp], 0
$LN5@stbi__proc:
; Line 6641
	mov	eax, DWORD PTR codesize$[rbp]
	cmp	DWORD PTR valid_bits$[rbp], eax
	jge	SHORT $LN11@stbi__proc
; Line 6642
	cmp	DWORD PTR len$[rbp], 0
	jne	SHORT $LN13@stbi__proc
; Line 6643
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR len$[rbp], eax
; Line 6644
	cmp	DWORD PTR len$[rbp], 0
	jne	SHORT $LN14@stbi__proc
; Line 6645
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8]
	jmp	$LN1@stbi__proc
$LN14@stbi__proc:
$LN13@stbi__proc:
; Line 6647
	mov	eax, DWORD PTR len$[rbp]
	dec	eax
	mov	DWORD PTR len$[rbp], eax
; Line 6648
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	ecx, DWORD PTR valid_bits$[rbp]
	shl	eax, cl
	mov	ecx, DWORD PTR bits$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR bits$[rbp], eax
; Line 6649
	mov	eax, DWORD PTR valid_bits$[rbp]
	add	eax, 8
	mov	DWORD PTR valid_bits$[rbp], eax
; Line 6650
	jmp	$LN12@stbi__proc
$LN11@stbi__proc:
; Line 6651
	mov	eax, DWORD PTR codemask$[rbp]
	mov	ecx, DWORD PTR bits$[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR code$1[rbp], eax
; Line 6652
	mov	eax, DWORD PTR codesize$[rbp]
	movzx	ecx, al
	mov	eax, DWORD PTR bits$[rbp]
	sar	eax, cl
	mov	DWORD PTR bits$[rbp], eax
; Line 6653
	mov	eax, DWORD PTR codesize$[rbp]
	mov	ecx, DWORD PTR valid_bits$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR valid_bits$[rbp], eax
; Line 6655
	mov	eax, DWORD PTR clear$[rbp]
	cmp	DWORD PTR code$1[rbp], eax
	jne	SHORT $LN15@stbi__proc
; Line 6656
	movzx	eax, BYTE PTR lzw_cs$[rbp]
	inc	eax
	mov	DWORD PTR codesize$[rbp], eax
; Line 6657
	mov	eax, DWORD PTR codesize$[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv276[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv276[rbp]
	shl	eax, cl
	dec	eax
	mov	DWORD PTR codemask$[rbp], eax
; Line 6658
	mov	eax, DWORD PTR clear$[rbp]
	add	eax, 2
	mov	DWORD PTR avail$[rbp], eax
; Line 6659
	mov	DWORD PTR oldcode$[rbp], -1
; Line 6660
	mov	DWORD PTR first$[rbp], 0
	jmp	$LN16@stbi__proc
$LN15@stbi__proc:
; Line 6661
	mov	eax, DWORD PTR clear$[rbp]
	inc	eax
	cmp	DWORD PTR code$1[rbp], eax
	jne	SHORT $LN17@stbi__proc
; Line 6662
	mov	edx, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
$LN8@stbi__proc:
; Line 6663
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR len$[rbp], eax
	cmp	DWORD PTR len$[rbp], 0
	jle	SHORT $LN9@stbi__proc
; Line 6664
	mov	edx, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
	jmp	SHORT $LN8@stbi__proc
$LN9@stbi__proc:
; Line 6665
	mov	rax, QWORD PTR g$[rbp]
	mov	rax, QWORD PTR [rax+8]
	jmp	$LN1@stbi__proc
	jmp	$LN18@stbi__proc
$LN17@stbi__proc:
; Line 6666
	mov	eax, DWORD PTR avail$[rbp]
	cmp	DWORD PTR code$1[rbp], eax
	jg	$LN19@stbi__proc
; Line 6667
	cmp	DWORD PTR first$[rbp], 0
	je	SHORT $LN21@stbi__proc
; Line 6668
	lea	rcx, OFFSET FLAT:??_C@_0O@MGDACKOJ@no?5clear?5code@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN28@stbi__proc
	mov	DWORD PTR tv163[rbp], 0
	jmp	SHORT $LN29@stbi__proc
$LN28@stbi__proc:
	mov	DWORD PTR tv163[rbp], 0
$LN29@stbi__proc:
	movsxd	rax, DWORD PTR tv163[rbp]
	jmp	$LN1@stbi__proc
$LN21@stbi__proc:
; Line 6671
	cmp	DWORD PTR oldcode$[rbp], 0
	jl	$LN22@stbi__proc
; Line 6672
	movsxd	rax, DWORD PTR avail$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	lea	rax, QWORD PTR [rcx+rax*4+2100]
	mov	QWORD PTR tv172[rbp], rax
	mov	eax, DWORD PTR avail$[rbp]
	inc	eax
	mov	DWORD PTR avail$[rbp], eax
	mov	rax, QWORD PTR tv172[rbp]
	mov	QWORD PTR p$[rbp], rax
; Line 6673
	cmp	DWORD PTR avail$[rbp], 8192		; 00002000H
	jle	SHORT $LN24@stbi__proc
; Line 6674
	lea	rcx, OFFSET FLAT:??_C@_0P@GJNJCPDJ@too?5many?5codes@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN30@stbi__proc
	mov	DWORD PTR tv177[rbp], 0
	jmp	SHORT $LN31@stbi__proc
$LN30@stbi__proc:
	mov	DWORD PTR tv177[rbp], 0
$LN31@stbi__proc:
	movsxd	rax, DWORD PTR tv177[rbp]
	jmp	$LN1@stbi__proc
$LN24@stbi__proc:
; Line 6677
	mov	rax, QWORD PTR p$[rbp]
	movzx	ecx, WORD PTR oldcode$[rbp]
	mov	WORD PTR [rax], cx
; Line 6678
	movsxd	rax, DWORD PTR oldcode$[rbp]
	mov	rcx, QWORD PTR p$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rdx+rax*4+2102]
	mov	BYTE PTR [rcx+2], al
; Line 6679
	mov	eax, DWORD PTR avail$[rbp]
	cmp	DWORD PTR code$1[rbp], eax
	jne	SHORT $LN32@stbi__proc
	mov	rax, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rax+2]
	mov	BYTE PTR tv194[rbp], al
	jmp	SHORT $LN33@stbi__proc
$LN32@stbi__proc:
	movsxd	rax, DWORD PTR code$1[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax*4+2102]
	mov	BYTE PTR tv194[rbp], al
$LN33@stbi__proc:
	mov	rax, QWORD PTR p$[rbp]
	movzx	ecx, BYTE PTR tv194[rbp]
	mov	BYTE PTR [rax+3], cl
	jmp	SHORT $LN23@stbi__proc
$LN22@stbi__proc:
; Line 6680
	mov	eax, DWORD PTR avail$[rbp]
	cmp	DWORD PTR code$1[rbp], eax
	jne	SHORT $LN25@stbi__proc
; Line 6681
	lea	rcx, OFFSET FLAT:??_C@_0BH@LOKBIIOJ@illegal?5code?5in?5raster@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN34@stbi__proc
	mov	DWORD PTR tv199[rbp], 0
	jmp	SHORT $LN35@stbi__proc
$LN34@stbi__proc:
	mov	DWORD PTR tv199[rbp], 0
$LN35@stbi__proc:
	movsxd	rax, DWORD PTR tv199[rbp]
	jmp	$LN1@stbi__proc
$LN25@stbi__proc:
$LN23@stbi__proc:
; Line 6683
	movzx	edx, WORD PTR code$1[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	call	?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z ; stbi__out_gif_code
; Line 6685
	mov	eax, DWORD PTR codemask$[rbp]
	mov	ecx, DWORD PTR avail$[rbp]
	and	ecx, eax
	mov	eax, ecx
	test	eax, eax
	jne	SHORT $LN26@stbi__proc
	cmp	DWORD PTR avail$[rbp], 4095		; 00000fffH
	jg	SHORT $LN26@stbi__proc
; Line 6686
	mov	eax, DWORD PTR codesize$[rbp]
	inc	eax
	mov	DWORD PTR codesize$[rbp], eax
; Line 6687
	mov	eax, DWORD PTR codesize$[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv303[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv303[rbp]
	shl	eax, cl
	dec	eax
	mov	DWORD PTR codemask$[rbp], eax
$LN26@stbi__proc:
; Line 6690
	mov	eax, DWORD PTR code$1[rbp]
	mov	DWORD PTR oldcode$[rbp], eax
; Line 6691
	jmp	SHORT $LN20@stbi__proc
$LN19@stbi__proc:
; Line 6692
	lea	rcx, OFFSET FLAT:??_C@_0BH@LOKBIIOJ@illegal?5code?5in?5raster@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN36@stbi__proc
	mov	DWORD PTR tv212[rbp], 0
	jmp	SHORT $LN37@stbi__proc
$LN36@stbi__proc:
	mov	DWORD PTR tv212[rbp], 0
$LN37@stbi__proc:
	movsxd	rax, DWORD PTR tv212[rbp]
	jmp	SHORT $LN1@stbi__proc
$LN20@stbi__proc:
$LN18@stbi__proc:
$LN16@stbi__proc:
$LN12@stbi__proc:
; Line 6695
	jmp	$LN5@stbi__proc
$LN1@stbi__proc:
; Line 6696
	lea	rsp, QWORD PTR [rbp+616]
	pop	rdi
	pop	rbp
	ret	0
?stbi__process_gif_raster@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@@Z ENDP ; stbi__process_gif_raster
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z
_TEXT	SEGMENT
p$ = 8
c$ = 40
idx$ = 68
tv257 = 276
g$ = 320
code$ = 328
?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z PROC		; stbi__out_gif_code, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6577
	mov	WORD PTR [rsp+16], dx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6583
	movzx	eax, WORD PTR code$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movsx	eax, WORD PTR [rcx+rax*4+2100]
	test	eax, eax
	jl	SHORT $LN4@stbi__out_
; Line 6584
	movzx	eax, WORD PTR code$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	edx, WORD PTR [rcx+rax*4+2100]
	mov	rcx, QWORD PTR g$[rbp]
	call	?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z ; stbi__out_gif_code
$LN4@stbi__out_:
; Line 6586
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+34904]
	cmp	DWORD PTR [rax+34912], ecx
	jl	SHORT $LN5@stbi__out_
	jmp	$LN1@stbi__out_
$LN5@stbi__out_:
; Line 6588
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34908]
	mov	rcx, QWORD PTR g$[rbp]
	add	eax, DWORD PTR [rcx+34912]
	mov	DWORD PTR idx$[rbp], eax
; Line 6589
	movsxd	rax, DWORD PTR idx$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$[rbp], rax
; Line 6590
	mov	eax, DWORD PTR idx$[rbp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	cdqe
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	mov	BYTE PTR [rcx+rax], 1
; Line 6592
	movzx	eax, WORD PTR code$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	movzx	eax, BYTE PTR [rcx+rax*4+2103]
	shl	eax, 2
	cdqe
	mov	rcx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR [rcx+34872]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR c$[rbp], rax
; Line 6593
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR c$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 128				; 00000080H
	jle	$LN6@stbi__out_
; Line 6594
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR c$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 6595
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR c$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 6596
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR c$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 6597
	mov	eax, 1
	imul	rax, rax, 3
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR c$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
$LN6@stbi__out_:
; Line 6599
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34908]
	add	eax, 4
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34908], eax
; Line 6601
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+34900]
	cmp	DWORD PTR [rax+34908], ecx
	jl	$LN7@stbi__out_
; Line 6602
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+34892]
	mov	DWORD PTR [rax+34908], ecx
; Line 6603
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34912]
	mov	rcx, QWORD PTR g$[rbp]
	add	eax, DWORD PTR [rcx+34884]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34912], eax
$LN2@stbi__out_:
; Line 6605
	mov	rax, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+34904]
	cmp	DWORD PTR [rax+34912], ecx
	jl	$LN3@stbi__out_
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+34880], 0
	jle	$LN3@stbi__out_
; Line 6606
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34880]
	mov	ecx, 1
	mov	DWORD PTR tv257[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv257[rbp]
	shl	eax, cl
	mov	rcx, QWORD PTR g$[rbp]
	imul	eax, DWORD PTR [rcx+34916]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34884], eax
; Line 6607
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34884]
	sar	eax, 1
	mov	rcx, QWORD PTR g$[rbp]
	add	eax, DWORD PTR [rcx+34896]
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34912], eax
; Line 6608
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+34880]
	dec	eax
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+34880], eax
; Line 6609
	jmp	$LN2@stbi__out_
$LN3@stbi__out_:
$LN7@stbi__out_:
$LN1@stbi__out_:
; Line 6611
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__out_gif_code@@YAXPEAUstbi__gif@@G@Z ENDP		; stbi__out_gif_code
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__gif_info_raw@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
g$ = 8
s$ = 256
x$ = 264
y$ = 272
comp$ = 280
?stbi__gif_info_raw@@YAHPEAUstbi__context@@PEAH11@Z PROC ; stbi__gif_info_raw, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6562
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6563
	mov	ecx, 34928				; 00008870H
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR g$[rbp], rax
; Line 6564
	cmp	QWORD PTR g$[rbp], 0
	jne	SHORT $LN2@stbi__gif_
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__gif_
$LN2@stbi__gif_:
; Line 6565
	mov	r9d, 1
	mov	r8, QWORD PTR comp$[rbp]
	mov	rdx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z ; stbi__gif_header
	test	eax, eax
	jne	SHORT $LN3@stbi__gif_
; Line 6566
	mov	rcx, QWORD PTR g$[rbp]
	call	QWORD PTR __imp_free
; Line 6567
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 6568
	xor	eax, eax
	jmp	SHORT $LN1@stbi__gif_
$LN3@stbi__gif_:
; Line 6570
	cmp	QWORD PTR x$[rbp], 0
	je	SHORT $LN4@stbi__gif_
	mov	rax, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
$LN4@stbi__gif_:
; Line 6571
	cmp	QWORD PTR y$[rbp], 0
	je	SHORT $LN5@stbi__gif_
	mov	rax, QWORD PTR y$[rbp]
	mov	rcx, QWORD PTR g$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax], ecx
$LN5@stbi__gif_:
; Line 6572
	mov	rcx, QWORD PTR g$[rbp]
	call	QWORD PTR __imp_free
; Line 6573
	mov	eax, 1
$LN1@stbi__gif_:
; Line 6574
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__gif_info_raw@@YAHPEAUstbi__context@@PEAH11@Z ENDP ; stbi__gif_info_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z
_TEXT	SEGMENT
version$ = 4
tv225 = 212
s$ = 256
g$ = 264
comp$ = 272
is_info$ = 280
?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z PROC ; stbi__gif_header, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6531
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6533
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 71					; 00000047H
	jne	SHORT $LN3@stbi__gif_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 73					; 00000049H
	jne	SHORT $LN3@stbi__gif_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 70					; 00000046H
	jne	SHORT $LN3@stbi__gif_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 56					; 00000038H
	je	SHORT $LN2@stbi__gif_
$LN3@stbi__gif_:
; Line 6534
	lea	rcx, OFFSET FLAT:??_C@_07KMJLPAII@not?5GIF@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__gif_
$LN2@stbi__gif_:
; Line 6536
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR version$[rbp], al
; Line 6537
	movzx	eax, BYTE PTR version$[rbp]
	cmp	eax, 55					; 00000037H
	je	SHORT $LN4@stbi__gif_
	movzx	eax, BYTE PTR version$[rbp]
	cmp	eax, 57					; 00000039H
	je	SHORT $LN4@stbi__gif_
	lea	rcx, OFFSET FLAT:??_C@_07KMJLPAII@not?5GIF@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__gif_
$LN4@stbi__gif_:
; Line 6538
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 97					; 00000061H
	je	SHORT $LN5@stbi__gif_
	lea	rcx, OFFSET FLAT:??_C@_07KMJLPAII@not?5GIF@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__gif_
$LN5@stbi__gif_:
; Line 6540
	mov	eax, OFFSET FLAT:?stbi__g_failure_reason@@3PEBDEB
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	mov	QWORD PTR [rax+rcx], rdx
; Line 6541
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 6542
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 6543
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+32], eax
; Line 6544
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+36], eax
; Line 6545
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR g$[rbp]
	mov	DWORD PTR [rcx+40], eax
; Line 6546
	mov	rax, QWORD PTR g$[rbp]
	mov	DWORD PTR [rax+44], -1
; Line 6548
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax], 16777216		; 01000000H
	jle	SHORT $LN6@stbi__gif_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__gif_
$LN6@stbi__gif_:
; Line 6549
	mov	rax, QWORD PTR g$[rbp]
	cmp	DWORD PTR [rax+4], 16777216		; 01000000H
	jle	SHORT $LN7@stbi__gif_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__gif_
$LN7@stbi__gif_:
; Line 6551
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN8@stbi__gif_
	mov	rax, QWORD PTR comp$[rbp]
	mov	DWORD PTR [rax], 4
$LN8@stbi__gif_:
; Line 6553
	cmp	DWORD PTR is_info$[rbp], 0
	je	SHORT $LN9@stbi__gif_
	mov	eax, 1
	jmp	SHORT $LN1@stbi__gif_
$LN9@stbi__gif_:
; Line 6555
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+32]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	SHORT $LN10@stbi__gif_
; Line 6556
	mov	rax, QWORD PTR g$[rbp]
	mov	eax, DWORD PTR [rax+32]
	and	eax, 7
	mov	ecx, 2
	mov	DWORD PTR tv225[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv225[rbp]
	shl	eax, cl
	mov	rcx, QWORD PTR g$[rbp]
	add	rcx, 52					; 00000034H
	mov	r9d, -1
	mov	r8d, eax
	mov	rdx, rcx
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z ; stbi__gif_parse_colortable
$LN10@stbi__gif_:
; Line 6558
	mov	eax, 1
$LN1@stbi__gif_:
; Line 6559
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__gif_header@@YAHPEAUstbi__context@@PEAUstbi__gif@@PEAHH@Z ENDP ; stbi__gif_header
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z
_TEXT	SEGMENT
i$ = 4
tv93 = 212
s$ = 256
pal$ = 264
num_entries$ = 272
transp$ = 280
?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z PROC ; stbi__gif_parse_colortable, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6520
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6522
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__gif_
$LN2@stbi__gif_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__gif_:
	mov	eax, DWORD PTR num_entries$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN3@stbi__gif_
; Line 6523
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR pal$[rbp]
	lea	rcx, QWORD PTR [rdx+rcx*4]
	mov	edx, 1
	imul	rdx, rdx, 2
	mov	BYTE PTR [rcx+rdx], al
; Line 6524
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR pal$[rbp]
	lea	rcx, QWORD PTR [rdx+rcx*4]
	mov	edx, 1
	imul	rdx, rdx, 1
	mov	BYTE PTR [rcx+rdx], al
; Line 6525
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR pal$[rbp]
	lea	rcx, QWORD PTR [rdx+rcx*4]
	mov	edx, 1
	imul	rdx, rdx, 0
	mov	BYTE PTR [rcx+rdx], al
; Line 6526
	mov	eax, DWORD PTR i$[rbp]
	cmp	DWORD PTR transp$[rbp], eax
	jne	SHORT $LN6@stbi__gif_
	mov	DWORD PTR tv93[rbp], 0
	jmp	SHORT $LN7@stbi__gif_
$LN6@stbi__gif_:
	mov	DWORD PTR tv93[rbp], 255		; 000000ffH
$LN7@stbi__gif_:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR pal$[rbp]
	lea	rax, QWORD PTR [rcx+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 3
	movzx	edx, BYTE PTR tv93[rbp]
	mov	BYTE PTR [rax+rcx], dl
; Line 6527
	jmp	$LN2@stbi__gif_
$LN3@stbi__gif_:
; Line 6528
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__gif_parse_colortable@@YAXPEAUstbi__context@@QEAY03EHH@Z ENDP ; stbi__gif_parse_colortable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__gif_test_raw@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
sz$ = 4
s$ = 256
?stbi__gif_test_raw@@YAHPEAUstbi__context@@@Z PROC	; stbi__gif_test_raw, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6503
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6505
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 71					; 00000047H
	jne	SHORT $LN3@stbi__gif_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 73					; 00000049H
	jne	SHORT $LN3@stbi__gif_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 70					; 00000046H
	jne	SHORT $LN3@stbi__gif_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 56					; 00000038H
	je	SHORT $LN2@stbi__gif_
$LN3@stbi__gif_:
	xor	eax, eax
	jmp	SHORT $LN1@stbi__gif_
$LN2@stbi__gif_:
; Line 6506
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR sz$[rbp], eax
; Line 6507
	cmp	DWORD PTR sz$[rbp], 57			; 00000039H
	je	SHORT $LN4@stbi__gif_
	cmp	DWORD PTR sz$[rbp], 55			; 00000037H
	je	SHORT $LN4@stbi__gif_
	xor	eax, eax
	jmp	SHORT $LN1@stbi__gif_
$LN4@stbi__gif_:
; Line 6508
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 97					; 00000061H
	je	SHORT $LN5@stbi__gif_
	xor	eax, eax
	jmp	SHORT $LN1@stbi__gif_
$LN5@stbi__gif_:
; Line 6509
	mov	eax, 1
$LN1@stbi__gif_:
; Line 6510
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__gif_test_raw@@YAHPEAUstbi__context@@@Z ENDP	; stbi__gif_test_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z
_TEXT	SEGMENT
act_comp$ = 4
num_packets$ = 36
y$ = 68
chained$ = 100
packets$ = 136
packet$6 = 200
packet_idx$7 = 228
packet$8 = 264
dest$9 = 296
x$10 = 324
left$11 = 356
i$12 = 388
count$13 = 420
value$14 = 452
left$15 = 484
count$16 = 516
i$17 = 548
value$18 = 580
tv247 = 980
tv225 = 980
tv214 = 980
tv182 = 980
tv161 = 980
tv157 = 980
tv143 = 980
tv138 = 980
tv130 = 980
tv69 = 980
tv76 = 984
__$ArrayPad$ = 992
s$ = 1040
width$ = 1048
height$ = 1056
comp$ = 1064
result$ = 1072
?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z PROC ; stbi__pic_load_core, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6313
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1048				; 00000418H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 158				; 0000009eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1080]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6314
	mov	DWORD PTR act_comp$[rbp], 0
	mov	DWORD PTR num_packets$[rbp], 0
$LN4@stbi__pic_:
; Line 6322
	movsxd	rax, DWORD PTR num_packets$[rbp]
	cmp	rax, 10
	jne	SHORT $LN29@stbi__pic_
; Line 6323
	lea	rcx, OFFSET FLAT:??_C@_0L@DMAPJJO@bad?5format@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN50@stbi__pic_
	mov	DWORD PTR tv69[rbp], 0
	jmp	SHORT $LN51@stbi__pic_
$LN50@stbi__pic_:
	mov	DWORD PTR tv69[rbp], 0
$LN51@stbi__pic_:
	movsxd	rax, DWORD PTR tv69[rbp]
	jmp	$LN1@stbi__pic_
$LN29@stbi__pic_:
; Line 6325
	movsxd	rax, DWORD PTR num_packets$[rbp]
	imul	rax, rax, 3
	lea	rax, QWORD PTR packets$[rbp+rax]
	mov	QWORD PTR tv76[rbp], rax
	mov	eax, DWORD PTR num_packets$[rbp]
	inc	eax
	mov	DWORD PTR num_packets$[rbp], eax
	mov	rax, QWORD PTR tv76[rbp]
	mov	QWORD PTR packet$6[rbp], rax
; Line 6327
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR chained$[rbp], eax
; Line 6328
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR packet$6[rbp]
	mov	BYTE PTR [rcx], al
; Line 6329
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR packet$6[rbp]
	mov	BYTE PTR [rcx+1], al
; Line 6330
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR packet$6[rbp]
	mov	BYTE PTR [rcx+2], al
; Line 6332
	mov	rax, QWORD PTR packet$6[rbp]
	movzx	eax, BYTE PTR [rax+2]
	mov	ecx, DWORD PTR act_comp$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR act_comp$[rbp], eax
; Line 6334
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	je	SHORT $LN30@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_08GGMBIFE@bad?5file@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN52@stbi__pic_
	mov	DWORD PTR tv130[rbp], 0
	jmp	SHORT $LN53@stbi__pic_
$LN52@stbi__pic_:
	mov	DWORD PTR tv130[rbp], 0
$LN53@stbi__pic_:
	movsxd	rax, DWORD PTR tv130[rbp]
	jmp	$LN1@stbi__pic_
$LN30@stbi__pic_:
; Line 6335
	mov	rax, QWORD PTR packet$6[rbp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 8
	je	SHORT $LN31@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_0L@DMAPJJO@bad?5format@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN54@stbi__pic_
	mov	DWORD PTR tv138[rbp], 0
	jmp	SHORT $LN55@stbi__pic_
$LN54@stbi__pic_:
	mov	DWORD PTR tv138[rbp], 0
$LN55@stbi__pic_:
	movsxd	rax, DWORD PTR tv138[rbp]
	jmp	$LN1@stbi__pic_
$LN31@stbi__pic_:
; Line 6336
	cmp	DWORD PTR chained$[rbp], 0
	jne	$LN4@stbi__pic_
; Line 6338
	mov	eax, DWORD PTR act_comp$[rbp]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN56@stbi__pic_
	mov	DWORD PTR tv143[rbp], 4
	jmp	SHORT $LN57@stbi__pic_
$LN56@stbi__pic_:
	mov	DWORD PTR tv143[rbp], 3
$LN57@stbi__pic_:
	mov	rax, QWORD PTR comp$[rbp]
	mov	ecx, DWORD PTR tv143[rbp]
	mov	DWORD PTR [rax], ecx
; Line 6340
	mov	DWORD PTR y$[rbp], 0
	jmp	SHORT $LN7@stbi__pic_
$LN5@stbi__pic_:
	mov	eax, DWORD PTR y$[rbp]
	inc	eax
	mov	DWORD PTR y$[rbp], eax
$LN7@stbi__pic_:
	mov	eax, DWORD PTR height$[rbp]
	cmp	DWORD PTR y$[rbp], eax
	jge	$LN6@stbi__pic_
; Line 6343
	mov	DWORD PTR packet_idx$7[rbp], 0
	jmp	SHORT $LN10@stbi__pic_
$LN8@stbi__pic_:
	mov	eax, DWORD PTR packet_idx$7[rbp]
	inc	eax
	mov	DWORD PTR packet_idx$7[rbp], eax
$LN10@stbi__pic_:
	mov	eax, DWORD PTR num_packets$[rbp]
	cmp	DWORD PTR packet_idx$7[rbp], eax
	jge	$LN9@stbi__pic_
; Line 6344
	movsxd	rax, DWORD PTR packet_idx$7[rbp]
	imul	rax, rax, 3
	lea	rax, QWORD PTR packets$[rbp+rax]
	mov	QWORD PTR packet$8[rbp], rax
; Line 6345
	mov	eax, DWORD PTR y$[rbp]
	imul	eax, DWORD PTR width$[rbp]
	shl	eax, 2
	cdqe
	mov	rcx, QWORD PTR result$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR dest$9[rbp], rax
; Line 6347
	mov	rax, QWORD PTR packet$8[rbp]
	movzx	eax, BYTE PTR [rax+1]
	mov	BYTE PTR tv157[rbp], al
	cmp	BYTE PTR tv157[rbp], 0
	je	SHORT $LN33@stbi__pic_
	cmp	BYTE PTR tv157[rbp], 1
	je	$LN35@stbi__pic_
	cmp	BYTE PTR tv157[rbp], 2
	je	$LN39@stbi__pic_
; Line 6349
	lea	rcx, OFFSET FLAT:??_C@_0L@DMAPJJO@bad?5format@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN58@stbi__pic_
	mov	DWORD PTR tv161[rbp], 0
	jmp	SHORT $LN59@stbi__pic_
$LN58@stbi__pic_:
	mov	DWORD PTR tv161[rbp], 0
$LN59@stbi__pic_:
	movsxd	rax, DWORD PTR tv161[rbp]
	jmp	$LN1@stbi__pic_
$LN33@stbi__pic_:
; Line 6354
	mov	DWORD PTR x$10[rbp], 0
	jmp	SHORT $LN15@stbi__pic_
$LN13@stbi__pic_:
	mov	eax, DWORD PTR x$10[rbp]
	inc	eax
	mov	DWORD PTR x$10[rbp], eax
	mov	rax, QWORD PTR dest$9[rbp]
	add	rax, 4
	mov	QWORD PTR dest$9[rbp], rax
$LN15@stbi__pic_:
	mov	eax, DWORD PTR width$[rbp]
	cmp	DWORD PTR x$10[rbp], eax
	jge	SHORT $LN14@stbi__pic_
; Line 6355
	mov	rax, QWORD PTR packet$8[rbp]
	movzx	eax, BYTE PTR [rax+2]
	mov	r8, QWORD PTR dest$9[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z ; stbi__readval
	test	rax, rax
	jne	SHORT $LN34@stbi__pic_
; Line 6356
	xor	eax, eax
	jmp	$LN1@stbi__pic_
$LN34@stbi__pic_:
	jmp	SHORT $LN13@stbi__pic_
$LN14@stbi__pic_:
; Line 6357
	jmp	$LN11@stbi__pic_
$LN35@stbi__pic_:
; Line 6362
	mov	eax, DWORD PTR width$[rbp]
	mov	DWORD PTR left$11[rbp], eax
$LN16@stbi__pic_:
; Line 6364
	cmp	DWORD PTR left$11[rbp], 0
	jle	$LN17@stbi__pic_
; Line 6367
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR count$13[rbp], al
; Line 6368
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	je	SHORT $LN36@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_08GGMBIFE@bad?5file@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN60@stbi__pic_
	mov	DWORD PTR tv182[rbp], 0
	jmp	SHORT $LN61@stbi__pic_
$LN60@stbi__pic_:
	mov	DWORD PTR tv182[rbp], 0
$LN61@stbi__pic_:
	movsxd	rax, DWORD PTR tv182[rbp]
	jmp	$LN1@stbi__pic_
$LN36@stbi__pic_:
; Line 6370
	movzx	eax, BYTE PTR count$13[rbp]
	cmp	eax, DWORD PTR left$11[rbp]
	jle	SHORT $LN37@stbi__pic_
; Line 6371
	movzx	eax, BYTE PTR left$11[rbp]
	mov	BYTE PTR count$13[rbp], al
$LN37@stbi__pic_:
; Line 6373
	mov	rax, QWORD PTR packet$8[rbp]
	movzx	eax, BYTE PTR [rax+2]
	lea	r8, QWORD PTR value$14[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z ; stbi__readval
	test	rax, rax
	jne	SHORT $LN38@stbi__pic_
	xor	eax, eax
	jmp	$LN1@stbi__pic_
$LN38@stbi__pic_:
; Line 6375
	mov	DWORD PTR i$12[rbp], 0
	jmp	SHORT $LN20@stbi__pic_
$LN18@stbi__pic_:
	mov	eax, DWORD PTR i$12[rbp]
	inc	eax
	mov	DWORD PTR i$12[rbp], eax
	mov	rax, QWORD PTR dest$9[rbp]
	add	rax, 4
	mov	QWORD PTR dest$9[rbp], rax
$LN20@stbi__pic_:
	movzx	eax, BYTE PTR count$13[rbp]
	cmp	DWORD PTR i$12[rbp], eax
	jge	SHORT $LN19@stbi__pic_
; Line 6376
	mov	rax, QWORD PTR packet$8[rbp]
	movzx	eax, BYTE PTR [rax+2]
	lea	r8, QWORD PTR value$14[rbp]
	mov	rdx, QWORD PTR dest$9[rbp]
	mov	ecx, eax
	call	?stbi__copyval@@YAXHPEAEPEBE@Z		; stbi__copyval
	jmp	SHORT $LN18@stbi__pic_
$LN19@stbi__pic_:
; Line 6377
	movzx	eax, BYTE PTR count$13[rbp]
	mov	ecx, DWORD PTR left$11[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR left$11[rbp], eax
; Line 6378
	jmp	$LN16@stbi__pic_
$LN17@stbi__pic_:
; Line 6380
	jmp	$LN11@stbi__pic_
$LN39@stbi__pic_:
; Line 6383
	mov	eax, DWORD PTR width$[rbp]
	mov	DWORD PTR left$15[rbp], eax
$LN21@stbi__pic_:
; Line 6384
	cmp	DWORD PTR left$15[rbp], 0
	jle	$LN22@stbi__pic_
; Line 6385
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR count$16[rbp], eax
; Line 6386
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	je	SHORT $LN40@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_08GGMBIFE@bad?5file@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN62@stbi__pic_
	mov	DWORD PTR tv214[rbp], 0
	jmp	SHORT $LN63@stbi__pic_
$LN62@stbi__pic_:
	mov	DWORD PTR tv214[rbp], 0
$LN63@stbi__pic_:
	movsxd	rax, DWORD PTR tv214[rbp]
	jmp	$LN1@stbi__pic_
$LN40@stbi__pic_:
; Line 6388
	cmp	DWORD PTR count$16[rbp], 128		; 00000080H
	jl	$LN41@stbi__pic_
; Line 6391
	cmp	DWORD PTR count$16[rbp], 128		; 00000080H
	jne	SHORT $LN43@stbi__pic_
; Line 6392
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR count$16[rbp], eax
	jmp	SHORT $LN44@stbi__pic_
$LN43@stbi__pic_:
; Line 6394
	mov	eax, DWORD PTR count$16[rbp]
	sub	eax, 127				; 0000007fH
	mov	DWORD PTR count$16[rbp], eax
$LN44@stbi__pic_:
; Line 6395
	mov	eax, DWORD PTR left$15[rbp]
	cmp	DWORD PTR count$16[rbp], eax
	jle	SHORT $LN45@stbi__pic_
; Line 6396
	lea	rcx, OFFSET FLAT:??_C@_08GGMBIFE@bad?5file@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN64@stbi__pic_
	mov	DWORD PTR tv225[rbp], 0
	jmp	SHORT $LN65@stbi__pic_
$LN64@stbi__pic_:
	mov	DWORD PTR tv225[rbp], 0
$LN65@stbi__pic_:
	movsxd	rax, DWORD PTR tv225[rbp]
	jmp	$LN1@stbi__pic_
$LN45@stbi__pic_:
; Line 6398
	mov	rax, QWORD PTR packet$8[rbp]
	movzx	eax, BYTE PTR [rax+2]
	lea	r8, QWORD PTR value$18[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z ; stbi__readval
	test	rax, rax
	jne	SHORT $LN46@stbi__pic_
; Line 6399
	xor	eax, eax
	jmp	$LN1@stbi__pic_
$LN46@stbi__pic_:
; Line 6401
	mov	DWORD PTR i$17[rbp], 0
	jmp	SHORT $LN25@stbi__pic_
$LN23@stbi__pic_:
	mov	eax, DWORD PTR i$17[rbp]
	inc	eax
	mov	DWORD PTR i$17[rbp], eax
	mov	rax, QWORD PTR dest$9[rbp]
	add	rax, 4
	mov	QWORD PTR dest$9[rbp], rax
$LN25@stbi__pic_:
	mov	eax, DWORD PTR count$16[rbp]
	cmp	DWORD PTR i$17[rbp], eax
	jge	SHORT $LN24@stbi__pic_
; Line 6402
	mov	rax, QWORD PTR packet$8[rbp]
	movzx	eax, BYTE PTR [rax+2]
	lea	r8, QWORD PTR value$18[rbp]
	mov	rdx, QWORD PTR dest$9[rbp]
	mov	ecx, eax
	call	?stbi__copyval@@YAXHPEAEPEBE@Z		; stbi__copyval
	jmp	SHORT $LN23@stbi__pic_
$LN24@stbi__pic_:
; Line 6403
	jmp	$LN42@stbi__pic_
$LN41@stbi__pic_:
; Line 6404
	mov	eax, DWORD PTR count$16[rbp]
	inc	eax
	mov	DWORD PTR count$16[rbp], eax
; Line 6405
	mov	eax, DWORD PTR left$15[rbp]
	cmp	DWORD PTR count$16[rbp], eax
	jle	SHORT $LN47@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_08GGMBIFE@bad?5file@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN66@stbi__pic_
	mov	DWORD PTR tv247[rbp], 0
	jmp	SHORT $LN67@stbi__pic_
$LN66@stbi__pic_:
	mov	DWORD PTR tv247[rbp], 0
$LN67@stbi__pic_:
	movsxd	rax, DWORD PTR tv247[rbp]
	jmp	$LN1@stbi__pic_
$LN47@stbi__pic_:
; Line 6407
	mov	DWORD PTR i$17[rbp], 0
	jmp	SHORT $LN28@stbi__pic_
$LN26@stbi__pic_:
	mov	eax, DWORD PTR i$17[rbp]
	inc	eax
	mov	DWORD PTR i$17[rbp], eax
	mov	rax, QWORD PTR dest$9[rbp]
	add	rax, 4
	mov	QWORD PTR dest$9[rbp], rax
$LN28@stbi__pic_:
	mov	eax, DWORD PTR count$16[rbp]
	cmp	DWORD PTR i$17[rbp], eax
	jge	SHORT $LN27@stbi__pic_
; Line 6408
	mov	rax, QWORD PTR packet$8[rbp]
	movzx	eax, BYTE PTR [rax+2]
	mov	r8, QWORD PTR dest$9[rbp]
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z ; stbi__readval
	test	rax, rax
	jne	SHORT $LN48@stbi__pic_
; Line 6409
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pic_
$LN48@stbi__pic_:
	jmp	SHORT $LN26@stbi__pic_
$LN27@stbi__pic_:
$LN42@stbi__pic_:
; Line 6411
	mov	eax, DWORD PTR count$16[rbp]
	mov	ecx, DWORD PTR left$15[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR left$15[rbp], eax
; Line 6412
	jmp	$LN21@stbi__pic_
$LN22@stbi__pic_:
$LN11@stbi__pic_:
; Line 6416
	jmp	$LN8@stbi__pic_
$LN9@stbi__pic_:
; Line 6417
	jmp	$LN5@stbi__pic_
$LN6@stbi__pic_:
; Line 6419
	mov	rax, QWORD PTR result$[rbp]
$LN1@stbi__pic_:
; Line 6420
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1016]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z ENDP ; stbi__pic_load_core
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__copyval@@YAXHPEAEPEBE@Z
_TEXT	SEGMENT
mask$ = 4
i$ = 36
channel$ = 288
dest$ = 296
src$ = 304
?stbi__copyval@@YAXHPEAEPEBE@Z PROC			; stbi__copyval, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6304
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6305
	mov	DWORD PTR mask$[rbp], 128		; 00000080H
; Line 6307
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__copy
$LN2@stbi__copy:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	eax, DWORD PTR mask$[rbp]
	sar	eax, 1
	mov	DWORD PTR mask$[rbp], eax
$LN4@stbi__copy:
	cmp	DWORD PTR i$[rbp], 4
	jge	SHORT $LN3@stbi__copy
; Line 6308
	mov	eax, DWORD PTR mask$[rbp]
	mov	ecx, DWORD PTR channel$[rbp]
	and	ecx, eax
	mov	eax, ecx
	test	eax, eax
	je	SHORT $LN5@stbi__copy
; Line 6309
	movsxd	rax, DWORD PTR i$[rbp]
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR dest$[rbp]
	mov	r8, QWORD PTR src$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
$LN5@stbi__copy:
	jmp	SHORT $LN2@stbi__copy
$LN3@stbi__copy:
; Line 6310
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__copyval@@YAXHPEAEPEBE@Z ENDP			; stbi__copyval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z
_TEXT	SEGMENT
mask$ = 4
i$ = 36
tv75 = 244
s$ = 288
channel$ = 296
dest$ = 304
?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z PROC	; stbi__readval, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6290
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6291
	mov	DWORD PTR mask$[rbp], 128		; 00000080H
; Line 6293
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__read
$LN2@stbi__read:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	eax, DWORD PTR mask$[rbp]
	sar	eax, 1
	mov	DWORD PTR mask$[rbp], eax
$LN4@stbi__read:
	cmp	DWORD PTR i$[rbp], 4
	jge	SHORT $LN3@stbi__read
; Line 6294
	mov	eax, DWORD PTR mask$[rbp]
	mov	ecx, DWORD PTR channel$[rbp]
	and	ecx, eax
	mov	eax, ecx
	test	eax, eax
	je	SHORT $LN5@stbi__read
; Line 6295
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	je	SHORT $LN6@stbi__read
	lea	rcx, OFFSET FLAT:??_C@_08GGMBIFE@bad?5file@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN8@stbi__read
	mov	DWORD PTR tv75[rbp], 0
	jmp	SHORT $LN9@stbi__read
$LN8@stbi__read:
	mov	DWORD PTR tv75[rbp], 0
$LN9@stbi__read:
	movsxd	rax, DWORD PTR tv75[rbp]
	jmp	SHORT $LN1@stbi__read
$LN6@stbi__read:
; Line 6296
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR dest$[rbp]
	mov	BYTE PTR [rdx+rcx], al
$LN5@stbi__read:
; Line 6298
	jmp	$LN2@stbi__read
$LN3@stbi__read:
; Line 6300
	mov	rax, QWORD PTR dest$[rbp]
$LN1@stbi__read:
; Line 6301
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__readval@@YAPEAEPEAUstbi__context@@HPEAE@Z ENDP	; stbi__readval
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pic_test_core@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
i$ = 4
s$ = 256
?stbi__pic_test_core@@YAHPEAUstbi__context@@@Z PROC	; stbi__pic_test_core, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6269
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6272
	lea	rdx, OFFSET FLAT:??_C@_04KBFEPHFH@S?$IA?v4@
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z ; stbi__pic_is4
	test	eax, eax
	jne	SHORT $LN5@stbi__pic_
; Line 6273
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pic_
$LN5@stbi__pic_:
; Line 6275
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__pic_
$LN2@stbi__pic_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__pic_:
	cmp	DWORD PTR i$[rbp], 84			; 00000054H
	jge	SHORT $LN3@stbi__pic_
; Line 6276
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	jmp	SHORT $LN2@stbi__pic_
$LN3@stbi__pic_:
; Line 6278
	lea	rdx, OFFSET FLAT:??_C@_04ELNJHLFH@PICT@
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z ; stbi__pic_is4
	test	eax, eax
	jne	SHORT $LN6@stbi__pic_
; Line 6279
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pic_
$LN6@stbi__pic_:
; Line 6281
	mov	eax, 1
$LN1@stbi__pic_:
; Line 6282
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pic_test_core@@YAHPEAUstbi__context@@@Z ENDP	; stbi__pic_test_core
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z
_TEXT	SEGMENT
i$ = 4
s$ = 256
str$ = 264
?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z PROC	; stbi__pic_is4, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6259
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6261
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__pic_
$LN2@stbi__pic_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__pic_:
	cmp	DWORD PTR i$[rbp], 4
	jge	SHORT $LN3@stbi__pic_
; Line 6262
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR str$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	cmp	eax, ecx
	je	SHORT $LN5@stbi__pic_
; Line 6263
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pic_
$LN5@stbi__pic_:
	jmp	SHORT $LN2@stbi__pic_
$LN3@stbi__pic_:
; Line 6265
	mov	eax, 1
$LN1@stbi__pic_:
; Line 6266
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z ENDP	; stbi__pic_is4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__psd_decode_rle@@YAHPEAUstbi__context@@PEAEH@Z
_TEXT	SEGMENT
count$ = 4
nleft$ = 36
len$ = 68
val$1 = 100
s$ = 352
p$ = 360
pixelCount$ = 368
?stbi__psd_decode_rle@@YAHPEAUstbi__context@@PEAEH@Z PROC ; stbi__psd_decode_rle, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6011
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6014
	mov	DWORD PTR count$[rbp], 0
$LN2@stbi__psd_:
; Line 6015
	mov	eax, DWORD PTR count$[rbp]
	mov	ecx, DWORD PTR pixelCount$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR nleft$[rbp], eax
	cmp	DWORD PTR nleft$[rbp], 0
	jle	$LN3@stbi__psd_
; Line 6016
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR len$[rbp], eax
; Line 6017
	cmp	DWORD PTR len$[rbp], 128		; 00000080H
	jne	SHORT $LN8@stbi__psd_
	jmp	$LN9@stbi__psd_
$LN8@stbi__psd_:
; Line 6019
	cmp	DWORD PTR len$[rbp], 128		; 00000080H
	jge	SHORT $LN10@stbi__psd_
; Line 6021
	mov	eax, DWORD PTR len$[rbp]
	inc	eax
	mov	DWORD PTR len$[rbp], eax
; Line 6022
	mov	eax, DWORD PTR nleft$[rbp]
	cmp	DWORD PTR len$[rbp], eax
	jle	SHORT $LN12@stbi__psd_
	xor	eax, eax
	jmp	$LN1@stbi__psd_
$LN12@stbi__psd_:
; Line 6023
	mov	eax, DWORD PTR len$[rbp]
	mov	ecx, DWORD PTR count$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR count$[rbp], eax
$LN4@stbi__psd_:
; Line 6024
	cmp	DWORD PTR len$[rbp], 0
	je	SHORT $LN5@stbi__psd_
; Line 6025
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR p$[rbp]
	mov	BYTE PTR [rcx], al
; Line 6026
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 4
	mov	QWORD PTR p$[rbp], rax
; Line 6027
	mov	eax, DWORD PTR len$[rbp]
	dec	eax
	mov	DWORD PTR len$[rbp], eax
; Line 6028
	jmp	SHORT $LN4@stbi__psd_
$LN5@stbi__psd_:
; Line 6029
	jmp	SHORT $LN11@stbi__psd_
$LN10@stbi__psd_:
	cmp	DWORD PTR len$[rbp], 128		; 00000080H
	jle	SHORT $LN13@stbi__psd_
; Line 6033
	mov	eax, 257				; 00000101H
	sub	eax, DWORD PTR len$[rbp]
	mov	DWORD PTR len$[rbp], eax
; Line 6034
	mov	eax, DWORD PTR nleft$[rbp]
	cmp	DWORD PTR len$[rbp], eax
	jle	SHORT $LN14@stbi__psd_
	xor	eax, eax
	jmp	SHORT $LN1@stbi__psd_
$LN14@stbi__psd_:
; Line 6035
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR val$1[rbp], al
; Line 6036
	mov	eax, DWORD PTR len$[rbp]
	mov	ecx, DWORD PTR count$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR count$[rbp], eax
$LN6@stbi__psd_:
; Line 6037
	cmp	DWORD PTR len$[rbp], 0
	je	SHORT $LN7@stbi__psd_
; Line 6038
	mov	rax, QWORD PTR p$[rbp]
	movzx	ecx, BYTE PTR val$1[rbp]
	mov	BYTE PTR [rax], cl
; Line 6039
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 4
	mov	QWORD PTR p$[rbp], rax
; Line 6040
	mov	eax, DWORD PTR len$[rbp]
	dec	eax
	mov	DWORD PTR len$[rbp], eax
; Line 6041
	jmp	SHORT $LN6@stbi__psd_
$LN7@stbi__psd_:
$LN13@stbi__psd_:
$LN11@stbi__psd_:
$LN9@stbi__psd_:
; Line 6043
	jmp	$LN2@stbi__psd_
$LN3@stbi__psd_:
; Line 6045
	mov	eax, 1
$LN1@stbi__psd_:
; Line 6046
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?stbi__psd_decode_rle@@YAHPEAUstbi__context@@PEAEH@Z ENDP ; stbi__psd_decode_rle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z
_TEXT	SEGMENT
px$ = 4
fiveBitMask$ = 36
r$ = 68
g$ = 100
b$ = 132
s$ = 384
out$ = 392
?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z PROC ; stbi__tga_read_rgb16, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5775
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5776
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	WORD PTR px$[rbp], ax
; Line 5777
	mov	eax, 31
	mov	WORD PTR fiveBitMask$[rbp], ax
; Line 5779
	movzx	eax, WORD PTR px$[rbp]
	sar	eax, 10
	movzx	ecx, WORD PTR fiveBitMask$[rbp]
	and	eax, ecx
	mov	DWORD PTR r$[rbp], eax
; Line 5780
	movzx	eax, WORD PTR px$[rbp]
	sar	eax, 5
	movzx	ecx, WORD PTR fiveBitMask$[rbp]
	and	eax, ecx
	mov	DWORD PTR g$[rbp], eax
; Line 5781
	movzx	eax, WORD PTR px$[rbp]
	movzx	ecx, WORD PTR fiveBitMask$[rbp]
	and	eax, ecx
	mov	DWORD PTR b$[rbp], eax
; Line 5783
	imul	eax, DWORD PTR r$[rbp], 255		; 000000ffH
	cdq
	mov	ecx, 31
	idiv	ecx
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 5784
	imul	eax, DWORD PTR g$[rbp], 255		; 000000ffH
	cdq
	mov	ecx, 31
	idiv	ecx
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 5785
	imul	eax, DWORD PTR b$[rbp], 255		; 000000ffH
	cdq
	mov	ecx, 31
	idiv	ecx
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 5791
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z ENDP ; stbi__tga_read_rgb16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__tga_get_comp@@YAHHHPEAH@Z
_TEXT	SEGMENT
tv65 = 192
bits_per_pixel$ = 240
is_grey$ = 248
is_rgb16$ = 256
?stbi__tga_get_comp@@YAHHHPEAH@Z PROC			; stbi__tga_get_comp, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5662
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5664
	cmp	QWORD PTR is_rgb16$[rbp], 0
	je	SHORT $LN4@stbi__tga_
	mov	rax, QWORD PTR is_rgb16$[rbp]
	mov	DWORD PTR [rax], 0
$LN4@stbi__tga_:
; Line 5665
	mov	eax, DWORD PTR bits_per_pixel$[rbp]
	mov	DWORD PTR tv65[rbp], eax
	cmp	DWORD PTR tv65[rbp], 8
	je	SHORT $LN5@stbi__tga_
	cmp	DWORD PTR tv65[rbp], 15
	je	SHORT $LN8@stbi__tga_
	cmp	DWORD PTR tv65[rbp], 16
	je	SHORT $LN6@stbi__tga_
	cmp	DWORD PTR tv65[rbp], 24
	je	SHORT $LN10@stbi__tga_
	cmp	DWORD PTR tv65[rbp], 32			; 00000020H
	je	SHORT $LN11@stbi__tga_
	jmp	SHORT $LN12@stbi__tga_
$LN5@stbi__tga_:
; Line 5666
	mov	eax, 1
	jmp	SHORT $LN1@stbi__tga_
$LN6@stbi__tga_:
; Line 5667
	cmp	DWORD PTR is_grey$[rbp], 0
	je	SHORT $LN7@stbi__tga_
	mov	eax, 2
	jmp	SHORT $LN1@stbi__tga_
$LN7@stbi__tga_:
$LN8@stbi__tga_:
; Line 5669
	cmp	QWORD PTR is_rgb16$[rbp], 0
	je	SHORT $LN9@stbi__tga_
	mov	rax, QWORD PTR is_rgb16$[rbp]
	mov	DWORD PTR [rax], 1
$LN9@stbi__tga_:
; Line 5670
	mov	eax, 3
	jmp	SHORT $LN1@stbi__tga_
$LN10@stbi__tga_:
$LN11@stbi__tga_:
; Line 5672
	mov	eax, DWORD PTR bits_per_pixel$[rbp]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	jmp	SHORT $LN1@stbi__tga_
$LN12@stbi__tga_:
; Line 5673
	xor	eax, eax
$LN1@stbi__tga_:
; Line 5675
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__tga_get_comp@@YAHHHPEAH@Z ENDP			; stbi__tga_get_comp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z
_TEXT	SEGMENT
hsz$ = 4
compress$1 = 36
i$2 = 68
tv243 = 276
tv236 = 276
tv231 = 276
tv188 = 276
tv178 = 276
tv172 = 276
tv159 = 276
tv138 = 276
tv128 = 276
tv75 = 276
s$ = 320
info$ = 328
?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z PROC ; stbi__bmp_parse_header, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5385
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5387
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 66					; 00000042H
	jne	SHORT $LN6@stbi__bmp_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 77					; 0000004dH
	je	SHORT $LN5@stbi__bmp_
$LN6@stbi__bmp_:
	lea	rcx, OFFSET FLAT:??_C@_07IANEBNLB@not?5BMP@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN32@stbi__bmp_
	mov	DWORD PTR tv75[rbp], 0
	jmp	SHORT $LN33@stbi__bmp_
$LN32@stbi__bmp_:
	mov	DWORD PTR tv75[rbp], 0
$LN33@stbi__bmp_:
	movsxd	rax, DWORD PTR tv75[rbp]
	jmp	$LN1@stbi__bmp_
$LN5@stbi__bmp_:
; Line 5388
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5389
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
; Line 5390
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
; Line 5391
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 5392
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	DWORD PTR hsz$[rbp], eax
	mov	rax, QWORD PTR info$[rbp]
	mov	ecx, DWORD PTR hsz$[rbp]
	mov	DWORD PTR [rax+8], ecx
; Line 5393
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+24], 0
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+20], 0
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+16], 0
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+12], 0
; Line 5394
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+32], 14
; Line 5396
	mov	rax, QWORD PTR info$[rbp]
	cmp	DWORD PTR [rax+4], 0
	jge	SHORT $LN7@stbi__bmp_
	lea	rcx, OFFSET FLAT:??_C@_07IEJCHBDI@bad?5BMP@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN34@stbi__bmp_
	mov	DWORD PTR tv128[rbp], 0
	jmp	SHORT $LN35@stbi__bmp_
$LN34@stbi__bmp_:
	mov	DWORD PTR tv128[rbp], 0
$LN35@stbi__bmp_:
	movsxd	rax, DWORD PTR tv128[rbp]
	jmp	$LN1@stbi__bmp_
$LN7@stbi__bmp_:
; Line 5398
	cmp	DWORD PTR hsz$[rbp], 12
	je	SHORT $LN8@stbi__bmp_
	cmp	DWORD PTR hsz$[rbp], 40			; 00000028H
	je	SHORT $LN8@stbi__bmp_
	cmp	DWORD PTR hsz$[rbp], 56			; 00000038H
	je	SHORT $LN8@stbi__bmp_
	cmp	DWORD PTR hsz$[rbp], 108		; 0000006cH
	je	SHORT $LN8@stbi__bmp_
	cmp	DWORD PTR hsz$[rbp], 124		; 0000007cH
	je	SHORT $LN8@stbi__bmp_
	lea	rcx, OFFSET FLAT:??_C@_0M@KHBIBJBG@unknown?5BMP@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN36@stbi__bmp_
	mov	DWORD PTR tv138[rbp], 0
	jmp	SHORT $LN37@stbi__bmp_
$LN36@stbi__bmp_:
	mov	DWORD PTR tv138[rbp], 0
$LN37@stbi__bmp_:
	movsxd	rax, DWORD PTR tv138[rbp]
	jmp	$LN1@stbi__bmp_
$LN8@stbi__bmp_:
; Line 5399
	cmp	DWORD PTR hsz$[rbp], 12
	jne	SHORT $LN9@stbi__bmp_
; Line 5400
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 5401
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 5402
	jmp	SHORT $LN10@stbi__bmp_
$LN9@stbi__bmp_:
; Line 5403
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 5404
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+4], eax
$LN10@stbi__bmp_:
; Line 5406
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	cmp	eax, 1
	je	SHORT $LN11@stbi__bmp_
	lea	rcx, OFFSET FLAT:??_C@_07IEJCHBDI@bad?5BMP@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN38@stbi__bmp_
	mov	DWORD PTR tv159[rbp], 0
	jmp	SHORT $LN39@stbi__bmp_
$LN38@stbi__bmp_:
	mov	DWORD PTR tv159[rbp], 0
$LN39@stbi__bmp_:
	movsxd	rax, DWORD PTR tv159[rbp]
	jmp	$LN1@stbi__bmp_
$LN11@stbi__bmp_:
; Line 5407
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 5408
	cmp	DWORD PTR hsz$[rbp], 12
	je	$LN12@stbi__bmp_
; Line 5409
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	DWORD PTR compress$1[rbp], eax
; Line 5410
	cmp	DWORD PTR compress$1[rbp], 1
	je	SHORT $LN14@stbi__bmp_
	cmp	DWORD PTR compress$1[rbp], 2
	jne	SHORT $LN13@stbi__bmp_
$LN14@stbi__bmp_:
	lea	rcx, OFFSET FLAT:??_C@_07IMHMNOIB@BMP?5RLE@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN40@stbi__bmp_
	mov	DWORD PTR tv172[rbp], 0
	jmp	SHORT $LN41@stbi__bmp_
$LN40@stbi__bmp_:
	mov	DWORD PTR tv172[rbp], 0
$LN41@stbi__bmp_:
	movsxd	rax, DWORD PTR tv172[rbp]
	jmp	$LN1@stbi__bmp_
$LN13@stbi__bmp_:
; Line 5411
	cmp	DWORD PTR compress$1[rbp], 4
	jl	SHORT $LN15@stbi__bmp_
	lea	rcx, OFFSET FLAT:??_C@_0N@ODCBCBFN@BMP?5JPEG?1PNG@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN42@stbi__bmp_
	mov	DWORD PTR tv178[rbp], 0
	jmp	SHORT $LN43@stbi__bmp_
$LN42@stbi__bmp_:
	mov	DWORD PTR tv178[rbp], 0
$LN43@stbi__bmp_:
	movsxd	rax, DWORD PTR tv178[rbp]
	jmp	$LN1@stbi__bmp_
$LN15@stbi__bmp_:
; Line 5412
	cmp	DWORD PTR compress$1[rbp], 3
	jne	SHORT $LN16@stbi__bmp_
	mov	rax, QWORD PTR info$[rbp]
	cmp	DWORD PTR [rax], 16
	je	SHORT $LN16@stbi__bmp_
	mov	rax, QWORD PTR info$[rbp]
	cmp	DWORD PTR [rax], 32			; 00000020H
	je	SHORT $LN16@stbi__bmp_
	lea	rcx, OFFSET FLAT:??_C@_07IEJCHBDI@bad?5BMP@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN44@stbi__bmp_
	mov	DWORD PTR tv188[rbp], 0
	jmp	SHORT $LN45@stbi__bmp_
$LN44@stbi__bmp_:
	mov	DWORD PTR tv188[rbp], 0
$LN45@stbi__bmp_:
	movsxd	rax, DWORD PTR tv188[rbp]
	jmp	$LN1@stbi__bmp_
$LN16@stbi__bmp_:
; Line 5413
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5414
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5415
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5416
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5417
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5418
	cmp	DWORD PTR hsz$[rbp], 40			; 00000028H
	je	SHORT $LN19@stbi__bmp_
	cmp	DWORD PTR hsz$[rbp], 56			; 00000038H
	jne	$LN17@stbi__bmp_
$LN19@stbi__bmp_:
; Line 5419
	cmp	DWORD PTR hsz$[rbp], 56			; 00000038H
	jne	SHORT $LN20@stbi__bmp_
; Line 5420
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5421
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5422
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5423
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
$LN20@stbi__bmp_:
; Line 5425
	mov	rax, QWORD PTR info$[rbp]
	cmp	DWORD PTR [rax], 16
	je	SHORT $LN22@stbi__bmp_
	mov	rax, QWORD PTR info$[rbp]
	cmp	DWORD PTR [rax], 32			; 00000020H
	jne	$LN21@stbi__bmp_
$LN22@stbi__bmp_:
; Line 5426
	cmp	DWORD PTR compress$1[rbp], 0
	jne	SHORT $LN23@stbi__bmp_
; Line 5427
	mov	edx, DWORD PTR compress$1[rbp]
	mov	rcx, QWORD PTR info$[rbp]
	call	?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z ; stbi__bmp_set_mask_defaults
	jmp	$LN24@stbi__bmp_
$LN23@stbi__bmp_:
; Line 5428
	cmp	DWORD PTR compress$1[rbp], 3
	jne	$LN25@stbi__bmp_
; Line 5429
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx+12], eax
; Line 5430
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx+16], eax
; Line 5431
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx+20], eax
; Line 5432
	mov	rax, QWORD PTR info$[rbp]
	mov	eax, DWORD PTR [rax+32]
	add	eax, 12
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx+32], eax
; Line 5434
	mov	rax, QWORD PTR info$[rbp]
	mov	rcx, QWORD PTR info$[rbp]
	mov	ecx, DWORD PTR [rcx+16]
	cmp	DWORD PTR [rax+12], ecx
	jne	SHORT $LN27@stbi__bmp_
	mov	rax, QWORD PTR info$[rbp]
	mov	rcx, QWORD PTR info$[rbp]
	mov	ecx, DWORD PTR [rcx+20]
	cmp	DWORD PTR [rax+16], ecx
	jne	SHORT $LN27@stbi__bmp_
; Line 5436
	lea	rcx, OFFSET FLAT:??_C@_07IEJCHBDI@bad?5BMP@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN46@stbi__bmp_
	mov	DWORD PTR tv231[rbp], 0
	jmp	SHORT $LN47@stbi__bmp_
$LN46@stbi__bmp_:
	mov	DWORD PTR tv231[rbp], 0
$LN47@stbi__bmp_:
	movsxd	rax, DWORD PTR tv231[rbp]
	jmp	$LN1@stbi__bmp_
$LN27@stbi__bmp_:
; Line 5438
	jmp	SHORT $LN26@stbi__bmp_
$LN25@stbi__bmp_:
; Line 5439
	lea	rcx, OFFSET FLAT:??_C@_07IEJCHBDI@bad?5BMP@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN48@stbi__bmp_
	mov	DWORD PTR tv236[rbp], 0
	jmp	SHORT $LN49@stbi__bmp_
$LN48@stbi__bmp_:
	mov	DWORD PTR tv236[rbp], 0
$LN49@stbi__bmp_:
	movsxd	rax, DWORD PTR tv236[rbp]
	jmp	$LN1@stbi__bmp_
$LN26@stbi__bmp_:
$LN24@stbi__bmp_:
$LN21@stbi__bmp_:
; Line 5441
	jmp	$LN18@stbi__bmp_
$LN17@stbi__bmp_:
; Line 5444
	cmp	DWORD PTR hsz$[rbp], 108		; 0000006cH
	je	SHORT $LN28@stbi__bmp_
	cmp	DWORD PTR hsz$[rbp], 124		; 0000007cH
	je	SHORT $LN28@stbi__bmp_
; Line 5445
	lea	rcx, OFFSET FLAT:??_C@_07IEJCHBDI@bad?5BMP@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN50@stbi__bmp_
	mov	DWORD PTR tv243[rbp], 0
	jmp	SHORT $LN51@stbi__bmp_
$LN50@stbi__bmp_:
	mov	DWORD PTR tv243[rbp], 0
$LN51@stbi__bmp_:
	movsxd	rax, DWORD PTR tv243[rbp]
	jmp	$LN1@stbi__bmp_
$LN28@stbi__bmp_:
; Line 5446
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx+12], eax
; Line 5447
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx+16], eax
; Line 5448
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx+20], eax
; Line 5449
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	rcx, QWORD PTR info$[rbp]
	mov	DWORD PTR [rcx+24], eax
; Line 5450
	cmp	DWORD PTR compress$1[rbp], 3
	je	SHORT $LN29@stbi__bmp_
; Line 5451
	mov	edx, DWORD PTR compress$1[rbp]
	mov	rcx, QWORD PTR info$[rbp]
	call	?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z ; stbi__bmp_set_mask_defaults
$LN29@stbi__bmp_:
; Line 5452
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5453
	mov	DWORD PTR i$2[rbp], 0
	jmp	SHORT $LN4@stbi__bmp_
$LN2@stbi__bmp_:
	mov	eax, DWORD PTR i$2[rbp]
	inc	eax
	mov	DWORD PTR i$2[rbp], eax
$LN4@stbi__bmp_:
	cmp	DWORD PTR i$2[rbp], 12
	jge	SHORT $LN3@stbi__bmp_
; Line 5454
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	jmp	SHORT $LN2@stbi__bmp_
$LN3@stbi__bmp_:
; Line 5455
	cmp	DWORD PTR hsz$[rbp], 124		; 0000007cH
	jne	SHORT $LN30@stbi__bmp_
; Line 5456
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5457
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5458
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5459
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
$LN30@stbi__bmp_:
$LN18@stbi__bmp_:
$LN12@stbi__bmp_:
; Line 5463
	mov	eax, 1
$LN1@stbi__bmp_:
; Line 5464
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z ENDP ; stbi__bmp_parse_header
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z
_TEXT	SEGMENT
info$ = 224
compress$ = 232
?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z PROC ; stbi__bmp_set_mask_defaults, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5359
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5361
	cmp	DWORD PTR compress$[rbp], 3
	jne	SHORT $LN2@stbi__bmp_
; Line 5362
	mov	eax, 1
	jmp	$LN1@stbi__bmp_
$LN2@stbi__bmp_:
; Line 5364
	cmp	DWORD PTR compress$[rbp], 0
	jne	$LN3@stbi__bmp_
; Line 5365
	mov	rax, QWORD PTR info$[rbp]
	cmp	DWORD PTR [rax], 16
	jne	SHORT $LN4@stbi__bmp_
; Line 5366
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+12], 31744		; 00007c00H
; Line 5367
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+16], 992			; 000003e0H
; Line 5368
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+20], 31
	jmp	$LN5@stbi__bmp_
$LN4@stbi__bmp_:
; Line 5369
	mov	rax, QWORD PTR info$[rbp]
	cmp	DWORD PTR [rax], 32			; 00000020H
	jne	SHORT $LN6@stbi__bmp_
; Line 5370
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+12], 16711680		; 00ff0000H
; Line 5371
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+16], 65280		; 0000ff00H
; Line 5372
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+20], 255			; 000000ffH
; Line 5373
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+24], -16777216		; ff000000H
; Line 5374
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+28], 0
; Line 5375
	jmp	SHORT $LN7@stbi__bmp_
$LN6@stbi__bmp_:
; Line 5377
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+24], 0
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+20], 0
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+16], 0
	mov	rax, QWORD PTR info$[rbp]
	mov	DWORD PTR [rax+12], 0
$LN7@stbi__bmp_:
$LN5@stbi__bmp_:
; Line 5379
	mov	eax, 1
	jmp	SHORT $LN1@stbi__bmp_
$LN3@stbi__bmp_:
; Line 5381
	xor	eax, eax
$LN1@stbi__bmp_:
; Line 5382
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__bmp_set_mask_defaults@@YAHPEAUstbi__bmp_data@@H@Z ENDP ; stbi__bmp_set_mask_defaults
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__shiftsigned@@YAHIHH@Z
_TEXT	SEGMENT
v$ = 224
shift$ = 232
bits$ = 240
?stbi__shiftsigned@@YAHIHH@Z PROC			; stbi__shiftsigned, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5332
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5341
	cmp	DWORD PTR shift$[rbp], 0
	jge	SHORT $LN2@stbi__shif
; Line 5342
	mov	eax, DWORD PTR shift$[rbp]
	neg	eax
	movzx	ecx, al
	mov	eax, DWORD PTR v$[rbp]
	shl	eax, cl
	mov	DWORD PTR v$[rbp], eax
	jmp	SHORT $LN3@stbi__shif
$LN2@stbi__shif:
; Line 5344
	mov	eax, DWORD PTR shift$[rbp]
	movzx	ecx, al
	mov	eax, DWORD PTR v$[rbp]
	shr	eax, cl
	mov	DWORD PTR v$[rbp], eax
$LN3@stbi__shif:
; Line 5345
	cmp	DWORD PTR v$[rbp], 256			; 00000100H
	jb	SHORT $LN5@stbi__shif
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__shiftsigned@@YAHIHH@Z@4JA
	add	eax, 13
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1BA@EKLGALLJ@?$AAv?$AA?5?$AA?$DM?$AA?5?$AA2?$AA5?$AA6@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN5@stbi__shif:
; Line 5346
	mov	eax, 8
	sub	eax, DWORD PTR bits$[rbp]
	movzx	ecx, al
	mov	eax, DWORD PTR v$[rbp]
	shr	eax, cl
	mov	DWORD PTR v$[rbp], eax
; Line 5347
	cmp	DWORD PTR bits$[rbp], 0
	jl	SHORT $LN6@stbi__shif
	cmp	DWORD PTR bits$[rbp], 8
	jle	SHORT $LN7@stbi__shif
$LN6@stbi__shif:
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__shiftsigned@@YAHIHH@Z@4JA
	add	eax, 15
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CO@LIFEKNEP@?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA0?$AA?5?$AA?$CG?$AA?$CG?$AA?5?$AAb?$AAi@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN7@stbi__shif:
; Line 5348
	movsxd	rax, DWORD PTR bits$[rbp]
	lea	rcx, OFFSET FLAT:?mul_table@?1??stbi__shiftsigned@@YAHIHH@Z@4PAIA
	mov	edx, DWORD PTR v$[rbp]
	imul	edx, DWORD PTR [rcx+rax*4]
	mov	eax, edx
	movsxd	rcx, DWORD PTR bits$[rbp]
	lea	rdx, OFFSET FLAT:?shift_table@?1??stbi__shiftsigned@@YAHIHH@Z@4PAIA
	mov	ecx, DWORD PTR [rdx+rcx*4]
	sar	eax, cl
; Line 5349
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__shiftsigned@@YAHIHH@Z ENDP			; stbi__shiftsigned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__bitcount@@YAHI@Z
_TEXT	SEGMENT
a$ = 224
?stbi__bitcount@@YAHI@Z PROC				; stbi__bitcount, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5319
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5320
	mov	eax, DWORD PTR a$[rbp]
	and	eax, 1431655765				; 55555555H
	mov	ecx, DWORD PTR a$[rbp]
	shr	ecx, 1
	and	ecx, 1431655765				; 55555555H
	add	eax, ecx
	mov	DWORD PTR a$[rbp], eax
; Line 5321
	mov	eax, DWORD PTR a$[rbp]
	and	eax, 858993459				; 33333333H
	mov	ecx, DWORD PTR a$[rbp]
	shr	ecx, 2
	and	ecx, 858993459				; 33333333H
	add	eax, ecx
	mov	DWORD PTR a$[rbp], eax
; Line 5322
	mov	eax, DWORD PTR a$[rbp]
	shr	eax, 4
	mov	ecx, DWORD PTR a$[rbp]
	add	ecx, eax
	mov	eax, ecx
	and	eax, 252645135				; 0f0f0f0fH
	mov	DWORD PTR a$[rbp], eax
; Line 5323
	mov	eax, DWORD PTR a$[rbp]
	shr	eax, 8
	mov	ecx, DWORD PTR a$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR a$[rbp], eax
; Line 5324
	mov	eax, DWORD PTR a$[rbp]
	shr	eax, 16
	mov	ecx, DWORD PTR a$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR a$[rbp], eax
; Line 5325
	mov	eax, DWORD PTR a$[rbp]
	and	eax, 255				; 000000ffH
; Line 5326
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__bitcount@@YAHI@Z ENDP				; stbi__bitcount
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__high_bit@@YAHI@Z
_TEXT	SEGMENT
n$ = 4
z$ = 256
?stbi__high_bit@@YAHI@Z PROC				; stbi__high_bit, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5307
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5308
	mov	DWORD PTR n$[rbp], 0
; Line 5309
	cmp	DWORD PTR z$[rbp], 0
	jne	SHORT $LN2@stbi__high
	mov	eax, -1
	jmp	$LN1@stbi__high
$LN2@stbi__high:
; Line 5310
	cmp	DWORD PTR z$[rbp], 65536		; 00010000H
	jb	SHORT $LN3@stbi__high
	mov	eax, DWORD PTR n$[rbp]
	add	eax, 16
	mov	DWORD PTR n$[rbp], eax
	mov	eax, DWORD PTR z$[rbp]
	shr	eax, 16
	mov	DWORD PTR z$[rbp], eax
$LN3@stbi__high:
; Line 5311
	cmp	DWORD PTR z$[rbp], 256			; 00000100H
	jb	SHORT $LN4@stbi__high
	mov	eax, DWORD PTR n$[rbp]
	add	eax, 8
	mov	DWORD PTR n$[rbp], eax
	mov	eax, DWORD PTR z$[rbp]
	shr	eax, 8
	mov	DWORD PTR z$[rbp], eax
$LN4@stbi__high:
; Line 5312
	cmp	DWORD PTR z$[rbp], 16
	jb	SHORT $LN5@stbi__high
	mov	eax, DWORD PTR n$[rbp]
	add	eax, 4
	mov	DWORD PTR n$[rbp], eax
	mov	eax, DWORD PTR z$[rbp]
	shr	eax, 4
	mov	DWORD PTR z$[rbp], eax
$LN5@stbi__high:
; Line 5313
	cmp	DWORD PTR z$[rbp], 4
	jb	SHORT $LN6@stbi__high
	mov	eax, DWORD PTR n$[rbp]
	add	eax, 2
	mov	DWORD PTR n$[rbp], eax
	mov	eax, DWORD PTR z$[rbp]
	shr	eax, 2
	mov	DWORD PTR z$[rbp], eax
$LN6@stbi__high:
; Line 5314
	cmp	DWORD PTR z$[rbp], 2
	jb	SHORT $LN7@stbi__high
	mov	eax, DWORD PTR n$[rbp]
	inc	eax
	mov	DWORD PTR n$[rbp], eax
$LN7@stbi__high:
; Line 5315
	mov	eax, DWORD PTR n$[rbp]
$LN1@stbi__high:
; Line 5316
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__high_bit@@YAHI@Z ENDP				; stbi__high_bit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__bmp_test_raw@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
r$ = 4
sz$ = 36
tv83 = 244
s$ = 288
?stbi__bmp_test_raw@@YAHPEAUstbi__context@@@Z PROC	; stbi__bmp_test_raw, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5283
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5286
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 66					; 00000042H
	je	SHORT $LN2@stbi__bmp_
	xor	eax, eax
	jmp	$LN1@stbi__bmp_
$LN2@stbi__bmp_:
; Line 5287
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	cmp	eax, 77					; 0000004dH
	je	SHORT $LN3@stbi__bmp_
	xor	eax, eax
	jmp	SHORT $LN1@stbi__bmp_
$LN3@stbi__bmp_:
; Line 5288
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5289
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
; Line 5290
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
; Line 5291
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
; Line 5292
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	DWORD PTR sz$[rbp], eax
; Line 5293
	cmp	DWORD PTR sz$[rbp], 12
	je	SHORT $LN5@stbi__bmp_
	cmp	DWORD PTR sz$[rbp], 40			; 00000028H
	je	SHORT $LN5@stbi__bmp_
	cmp	DWORD PTR sz$[rbp], 56			; 00000038H
	je	SHORT $LN5@stbi__bmp_
	cmp	DWORD PTR sz$[rbp], 108			; 0000006cH
	je	SHORT $LN5@stbi__bmp_
	cmp	DWORD PTR sz$[rbp], 124			; 0000007cH
	je	SHORT $LN5@stbi__bmp_
	mov	DWORD PTR tv83[rbp], 0
	jmp	SHORT $LN6@stbi__bmp_
$LN5@stbi__bmp_:
	mov	DWORD PTR tv83[rbp], 1
$LN6@stbi__bmp_:
	mov	eax, DWORD PTR tv83[rbp]
	mov	DWORD PTR r$[rbp], eax
; Line 5294
	mov	eax, DWORD PTR r$[rbp]
$LN1@stbi__bmp_:
; Line 5295
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__bmp_test_raw@@YAHPEAUstbi__context@@@Z ENDP	; stbi__bmp_test_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z
_TEXT	SEGMENT
p$ = 224
x$ = 232
y$ = 240
comp$ = 248
?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z PROC	; stbi__png_info_raw, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5247
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5248
	xor	r8d, r8d
	mov	edx, 2
	mov	rcx, QWORD PTR p$[rbp]
	call	?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z ; stbi__parse_png_file
	test	eax, eax
	jne	SHORT $LN2@stbi__png_
; Line 5249
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5250
	xor	eax, eax
	jmp	SHORT $LN1@stbi__png_
$LN2@stbi__png_:
; Line 5252
	cmp	QWORD PTR x$[rbp], 0
	je	SHORT $LN3@stbi__png_
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR x$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx], eax
$LN3@stbi__png_:
; Line 5253
	cmp	QWORD PTR y$[rbp], 0
	je	SHORT $LN4@stbi__png_
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR y$[rbp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR [rcx], eax
$LN4@stbi__png_:
; Line 5254
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN5@stbi__png_
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR [rcx], eax
$LN5@stbi__png_:
; Line 5255
	mov	eax, 1
$LN1@stbi__png_:
; Line 5256
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z ENDP	; stbi__png_info_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__do_png@@YAPEAXPEAUstbi__png@@PEAH11HPEAUstbi__result_info@@@Z
_TEXT	SEGMENT
result$ = 8
tv85 = 212
tv69 = 212
p$ = 256
x$ = 264
y$ = 272
n$ = 280
req_comp$ = 288
ri$ = 296
?stbi__do_png@@YAPEAXPEAUstbi__png@@PEAH11HPEAUstbi__result_info@@@Z PROC ; stbi__do_png, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5200
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5201
	mov	QWORD PTR result$[rbp], 0
; Line 5202
	cmp	DWORD PTR req_comp$[rbp], 0
	jl	SHORT $LN3@stbi__do_p
	cmp	DWORD PTR req_comp$[rbp], 4
	jle	SHORT $LN2@stbi__do_p
$LN3@stbi__do_p:
	lea	rcx, OFFSET FLAT:??_C@_0N@KBPNPPBJ@bad?5req_comp@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN15@stbi__do_p
	mov	DWORD PTR tv69[rbp], 0
	jmp	SHORT $LN16@stbi__do_p
$LN15@stbi__do_p:
	mov	DWORD PTR tv69[rbp], 0
$LN16@stbi__do_p:
	movsxd	rax, DWORD PTR tv69[rbp]
	jmp	$LN1@stbi__do_p
$LN2@stbi__do_p:
; Line 5203
	mov	r8d, DWORD PTR req_comp$[rbp]
	xor	edx, edx
	mov	rcx, QWORD PTR p$[rbp]
	call	?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z ; stbi__parse_png_file
	test	eax, eax
	je	$LN4@stbi__do_p
; Line 5204
	mov	rax, QWORD PTR p$[rbp]
	cmp	DWORD PTR [rax+32], 8
	jg	SHORT $LN5@stbi__do_p
; Line 5205
	mov	rax, QWORD PTR ri$[rbp]
	mov	DWORD PTR [rax], 8
	jmp	SHORT $LN6@stbi__do_p
$LN5@stbi__do_p:
; Line 5206
	mov	rax, QWORD PTR p$[rbp]
	cmp	DWORD PTR [rax+32], 16
	jne	SHORT $LN7@stbi__do_p
; Line 5207
	mov	rax, QWORD PTR ri$[rbp]
	mov	DWORD PTR [rax], 16
	jmp	SHORT $LN8@stbi__do_p
$LN7@stbi__do_p:
; Line 5209
	lea	rcx, OFFSET FLAT:??_C@_0BF@NOEEEFMF@bad?5bits_per_channel@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN17@stbi__do_p
	mov	DWORD PTR tv85[rbp], 0
	jmp	SHORT $LN18@stbi__do_p
$LN17@stbi__do_p:
	mov	DWORD PTR tv85[rbp], 0
$LN18@stbi__do_p:
	movsxd	rax, DWORD PTR tv85[rbp]
	jmp	$LN1@stbi__do_p
$LN8@stbi__do_p:
$LN6@stbi__do_p:
; Line 5210
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR result$[rbp], rax
; Line 5211
	mov	rax, QWORD PTR p$[rbp]
	mov	QWORD PTR [rax+24], 0
; Line 5212
	cmp	DWORD PTR req_comp$[rbp], 0
	je	$LN9@stbi__do_p
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax+12]
	cmp	DWORD PTR req_comp$[rbp], eax
	je	$LN9@stbi__do_p
; Line 5213
	mov	rax, QWORD PTR ri$[rbp]
	cmp	DWORD PTR [rax], 8
	jne	SHORT $LN10@stbi__do_p
; Line 5214
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rdx, QWORD PTR p$[rbp]
	mov	rdx, QWORD PTR [rdx]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR [rcx]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, DWORD PTR [rdx+12]
	mov	rcx, QWORD PTR result$[rbp]
	call	?stbi__convert_format@@YAPEAEPEAEHHII@Z	; stbi__convert_format
	mov	QWORD PTR result$[rbp], rax
	jmp	SHORT $LN11@stbi__do_p
$LN10@stbi__do_p:
; Line 5216
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rdx, QWORD PTR p$[rbp]
	mov	rdx, QWORD PTR [rdx]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR [rcx]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, DWORD PTR [rdx+12]
	mov	rcx, QWORD PTR result$[rbp]
	call	?stbi__convert_format16@@YAPEAGPEAGHHII@Z ; stbi__convert_format16
	mov	QWORD PTR result$[rbp], rax
$LN11@stbi__do_p:
; Line 5217
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rax+12], ecx
; Line 5218
	cmp	QWORD PTR result$[rbp], 0
	jne	SHORT $LN12@stbi__do_p
	mov	rax, QWORD PTR result$[rbp]
	jmp	$LN1@stbi__do_p
$LN12@stbi__do_p:
$LN9@stbi__do_p:
; Line 5220
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR x$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx], eax
; Line 5221
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR y$[rbp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR [rcx], eax
; Line 5222
	cmp	QWORD PTR n$[rbp], 0
	je	SHORT $LN13@stbi__do_p
	mov	rax, QWORD PTR p$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR n$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR [rcx], eax
$LN13@stbi__do_p:
$LN4@stbi__do_p:
; Line 5224
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_free
	mov	rax, QWORD PTR p$[rbp]
	mov	QWORD PTR [rax+24], 0
; Line 5225
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_free
	mov	rax, QWORD PTR p$[rbp]
	mov	QWORD PTR [rax+16], 0
; Line 5226
	mov	rax, QWORD PTR p$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_free
	mov	rax, QWORD PTR p$[rbp]
	mov	QWORD PTR [rax+8], 0
; Line 5228
	mov	rax, QWORD PTR result$[rbp]
$LN1@stbi__do_p:
; Line 5229
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__do_png@@YAPEAXPEAUstbi__png@@PEAH11HPEAUstbi__result_info@@@Z ENDP ; stbi__do_png
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z
_TEXT	SEGMENT
palette$ = 16
pal_img_n$ = 1060
has_trans$ = 1092
tc$ = 1124
tc16$ = 1156
ioff$ = 1188
idata_limit$ = 1220
i$ = 1252
pal_len$ = 1284
first$ = 1316
k$ = 1348
interlace$ = 1380
color$ = 1412
is_iphone$ = 1444
s$ = 1480
c$8 = 1512
comp$9 = 1540
filter$10 = 1572
idata_limit_old$11 = 1604
p$12 = 1640
raw_len$13 = 1668
bpl$14 = 1700
tv453 = 2484
tv386 = 2484
tv337 = 2484
tv194 = 2484
tv78 = 2484
tv197 = 2488
__$ArrayPad$ = 2496
z$ = 2544
scan$ = 2552
req_comp$ = 2560
?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z PROC	; stbi__parse_png_file, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5024
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 2584				; 00000a18H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 438				; 000001b6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+2616]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5025
	mov	BYTE PTR pal_img_n$[rbp], 0
; Line 5026
	mov	BYTE PTR has_trans$[rbp], 0
	lea	rax, QWORD PTR tc$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 3
	rep stosb
; Line 5028
	mov	DWORD PTR ioff$[rbp], 0
	mov	DWORD PTR idata_limit$[rbp], 0
	mov	DWORD PTR pal_len$[rbp], 0
; Line 5029
	mov	DWORD PTR first$[rbp], 1
	mov	DWORD PTR interlace$[rbp], 0
	mov	DWORD PTR color$[rbp], 0
	mov	DWORD PTR is_iphone$[rbp], 0
; Line 5030
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR s$[rbp], rax
; Line 5032
	mov	rax, QWORD PTR z$[rbp]
	mov	QWORD PTR [rax+16], 0
; Line 5033
	mov	rax, QWORD PTR z$[rbp]
	mov	QWORD PTR [rax+8], 0
; Line 5034
	mov	rax, QWORD PTR z$[rbp]
	mov	QWORD PTR [rax+24], 0
; Line 5036
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__check_png_header@@YAHPEAUstbi__context@@@Z ; stbi__check_png_header
	test	eax, eax
	jne	SHORT $LN21@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN21@stbi__pars:
; Line 5038
	cmp	DWORD PTR scan$[rbp], 1
	jne	SHORT $LN22@stbi__pars
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN22@stbi__pars:
$LN2@stbi__pars:
; Line 5041
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z ; stbi__get_chunk_header
	mov	QWORD PTR c$8[rbp], rax
; Line 5042
	mov	eax, DWORD PTR c$8[rbp+4]
	mov	DWORD PTR tv78[rbp], eax
	cmp	DWORD PTR tv78[rbp], 1229472850		; 49484452H
	ja	SHORT $LN105@stbi__pars
	cmp	DWORD PTR tv78[rbp], 1229472850		; 49484452H
	je	SHORT $LN24@stbi__pars
	cmp	DWORD PTR tv78[rbp], 1130840649		; 43674249H
	je	SHORT $LN23@stbi__pars
	cmp	DWORD PTR tv78[rbp], 1229209940		; 49444154H
	je	$LN61@stbi__pars
	cmp	DWORD PTR tv78[rbp], 1229278788		; 49454e44H
	je	$LN70@stbi__pars
	jmp	$LN91@stbi__pars
$LN105@stbi__pars:
	cmp	DWORD PTR tv78[rbp], 1347179589		; 504c5445H
	je	$LN45@stbi__pars
	cmp	DWORD PTR tv78[rbp], 1951551059		; 74524e53H
	je	$LN49@stbi__pars
	jmp	$LN91@stbi__pars
$LN23@stbi__pars:
; Line 5044
	mov	DWORD PTR is_iphone$[rbp], 1
; Line 5045
	mov	edx, DWORD PTR c$8[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5046
	jmp	$LN5@stbi__pars
$LN24@stbi__pars:
; Line 5049
	cmp	DWORD PTR first$[rbp], 0
	jne	SHORT $LN25@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0O@KBHBNJOK@multiple?5IHDR@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN25@stbi__pars:
; Line 5050
	mov	DWORD PTR first$[rbp], 0
; Line 5051
	cmp	DWORD PTR c$8[rbp], 13
	je	SHORT $LN26@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0N@POJLKMKK@bad?5IHDR?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN26@stbi__pars:
; Line 5052
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 5053
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 5054
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+4], 16777216		; 01000000H
	jbe	SHORT $LN27@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN27@stbi__pars:
; Line 5055
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax], 16777216		; 01000000H
	jbe	SHORT $LN28@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN28@stbi__pars:
; Line 5056
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+32], eax
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+32], 1
	je	SHORT $LN29@stbi__pars
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+32], 2
	je	SHORT $LN29@stbi__pars
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+32], 4
	je	SHORT $LN29@stbi__pars
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+32], 8
	je	SHORT $LN29@stbi__pars
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+32], 16
	je	SHORT $LN29@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BE@EJHIPKNO@1?12?14?18?116?9bit?5only@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN29@stbi__pars:
; Line 5057
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR color$[rbp], eax
	cmp	DWORD PTR color$[rbp], 6
	jle	SHORT $LN30@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_09MBBNGCKB@bad?5ctype@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN30@stbi__pars:
; Line 5058
	cmp	DWORD PTR color$[rbp], 3
	jne	SHORT $LN31@stbi__pars
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+32], 16
	jne	SHORT $LN31@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_09MBBNGCKB@bad?5ctype@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN31@stbi__pars:
; Line 5059
	cmp	DWORD PTR color$[rbp], 3
	jne	SHORT $LN32@stbi__pars
	mov	BYTE PTR pal_img_n$[rbp], 3
	jmp	SHORT $LN33@stbi__pars
$LN32@stbi__pars:
	mov	eax, DWORD PTR color$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN34@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_09MBBNGCKB@bad?5ctype@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN34@stbi__pars:
$LN33@stbi__pars:
; Line 5060
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR comp$9[rbp], eax
	cmp	DWORD PTR comp$9[rbp], 0
	je	SHORT $LN35@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BA@MDMBDDFG@bad?5comp?5method@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN35@stbi__pars:
; Line 5061
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR filter$10[rbp], eax
	cmp	DWORD PTR filter$10[rbp], 0
	je	SHORT $LN36@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BC@GHLIKKMD@bad?5filter?5method@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN36@stbi__pars:
; Line 5062
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR interlace$[rbp], eax
	cmp	DWORD PTR interlace$[rbp], 1
	jle	SHORT $LN37@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BF@JCGDPBAA@bad?5interlace?5method@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN37@stbi__pars:
; Line 5063
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN39@stbi__pars
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+4], 0
	jne	SHORT $LN38@stbi__pars
$LN39@stbi__pars:
	lea	rcx, OFFSET FLAT:??_C@_0O@FNFBHCOO@0?9pixel?5image@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN38@stbi__pars:
; Line 5064
	movzx	eax, BYTE PTR pal_img_n$[rbp]
	test	eax, eax
	jne	$LN40@stbi__pars
; Line 5065
	mov	eax, DWORD PTR color$[rbp]
	and	eax, 2
	test	eax, eax
	je	SHORT $LN95@stbi__pars
	mov	DWORD PTR tv194[rbp], 3
	jmp	SHORT $LN96@stbi__pars
$LN95@stbi__pars:
	mov	DWORD PTR tv194[rbp], 1
$LN96@stbi__pars:
	mov	eax, DWORD PTR color$[rbp]
	and	eax, 4
	test	eax, eax
	je	SHORT $LN97@stbi__pars
	mov	DWORD PTR tv197[rbp], 1
	jmp	SHORT $LN98@stbi__pars
$LN97@stbi__pars:
	mov	DWORD PTR tv197[rbp], 0
$LN98@stbi__pars:
	mov	eax, DWORD PTR tv197[rbp]
	mov	ecx, DWORD PTR tv194[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+8], eax
; Line 5066
	xor	edx, edx
	mov	eax, 1073741824				; 40000000H
	mov	rcx, QWORD PTR s$[rbp]
	div	DWORD PTR [rcx]
	xor	edx, edx
	mov	rcx, QWORD PTR s$[rbp]
	div	DWORD PTR [rcx+8]
	mov	rcx, QWORD PTR s$[rbp]
	cmp	eax, DWORD PTR [rcx+4]
	jae	SHORT $LN42@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN42@stbi__pars:
; Line 5067
	cmp	DWORD PTR scan$[rbp], 2
	jne	SHORT $LN43@stbi__pars
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN43@stbi__pars:
; Line 5068
	jmp	SHORT $LN41@stbi__pars
$LN40@stbi__pars:
; Line 5071
	mov	rax, QWORD PTR s$[rbp]
	mov	DWORD PTR [rax+8], 1
; Line 5072
	xor	edx, edx
	mov	eax, 1073741824				; 40000000H
	mov	rcx, QWORD PTR s$[rbp]
	div	DWORD PTR [rcx]
	xor	edx, edx
	mov	ecx, 4
	div	ecx
	mov	rcx, QWORD PTR s$[rbp]
	cmp	eax, DWORD PTR [rcx+4]
	jae	SHORT $LN44@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN44@stbi__pars:
$LN41@stbi__pars:
; Line 5075
	jmp	$LN5@stbi__pars
$LN45@stbi__pars:
; Line 5079
	cmp	DWORD PTR first$[rbp], 0
	je	SHORT $LN46@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0P@JEAFOMAF@first?5not?5IHDR@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN46@stbi__pars:
; Line 5080
	cmp	DWORD PTR c$8[rbp], 768			; 00000300H
	jbe	SHORT $LN47@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0N@JCPAJAKB@invalid?5PLTE@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN47@stbi__pars:
; Line 5081
	xor	edx, edx
	mov	eax, DWORD PTR c$8[rbp]
	mov	ecx, 3
	div	ecx
	mov	DWORD PTR pal_len$[rbp], eax
; Line 5082
	imul	eax, DWORD PTR pal_len$[rbp], 3
	cmp	eax, DWORD PTR c$8[rbp]
	je	SHORT $LN48@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0N@JCPAJAKB@invalid?5PLTE@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN48@stbi__pars:
; Line 5083
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN9@stbi__pars
$LN7@stbi__pars:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN9@stbi__pars:
	mov	eax, DWORD PTR pal_len$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	SHORT $LN8@stbi__pars
; Line 5084
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	ecx, DWORD PTR i$[rbp]
	shl	ecx, 2
	mov	ecx, ecx
	mov	BYTE PTR palette$[rbp+rcx], al
; Line 5085
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	ecx, DWORD PTR i$[rbp]
	lea	ecx, DWORD PTR [rcx*4+1]
	mov	ecx, ecx
	mov	BYTE PTR palette$[rbp+rcx], al
; Line 5086
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	ecx, DWORD PTR i$[rbp]
	lea	ecx, DWORD PTR [rcx*4+2]
	mov	ecx, ecx
	mov	BYTE PTR palette$[rbp+rcx], al
; Line 5087
	mov	eax, DWORD PTR i$[rbp]
	lea	eax, DWORD PTR [rax*4+3]
	mov	eax, eax
	mov	BYTE PTR palette$[rbp+rax], 255		; 000000ffH
; Line 5088
	jmp	$LN7@stbi__pars
$LN8@stbi__pars:
; Line 5089
	jmp	$LN5@stbi__pars
$LN49@stbi__pars:
; Line 5093
	cmp	DWORD PTR first$[rbp], 0
	je	SHORT $LN50@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0P@JEAFOMAF@first?5not?5IHDR@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN50@stbi__pars:
; Line 5094
	mov	rax, QWORD PTR z$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN51@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BA@PCPJHDKJ@tRNS?5after?5IDAT@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN51@stbi__pars:
; Line 5095
	movzx	eax, BYTE PTR pal_img_n$[rbp]
	test	eax, eax
	je	$LN52@stbi__pars
; Line 5096
	cmp	DWORD PTR scan$[rbp], 2
	jne	SHORT $LN54@stbi__pars
	mov	rax, QWORD PTR s$[rbp]
	mov	DWORD PTR [rax+8], 4
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN54@stbi__pars:
; Line 5097
	cmp	DWORD PTR pal_len$[rbp], 0
	jne	SHORT $LN55@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BB@CEDNNLBG@tRNS?5before?5PLTE@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN55@stbi__pars:
; Line 5098
	mov	eax, DWORD PTR pal_len$[rbp]
	cmp	DWORD PTR c$8[rbp], eax
	jbe	SHORT $LN56@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0N@KDLCCKCH@bad?5tRNS?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN56@stbi__pars:
; Line 5099
	mov	BYTE PTR pal_img_n$[rbp], 4
; Line 5100
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN12@stbi__pars
$LN10@stbi__pars:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN12@stbi__pars:
	mov	eax, DWORD PTR c$8[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	SHORT $LN11@stbi__pars
; Line 5101
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	ecx, DWORD PTR i$[rbp]
	lea	ecx, DWORD PTR [rcx*4+3]
	mov	ecx, ecx
	mov	BYTE PTR palette$[rbp+rcx], al
	jmp	SHORT $LN10@stbi__pars
$LN11@stbi__pars:
; Line 5102
	jmp	$LN53@stbi__pars
$LN52@stbi__pars:
; Line 5103
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	and	eax, 1
	test	eax, eax
	jne	SHORT $LN57@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BA@ENDPGCHB@tRNS?5with?5alpha@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN57@stbi__pars:
; Line 5104
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	shl	eax, 1
	cmp	DWORD PTR c$8[rbp], eax
	je	SHORT $LN58@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0N@KDLCCKCH@bad?5tRNS?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN58@stbi__pars:
; Line 5105
	mov	BYTE PTR has_trans$[rbp], 1
; Line 5106
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+32], 16
	jne	SHORT $LN59@stbi__pars
; Line 5107
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN15@stbi__pars
$LN13@stbi__pars:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN15@stbi__pars:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN14@stbi__pars
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	WORD PTR tc16$[rbp+rcx*2], ax
	jmp	SHORT $LN13@stbi__pars
$LN14@stbi__pars:
; Line 5108
	jmp	SHORT $LN60@stbi__pars
$LN59@stbi__pars:
; Line 5109
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN18@stbi__pars
$LN16@stbi__pars:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN18@stbi__pars:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN17@stbi__pars
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	and	eax, 255				; 000000ffH
	movzx	eax, al
	mov	rcx, QWORD PTR z$[rbp]
	movsxd	rcx, DWORD PTR [rcx+32]
	lea	rdx, OFFSET FLAT:?stbi__depth_scale_table@@3QBEB
	movzx	ecx, BYTE PTR [rdx+rcx]
	imul	eax, ecx
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	BYTE PTR tc$[rbp+rcx], al
	jmp	SHORT $LN16@stbi__pars
$LN17@stbi__pars:
$LN60@stbi__pars:
$LN53@stbi__pars:
; Line 5112
	jmp	$LN5@stbi__pars
$LN61@stbi__pars:
; Line 5116
	cmp	DWORD PTR first$[rbp], 0
	je	SHORT $LN62@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0P@JEAFOMAF@first?5not?5IHDR@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN62@stbi__pars:
; Line 5117
	movzx	eax, BYTE PTR pal_img_n$[rbp]
	test	eax, eax
	je	SHORT $LN63@stbi__pars
	cmp	DWORD PTR pal_len$[rbp], 0
	jne	SHORT $LN63@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_07CKIELOEH@no?5PLTE@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN63@stbi__pars:
; Line 5118
	cmp	DWORD PTR scan$[rbp], 2
	jne	SHORT $LN64@stbi__pars
	movzx	eax, BYTE PTR pal_img_n$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+8], eax
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN64@stbi__pars:
; Line 5119
	mov	eax, DWORD PTR c$8[rbp]
	mov	ecx, DWORD PTR ioff$[rbp]
	add	ecx, eax
	mov	eax, ecx
	cmp	eax, DWORD PTR ioff$[rbp]
	jge	SHORT $LN65@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN65@stbi__pars:
; Line 5120
	mov	eax, DWORD PTR c$8[rbp]
	mov	ecx, DWORD PTR ioff$[rbp]
	add	ecx, eax
	mov	eax, ecx
	cmp	eax, DWORD PTR idata_limit$[rbp]
	jbe	$LN66@stbi__pars
; Line 5121
	mov	eax, DWORD PTR idata_limit$[rbp]
	mov	DWORD PTR idata_limit_old$11[rbp], eax
; Line 5123
	cmp	DWORD PTR idata_limit$[rbp], 0
	jne	SHORT $LN67@stbi__pars
	cmp	DWORD PTR c$8[rbp], 4096		; 00001000H
	jbe	SHORT $LN99@stbi__pars
	mov	eax, DWORD PTR c$8[rbp]
	mov	DWORD PTR tv337[rbp], eax
	jmp	SHORT $LN100@stbi__pars
$LN99@stbi__pars:
	mov	DWORD PTR tv337[rbp], 4096		; 00001000H
$LN100@stbi__pars:
	mov	eax, DWORD PTR tv337[rbp]
	mov	DWORD PTR idata_limit$[rbp], eax
$LN67@stbi__pars:
$LN19@stbi__pars:
; Line 5124
	mov	eax, DWORD PTR c$8[rbp]
	mov	ecx, DWORD PTR ioff$[rbp]
	add	ecx, eax
	mov	eax, ecx
	cmp	eax, DWORD PTR idata_limit$[rbp]
	jbe	SHORT $LN20@stbi__pars
; Line 5125
	mov	eax, DWORD PTR idata_limit$[rbp]
	shl	eax, 1
	mov	DWORD PTR idata_limit$[rbp], eax
	jmp	SHORT $LN19@stbi__pars
$LN20@stbi__pars:
; Line 5127
	mov	eax, DWORD PTR idata_limit$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_realloc
	mov	QWORD PTR p$12[rbp], rax
	cmp	QWORD PTR p$12[rbp], 0
	jne	SHORT $LN68@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN68@stbi__pars:
; Line 5128
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR p$12[rbp]
	mov	QWORD PTR [rax+8], rcx
$LN66@stbi__pars:
; Line 5130
	mov	eax, DWORD PTR ioff$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	add	rax, QWORD PTR [rcx+8]
	mov	r8d, DWORD PTR c$8[rbp]
	mov	rdx, rax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z ; stbi__getn
	test	eax, eax
	jne	SHORT $LN69@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_09MNNCNKEO@outofdata@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN69@stbi__pars:
; Line 5131
	mov	eax, DWORD PTR c$8[rbp]
	mov	ecx, DWORD PTR ioff$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR ioff$[rbp], eax
; Line 5132
	jmp	$LN5@stbi__pars
$LN70@stbi__pars:
; Line 5137
	cmp	DWORD PTR first$[rbp], 0
	je	SHORT $LN71@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0P@JEAFOMAF@first?5not?5IHDR@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN71@stbi__pars:
; Line 5138
	cmp	DWORD PTR scan$[rbp], 0
	je	SHORT $LN72@stbi__pars
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN72@stbi__pars:
; Line 5139
	mov	rax, QWORD PTR z$[rbp]
	cmp	QWORD PTR [rax+8], 0
	jne	SHORT $LN73@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_07MLPECBNA@no?5IDAT@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN73@stbi__pars:
; Line 5141
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx+32]
	add	eax, 7
	xor	edx, edx
	mov	ecx, 8
	div	ecx
	mov	DWORD PTR bpl$14[rbp], eax
; Line 5142
	mov	rax, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR bpl$14[rbp]
	imul	ecx, DWORD PTR [rax+4]
	mov	eax, ecx
	mov	rcx, QWORD PTR s$[rbp]
	imul	eax, DWORD PTR [rcx+8]
	mov	rcx, QWORD PTR s$[rbp]
	add	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR raw_len$13[rbp], eax
; Line 5143
	cmp	DWORD PTR is_iphone$[rbp], 0
	jne	SHORT $LN101@stbi__pars
	mov	DWORD PTR tv386[rbp], 1
	jmp	SHORT $LN102@stbi__pars
$LN101@stbi__pars:
	mov	DWORD PTR tv386[rbp], 0
$LN102@stbi__pars:
	mov	eax, DWORD PTR tv386[rbp]
	mov	DWORD PTR [rsp+32], eax
	lea	r9, QWORD PTR raw_len$13[rbp]
	mov	r8d, DWORD PTR raw_len$13[rbp]
	mov	edx, DWORD PTR ioff$[rbp]
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	stbi_zlib_decode_malloc_guesssize_headerflag
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+16], rax
; Line 5144
	mov	rax, QWORD PTR z$[rbp]
	cmp	QWORD PTR [rax+16], 0
	jne	SHORT $LN74@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN74@stbi__pars:
; Line 5145
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	QWORD PTR __imp_free
	mov	rax, QWORD PTR z$[rbp]
	mov	QWORD PTR [rax+8], 0
; Line 5146
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	inc	eax
	cmp	DWORD PTR req_comp$[rbp], eax
	jne	SHORT $LN78@stbi__pars
	cmp	DWORD PTR req_comp$[rbp], 3
	je	SHORT $LN78@stbi__pars
	movzx	eax, BYTE PTR pal_img_n$[rbp]
	test	eax, eax
	je	SHORT $LN77@stbi__pars
$LN78@stbi__pars:
	movzx	eax, BYTE PTR has_trans$[rbp]
	test	eax, eax
	je	SHORT $LN75@stbi__pars
$LN77@stbi__pars:
; Line 5147
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	inc	eax
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+12], eax
	jmp	SHORT $LN76@stbi__pars
$LN75@stbi__pars:
; Line 5149
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	mov	DWORD PTR [rax+12], ecx
$LN76@stbi__pars:
; Line 5150
	mov	eax, DWORD PTR interlace$[rbp]
	mov	DWORD PTR [rsp+48], eax
	mov	eax, DWORD PTR color$[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+32]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR s$[rbp]
	mov	r9d, DWORD PTR [rax+12]
	mov	r8d, DWORD PTR raw_len$13[rbp]
	mov	rax, QWORD PTR z$[rbp]
	mov	rdx, QWORD PTR [rax+16]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z ; stbi__create_png_image
	test	eax, eax
	jne	SHORT $LN79@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN79@stbi__pars:
; Line 5151
	movzx	eax, BYTE PTR has_trans$[rbp]
	test	eax, eax
	je	SHORT $LN80@stbi__pars
; Line 5152
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+32], 16
	jne	SHORT $LN81@stbi__pars
; Line 5153
	mov	rax, QWORD PTR s$[rbp]
	mov	r8d, DWORD PTR [rax+12]
	lea	rdx, QWORD PTR tc16$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z ; stbi__compute_transparency16
	test	eax, eax
	jne	SHORT $LN83@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN83@stbi__pars:
; Line 5154
	jmp	SHORT $LN82@stbi__pars
$LN81@stbi__pars:
; Line 5155
	mov	rax, QWORD PTR s$[rbp]
	mov	r8d, DWORD PTR [rax+12]
	lea	rdx, QWORD PTR tc$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z ; stbi__compute_transparency
	test	eax, eax
	jne	SHORT $LN84@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN84@stbi__pars:
$LN82@stbi__pars:
$LN80@stbi__pars:
; Line 5158
	cmp	DWORD PTR is_iphone$[rbp], 0
	je	SHORT $LN85@stbi__pars
	mov	eax, OFFSET FLAT:?stbi__de_iphone_flag_set@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	cmp	DWORD PTR [rax+rcx], 0
	je	SHORT $LN103@stbi__pars
	mov	eax, OFFSET FLAT:?stbi__de_iphone_flag_local@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	mov	DWORD PTR tv453[rbp], eax
	jmp	SHORT $LN104@stbi__pars
$LN103@stbi__pars:
	mov	eax, DWORD PTR ?stbi__de_iphone_flag_global@@3HA
	mov	DWORD PTR tv453[rbp], eax
$LN104@stbi__pars:
	cmp	DWORD PTR tv453[rbp], 0
	je	SHORT $LN85@stbi__pars
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+12], 2
	jle	SHORT $LN85@stbi__pars
; Line 5159
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__de_iphone@@YAXPEAUstbi__png@@@Z	; stbi__de_iphone
$LN85@stbi__pars:
; Line 5160
	movzx	eax, BYTE PTR pal_img_n$[rbp]
	test	eax, eax
	je	SHORT $LN86@stbi__pars
; Line 5162
	movzx	eax, BYTE PTR pal_img_n$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+8], eax
; Line 5163
	movzx	eax, BYTE PTR pal_img_n$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+12], eax
; Line 5164
	cmp	DWORD PTR req_comp$[rbp], 3
	jl	SHORT $LN88@stbi__pars
	mov	rax, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rax+12], ecx
$LN88@stbi__pars:
; Line 5165
	mov	rax, QWORD PTR s$[rbp]
	mov	r9d, DWORD PTR [rax+12]
	mov	r8d, DWORD PTR pal_len$[rbp]
	lea	rdx, QWORD PTR palette$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__expand_png_palette@@YAHPEAUstbi__png@@PEAEHH@Z ; stbi__expand_png_palette
	test	eax, eax
	jne	SHORT $LN89@stbi__pars
; Line 5166
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN89@stbi__pars:
	jmp	SHORT $LN87@stbi__pars
$LN86@stbi__pars:
; Line 5167
	movzx	eax, BYTE PTR has_trans$[rbp]
	test	eax, eax
	je	SHORT $LN90@stbi__pars
; Line 5169
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	inc	eax
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+8], eax
$LN90@stbi__pars:
$LN87@stbi__pars:
; Line 5171
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	QWORD PTR __imp_free
	mov	rax, QWORD PTR z$[rbp]
	mov	QWORD PTR [rax+16], 0
; Line 5173
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
; Line 5174
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN91@stbi__pars:
; Line 5179
	cmp	DWORD PTR first$[rbp], 0
	je	SHORT $LN92@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0P@JEAFOMAF@first?5not?5IHDR@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN92@stbi__pars:
; Line 5180
	mov	eax, DWORD PTR c$8[rbp+4]
	and	eax, 536870912				; 20000000H
	test	eax, eax
	jne	$LN93@stbi__pars
; Line 5184
	mov	eax, DWORD PTR c$8[rbp+4]
	shr	eax, 24
	and	eax, 255				; 000000ffH
	mov	ecx, 1
	imul	rcx, rcx, 0
	lea	rdx, OFFSET FLAT:?invalid_chunk@?JH@??stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z@4PADA
	mov	BYTE PTR [rdx+rcx], al
; Line 5185
	mov	eax, DWORD PTR c$8[rbp+4]
	shr	eax, 16
	and	eax, 255				; 000000ffH
	mov	ecx, 1
	imul	rcx, rcx, 1
	lea	rdx, OFFSET FLAT:?invalid_chunk@?JH@??stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z@4PADA
	mov	BYTE PTR [rdx+rcx], al
; Line 5186
	mov	eax, DWORD PTR c$8[rbp+4]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	ecx, 1
	imul	rcx, rcx, 2
	lea	rdx, OFFSET FLAT:?invalid_chunk@?JH@??stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z@4PADA
	mov	BYTE PTR [rdx+rcx], al
; Line 5187
	mov	eax, DWORD PTR c$8[rbp+4]
	and	eax, 255				; 000000ffH
	mov	ecx, 1
	imul	rcx, rcx, 3
	lea	rdx, OFFSET FLAT:?invalid_chunk@?JH@??stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z@4PADA
	mov	BYTE PTR [rdx+rcx], al
; Line 5189
	lea	rcx, OFFSET FLAT:?invalid_chunk@?JH@??stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z@4PADA
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__pars
$LN93@stbi__pars:
; Line 5191
	mov	edx, DWORD PTR c$8[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
$LN5@stbi__pars:
; Line 5195
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
; Line 5196
	jmp	$LN2@stbi__pars
$LN1@stbi__pars:
; Line 5197
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+2520]
	pop	rdi
	pop	rbp
	ret	0
?stbi__parse_png_file@@YAHPEAUstbi__png@@HH@Z ENDP	; stbi__parse_png_file
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__de_iphone@@YAXPEAUstbi__png@@@Z
_TEXT	SEGMENT
s$ = 8
i$ = 36
pixel_count$ = 68
p$ = 104
t$1 = 132
a$2 = 164
t$3 = 196
half$4 = 228
t$5 = 260
tv134 = 468
z$ = 512
?stbi__de_iphone@@YAXPEAUstbi__png@@@Z PROC		; stbi__de_iphone, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4979
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4980
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR s$[rbp], rax
; Line 4981
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR pixel_count$[rbp], eax
; Line 4982
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR p$[rbp], rax
; Line 4984
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+12], 3
	jne	SHORT $LN11@stbi__de_i
; Line 4985
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__de_i
$LN2@stbi__de_i:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__de_i:
	mov	eax, DWORD PTR pixel_count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	SHORT $LN3@stbi__de_i
; Line 4986
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR t$1[rbp], al
; Line 4987
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4988
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR p$[rbp]
	movzx	edx, BYTE PTR t$1[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 4989
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 3
	mov	QWORD PTR p$[rbp], rax
; Line 4990
	jmp	SHORT $LN2@stbi__de_i
$LN3@stbi__de_i:
; Line 4991
	jmp	$LN12@stbi__de_i
$LN11@stbi__de_i:
; Line 4992
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+12], 4
	je	SHORT $LN18@stbi__de_i
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__de_iphone@@YAXPEAUstbi__png@@@Z@4JA
	add	eax, 13
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CE@GKIDJEJM@?$AAs?$AA?9?$AA?$DO?$AAi?$AAm?$AAg?$AA_?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN18@stbi__de_i:
; Line 4993
	mov	eax, OFFSET FLAT:?stbi__unpremultiply_on_load_set@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	cmp	DWORD PTR [rax+rcx], 0
	je	SHORT $LN19@stbi__de_i
	mov	eax, OFFSET FLAT:?stbi__unpremultiply_on_load_local@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	mov	DWORD PTR tv134[rbp], eax
	jmp	SHORT $LN20@stbi__de_i
$LN19@stbi__de_i:
	mov	eax, DWORD PTR ?stbi__unpremultiply_on_load_global@@3HA
	mov	DWORD PTR tv134[rbp], eax
$LN20@stbi__de_i:
	cmp	DWORD PTR tv134[rbp], 0
	je	$LN13@stbi__de_i
; Line 4995
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN7@stbi__de_i
$LN5@stbi__de_i:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@stbi__de_i:
	mov	eax, DWORD PTR pixel_count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	$LN6@stbi__de_i
; Line 4996
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR a$2[rbp], al
; Line 4997
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR t$3[rbp], al
; Line 4998
	movzx	eax, BYTE PTR a$2[rbp]
	test	eax, eax
	je	$LN15@stbi__de_i
; Line 4999
	movzx	eax, BYTE PTR a$2[rbp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	BYTE PTR half$4[rbp], al
; Line 5000
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR half$4[rbp]
	add	eax, ecx
	movzx	ecx, BYTE PTR a$2[rbp]
	cdq
	idiv	ecx
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR p$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 5001
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR half$4[rbp]
	add	eax, ecx
	movzx	ecx, BYTE PTR a$2[rbp]
	cdq
	idiv	ecx
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR p$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 5002
	movzx	eax, BYTE PTR t$3[rbp]
	imul	eax, eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR half$4[rbp]
	add	eax, ecx
	movzx	ecx, BYTE PTR a$2[rbp]
	cdq
	idiv	ecx
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR p$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 5003
	jmp	SHORT $LN16@stbi__de_i
$LN15@stbi__de_i:
; Line 5004
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 5005
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR p$[rbp]
	movzx	edx, BYTE PTR t$3[rbp]
	mov	BYTE PTR [rcx+rax], dl
$LN16@stbi__de_i:
; Line 5007
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 4
	mov	QWORD PTR p$[rbp], rax
; Line 5008
	jmp	$LN5@stbi__de_i
$LN6@stbi__de_i:
; Line 5009
	jmp	SHORT $LN14@stbi__de_i
$LN13@stbi__de_i:
; Line 5011
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN10@stbi__de_i
$LN8@stbi__de_i:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN10@stbi__de_i:
	mov	eax, DWORD PTR pixel_count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	SHORT $LN9@stbi__de_i
; Line 5012
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR t$5[rbp], al
; Line 5013
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 5014
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR p$[rbp]
	movzx	edx, BYTE PTR t$5[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 5015
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 4
	mov	QWORD PTR p$[rbp], rax
; Line 5016
	jmp	SHORT $LN8@stbi__de_i
$LN9@stbi__de_i:
$LN14@stbi__de_i:
$LN12@stbi__de_i:
; Line 5019
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?stbi__de_iphone@@YAXPEAUstbi__png@@@Z ENDP		; stbi__de_iphone
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__unpremultiply_on_load_thread@@YAXH@Z
_TEXT	SEGMENT
flag_true_if_should_unpremultiply$ = 224
?stbi__unpremultiply_on_load_thread@@YAXH@Z PROC	; stbi__unpremultiply_on_load_thread, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4959
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4960
	mov	eax, OFFSET FLAT:?stbi__unpremultiply_on_load_local@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	edx, DWORD PTR flag_true_if_should_unpremultiply$[rbp]
	mov	DWORD PTR [rax+rcx], edx
; Line 4961
	mov	eax, OFFSET FLAT:?stbi__unpremultiply_on_load_set@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	DWORD PTR [rax+rcx], 1
; Line 4962
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__unpremultiply_on_load_thread@@YAXH@Z ENDP	; stbi__unpremultiply_on_load_thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__expand_png_palette@@YAHPEAUstbi__png@@PEAEHH@Z
_TEXT	SEGMENT
i$ = 4
pixel_count$ = 36
p$ = 72
temp_out$ = 104
orig$ = 136
n$1 = 164
n$2 = 196
a$ = 448
palette$ = 456
len$ = 464
pal_img_n$ = 472
?stbi__expand_png_palette@@YAHPEAUstbi__png@@PEAEHH@Z PROC ; stbi__expand_png_palette, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4902
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 456				; 000001c8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4903
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR pixel_count$[rbp], eax
; Line 4904
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR orig$[rbp], rax
; Line 4906
	xor	r8d, r8d
	mov	edx, DWORD PTR pal_img_n$[rbp]
	mov	ecx, DWORD PTR pixel_count$[rbp]
	call	?stbi__malloc_mad2@@YAPEAXHHH@Z		; stbi__malloc_mad2
	mov	QWORD PTR p$[rbp], rax
; Line 4907
	cmp	QWORD PTR p$[rbp], 0
	jne	SHORT $LN8@stbi__expa
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__expa
$LN8@stbi__expa:
; Line 4910
	mov	rax, QWORD PTR p$[rbp]
	mov	QWORD PTR temp_out$[rbp], rax
; Line 4912
	cmp	DWORD PTR pal_img_n$[rbp], 3
	jne	$LN9@stbi__expa
; Line 4913
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__expa
$LN2@stbi__expa:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__expa:
	mov	eax, DWORD PTR pixel_count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	$LN3@stbi__expa
; Line 4914
	mov	eax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR orig$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	shl	eax, 2
	mov	DWORD PTR n$1[rbp], eax
; Line 4915
	movsxd	rax, DWORD PTR n$1[rbp]
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR palette$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4916
	mov	eax, DWORD PTR n$1[rbp]
	inc	eax
	cdqe
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR palette$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4917
	mov	eax, DWORD PTR n$1[rbp]
	add	eax, 2
	cdqe
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR palette$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4918
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 3
	mov	QWORD PTR p$[rbp], rax
; Line 4919
	jmp	$LN2@stbi__expa
$LN3@stbi__expa:
; Line 4920
	jmp	$LN10@stbi__expa
$LN9@stbi__expa:
; Line 4921
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN7@stbi__expa
$LN5@stbi__expa:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@stbi__expa:
	mov	eax, DWORD PTR pixel_count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	$LN6@stbi__expa
; Line 4922
	mov	eax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR orig$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	shl	eax, 2
	mov	DWORD PTR n$2[rbp], eax
; Line 4923
	movsxd	rax, DWORD PTR n$2[rbp]
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR palette$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4924
	mov	eax, DWORD PTR n$2[rbp]
	inc	eax
	cdqe
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR palette$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4925
	mov	eax, DWORD PTR n$2[rbp]
	add	eax, 2
	cdqe
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR palette$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4926
	mov	eax, DWORD PTR n$2[rbp]
	add	eax, 3
	cdqe
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR p$[rbp]
	mov	r8, QWORD PTR palette$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4927
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 4
	mov	QWORD PTR p$[rbp], rax
; Line 4928
	jmp	$LN5@stbi__expa
$LN6@stbi__expa:
$LN10@stbi__expa:
; Line 4930
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_free
; Line 4931
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR temp_out$[rbp]
	mov	QWORD PTR [rax+24], rcx
; Line 4935
	mov	eax, 1
$LN1@stbi__expa:
; Line 4936
	lea	rsp, QWORD PTR [rbp+424]
	pop	rdi
	pop	rbp
	ret	0
?stbi__expand_png_palette@@YAHPEAUstbi__png@@PEAEHH@Z ENDP ; stbi__expand_png_palette
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z
_TEXT	SEGMENT
s$ = 8
i$ = 36
pixel_count$ = 68
p$ = 104
tv88 = 308
z$ = 352
tc$ = 360
out_n$ = 368
?stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z PROC ; stbi__compute_transparency16, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4877
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4878
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR s$[rbp], rax
; Line 4879
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR pixel_count$[rbp], eax
; Line 4880
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR p$[rbp], rax
; Line 4884
	cmp	DWORD PTR out_n$[rbp], 2
	je	SHORT $LN12@stbi__comp
	cmp	DWORD PTR out_n$[rbp], 4
	je	SHORT $LN12@stbi__comp
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z@4JA
	add	eax, 7
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@BMIDKOPK@?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@stbi__comp:
; Line 4886
	cmp	DWORD PTR out_n$[rbp], 2
	jne	$LN8@stbi__comp
; Line 4887
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__comp
$LN2@stbi__comp:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__comp:
	mov	eax, DWORD PTR pixel_count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	SHORT $LN3@stbi__comp
; Line 4888
	mov	eax, 2
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR tc$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx]
	cmp	eax, ecx
	jne	SHORT $LN13@stbi__comp
	mov	DWORD PTR tv88[rbp], 0
	jmp	SHORT $LN14@stbi__comp
$LN13@stbi__comp:
	mov	DWORD PTR tv88[rbp], 65535		; 0000ffffH
$LN14@stbi__comp:
	mov	eax, 2
	imul	rax, rax, 1
	mov	rcx, QWORD PTR p$[rbp]
	movzx	edx, WORD PTR tv88[rbp]
	mov	WORD PTR [rcx+rax], dx
; Line 4889
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 4
	mov	QWORD PTR p$[rbp], rax
; Line 4890
	jmp	SHORT $LN2@stbi__comp
$LN3@stbi__comp:
; Line 4891
	jmp	$LN9@stbi__comp
$LN8@stbi__comp:
; Line 4892
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN7@stbi__comp
$LN5@stbi__comp:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@stbi__comp:
	mov	eax, DWORD PTR pixel_count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	$LN6@stbi__comp
; Line 4893
	mov	eax, 2
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR tc$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx]
	cmp	eax, ecx
	jne	SHORT $LN10@stbi__comp
	mov	eax, 2
	imul	rax, rax, 1
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR tc$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx]
	cmp	eax, ecx
	jne	SHORT $LN10@stbi__comp
	mov	eax, 2
	imul	rax, rax, 2
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	mov	ecx, 2
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR tc$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx]
	cmp	eax, ecx
	jne	SHORT $LN10@stbi__comp
; Line 4894
	mov	eax, 2
	imul	rax, rax, 3
	xor	ecx, ecx
	mov	rdx, QWORD PTR p$[rbp]
	mov	WORD PTR [rdx+rax], cx
$LN10@stbi__comp:
; Line 4895
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 8
	mov	QWORD PTR p$[rbp], rax
; Line 4896
	jmp	$LN5@stbi__comp
$LN6@stbi__comp:
$LN9@stbi__comp:
; Line 4898
	mov	eax, 1
; Line 4899
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?stbi__compute_transparency16@@YAHPEAUstbi__png@@QEAGH@Z ENDP ; stbi__compute_transparency16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z
_TEXT	SEGMENT
s$ = 8
i$ = 36
pixel_count$ = 68
p$ = 104
tv88 = 308
z$ = 352
tc$ = 360
out_n$ = 368
?stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z PROC ; stbi__compute_transparency, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4852
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4853
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR s$[rbp], rax
; Line 4854
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR pixel_count$[rbp], eax
; Line 4855
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR p$[rbp], rax
; Line 4859
	cmp	DWORD PTR out_n$[rbp], 2
	je	SHORT $LN12@stbi__comp
	cmp	DWORD PTR out_n$[rbp], 4
	je	SHORT $LN12@stbi__comp
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z@4JA
	add	eax, 7
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DC@BMIDKOPK@?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA2?$AA?5?$AA?$HM?$AA?$HM?$AA?5?$AAo@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@stbi__comp:
; Line 4861
	cmp	DWORD PTR out_n$[rbp], 2
	jne	$LN8@stbi__comp
; Line 4862
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__comp
$LN2@stbi__comp:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__comp:
	mov	eax, DWORD PTR pixel_count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	SHORT $LN3@stbi__comp
; Line 4863
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR tc$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	cmp	eax, ecx
	jne	SHORT $LN13@stbi__comp
	mov	DWORD PTR tv88[rbp], 0
	jmp	SHORT $LN14@stbi__comp
$LN13@stbi__comp:
	mov	DWORD PTR tv88[rbp], 255		; 000000ffH
$LN14@stbi__comp:
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR p$[rbp]
	movzx	edx, BYTE PTR tv88[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 4864
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 2
	mov	QWORD PTR p$[rbp], rax
; Line 4865
	jmp	SHORT $LN2@stbi__comp
$LN3@stbi__comp:
; Line 4866
	jmp	$LN9@stbi__comp
$LN8@stbi__comp:
; Line 4867
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN7@stbi__comp
$LN5@stbi__comp:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@stbi__comp:
	mov	eax, DWORD PTR pixel_count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	$LN6@stbi__comp
; Line 4868
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR tc$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	cmp	eax, ecx
	jne	SHORT $LN10@stbi__comp
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR tc$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	cmp	eax, ecx
	jne	SHORT $LN10@stbi__comp
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR p$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR tc$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	cmp	eax, ecx
	jne	SHORT $LN10@stbi__comp
; Line 4869
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR p$[rbp]
	mov	BYTE PTR [rcx+rax], 0
$LN10@stbi__comp:
; Line 4870
	mov	rax, QWORD PTR p$[rbp]
	add	rax, 4
	mov	QWORD PTR p$[rbp], rax
; Line 4871
	jmp	$LN5@stbi__comp
$LN6@stbi__comp:
$LN9@stbi__comp:
; Line 4873
	mov	eax, 1
; Line 4874
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?stbi__compute_transparency@@YAHPEAUstbi__png@@QEAEH@Z ENDP ; stbi__compute_transparency
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z
_TEXT	SEGMENT
bytes$ = 4
out_bytes$ = 36
final$ = 72
p$ = 100
xorig$7 = 136
yorig$8 = 200
xspc$9 = 264
yspc$10 = 328
i$11 = 388
j$12 = 420
x$13 = 452
y$14 = 484
img_len$15 = 516
out_y$16 = 548
out_x$17 = 580
tv65 = 980
tv280 = 984
a$ = 1024
image_data$ = 1032
image_data_len$ = 1040
out_n$ = 1048
depth$ = 1056
color$ = 1064
interlaced$ = 1072
?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z PROC ; stbi__create_png_image, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4807
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1064				; 00000428H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1096]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4808
	cmp	DWORD PTR depth$[rbp], 16
	jne	SHORT $LN16@stbi__crea
	mov	DWORD PTR tv65[rbp], 2
	jmp	SHORT $LN17@stbi__crea
$LN16@stbi__crea:
	mov	DWORD PTR tv65[rbp], 1
$LN17@stbi__crea:
	mov	eax, DWORD PTR tv65[rbp]
	mov	DWORD PTR bytes$[rbp], eax
; Line 4809
	mov	eax, DWORD PTR out_n$[rbp]
	imul	eax, DWORD PTR bytes$[rbp]
	mov	DWORD PTR out_bytes$[rbp], eax
; Line 4812
	cmp	DWORD PTR interlaced$[rbp], 0
	jne	SHORT $LN11@stbi__crea
; Line 4813
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	edx, DWORD PTR color$[rbp]
	mov	DWORD PTR [rsp+56], edx
	mov	edx, DWORD PTR depth$[rbp]
	mov	DWORD PTR [rsp+48], edx
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR [rsp+40], eax
	mov	eax, DWORD PTR [rcx]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR out_n$[rbp]
	mov	r8d, DWORD PTR image_data_len$[rbp]
	mov	rdx, QWORD PTR image_data$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z ; stbi__create_png_image_raw
	jmp	$LN1@stbi__crea
$LN11@stbi__crea:
; Line 4816
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR [rcx]
	xor	r9d, r9d
	mov	r8d, DWORD PTR out_bytes$[rbp]
	mov	edx, DWORD PTR [rax+4]
	mov	ecx, DWORD PTR [rcx]
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	mov	QWORD PTR final$[rbp], rax
; Line 4817
	cmp	QWORD PTR final$[rbp], 0
	jne	SHORT $LN12@stbi__crea
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__crea
$LN12@stbi__crea:
; Line 4818
	mov	DWORD PTR p$[rbp], 0
	jmp	SHORT $LN4@stbi__crea
$LN2@stbi__crea:
	mov	eax, DWORD PTR p$[rbp]
	inc	eax
	mov	DWORD PTR p$[rbp], eax
$LN4@stbi__crea:
	cmp	DWORD PTR p$[rbp], 7
	jge	$LN3@stbi__crea
; Line 4819
	mov	DWORD PTR xorig$7[rbp], 0
	mov	DWORD PTR xorig$7[rbp+4], 4
	mov	DWORD PTR xorig$7[rbp+8], 0
	mov	DWORD PTR xorig$7[rbp+12], 2
	mov	DWORD PTR xorig$7[rbp+16], 0
	mov	DWORD PTR xorig$7[rbp+20], 1
	mov	DWORD PTR xorig$7[rbp+24], 0
; Line 4820
	mov	DWORD PTR yorig$8[rbp], 0
	mov	DWORD PTR yorig$8[rbp+4], 0
	mov	DWORD PTR yorig$8[rbp+8], 4
	mov	DWORD PTR yorig$8[rbp+12], 0
	mov	DWORD PTR yorig$8[rbp+16], 2
	mov	DWORD PTR yorig$8[rbp+20], 0
	mov	DWORD PTR yorig$8[rbp+24], 1
; Line 4821
	mov	DWORD PTR xspc$9[rbp], 8
	mov	DWORD PTR xspc$9[rbp+4], 8
	mov	DWORD PTR xspc$9[rbp+8], 4
	mov	DWORD PTR xspc$9[rbp+12], 4
	mov	DWORD PTR xspc$9[rbp+16], 2
	mov	DWORD PTR xspc$9[rbp+20], 2
	mov	DWORD PTR xspc$9[rbp+24], 1
; Line 4822
	mov	DWORD PTR yspc$10[rbp], 8
	mov	DWORD PTR yspc$10[rbp+4], 8
	mov	DWORD PTR yspc$10[rbp+8], 8
	mov	DWORD PTR yspc$10[rbp+12], 4
	mov	DWORD PTR yspc$10[rbp+16], 4
	mov	DWORD PTR yspc$10[rbp+20], 2
	mov	DWORD PTR yspc$10[rbp+24], 2
; Line 4825
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR p$[rbp]
	mov	ecx, DWORD PTR xorig$7[rbp+rcx*4]
	mov	eax, DWORD PTR [rax]
	sub	eax, ecx
	movsxd	rcx, DWORD PTR p$[rbp]
	mov	ecx, DWORD PTR xspc$9[rbp+rcx*4]
	lea	eax, DWORD PTR [rax+rcx-1]
	movsxd	rcx, DWORD PTR p$[rbp]
	xor	edx, edx
	div	DWORD PTR xspc$9[rbp+rcx*4]
	mov	DWORD PTR x$13[rbp], eax
; Line 4826
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	movsxd	rcx, DWORD PTR p$[rbp]
	mov	ecx, DWORD PTR yorig$8[rbp+rcx*4]
	mov	eax, DWORD PTR [rax+4]
	sub	eax, ecx
	movsxd	rcx, DWORD PTR p$[rbp]
	mov	ecx, DWORD PTR yspc$10[rbp+rcx*4]
	lea	eax, DWORD PTR [rax+rcx-1]
	movsxd	rcx, DWORD PTR p$[rbp]
	xor	edx, edx
	div	DWORD PTR yspc$10[rbp+rcx*4]
	mov	DWORD PTR y$14[rbp], eax
; Line 4827
	cmp	DWORD PTR x$13[rbp], 0
	je	$LN13@stbi__crea
	cmp	DWORD PTR y$14[rbp], 0
	je	$LN13@stbi__crea
; Line 4828
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax+8]
	imul	eax, DWORD PTR x$13[rbp]
	imul	eax, DWORD PTR depth$[rbp]
	add	eax, 7
	sar	eax, 3
	inc	eax
	imul	eax, DWORD PTR y$14[rbp]
	mov	DWORD PTR img_len$15[rbp], eax
; Line 4829
	mov	eax, DWORD PTR color$[rbp]
	mov	DWORD PTR [rsp+56], eax
	mov	eax, DWORD PTR depth$[rbp]
	mov	DWORD PTR [rsp+48], eax
	mov	eax, DWORD PTR y$14[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	eax, DWORD PTR x$13[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR out_n$[rbp]
	mov	r8d, DWORD PTR image_data_len$[rbp]
	mov	rdx, QWORD PTR image_data$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z ; stbi__create_png_image_raw
	test	eax, eax
	jne	SHORT $LN14@stbi__crea
; Line 4830
	mov	rcx, QWORD PTR final$[rbp]
	call	QWORD PTR __imp_free
; Line 4831
	xor	eax, eax
	jmp	$LN1@stbi__crea
$LN14@stbi__crea:
; Line 4833
	mov	DWORD PTR j$12[rbp], 0
	jmp	SHORT $LN7@stbi__crea
$LN5@stbi__crea:
	mov	eax, DWORD PTR j$12[rbp]
	inc	eax
	mov	DWORD PTR j$12[rbp], eax
$LN7@stbi__crea:
	mov	eax, DWORD PTR y$14[rbp]
	cmp	DWORD PTR j$12[rbp], eax
	jge	$LN6@stbi__crea
; Line 4834
	mov	DWORD PTR i$11[rbp], 0
	jmp	SHORT $LN10@stbi__crea
$LN8@stbi__crea:
	mov	eax, DWORD PTR i$11[rbp]
	inc	eax
	mov	DWORD PTR i$11[rbp], eax
$LN10@stbi__crea:
	mov	eax, DWORD PTR x$13[rbp]
	cmp	DWORD PTR i$11[rbp], eax
	jge	$LN9@stbi__crea
; Line 4835
	movsxd	rax, DWORD PTR p$[rbp]
	mov	ecx, DWORD PTR j$12[rbp]
	imul	ecx, DWORD PTR yspc$10[rbp+rax*4]
	mov	eax, ecx
	movsxd	rcx, DWORD PTR p$[rbp]
	add	eax, DWORD PTR yorig$8[rbp+rcx*4]
	mov	DWORD PTR out_y$16[rbp], eax
; Line 4836
	movsxd	rax, DWORD PTR p$[rbp]
	mov	ecx, DWORD PTR i$11[rbp]
	imul	ecx, DWORD PTR xspc$9[rbp+rax*4]
	mov	eax, ecx
	movsxd	rcx, DWORD PTR p$[rbp]
	add	eax, DWORD PTR xorig$7[rbp+rcx*4]
	mov	DWORD PTR out_x$17[rbp], eax
; Line 4837
	movsxd	rax, DWORD PTR out_bytes$[rbp]
	mov	ecx, DWORD PTR j$12[rbp]
	imul	ecx, DWORD PTR x$13[rbp]
	add	ecx, DWORD PTR i$11[rbp]
	imul	ecx, DWORD PTR out_bytes$[rbp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR a$[rbp]
	add	rcx, QWORD PTR [rdx+24]
	mov	rdx, QWORD PTR a$[rbp]
	mov	rdx, QWORD PTR [rdx]
	mov	r8d, DWORD PTR out_y$16[rbp]
	imul	r8d, DWORD PTR [rdx]
	mov	edx, r8d
	imul	edx, DWORD PTR out_bytes$[rbp]
	mov	edx, edx
	mov	r8, QWORD PTR final$[rbp]
	add	r8, rdx
	mov	rdx, r8
	mov	r8d, DWORD PTR out_x$17[rbp]
	imul	r8d, DWORD PTR out_bytes$[rbp]
	movsxd	r8, r8d
	add	rdx, r8
	mov	QWORD PTR tv280[rbp], rdx
	mov	r8, rax
	mov	rdx, rcx
	mov	rax, QWORD PTR tv280[rbp]
	mov	rcx, rax
	call	memcpy
; Line 4839
	jmp	$LN8@stbi__crea
$LN9@stbi__crea:
; Line 4840
	jmp	$LN5@stbi__crea
$LN6@stbi__crea:
; Line 4841
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_free
; Line 4842
	mov	eax, DWORD PTR img_len$15[rbp]
	mov	rcx, QWORD PTR image_data$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR image_data$[rbp], rax
; Line 4843
	mov	eax, DWORD PTR img_len$15[rbp]
	mov	ecx, DWORD PTR image_data_len$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR image_data_len$[rbp], eax
$LN13@stbi__crea:
; Line 4845
	jmp	$LN2@stbi__crea
$LN3@stbi__crea:
; Line 4846
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR final$[rbp]
	mov	QWORD PTR [rax+24], rcx
; Line 4848
	mov	eax, 1
$LN1@stbi__crea:
; Line 4849
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	lea	rsp, QWORD PTR [rbp+1000]
	pop	rdi
	pop	rbp
	ret	0
?stbi__create_png_image@@YAHPEAUstbi__png@@PEAEIHHHH@Z ENDP ; stbi__create_png_image
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z
_TEXT	SEGMENT
bytes$ = 4
s$ = 40
i$ = 68
j$ = 100
stride$ = 132
img_len$ = 164
img_width_bytes$ = 196
k$ = 228
img_n$ = 260
output_bytes$ = 292
filter_bytes$ = 324
width$ = 356
cur$1 = 392
prior$2 = 424
filter$3 = 452
nk$4 = 484
cur$5 = 520
in$6 = 552
scale$7 = 580
q$8 = 612
cur$9 = 648
cur16$10 = 680
tv670 = 1076
tv622 = 1076
tv550 = 1076
tv417 = 1076
tv394 = 1076
tv346 = 1076
tv277 = 1076
tv219 = 1076
tv171 = 1076
tv150 = 1076
tv65 = 1076
tv567 = 1080
tv363 = 1080
a$ = 1120
raw$ = 1128
raw_len$ = 1136
out_n$ = 1144
x$ = 1152
y$ = 1160
depth$ = 1168
color$ = 1176
?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z PROC ; stbi__create_png_image_raw, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4595
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1128				; 00000468H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4596
	cmp	DWORD PTR depth$[rbp], 16
	jne	SHORT $LN159@stbi__crea
	mov	DWORD PTR tv65[rbp], 2
	jmp	SHORT $LN160@stbi__crea
$LN159@stbi__crea:
	mov	DWORD PTR tv65[rbp], 1
$LN160@stbi__crea:
	mov	eax, DWORD PTR tv65[rbp]
	mov	DWORD PTR bytes$[rbp], eax
; Line 4597
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR s$[rbp], rax
; Line 4598
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR out_n$[rbp]
	imul	eax, DWORD PTR bytes$[rbp]
	mov	DWORD PTR stride$[rbp], eax
; Line 4601
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR img_n$[rbp], eax
; Line 4603
	mov	eax, DWORD PTR out_n$[rbp]
	imul	eax, DWORD PTR bytes$[rbp]
	mov	DWORD PTR output_bytes$[rbp], eax
; Line 4604
	mov	eax, DWORD PTR img_n$[rbp]
	imul	eax, DWORD PTR bytes$[rbp]
	mov	DWORD PTR filter_bytes$[rbp], eax
; Line 4605
	mov	eax, DWORD PTR x$[rbp]
	mov	DWORD PTR width$[rbp], eax
; Line 4607
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR out_n$[rbp], eax
	je	SHORT $LN161@stbi__crea
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	inc	eax
	cmp	DWORD PTR out_n$[rbp], eax
	je	SHORT $LN161@stbi__crea
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z@4JA
	add	eax, 12
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1FC@ICDHLHK@?$AAo?$AAu?$AAt?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAs?$AA?9?$AA?$DO?$AAi?$AAm?$AAg@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN161@stbi__crea:
; Line 4608
	xor	r9d, r9d
	mov	r8d, DWORD PTR output_bytes$[rbp]
	mov	edx, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	mov	rcx, QWORD PTR a$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 4609
	mov	rax, QWORD PTR a$[rbp]
	cmp	QWORD PTR [rax+24], 0
	jne	SHORT $LN98@stbi__crea
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__crea
$LN98@stbi__crea:
; Line 4611
	mov	r9d, 7
	mov	r8d, DWORD PTR depth$[rbp]
	mov	edx, DWORD PTR x$[rbp]
	mov	ecx, DWORD PTR img_n$[rbp]
	call	?stbi__mad3sizes_valid@@YAHHHHH@Z	; stbi__mad3sizes_valid
	test	eax, eax
	jne	SHORT $LN99@stbi__crea
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__crea
$LN99@stbi__crea:
; Line 4612
	mov	eax, DWORD PTR img_n$[rbp]
	imul	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR depth$[rbp]
	add	eax, 7
	shr	eax, 3
	mov	DWORD PTR img_width_bytes$[rbp], eax
; Line 4613
	mov	eax, DWORD PTR img_width_bytes$[rbp]
	inc	eax
	imul	eax, DWORD PTR y$[rbp]
	mov	DWORD PTR img_len$[rbp], eax
; Line 4618
	mov	eax, DWORD PTR img_len$[rbp]
	cmp	DWORD PTR raw_len$[rbp], eax
	jae	SHORT $LN100@stbi__crea
	lea	rcx, OFFSET FLAT:??_C@_0BC@BHMPBBMG@not?5enough?5pixels@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__crea
$LN100@stbi__crea:
; Line 4620
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN4@stbi__crea
$LN2@stbi__crea:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN4@stbi__crea:
	mov	eax, DWORD PTR y$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jae	$LN3@stbi__crea
; Line 4621
	mov	eax, DWORD PTR stride$[rbp]
	imul	eax, DWORD PTR j$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR a$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	QWORD PTR cur$1[rbp], rax
; Line 4623
	mov	rax, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv150[rbp], eax
	mov	rax, QWORD PTR raw$[rbp]
	inc	rax
	mov	QWORD PTR raw$[rbp], rax
	mov	eax, DWORD PTR tv150[rbp]
	mov	DWORD PTR filter$3[rbp], eax
; Line 4625
	cmp	DWORD PTR filter$3[rbp], 4
	jle	SHORT $LN101@stbi__crea
; Line 4626
	lea	rcx, OFFSET FLAT:??_C@_0P@FBBCPGMN@invalid?5filter@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__crea
$LN101@stbi__crea:
; Line 4628
	cmp	DWORD PTR depth$[rbp], 8
	jge	SHORT $LN102@stbi__crea
; Line 4629
	mov	eax, DWORD PTR x$[rbp]
	cmp	DWORD PTR img_width_bytes$[rbp], eax
	jbe	SHORT $LN103@stbi__crea
	lea	rcx, OFFSET FLAT:??_C@_0O@MKGNGALN@invalid?5width@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__crea
$LN103@stbi__crea:
; Line 4630
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR out_n$[rbp]
	sub	eax, DWORD PTR img_width_bytes$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
; Line 4631
	mov	DWORD PTR filter_bytes$[rbp], 1
; Line 4632
	mov	eax, DWORD PTR img_width_bytes$[rbp]
	mov	DWORD PTR width$[rbp], eax
$LN102@stbi__crea:
; Line 4634
	mov	eax, DWORD PTR stride$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
; Line 4637
	cmp	DWORD PTR j$[rbp], 0
	jne	SHORT $LN104@stbi__crea
	movsxd	rax, DWORD PTR filter$3[rbp]
	lea	rcx, OFFSET FLAT:?first_row_filter@@3PAEA
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR filter$3[rbp], eax
$LN104@stbi__crea:
; Line 4640
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN7@stbi__crea
$LN5@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN7@stbi__crea:
	mov	eax, DWORD PTR filter_bytes$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	$LN6@stbi__crea
; Line 4641
	mov	eax, DWORD PTR filter$3[rbp]
	mov	DWORD PTR tv171[rbp], eax
	cmp	DWORD PTR tv171[rbp], 6
	ja	$LN8@stbi__crea
	movsxd	rax, DWORD PTR tv171[rbp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN168@stbi__crea[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN105@stbi__crea:
; Line 4642
	movsxd	rax, DWORD PTR k$[rbp]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	r8, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN8@stbi__crea
$LN106@stbi__crea:
; Line 4643
	movsxd	rax, DWORD PTR k$[rbp]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	r8, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN8@stbi__crea
$LN107@stbi__crea:
; Line 4644
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR prior$2[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN8@stbi__crea
$LN108@stbi__crea:
; Line 4645
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR prior$2[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	sar	ecx, 1
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN8@stbi__crea
$LN109@stbi__crea:
; Line 4646
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv219[rbp], eax
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR prior$2[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	xor	r8d, r8d
	mov	edx, ecx
	xor	ecx, ecx
	call	?stbi__paeth@@YAHHHH@Z			; stbi__paeth
	mov	ecx, DWORD PTR tv219[rbp]
	add	ecx, eax
	mov	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN8@stbi__crea
$LN110@stbi__crea:
; Line 4647
	movsxd	rax, DWORD PTR k$[rbp]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	r8, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN8@stbi__crea
$LN111@stbi__crea:
; Line 4648
	movsxd	rax, DWORD PTR k$[rbp]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	r8, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
$LN8@stbi__crea:
; Line 4650
	jmp	$LN5@stbi__crea
$LN6@stbi__crea:
; Line 4652
	cmp	DWORD PTR depth$[rbp], 8
	jne	SHORT $LN112@stbi__crea
; Line 4653
	mov	eax, DWORD PTR out_n$[rbp]
	cmp	DWORD PTR img_n$[rbp], eax
	je	SHORT $LN114@stbi__crea
; Line 4654
	movsxd	rax, DWORD PTR img_n$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
$LN114@stbi__crea:
; Line 4655
	movsxd	rax, DWORD PTR img_n$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
; Line 4656
	movsxd	rax, DWORD PTR out_n$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
; Line 4657
	movsxd	rax, DWORD PTR out_n$[rbp]
	mov	rcx, QWORD PTR prior$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
	jmp	$LN113@stbi__crea
$LN112@stbi__crea:
; Line 4658
	cmp	DWORD PTR depth$[rbp], 16
	jne	$LN115@stbi__crea
; Line 4659
	mov	eax, DWORD PTR out_n$[rbp]
	cmp	DWORD PTR img_n$[rbp], eax
	je	SHORT $LN117@stbi__crea
; Line 4660
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 4661
	mov	eax, DWORD PTR filter_bytes$[rbp]
	inc	eax
	cdqe
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
$LN117@stbi__crea:
; Line 4663
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
; Line 4664
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
; Line 4665
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR prior$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
; Line 4666
	jmp	SHORT $LN116@stbi__crea
$LN115@stbi__crea:
; Line 4667
	mov	rax, QWORD PTR raw$[rbp]
	inc	rax
	mov	QWORD PTR raw$[rbp], rax
; Line 4668
	mov	rax, QWORD PTR cur$1[rbp]
	inc	rax
	mov	QWORD PTR cur$1[rbp], rax
; Line 4669
	mov	rax, QWORD PTR prior$2[rbp]
	inc	rax
	mov	QWORD PTR prior$2[rbp], rax
$LN116@stbi__crea:
$LN113@stbi__crea:
; Line 4673
	cmp	DWORD PTR depth$[rbp], 8
	jl	SHORT $LN120@stbi__crea
	mov	eax, DWORD PTR out_n$[rbp]
	cmp	DWORD PTR img_n$[rbp], eax
	jne	$LN118@stbi__crea
$LN120@stbi__crea:
; Line 4674
	mov	eax, DWORD PTR width$[rbp]
	dec	eax
	imul	eax, DWORD PTR filter_bytes$[rbp]
	mov	DWORD PTR nk$4[rbp], eax
; Line 4678
	mov	eax, DWORD PTR filter$3[rbp]
	mov	DWORD PTR tv277[rbp], eax
	cmp	DWORD PTR tv277[rbp], 6
	ja	$LN10@stbi__crea
	movsxd	rax, DWORD PTR tv277[rbp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN167@stbi__crea[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN121@stbi__crea:
; Line 4680
	movsxd	rax, DWORD PTR nk$4[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR raw$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	call	memcpy
	jmp	$LN10@stbi__crea
$LN122@stbi__crea:
; Line 4681
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN14@stbi__crea
$LN12@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN14@stbi__crea:
	mov	eax, DWORD PTR nk$4[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN13@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, DWORD PTR filter_bytes$[rbp]
	mov	edx, DWORD PTR k$[rbp]
	sub	edx, ecx
	mov	ecx, edx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN12@stbi__crea
$LN13@stbi__crea:
	jmp	$LN10@stbi__crea
$LN123@stbi__crea:
; Line 4682
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN17@stbi__crea
$LN15@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN17@stbi__crea:
	mov	eax, DWORD PTR nk$4[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN16@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR prior$2[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN15@stbi__crea
$LN16@stbi__crea:
	jmp	$LN10@stbi__crea
$LN124@stbi__crea:
; Line 4683
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN20@stbi__crea
$LN18@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN20@stbi__crea:
	mov	eax, DWORD PTR nk$4[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN19@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR prior$2[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	edx, DWORD PTR filter_bytes$[rbp]
	mov	r8d, DWORD PTR k$[rbp]
	sub	r8d, edx
	mov	edx, r8d
	movsxd	rdx, edx
	mov	r8, QWORD PTR cur$1[rbp]
	movzx	edx, BYTE PTR [r8+rdx]
	add	ecx, edx
	sar	ecx, 1
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN18@stbi__crea
$LN19@stbi__crea:
	jmp	$LN10@stbi__crea
$LN125@stbi__crea:
; Line 4684
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN23@stbi__crea
$LN21@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN23@stbi__crea:
	mov	eax, DWORD PTR nk$4[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	$LN22@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv346[rbp], eax
	mov	ecx, DWORD PTR filter_bytes$[rbp]
	mov	edx, DWORD PTR k$[rbp]
	sub	edx, ecx
	mov	ecx, edx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR prior$2[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	movsxd	rdx, DWORD PTR k$[rbp]
	mov	r8, QWORD PTR prior$2[rbp]
	movzx	edx, BYTE PTR [r8+rdx]
	mov	r8d, DWORD PTR filter_bytes$[rbp]
	mov	r9d, DWORD PTR k$[rbp]
	sub	r9d, r8d
	mov	r8d, r9d
	movsxd	r8, r8d
	mov	r9, QWORD PTR cur$1[rbp]
	movzx	r8d, BYTE PTR [r9+r8]
	mov	DWORD PTR tv363[rbp], r8d
	mov	r8d, ecx
	mov	ecx, DWORD PTR tv363[rbp]
	call	?stbi__paeth@@YAHHHH@Z			; stbi__paeth
	mov	ecx, DWORD PTR tv346[rbp]
	add	ecx, eax
	mov	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN21@stbi__crea
$LN22@stbi__crea:
	jmp	$LN10@stbi__crea
$LN126@stbi__crea:
; Line 4685
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN26@stbi__crea
$LN24@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN26@stbi__crea:
	mov	eax, DWORD PTR nk$4[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN25@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, DWORD PTR filter_bytes$[rbp]
	mov	edx, DWORD PTR k$[rbp]
	sub	edx, ecx
	mov	ecx, edx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	sar	ecx, 1
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN24@stbi__crea
$LN25@stbi__crea:
	jmp	$LN10@stbi__crea
$LN127@stbi__crea:
; Line 4686
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN29@stbi__crea
$LN27@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN29@stbi__crea:
	mov	eax, DWORD PTR nk$4[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN28@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv394[rbp], eax
	mov	ecx, DWORD PTR filter_bytes$[rbp]
	mov	edx, DWORD PTR k$[rbp]
	sub	edx, ecx
	mov	ecx, edx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	xor	r8d, r8d
	xor	edx, edx
	call	?stbi__paeth@@YAHHHH@Z			; stbi__paeth
	mov	ecx, DWORD PTR tv394[rbp]
	add	ecx, eax
	mov	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN27@stbi__crea
$LN28@stbi__crea:
$LN10@stbi__crea:
; Line 4689
	movsxd	rax, DWORD PTR nk$4[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
; Line 4690
	jmp	$LN119@stbi__crea
$LN118@stbi__crea:
; Line 4691
	mov	eax, DWORD PTR img_n$[rbp]
	inc	eax
	cmp	eax, DWORD PTR out_n$[rbp]
	je	SHORT $LN162@stbi__crea
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z@4JA
	add	eax, 96					; 00000060H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CC@CPJBBDGC@?$AAi?$AAm?$AAg?$AA_?$AAn?$AA?$CL?$AA1?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAo?$AAu?$AAt?$AA_@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN162@stbi__crea:
; Line 4696
	mov	eax, DWORD PTR filter$3[rbp]
	mov	DWORD PTR tv417[rbp], eax
	cmp	DWORD PTR tv417[rbp], 6
	ja	$LN30@stbi__crea
	movsxd	rax, DWORD PTR tv417[rbp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN166@stbi__crea[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN128@stbi__crea:
; Line 4697
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN34@stbi__crea
$LN32@stbi__crea:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR prior$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
$LN34@stbi__crea:
	cmp	DWORD PTR i$[rbp], 1
	jb	SHORT $LN33@stbi__crea
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN37@stbi__crea
$LN35@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN37@stbi__crea:
	mov	eax, DWORD PTR filter_bytes$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN36@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	r8, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN35@stbi__crea
$LN36@stbi__crea:
	jmp	$LN32@stbi__crea
$LN33@stbi__crea:
	jmp	$LN30@stbi__crea
$LN129@stbi__crea:
; Line 4698
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN40@stbi__crea
$LN38@stbi__crea:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR prior$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
$LN40@stbi__crea:
	cmp	DWORD PTR i$[rbp], 1
	jb	SHORT $LN39@stbi__crea
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN43@stbi__crea
$LN41@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN43@stbi__crea:
	mov	eax, DWORD PTR filter_bytes$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN42@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, DWORD PTR output_bytes$[rbp]
	mov	edx, DWORD PTR k$[rbp]
	sub	edx, ecx
	mov	ecx, edx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN41@stbi__crea
$LN42@stbi__crea:
	jmp	$LN38@stbi__crea
$LN39@stbi__crea:
	jmp	$LN30@stbi__crea
$LN130@stbi__crea:
; Line 4699
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN46@stbi__crea
$LN44@stbi__crea:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR prior$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
$LN46@stbi__crea:
	cmp	DWORD PTR i$[rbp], 1
	jb	SHORT $LN45@stbi__crea
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN49@stbi__crea
$LN47@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN49@stbi__crea:
	mov	eax, DWORD PTR filter_bytes$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN48@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR prior$2[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN47@stbi__crea
$LN48@stbi__crea:
	jmp	$LN44@stbi__crea
$LN45@stbi__crea:
	jmp	$LN30@stbi__crea
$LN131@stbi__crea:
; Line 4700
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN52@stbi__crea
$LN50@stbi__crea:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR prior$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
$LN52@stbi__crea:
	cmp	DWORD PTR i$[rbp], 1
	jb	$LN51@stbi__crea
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN55@stbi__crea
$LN53@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN55@stbi__crea:
	mov	eax, DWORD PTR filter_bytes$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN54@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR prior$2[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	edx, DWORD PTR output_bytes$[rbp]
	mov	r8d, DWORD PTR k$[rbp]
	sub	r8d, edx
	mov	edx, r8d
	movsxd	rdx, edx
	mov	r8, QWORD PTR cur$1[rbp]
	movzx	edx, BYTE PTR [r8+rdx]
	add	ecx, edx
	sar	ecx, 1
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN53@stbi__crea
$LN54@stbi__crea:
	jmp	$LN50@stbi__crea
$LN51@stbi__crea:
	jmp	$LN30@stbi__crea
$LN132@stbi__crea:
; Line 4701
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN58@stbi__crea
$LN56@stbi__crea:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR prior$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
$LN58@stbi__crea:
	cmp	DWORD PTR i$[rbp], 1
	jb	$LN57@stbi__crea
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN61@stbi__crea
$LN59@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN61@stbi__crea:
	mov	eax, DWORD PTR filter_bytes$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	$LN60@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv550[rbp], eax
	mov	ecx, DWORD PTR output_bytes$[rbp]
	mov	edx, DWORD PTR k$[rbp]
	sub	edx, ecx
	mov	ecx, edx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR prior$2[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	movsxd	rdx, DWORD PTR k$[rbp]
	mov	r8, QWORD PTR prior$2[rbp]
	movzx	edx, BYTE PTR [r8+rdx]
	mov	r8d, DWORD PTR output_bytes$[rbp]
	mov	r9d, DWORD PTR k$[rbp]
	sub	r9d, r8d
	mov	r8d, r9d
	movsxd	r8, r8d
	mov	r9, QWORD PTR cur$1[rbp]
	movzx	r8d, BYTE PTR [r9+r8]
	mov	DWORD PTR tv567[rbp], r8d
	mov	r8d, ecx
	mov	ecx, DWORD PTR tv567[rbp]
	call	?stbi__paeth@@YAHHHH@Z			; stbi__paeth
	mov	ecx, DWORD PTR tv550[rbp]
	add	ecx, eax
	mov	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN59@stbi__crea
$LN60@stbi__crea:
	jmp	$LN56@stbi__crea
$LN57@stbi__crea:
	jmp	$LN30@stbi__crea
$LN133@stbi__crea:
; Line 4702
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN64@stbi__crea
$LN62@stbi__crea:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR prior$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
$LN64@stbi__crea:
	cmp	DWORD PTR i$[rbp], 1
	jb	SHORT $LN63@stbi__crea
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN67@stbi__crea
$LN65@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN67@stbi__crea:
	mov	eax, DWORD PTR filter_bytes$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN66@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, DWORD PTR output_bytes$[rbp]
	mov	edx, DWORD PTR k$[rbp]
	sub	edx, ecx
	mov	ecx, edx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	sar	ecx, 1
	add	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN65@stbi__crea
$LN66@stbi__crea:
	jmp	$LN62@stbi__crea
$LN63@stbi__crea:
	jmp	$LN30@stbi__crea
$LN134@stbi__crea:
; Line 4703
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN70@stbi__crea
$LN68@stbi__crea:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	movsxd	rax, DWORD PTR filter_bytes$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR raw$[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR prior$2[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR prior$2[rbp], rax
$LN70@stbi__crea:
	cmp	DWORD PTR i$[rbp], 1
	jb	$LN69@stbi__crea
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN73@stbi__crea
$LN71@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN73@stbi__crea:
	mov	eax, DWORD PTR filter_bytes$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN72@stbi__crea
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR raw$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv622[rbp], eax
	mov	ecx, DWORD PTR output_bytes$[rbp]
	mov	edx, DWORD PTR k$[rbp]
	sub	edx, ecx
	mov	ecx, edx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	xor	r8d, r8d
	xor	edx, edx
	call	?stbi__paeth@@YAHHHH@Z			; stbi__paeth
	mov	ecx, DWORD PTR tv622[rbp]
	add	ecx, eax
	mov	eax, ecx
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN71@stbi__crea
$LN72@stbi__crea:
	jmp	$LN68@stbi__crea
$LN69@stbi__crea:
$LN30@stbi__crea:
; Line 4709
	cmp	DWORD PTR depth$[rbp], 16
	jne	SHORT $LN135@stbi__crea
; Line 4710
	mov	eax, DWORD PTR stride$[rbp]
	imul	eax, DWORD PTR j$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR a$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	QWORD PTR cur$1[rbp], rax
; Line 4711
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN76@stbi__crea
$LN74@stbi__crea:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	movsxd	rax, DWORD PTR output_bytes$[rbp]
	mov	rcx, QWORD PTR cur$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR cur$1[rbp], rax
$LN76@stbi__crea:
	mov	eax, DWORD PTR x$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	SHORT $LN75@stbi__crea
; Line 4712
	mov	eax, DWORD PTR filter_bytes$[rbp]
	inc	eax
	cdqe
	mov	rcx, QWORD PTR cur$1[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 4713
	jmp	SHORT $LN74@stbi__crea
$LN75@stbi__crea:
$LN135@stbi__crea:
$LN119@stbi__crea:
; Line 4716
	jmp	$LN2@stbi__crea
$LN3@stbi__crea:
; Line 4721
	cmp	DWORD PTR depth$[rbp], 8
	jge	$LN136@stbi__crea
; Line 4722
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN79@stbi__crea
$LN77@stbi__crea:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN79@stbi__crea:
	mov	eax, DWORD PTR y$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jae	$LN78@stbi__crea
; Line 4723
	mov	eax, DWORD PTR stride$[rbp]
	imul	eax, DWORD PTR j$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR a$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	QWORD PTR cur$5[rbp], rax
; Line 4724
	mov	eax, DWORD PTR stride$[rbp]
	imul	eax, DWORD PTR j$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, DWORD PTR x$[rbp]
	imul	ecx, DWORD PTR out_n$[rbp]
	mov	ecx, ecx
	add	rax, rcx
	mov	ecx, DWORD PTR img_width_bytes$[rbp]
	sub	rax, rcx
	mov	QWORD PTR in$6[rbp], rax
; Line 4727
	cmp	DWORD PTR color$[rbp], 0
	jne	SHORT $LN163@stbi__crea
	movsxd	rax, DWORD PTR depth$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__depth_scale_table@@3QBEB
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv670[rbp], eax
	jmp	SHORT $LN164@stbi__crea
$LN163@stbi__crea:
	mov	DWORD PTR tv670[rbp], 1
$LN164@stbi__crea:
	movzx	eax, BYTE PTR tv670[rbp]
	mov	BYTE PTR scale$7[rbp], al
; Line 4735
	cmp	DWORD PTR depth$[rbp], 4
	jne	$LN138@stbi__crea
; Line 4736
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR img_n$[rbp]
	mov	DWORD PTR k$[rbp], eax
	jmp	SHORT $LN82@stbi__crea
$LN80@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	sub	eax, 2
	mov	DWORD PTR k$[rbp], eax
	mov	rax, QWORD PTR in$6[rbp]
	inc	rax
	mov	QWORD PTR in$6[rbp], rax
$LN82@stbi__crea:
	cmp	DWORD PTR k$[rbp], 2
	jl	SHORT $LN81@stbi__crea
; Line 4737
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 4
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4738
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	and	ecx, 15
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4739
	jmp	$LN80@stbi__crea
$LN81@stbi__crea:
; Line 4740
	cmp	DWORD PTR k$[rbp], 0
	jle	SHORT $LN140@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 4
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN140@stbi__crea:
	jmp	$LN139@stbi__crea
$LN138@stbi__crea:
; Line 4741
	cmp	DWORD PTR depth$[rbp], 2
	jne	$LN141@stbi__crea
; Line 4742
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR img_n$[rbp]
	mov	DWORD PTR k$[rbp], eax
	jmp	SHORT $LN85@stbi__crea
$LN83@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	sub	eax, 4
	mov	DWORD PTR k$[rbp], eax
	mov	rax, QWORD PTR in$6[rbp]
	inc	rax
	mov	QWORD PTR in$6[rbp], rax
$LN85@stbi__crea:
	cmp	DWORD PTR k$[rbp], 4
	jl	$LN84@stbi__crea
; Line 4743
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 6
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4744
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 4
	and	ecx, 3
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4745
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 2
	and	ecx, 3
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4746
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	and	ecx, 3
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4747
	jmp	$LN83@stbi__crea
$LN84@stbi__crea:
; Line 4748
	cmp	DWORD PTR k$[rbp], 0
	jle	SHORT $LN143@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 6
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN143@stbi__crea:
; Line 4749
	cmp	DWORD PTR k$[rbp], 1
	jle	SHORT $LN144@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 4
	and	ecx, 3
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN144@stbi__crea:
; Line 4750
	cmp	DWORD PTR k$[rbp], 2
	jle	SHORT $LN145@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 2
	and	ecx, 3
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN145@stbi__crea:
	jmp	$LN142@stbi__crea
$LN141@stbi__crea:
; Line 4751
	cmp	DWORD PTR depth$[rbp], 1
	jne	$LN146@stbi__crea
; Line 4752
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR img_n$[rbp]
	mov	DWORD PTR k$[rbp], eax
	jmp	SHORT $LN88@stbi__crea
$LN86@stbi__crea:
	mov	eax, DWORD PTR k$[rbp]
	sub	eax, 8
	mov	DWORD PTR k$[rbp], eax
	mov	rax, QWORD PTR in$6[rbp]
	inc	rax
	mov	QWORD PTR in$6[rbp], rax
$LN88@stbi__crea:
	cmp	DWORD PTR k$[rbp], 8
	jl	$LN87@stbi__crea
; Line 4753
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 7
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4754
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 6
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4755
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 5
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4756
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 4
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4757
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 3
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4758
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 2
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4759
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 1
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4760
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
; Line 4761
	jmp	$LN86@stbi__crea
$LN87@stbi__crea:
; Line 4762
	cmp	DWORD PTR k$[rbp], 0
	jle	SHORT $LN147@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 7
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN147@stbi__crea:
; Line 4763
	cmp	DWORD PTR k$[rbp], 1
	jle	SHORT $LN148@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 6
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN148@stbi__crea:
; Line 4764
	cmp	DWORD PTR k$[rbp], 2
	jle	SHORT $LN149@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 5
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN149@stbi__crea:
; Line 4765
	cmp	DWORD PTR k$[rbp], 3
	jle	SHORT $LN150@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 4
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN150@stbi__crea:
; Line 4766
	cmp	DWORD PTR k$[rbp], 4
	jle	SHORT $LN151@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 3
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN151@stbi__crea:
; Line 4767
	cmp	DWORD PTR k$[rbp], 5
	jle	SHORT $LN152@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 2
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN152@stbi__crea:
; Line 4768
	cmp	DWORD PTR k$[rbp], 6
	jle	SHORT $LN153@stbi__crea
	movzx	eax, BYTE PTR scale$7[rbp]
	mov	rcx, QWORD PTR in$6[rbp]
	movzx	ecx, BYTE PTR [rcx]
	sar	ecx, 1
	and	ecx, 1
	imul	eax, ecx
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR cur$5[rbp]
	inc	rax
	mov	QWORD PTR cur$5[rbp], rax
$LN153@stbi__crea:
$LN146@stbi__crea:
$LN142@stbi__crea:
$LN139@stbi__crea:
; Line 4770
	mov	eax, DWORD PTR out_n$[rbp]
	cmp	DWORD PTR img_n$[rbp], eax
	je	$LN154@stbi__crea
; Line 4773
	mov	eax, DWORD PTR stride$[rbp]
	imul	eax, DWORD PTR j$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR a$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	QWORD PTR cur$5[rbp], rax
; Line 4774
	cmp	DWORD PTR img_n$[rbp], 1
	jne	SHORT $LN155@stbi__crea
; Line 4775
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR q$8[rbp], eax
	jmp	SHORT $LN91@stbi__crea
$LN89@stbi__crea:
	mov	eax, DWORD PTR q$8[rbp]
	dec	eax
	mov	DWORD PTR q$8[rbp], eax
$LN91@stbi__crea:
	cmp	DWORD PTR q$8[rbp], 0
	jl	SHORT $LN90@stbi__crea
; Line 4776
	mov	eax, DWORD PTR q$8[rbp]
	lea	eax, DWORD PTR [rax+rax+1]
	cdqe
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 4777
	movsxd	rax, DWORD PTR q$8[rbp]
	mov	ecx, DWORD PTR q$8[rbp]
	add	ecx, ecx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$5[rbp]
	mov	r8, QWORD PTR cur$5[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4778
	jmp	SHORT $LN89@stbi__crea
$LN90@stbi__crea:
; Line 4779
	jmp	$LN156@stbi__crea
$LN155@stbi__crea:
; Line 4780
	cmp	DWORD PTR img_n$[rbp], 3
	je	SHORT $LN165@stbi__crea
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z@4JA
	add	eax, 185				; 000000b9H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1BG@FLOPDKAN@?$AAi?$AAm?$AAg?$AA_?$AAn?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AA3@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN165@stbi__crea:
; Line 4781
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR q$8[rbp], eax
	jmp	SHORT $LN94@stbi__crea
$LN92@stbi__crea:
	mov	eax, DWORD PTR q$8[rbp]
	dec	eax
	mov	DWORD PTR q$8[rbp], eax
$LN94@stbi__crea:
	cmp	DWORD PTR q$8[rbp], 0
	jl	$LN93@stbi__crea
; Line 4782
	mov	eax, DWORD PTR q$8[rbp]
	lea	eax, DWORD PTR [rax*4+3]
	cdqe
	mov	rcx, QWORD PTR cur$5[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 4783
	imul	eax, DWORD PTR q$8[rbp], 3
	add	eax, 2
	cdqe
	mov	ecx, DWORD PTR q$8[rbp]
	lea	ecx, DWORD PTR [rcx*4+2]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$5[rbp]
	mov	r8, QWORD PTR cur$5[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4784
	imul	eax, DWORD PTR q$8[rbp], 3
	inc	eax
	cdqe
	mov	ecx, DWORD PTR q$8[rbp]
	lea	ecx, DWORD PTR [rcx*4+1]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$5[rbp]
	mov	r8, QWORD PTR cur$5[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4785
	imul	eax, DWORD PTR q$8[rbp], 3
	cdqe
	mov	ecx, DWORD PTR q$8[rbp]
	shl	ecx, 2
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR cur$5[rbp]
	mov	r8, QWORD PTR cur$5[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 4786
	jmp	$LN92@stbi__crea
$LN93@stbi__crea:
$LN156@stbi__crea:
$LN154@stbi__crea:
; Line 4789
	jmp	$LN77@stbi__crea
$LN78@stbi__crea:
; Line 4790
	jmp	$LN137@stbi__crea
$LN136@stbi__crea:
	cmp	DWORD PTR depth$[rbp], 16
	jne	$LN157@stbi__crea
; Line 4795
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR cur$9[rbp], rax
; Line 4796
	mov	rax, QWORD PTR cur$9[rbp]
	mov	QWORD PTR cur16$10[rbp], rax
; Line 4798
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN97@stbi__crea
$LN95@stbi__crea:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR cur16$10[rbp]
	add	rax, 2
	mov	QWORD PTR cur16$10[rbp], rax
	mov	rax, QWORD PTR cur$9[rbp]
	add	rax, 2
	mov	QWORD PTR cur$9[rbp], rax
$LN97@stbi__crea:
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR y$[rbp]
	imul	eax, DWORD PTR out_n$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	SHORT $LN96@stbi__crea
; Line 4799
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR cur$9[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	shl	eax, 8
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR cur$9[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	or	eax, ecx
	mov	rcx, QWORD PTR cur16$10[rbp]
	mov	WORD PTR [rcx], ax
; Line 4800
	jmp	SHORT $LN95@stbi__crea
$LN96@stbi__crea:
$LN157@stbi__crea:
$LN137@stbi__crea:
; Line 4803
	mov	eax, 1
$LN1@stbi__crea:
; Line 4804
	lea	rsp, QWORD PTR [rbp+1096]
	pop	rdi
	pop	rbp
	ret	0
	npad	1
$LN168@stbi__crea:
	DD	$LN105@stbi__crea
	DD	$LN106@stbi__crea
	DD	$LN107@stbi__crea
	DD	$LN108@stbi__crea
	DD	$LN109@stbi__crea
	DD	$LN110@stbi__crea
	DD	$LN111@stbi__crea
$LN167@stbi__crea:
	DD	$LN121@stbi__crea
	DD	$LN122@stbi__crea
	DD	$LN123@stbi__crea
	DD	$LN124@stbi__crea
	DD	$LN125@stbi__crea
	DD	$LN126@stbi__crea
	DD	$LN127@stbi__crea
$LN166@stbi__crea:
	DD	$LN128@stbi__crea
	DD	$LN129@stbi__crea
	DD	$LN130@stbi__crea
	DD	$LN131@stbi__crea
	DD	$LN132@stbi__crea
	DD	$LN133@stbi__crea
	DD	$LN134@stbi__crea
?stbi__create_png_image_raw@@YAHPEAUstbi__png@@PEAEIHIIHH@Z ENDP ; stbi__create_png_image_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__paeth@@YAHHHH@Z
_TEXT	SEGMENT
p$ = 4
pa$ = 36
pb$ = 68
pc$ = 100
a$ = 352
b$ = 360
c$ = 368
?stbi__paeth@@YAHHHH@Z PROC				; stbi__paeth, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4581
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4582
	mov	eax, DWORD PTR b$[rbp]
	mov	ecx, DWORD PTR a$[rbp]
	add	ecx, eax
	mov	eax, ecx
	sub	eax, DWORD PTR c$[rbp]
	mov	DWORD PTR p$[rbp], eax
; Line 4583
	mov	eax, DWORD PTR a$[rbp]
	mov	ecx, DWORD PTR p$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, eax
	call	abs
	mov	DWORD PTR pa$[rbp], eax
; Line 4584
	mov	eax, DWORD PTR b$[rbp]
	mov	ecx, DWORD PTR p$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, eax
	call	abs
	mov	DWORD PTR pb$[rbp], eax
; Line 4585
	mov	eax, DWORD PTR c$[rbp]
	mov	ecx, DWORD PTR p$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	ecx, eax
	call	abs
	mov	DWORD PTR pc$[rbp], eax
; Line 4586
	mov	eax, DWORD PTR pb$[rbp]
	cmp	DWORD PTR pa$[rbp], eax
	jg	SHORT $LN2@stbi__paet
	mov	eax, DWORD PTR pc$[rbp]
	cmp	DWORD PTR pa$[rbp], eax
	jg	SHORT $LN2@stbi__paet
	mov	eax, DWORD PTR a$[rbp]
	jmp	SHORT $LN1@stbi__paet
$LN2@stbi__paet:
; Line 4587
	mov	eax, DWORD PTR pc$[rbp]
	cmp	DWORD PTR pb$[rbp], eax
	jg	SHORT $LN3@stbi__paet
	mov	eax, DWORD PTR b$[rbp]
	jmp	SHORT $LN1@stbi__paet
$LN3@stbi__paet:
; Line 4588
	mov	eax, DWORD PTR c$[rbp]
$LN1@stbi__paet:
; Line 4589
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?stbi__paeth@@YAHHHH@Z ENDP				; stbi__paeth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__check_png_header@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
i$ = 4
s$ = 256
?stbi__check_png_header@@YAHPEAUstbi__context@@@Z PROC	; stbi__check_png_header, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4544
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4547
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__chec
$LN2@stbi__chec:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__chec:
	cmp	DWORD PTR i$[rbp], 8
	jge	SHORT $LN3@stbi__chec
; Line 4548
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	movsxd	rcx, DWORD PTR i$[rbp]
	lea	rdx, OFFSET FLAT:?png_sig@?1??stbi__check_png_header@@YAHPEAUstbi__context@@@Z@4QBEB
	movzx	ecx, BYTE PTR [rdx+rcx]
	cmp	eax, ecx
	je	SHORT $LN5@stbi__chec
	lea	rcx, OFFSET FLAT:??_C@_0M@DMDNBACF@bad?5png?5sig@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__chec
$LN5@stbi__chec:
	jmp	SHORT $LN2@stbi__chec
$LN3@stbi__chec:
; Line 4549
	mov	eax, 1
$LN1@stbi__chec:
; Line 4550
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__check_png_header@@YAHPEAUstbi__context@@@Z ENDP	; stbi__check_png_header
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z
_TEXT	SEGMENT
c$ = 8
s$ = 256
?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z PROC ; stbi__get_chunk_header, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4536
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4538
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	DWORD PTR c$[rbp], eax
; Line 4539
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	DWORD PTR c$[rbp+4], eax
; Line 4540
	mov	rax, QWORD PTR c$[rbp]
; Line 4541
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__get_chunk_header@@YA?AUstbi__pngchunk@@PEAUstbi__context@@@Z ENDP ; stbi__get_chunk_header
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z
_TEXT	SEGMENT
a$ = 224
obuf$ = 232
olen$ = 240
exp$ = 248
parse_header$ = 256
?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z PROC	; stbi__do_zlib, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4433
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4434
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR obuf$[rbp]
	mov	QWORD PTR [rax+32], rcx
; Line 4435
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR obuf$[rbp]
	mov	QWORD PTR [rax+24], rcx
; Line 4436
	movsxd	rax, DWORD PTR olen$[rbp]
	mov	rcx, QWORD PTR obuf$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR a$[rbp]
	mov	QWORD PTR [rcx+40], rax
; Line 4437
	mov	rax, QWORD PTR a$[rbp]
	mov	ecx, DWORD PTR exp$[rbp]
	mov	DWORD PTR [rax+48], ecx
; Line 4439
	mov	edx, DWORD PTR parse_header$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__parse_zlib@@YAHPEAUstbi__zbuf@@H@Z ; stbi__parse_zlib
; Line 4440
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z ENDP	; stbi__do_zlib
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__parse_zlib@@YAHPEAUstbi__zbuf@@H@Z
_TEXT	SEGMENT
final$ = 4
type$ = 36
a$ = 288
parse_header$ = 296
?stbi__parse_zlib@@YAHPEAUstbi__zbuf@@H@Z PROC		; stbi__parse_zlib, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4405
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4407
	cmp	DWORD PTR parse_header$[rbp], 0
	je	SHORT $LN5@stbi__pars
; Line 4408
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__parse_zlib_header@@YAHPEAUstbi__zbuf@@@Z ; stbi__parse_zlib_header
	test	eax, eax
	jne	SHORT $LN6@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN6@stbi__pars:
$LN5@stbi__pars:
; Line 4409
	mov	rax, QWORD PTR a$[rbp]
	mov	DWORD PTR [rax+16], 0
; Line 4410
	mov	rax, QWORD PTR a$[rbp]
	mov	DWORD PTR [rax+20], 0
$LN4@stbi__pars:
; Line 4412
	mov	edx, 1
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	mov	DWORD PTR final$[rbp], eax
; Line 4413
	mov	edx, 2
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	mov	DWORD PTR type$[rbp], eax
; Line 4414
	cmp	DWORD PTR type$[rbp], 0
	jne	SHORT $LN7@stbi__pars
; Line 4415
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z ; stbi__parse_uncompressed_block
	test	eax, eax
	jne	SHORT $LN9@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN9@stbi__pars:
	jmp	$LN8@stbi__pars
$LN7@stbi__pars:
; Line 4416
	cmp	DWORD PTR type$[rbp], 3
	jne	SHORT $LN10@stbi__pars
; Line 4417
	xor	eax, eax
	jmp	$LN1@stbi__pars
; Line 4418
	jmp	$LN11@stbi__pars
$LN10@stbi__pars:
; Line 4419
	cmp	DWORD PTR type$[rbp], 1
	jne	SHORT $LN12@stbi__pars
; Line 4421
	mov	rax, QWORD PTR a$[rbp]
	add	rax, 52					; 00000034H
	mov	r8d, 288				; 00000120H
	lea	rdx, OFFSET FLAT:?stbi__zdefault_length@@3QBEB
	mov	rcx, rax
	call	?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z ; stbi__zbuild_huffman
	test	eax, eax
	jne	SHORT $LN14@stbi__pars
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pars
$LN14@stbi__pars:
; Line 4422
	mov	rax, QWORD PTR a$[rbp]
	add	rax, 2072				; 00000818H
	mov	r8d, 32					; 00000020H
	lea	rdx, OFFSET FLAT:?stbi__zdefault_distance@@3QBEB
	mov	rcx, rax
	call	?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z ; stbi__zbuild_huffman
	test	eax, eax
	jne	SHORT $LN15@stbi__pars
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pars
$LN15@stbi__pars:
; Line 4423
	jmp	SHORT $LN13@stbi__pars
$LN12@stbi__pars:
; Line 4424
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z ; stbi__compute_huffman_codes
	test	eax, eax
	jne	SHORT $LN16@stbi__pars
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pars
$LN16@stbi__pars:
$LN13@stbi__pars:
; Line 4426
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__parse_huffman_block@@YAHPEAUstbi__zbuf@@@Z ; stbi__parse_huffman_block
	test	eax, eax
	jne	SHORT $LN17@stbi__pars
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pars
$LN17@stbi__pars:
$LN11@stbi__pars:
$LN8@stbi__pars:
; Line 4428
	cmp	DWORD PTR final$[rbp], 0
	je	$LN4@stbi__pars
; Line 4429
	mov	eax, 1
$LN1@stbi__pars:
; Line 4430
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__parse_zlib@@YAHPEAUstbi__zbuf@@H@Z ENDP		; stbi__parse_zlib
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__parse_zlib_header@@YAHPEAUstbi__zbuf@@@Z
_TEXT	SEGMENT
cmf$ = 4
cm$ = 36
flg$ = 68
a$ = 320
?stbi__parse_zlib_header@@YAHPEAUstbi__zbuf@@@Z PROC	; stbi__parse_zlib_header, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4362
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4363
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z	; stbi__zget8
	movzx	eax, al
	mov	DWORD PTR cmf$[rbp], eax
; Line 4364
	mov	eax, DWORD PTR cmf$[rbp]
	and	eax, 15
	mov	DWORD PTR cm$[rbp], eax
; Line 4366
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z	; stbi__zget8
	movzx	eax, al
	mov	DWORD PTR flg$[rbp], eax
; Line 4367
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z	; stbi__zeof
	test	eax, eax
	je	SHORT $LN2@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BA@OBKOPAFL@bad?5zlib?5header@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__pars
$LN2@stbi__pars:
; Line 4368
	imul	eax, DWORD PTR cmf$[rbp], 256		; 00000100H
	add	eax, DWORD PTR flg$[rbp]
	cdq
	mov	ecx, 31
	idiv	ecx
	mov	eax, edx
	test	eax, eax
	je	SHORT $LN3@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BA@OBKOPAFL@bad?5zlib?5header@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__pars
$LN3@stbi__pars:
; Line 4369
	mov	eax, DWORD PTR flg$[rbp]
	and	eax, 32					; 00000020H
	test	eax, eax
	je	SHORT $LN4@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0P@DOGMHEBI@no?5preset?5dict@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__pars
$LN4@stbi__pars:
; Line 4370
	cmp	DWORD PTR cm$[rbp], 8
	je	SHORT $LN5@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BA@MCNBDLPD@bad?5compression@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__pars
$LN5@stbi__pars:
; Line 4372
	mov	eax, 1
$LN1@stbi__pars:
; Line 4373
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__parse_zlib_header@@YAHPEAUstbi__zbuf@@@Z ENDP	; stbi__parse_zlib_header
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z
_TEXT	SEGMENT
header$ = 4
len$ = 36
nlen$ = 68
k$ = 100
a$ = 352
?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z PROC ; stbi__parse_uncompressed_block, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4333
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4336
	mov	rax, QWORD PTR a$[rbp]
	mov	eax, DWORD PTR [rax+16]
	and	eax, 7
	test	eax, eax
	je	SHORT $LN6@stbi__pars
; Line 4337
	mov	rax, QWORD PTR a$[rbp]
	mov	eax, DWORD PTR [rax+16]
	and	eax, 7
	mov	edx, eax
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
$LN6@stbi__pars:
; Line 4339
	mov	DWORD PTR k$[rbp], 0
$LN2@stbi__pars:
; Line 4340
	mov	rax, QWORD PTR a$[rbp]
	cmp	DWORD PTR [rax+16], 0
	jle	SHORT $LN3@stbi__pars
; Line 4341
	mov	rax, QWORD PTR a$[rbp]
	mov	eax, DWORD PTR [rax+20]
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	BYTE PTR header$[rbp+rcx], al
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
; Line 4342
	mov	rax, QWORD PTR a$[rbp]
	mov	eax, DWORD PTR [rax+20]
	shr	eax, 8
	mov	rcx, QWORD PTR a$[rbp]
	mov	DWORD PTR [rcx+20], eax
; Line 4343
	mov	rax, QWORD PTR a$[rbp]
	mov	eax, DWORD PTR [rax+16]
	sub	eax, 8
	mov	rcx, QWORD PTR a$[rbp]
	mov	DWORD PTR [rcx+16], eax
; Line 4344
	jmp	SHORT $LN2@stbi__pars
$LN3@stbi__pars:
; Line 4345
	mov	rax, QWORD PTR a$[rbp]
	cmp	DWORD PTR [rax+16], 0
	jge	SHORT $LN7@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0N@IECDHMDI@zlib?5corrupt@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN7@stbi__pars:
$LN4@stbi__pars:
; Line 4347
	cmp	DWORD PTR k$[rbp], 4
	jge	SHORT $LN5@stbi__pars
; Line 4348
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z	; stbi__zget8
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	BYTE PTR header$[rbp+rcx], al
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
	jmp	SHORT $LN4@stbi__pars
$LN5@stbi__pars:
; Line 4349
	mov	eax, 1
	imul	rax, rax, 1
	movzx	eax, BYTE PTR header$[rbp+rax]
	imul	eax, eax, 256				; 00000100H
	mov	ecx, 1
	imul	rcx, rcx, 0
	movzx	ecx, BYTE PTR header$[rbp+rcx]
	add	eax, ecx
	mov	DWORD PTR len$[rbp], eax
; Line 4350
	mov	eax, 1
	imul	rax, rax, 3
	movzx	eax, BYTE PTR header$[rbp+rax]
	imul	eax, eax, 256				; 00000100H
	mov	ecx, 1
	imul	rcx, rcx, 2
	movzx	ecx, BYTE PTR header$[rbp+rcx]
	add	eax, ecx
	mov	DWORD PTR nlen$[rbp], eax
; Line 4351
	mov	eax, DWORD PTR len$[rbp]
	xor	eax, 65535				; 0000ffffH
	cmp	DWORD PTR nlen$[rbp], eax
	je	SHORT $LN8@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0N@IECDHMDI@zlib?5corrupt@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN8@stbi__pars:
; Line 4352
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	add	rax, QWORD PTR [rcx]
	mov	rcx, QWORD PTR a$[rbp]
	cmp	rax, QWORD PTR [rcx+8]
	jbe	SHORT $LN9@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BB@PIPBCKIA@read?5past?5buffer@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN9@stbi__pars:
; Line 4353
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	rcx, QWORD PTR a$[rbp]
	cmp	rax, QWORD PTR [rcx+40]
	jbe	SHORT $LN10@stbi__pars
; Line 4354
	mov	r8d, DWORD PTR len$[rbp]
	mov	rax, QWORD PTR a$[rbp]
	mov	rdx, QWORD PTR [rax+24]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z ; stbi__zexpand
	test	eax, eax
	jne	SHORT $LN11@stbi__pars
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pars
$LN11@stbi__pars:
$LN10@stbi__pars:
; Line 4355
	movsxd	rax, DWORD PTR len$[rbp]
	mov	r8, rax
	mov	rax, QWORD PTR a$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	memcpy
; Line 4356
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	add	rax, QWORD PTR [rcx]
	mov	rcx, QWORD PTR a$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 4357
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	rcx, QWORD PTR a$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 4358
	mov	eax, 1
$LN1@stbi__pars:
; Line 4359
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?stbi__parse_uncompressed_block@@YAHPEAUstbi__zbuf@@@Z ENDP ; stbi__parse_uncompressed_block
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z
_TEXT	SEGMENT
z_codelength$ = 16
lencodes$ = 2080
codelength_sizes$ = 2568
i$ = 2612
n$ = 2644
hlit$ = 2676
hdist$ = 2708
hclen$ = 2740
ntot$ = 2772
s$6 = 2804
c$7 = 2836
fill$8 = 2868
tv175 = 4040
__$ArrayPad$ = 4048
a$ = 4096
?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z PROC ; stbi__compute_huffman_codes, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4283
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 4104				; 00001008H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 730				; 000002daH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+4136]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4290
	mov	edx, 5
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	add	eax, 257				; 00000101H
	mov	DWORD PTR hlit$[rbp], eax
; Line 4291
	mov	edx, 5
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	inc	eax
	mov	DWORD PTR hdist$[rbp], eax
; Line 4292
	mov	edx, 4
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	add	eax, 4
	mov	DWORD PTR hclen$[rbp], eax
; Line 4293
	mov	eax, DWORD PTR hdist$[rbp]
	mov	ecx, DWORD PTR hlit$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR ntot$[rbp], eax
; Line 4295
	mov	r8d, 19
	xor	edx, edx
	lea	rcx, QWORD PTR codelength_sizes$[rbp]
	call	memset
; Line 4296
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__comp
$LN2@stbi__comp:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__comp:
	mov	eax, DWORD PTR hclen$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__comp
; Line 4297
	mov	edx, 3
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	mov	DWORD PTR s$6[rbp], eax
; Line 4298
	movsxd	rax, DWORD PTR i$[rbp]
	lea	rcx, OFFSET FLAT:?length_dezigzag@?1??stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z@4QBEB
	movzx	eax, BYTE PTR [rcx+rax]
	movzx	ecx, BYTE PTR s$6[rbp]
	mov	BYTE PTR codelength_sizes$[rbp+rax], cl
; Line 4299
	jmp	SHORT $LN2@stbi__comp
$LN3@stbi__comp:
; Line 4300
	mov	r8d, 19
	lea	rdx, QWORD PTR codelength_sizes$[rbp]
	lea	rcx, QWORD PTR z_codelength$[rbp]
	call	?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z ; stbi__zbuild_huffman
	test	eax, eax
	jne	SHORT $LN7@stbi__comp
	xor	eax, eax
	jmp	$LN1@stbi__comp
$LN7@stbi__comp:
; Line 4302
	mov	DWORD PTR n$[rbp], 0
$LN5@stbi__comp:
; Line 4303
	mov	eax, DWORD PTR ntot$[rbp]
	cmp	DWORD PTR n$[rbp], eax
	jge	$LN6@stbi__comp
; Line 4304
	lea	rdx, QWORD PTR z_codelength$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z ; stbi__zhuffman_decode
	mov	DWORD PTR c$7[rbp], eax
; Line 4305
	cmp	DWORD PTR c$7[rbp], 0
	jl	SHORT $LN9@stbi__comp
	cmp	DWORD PTR c$7[rbp], 19
	jl	SHORT $LN8@stbi__comp
$LN9@stbi__comp:
	lea	rcx, OFFSET FLAT:??_C@_0BA@MDNKOBMC@bad?5codelengths@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__comp
$LN8@stbi__comp:
; Line 4306
	cmp	DWORD PTR c$7[rbp], 16
	jge	SHORT $LN10@stbi__comp
; Line 4307
	movsxd	rax, DWORD PTR n$[rbp]
	movzx	ecx, BYTE PTR c$7[rbp]
	mov	BYTE PTR lencodes$[rbp+rax], cl
	mov	eax, DWORD PTR n$[rbp]
	inc	eax
	mov	DWORD PTR n$[rbp], eax
	jmp	$LN11@stbi__comp
$LN10@stbi__comp:
; Line 4309
	mov	BYTE PTR fill$8[rbp], 0
; Line 4310
	cmp	DWORD PTR c$7[rbp], 16
	jne	SHORT $LN12@stbi__comp
; Line 4311
	mov	edx, 2
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	add	eax, 3
	mov	DWORD PTR c$7[rbp], eax
; Line 4312
	cmp	DWORD PTR n$[rbp], 0
	jne	SHORT $LN14@stbi__comp
	lea	rcx, OFFSET FLAT:??_C@_0BA@MDNKOBMC@bad?5codelengths@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__comp
$LN14@stbi__comp:
; Line 4313
	mov	eax, DWORD PTR n$[rbp]
	dec	eax
	cdqe
	movzx	eax, BYTE PTR lencodes$[rbp+rax]
	mov	BYTE PTR fill$8[rbp], al
	jmp	SHORT $LN13@stbi__comp
$LN12@stbi__comp:
; Line 4314
	cmp	DWORD PTR c$7[rbp], 17
	jne	SHORT $LN15@stbi__comp
; Line 4315
	mov	edx, 3
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	add	eax, 3
	mov	DWORD PTR c$7[rbp], eax
	jmp	SHORT $LN16@stbi__comp
$LN15@stbi__comp:
; Line 4316
	cmp	DWORD PTR c$7[rbp], 18
	jne	SHORT $LN17@stbi__comp
; Line 4317
	mov	edx, 7
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	add	eax, 11
	mov	DWORD PTR c$7[rbp], eax
; Line 4318
	jmp	SHORT $LN18@stbi__comp
$LN17@stbi__comp:
; Line 4319
	lea	rcx, OFFSET FLAT:??_C@_0BA@MDNKOBMC@bad?5codelengths@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__comp
$LN18@stbi__comp:
$LN16@stbi__comp:
$LN13@stbi__comp:
; Line 4321
	mov	eax, DWORD PTR n$[rbp]
	mov	ecx, DWORD PTR ntot$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	cmp	eax, DWORD PTR c$7[rbp]
	jge	SHORT $LN19@stbi__comp
	lea	rcx, OFFSET FLAT:??_C@_0BA@MDNKOBMC@bad?5codelengths@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__comp
$LN19@stbi__comp:
; Line 4322
	movsxd	rax, DWORD PTR c$7[rbp]
	movzx	ecx, BYTE PTR fill$8[rbp]
	movsxd	rdx, DWORD PTR n$[rbp]
	lea	rdx, QWORD PTR lencodes$[rbp+rdx]
	mov	QWORD PTR tv175[rbp], rdx
	mov	r8, rax
	mov	edx, ecx
	mov	rax, QWORD PTR tv175[rbp]
	mov	rcx, rax
	call	memset
; Line 4323
	mov	eax, DWORD PTR c$7[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR n$[rbp], eax
$LN11@stbi__comp:
; Line 4325
	jmp	$LN5@stbi__comp
$LN6@stbi__comp:
; Line 4326
	mov	eax, DWORD PTR ntot$[rbp]
	cmp	DWORD PTR n$[rbp], eax
	je	SHORT $LN20@stbi__comp
	lea	rcx, OFFSET FLAT:??_C@_0BA@MDNKOBMC@bad?5codelengths@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__comp
$LN20@stbi__comp:
; Line 4327
	mov	rax, QWORD PTR a$[rbp]
	add	rax, 52					; 00000034H
	mov	r8d, DWORD PTR hlit$[rbp]
	lea	rdx, QWORD PTR lencodes$[rbp]
	mov	rcx, rax
	call	?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z ; stbi__zbuild_huffman
	test	eax, eax
	jne	SHORT $LN21@stbi__comp
	xor	eax, eax
	jmp	SHORT $LN1@stbi__comp
$LN21@stbi__comp:
; Line 4328
	movsxd	rax, DWORD PTR hlit$[rbp]
	lea	rax, QWORD PTR lencodes$[rbp+rax]
	mov	rcx, QWORD PTR a$[rbp]
	add	rcx, 2072				; 00000818H
	mov	r8d, DWORD PTR hdist$[rbp]
	mov	rdx, rax
	call	?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z ; stbi__zbuild_huffman
	test	eax, eax
	jne	SHORT $LN22@stbi__comp
	xor	eax, eax
	jmp	SHORT $LN1@stbi__comp
$LN22@stbi__comp:
; Line 4329
	mov	eax, 1
$LN1@stbi__comp:
; Line 4330
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+4072]
	pop	rdi
	pop	rbp
	ret	0
?stbi__compute_huffman_codes@@YAHPEAUstbi__zbuf@@@Z ENDP ; stbi__compute_huffman_codes
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__parse_huffman_block@@YAHPEAUstbi__zbuf@@@Z
_TEXT	SEGMENT
zout$ = 8
z$1 = 36
p$2 = 72
len$3 = 100
dist$4 = 132
v$5 = 164
tv179 = 372
a$ = 416
?stbi__parse_huffman_block@@YAHPEAUstbi__zbuf@@@Z PROC	; stbi__parse_huffman_block, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4241
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4242
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR zout$[rbp], rax
$LN2@stbi__pars:
; Line 4244
	mov	rax, QWORD PTR a$[rbp]
	add	rax, 52					; 00000034H
	mov	rdx, rax
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z ; stbi__zhuffman_decode
	mov	DWORD PTR z$1[rbp], eax
; Line 4245
	cmp	DWORD PTR z$1[rbp], 256			; 00000100H
	jge	SHORT $LN11@stbi__pars
; Line 4246
	cmp	DWORD PTR z$1[rbp], 0
	jge	SHORT $LN13@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BB@IIMLINA@bad?5huffman?5code@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN13@stbi__pars:
; Line 4247
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax+40]
	cmp	QWORD PTR zout$[rbp], rax
	jb	SHORT $LN14@stbi__pars
; Line 4248
	mov	r8d, 1
	mov	rdx, QWORD PTR zout$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z ; stbi__zexpand
	test	eax, eax
	jne	SHORT $LN15@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN15@stbi__pars:
; Line 4249
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR zout$[rbp], rax
$LN14@stbi__pars:
; Line 4251
	mov	rax, QWORD PTR zout$[rbp]
	movzx	ecx, BYTE PTR z$1[rbp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR zout$[rbp]
	inc	rax
	mov	QWORD PTR zout$[rbp], rax
; Line 4252
	jmp	$LN12@stbi__pars
$LN11@stbi__pars:
; Line 4255
	cmp	DWORD PTR z$1[rbp], 256			; 00000100H
	jne	SHORT $LN16@stbi__pars
; Line 4256
	mov	rax, QWORD PTR a$[rbp]
	mov	rcx, QWORD PTR zout$[rbp]
	mov	QWORD PTR [rax+24], rcx
; Line 4257
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN16@stbi__pars:
; Line 4259
	mov	eax, DWORD PTR z$1[rbp]
	sub	eax, 257				; 00000101H
	mov	DWORD PTR z$1[rbp], eax
; Line 4260
	movsxd	rax, DWORD PTR z$1[rbp]
	lea	rcx, OFFSET FLAT:?stbi__zlength_base@@3QBHB
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR len$3[rbp], eax
; Line 4261
	movsxd	rax, DWORD PTR z$1[rbp]
	lea	rcx, OFFSET FLAT:?stbi__zlength_extra@@3QBHB
	cmp	DWORD PTR [rcx+rax*4], 0
	je	SHORT $LN17@stbi__pars
	movsxd	rax, DWORD PTR z$1[rbp]
	lea	rcx, OFFSET FLAT:?stbi__zlength_extra@@3QBHB
	mov	edx, DWORD PTR [rcx+rax*4]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	mov	ecx, DWORD PTR len$3[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR len$3[rbp], eax
$LN17@stbi__pars:
; Line 4262
	mov	rax, QWORD PTR a$[rbp]
	add	rax, 2072				; 00000818H
	mov	rdx, rax
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z ; stbi__zhuffman_decode
	mov	DWORD PTR z$1[rbp], eax
; Line 4263
	cmp	DWORD PTR z$1[rbp], 0
	jge	SHORT $LN18@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_0BB@IIMLINA@bad?5huffman?5code@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN18@stbi__pars:
; Line 4264
	movsxd	rax, DWORD PTR z$1[rbp]
	lea	rcx, OFFSET FLAT:?stbi__zdist_base@@3QBHB
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR dist$4[rbp], eax
; Line 4265
	movsxd	rax, DWORD PTR z$1[rbp]
	lea	rcx, OFFSET FLAT:?stbi__zdist_extra@@3QBHB
	cmp	DWORD PTR [rcx+rax*4], 0
	je	SHORT $LN19@stbi__pars
	movsxd	rax, DWORD PTR z$1[rbp]
	lea	rcx, OFFSET FLAT:?stbi__zdist_extra@@3QBHB
	mov	edx, DWORD PTR [rcx+rax*4]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z	; stbi__zreceive
	mov	ecx, DWORD PTR dist$4[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR dist$4[rbp], eax
$LN19@stbi__pars:
; Line 4266
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	rcx, QWORD PTR zout$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	movsxd	rcx, DWORD PTR dist$4[rbp]
	cmp	rax, rcx
	jge	SHORT $LN20@stbi__pars
	lea	rcx, OFFSET FLAT:??_C@_08DIAPIMGJ@bad?5dist@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__pars
$LN20@stbi__pars:
; Line 4267
	movsxd	rax, DWORD PTR len$3[rbp]
	mov	rcx, QWORD PTR zout$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR a$[rbp]
	cmp	rax, QWORD PTR [rcx+40]
	jbe	SHORT $LN21@stbi__pars
; Line 4268
	mov	r8d, DWORD PTR len$3[rbp]
	mov	rdx, QWORD PTR zout$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z ; stbi__zexpand
	test	eax, eax
	jne	SHORT $LN22@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN22@stbi__pars:
; Line 4269
	mov	rax, QWORD PTR a$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR zout$[rbp], rax
$LN21@stbi__pars:
; Line 4271
	movsxd	rax, DWORD PTR dist$4[rbp]
	mov	rcx, QWORD PTR zout$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$2[rbp], rax
; Line 4272
	cmp	DWORD PTR dist$4[rbp], 1
	jne	SHORT $LN23@stbi__pars
; Line 4273
	mov	rax, QWORD PTR p$2[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR v$5[rbp], al
; Line 4274
	cmp	DWORD PTR len$3[rbp], 0
	je	SHORT $LN25@stbi__pars
$LN7@stbi__pars:
	mov	rax, QWORD PTR zout$[rbp]
	movzx	ecx, BYTE PTR v$5[rbp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR zout$[rbp]
	inc	rax
	mov	QWORD PTR zout$[rbp], rax
	mov	eax, DWORD PTR len$3[rbp]
	dec	eax
	mov	DWORD PTR len$3[rbp], eax
	cmp	DWORD PTR len$3[rbp], 0
	jne	SHORT $LN7@stbi__pars
$LN25@stbi__pars:
; Line 4275
	jmp	SHORT $LN24@stbi__pars
$LN23@stbi__pars:
; Line 4276
	cmp	DWORD PTR len$3[rbp], 0
	je	SHORT $LN26@stbi__pars
$LN10@stbi__pars:
	mov	rax, QWORD PTR p$2[rbp]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR tv179[rbp], al
	mov	rax, QWORD PTR p$2[rbp]
	inc	rax
	mov	QWORD PTR p$2[rbp], rax
	mov	rax, QWORD PTR zout$[rbp]
	movzx	ecx, BYTE PTR tv179[rbp]
	mov	BYTE PTR [rax], cl
	mov	rax, QWORD PTR zout$[rbp]
	inc	rax
	mov	QWORD PTR zout$[rbp], rax
	mov	eax, DWORD PTR len$3[rbp]
	dec	eax
	mov	DWORD PTR len$3[rbp], eax
	cmp	DWORD PTR len$3[rbp], 0
	jne	SHORT $LN10@stbi__pars
$LN26@stbi__pars:
$LN24@stbi__pars:
$LN12@stbi__pars:
; Line 4279
	jmp	$LN2@stbi__pars
$LN1@stbi__pars:
; Line 4280
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?stbi__parse_huffman_block@@YAHPEAUstbi__zbuf@@@Z ENDP	; stbi__parse_huffman_block
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z
_TEXT	SEGMENT
q$ = 8
cur$ = 36
limit$ = 68
old_limit$ = 100
z$ = 352
zout$ = 360
n$ = 368
?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z PROC		; stbi__zexpand, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4205
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4208
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR zout$[rbp]
	mov	QWORD PTR [rax+24], rcx
; Line 4209
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+48], 0
	jne	SHORT $LN4@stbi__zexp
	lea	rcx, OFFSET FLAT:??_C@_0BE@IBFIPFO@output?5buffer?5limit@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__zexp
$LN4@stbi__zexp:
; Line 4210
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	mov	DWORD PTR cur$[rbp], eax
; Line 4211
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	mov	rax, QWORD PTR [rax+40]
	sub	rax, rcx
	mov	DWORD PTR old_limit$[rbp], eax
	mov	eax, DWORD PTR old_limit$[rbp]
	mov	DWORD PTR limit$[rbp], eax
; Line 4212
	mov	eax, -1					; ffffffffH
	sub	eax, DWORD PTR cur$[rbp]
	cmp	eax, DWORD PTR n$[rbp]
	jae	SHORT $LN5@stbi__zexp
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__zexp
$LN5@stbi__zexp:
$LN2@stbi__zexp:
; Line 4213
	mov	eax, DWORD PTR n$[rbp]
	mov	ecx, DWORD PTR cur$[rbp]
	add	ecx, eax
	mov	eax, ecx
	cmp	eax, DWORD PTR limit$[rbp]
	jbe	SHORT $LN3@stbi__zexp
; Line 4214
	cmp	DWORD PTR limit$[rbp], 2147483647	; 7fffffffH
	jbe	SHORT $LN6@stbi__zexp
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__zexp
$LN6@stbi__zexp:
; Line 4215
	mov	eax, DWORD PTR limit$[rbp]
	shl	eax, 1
	mov	DWORD PTR limit$[rbp], eax
; Line 4216
	jmp	SHORT $LN2@stbi__zexp
$LN3@stbi__zexp:
; Line 4217
	mov	eax, DWORD PTR limit$[rbp]
	mov	edx, eax
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	QWORD PTR __imp_realloc
	mov	QWORD PTR q$[rbp], rax
; Line 4219
	cmp	QWORD PTR q$[rbp], 0
	jne	SHORT $LN7@stbi__zexp
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__zexp
$LN7@stbi__zexp:
; Line 4220
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR q$[rbp]
	mov	QWORD PTR [rax+32], rcx
; Line 4221
	mov	eax, DWORD PTR cur$[rbp]
	mov	rcx, QWORD PTR q$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+24], rax
; Line 4222
	mov	eax, DWORD PTR limit$[rbp]
	mov	rcx, QWORD PTR q$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+40], rax
; Line 4223
	mov	eax, 1
$LN1@stbi__zexp:
; Line 4224
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?stbi__zexpand@@YAHPEAUstbi__zbuf@@PEADH@Z ENDP		; stbi__zexpand
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z
_TEXT	SEGMENT
b$ = 4
s$ = 36
tv133 = 248
a$ = 288
z$ = 296
?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z PROC ; stbi__zhuffman_decode, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4186
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4188
	mov	rax, QWORD PTR a$[rbp]
	cmp	DWORD PTR [rax+16], 16
	jge	SHORT $LN2@stbi__zhuf
; Line 4189
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z	; stbi__zeof
	test	eax, eax
	je	SHORT $LN3@stbi__zhuf
; Line 4190
	mov	eax, -1
	jmp	$LN1@stbi__zhuf
$LN3@stbi__zhuf:
; Line 4192
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z	; stbi__fill_bits
$LN2@stbi__zhuf:
; Line 4194
	mov	rax, QWORD PTR a$[rbp]
	mov	eax, DWORD PTR [rax+20]
	and	eax, 511				; 000001ffH
	mov	eax, eax
	mov	rcx, QWORD PTR z$[rbp]
	movzx	eax, WORD PTR [rcx+rax*2]
	mov	DWORD PTR b$[rbp], eax
; Line 4195
	cmp	DWORD PTR b$[rbp], 0
	je	SHORT $LN4@stbi__zhuf
; Line 4196
	mov	eax, DWORD PTR b$[rbp]
	sar	eax, 9
	mov	DWORD PTR s$[rbp], eax
; Line 4197
	mov	eax, DWORD PTR s$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	mov	QWORD PTR tv133[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv133[rbp]
	mov	eax, DWORD PTR [rax+20]
	shr	eax, cl
	mov	rcx, QWORD PTR a$[rbp]
	mov	DWORD PTR [rcx+20], eax
; Line 4198
	mov	rax, QWORD PTR a$[rbp]
	mov	ecx, DWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+16]
	sub	eax, ecx
	mov	rcx, QWORD PTR a$[rbp]
	mov	DWORD PTR [rcx+16], eax
; Line 4199
	mov	eax, DWORD PTR b$[rbp]
	and	eax, 511				; 000001ffH
	jmp	SHORT $LN1@stbi__zhuf
$LN4@stbi__zhuf:
; Line 4201
	mov	rdx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	call	?stbi__zhuffman_decode_slowpath@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z ; stbi__zhuffman_decode_slowpath
$LN1@stbi__zhuf:
; Line 4202
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__zhuffman_decode@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z ENDP ; stbi__zhuffman_decode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__zhuffman_decode_slowpath@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z
_TEXT	SEGMENT
b$ = 4
s$ = 36
k$ = 68
tv159 = 280
a$ = 320
z$ = 328
?stbi__zhuffman_decode_slowpath@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z PROC ; stbi__zhuffman_decode_slowpath, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4167
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4171
	mov	edx, 16
	mov	rax, QWORD PTR a$[rbp]
	mov	ecx, DWORD PTR [rax+20]
	call	?stbi__bit_reverse@@YAHHH@Z		; stbi__bit_reverse
	mov	DWORD PTR k$[rbp], eax
; Line 4172
	mov	DWORD PTR s$[rbp], 10
	jmp	SHORT $LN4@stbi__zhuf
$LN2@stbi__zhuf:
	mov	eax, DWORD PTR s$[rbp]
	inc	eax
	mov	DWORD PTR s$[rbp], eax
$LN4@stbi__zhuf:
; Line 4173
	movsxd	rax, DWORD PTR s$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+1056]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN5@stbi__zhuf
; Line 4174
	jmp	SHORT $LN3@stbi__zhuf
$LN5@stbi__zhuf:
	jmp	SHORT $LN2@stbi__zhuf
$LN3@stbi__zhuf:
; Line 4175
	cmp	DWORD PTR s$[rbp], 16
	jl	SHORT $LN6@stbi__zhuf
	mov	eax, -1
	jmp	$LN1@stbi__zhuf
$LN6@stbi__zhuf:
; Line 4177
	mov	eax, 16
	sub	eax, DWORD PTR s$[rbp]
	movzx	ecx, al
	mov	eax, DWORD PTR k$[rbp]
	sar	eax, cl
	movsxd	rcx, DWORD PTR s$[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx*2+1024]
	sub	eax, ecx
	movsxd	rcx, DWORD PTR s$[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx*2+1124]
	add	eax, ecx
	mov	DWORD PTR b$[rbp], eax
; Line 4178
	cmp	DWORD PTR b$[rbp], 288			; 00000120H
	jl	SHORT $LN7@stbi__zhuf
	mov	eax, -1
	jmp	SHORT $LN1@stbi__zhuf
$LN7@stbi__zhuf:
; Line 4179
	movsxd	rax, DWORD PTR b$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1156]
	cmp	eax, DWORD PTR s$[rbp]
	je	SHORT $LN8@stbi__zhuf
	mov	eax, -1
	jmp	SHORT $LN1@stbi__zhuf
$LN8@stbi__zhuf:
; Line 4180
	mov	eax, DWORD PTR s$[rbp]
	mov	rcx, QWORD PTR a$[rbp]
	mov	QWORD PTR tv159[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv159[rbp]
	mov	eax, DWORD PTR [rax+20]
	shr	eax, cl
	mov	rcx, QWORD PTR a$[rbp]
	mov	DWORD PTR [rcx+20], eax
; Line 4181
	mov	rax, QWORD PTR a$[rbp]
	mov	ecx, DWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+16]
	sub	eax, ecx
	mov	rcx, QWORD PTR a$[rbp]
	mov	DWORD PTR [rcx+16], eax
; Line 4182
	movsxd	rax, DWORD PTR b$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	movzx	eax, WORD PTR [rcx+rax*2+1444]
$LN1@stbi__zhuf:
; Line 4183
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__zhuffman_decode_slowpath@@YAHPEAUstbi__zbuf@@PEAUstbi__zhuffman@@@Z ENDP ; stbi__zhuffman_decode_slowpath
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z
_TEXT	SEGMENT
k$ = 4
tv84 = 212
tv90 = 216
z$ = 256
n$ = 264
?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z PROC		; stbi__zreceive, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4157
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4159
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	cmp	DWORD PTR [rax+16], ecx
	jge	SHORT $LN2@stbi__zrec
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z	; stbi__fill_bits
$LN2@stbi__zrec:
; Line 4160
	mov	eax, DWORD PTR n$[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv84[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv84[rbp]
	shl	eax, cl
	dec	eax
	mov	rcx, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rcx+20]
	and	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR k$[rbp], eax
; Line 4161
	mov	eax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR tv90[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv90[rbp]
	mov	eax, DWORD PTR [rax+20]
	shr	eax, cl
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+20], eax
; Line 4162
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	mov	eax, DWORD PTR [rax+16]
	sub	eax, ecx
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+16], eax
; Line 4163
	mov	eax, DWORD PTR k$[rbp]
; Line 4164
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__zreceive@@YAIPEAUstbi__zbuf@@H@Z ENDP		; stbi__zreceive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z
_TEXT	SEGMENT
tv132 = 192
tv78 = 192
tv76 = 196
tv84 = 200
tv82 = 204
z$ = 240
?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z PROC		; stbi__fill_bits, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4145
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
$LN4@stbi__fill:
; Line 4147
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+16]
	mov	ecx, 1
	mov	DWORD PTR tv132[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv132[rbp]
	shl	eax, cl
	mov	rcx, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rcx+20], eax
	jb	SHORT $LN5@stbi__fill
; Line 4148
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx
; Line 4149
	jmp	$LN1@stbi__fill
$LN5@stbi__fill:
; Line 4151
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z	; stbi__zget8
	movzx	eax, al
	mov	DWORD PTR tv78[rbp], eax
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+16]
	mov	DWORD PTR tv76[rbp], eax
	mov	eax, DWORD PTR tv76[rbp]
	movzx	ecx, al
	mov	eax, DWORD PTR tv78[rbp]
	shl	eax, cl
	mov	DWORD PTR tv84[rbp], eax
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+20]
	mov	DWORD PTR tv82[rbp], eax
	mov	eax, DWORD PTR tv84[rbp]
	mov	ecx, DWORD PTR tv82[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+20], eax
; Line 4152
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+16]
	add	eax, 8
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+16], eax
; Line 4153
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+16], 24
	jle	$LN4@stbi__fill
$LN1@stbi__fill:
; Line 4154
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__fill_bits@@YAXPEAUstbi__zbuf@@@Z ENDP		; stbi__fill_bits
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z
_TEXT	SEGMENT
tv73 = 192
z$ = 240
?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z PROC		; stbi__zget8, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4140
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4141
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z	; stbi__zeof
	test	eax, eax
	je	SHORT $LN3@stbi__zget
	mov	DWORD PTR tv73[rbp], 0
	jmp	SHORT $LN4@stbi__zget
$LN3@stbi__zget:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv73[rbp], eax
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	inc	rax
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx], rax
$LN4@stbi__zget:
	movzx	eax, BYTE PTR tv73[rbp]
; Line 4142
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__zget8@@YAEPEAUstbi__zbuf@@@Z ENDP		; stbi__zget8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z
_TEXT	SEGMENT
tv67 = 192
z$ = 240
?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z PROC			; stbi__zeof, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4135
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4136
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	cmp	QWORD PTR [rax], rcx
	jb	SHORT $LN3@stbi__zeof
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@stbi__zeof
$LN3@stbi__zeof:
	mov	DWORD PTR tv67[rbp], 0
$LN4@stbi__zeof:
	mov	eax, DWORD PTR tv67[rbp]
; Line 4137
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__zeof@@YAHPEAUstbi__zbuf@@@Z ENDP			; stbi__zeof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z
_TEXT	SEGMENT
i$ = 4
k$ = 36
code$ = 68
next_code$ = 112
sizes$ = 208
s$5 = 308
c$6 = 340
fastv$7 = 372
j$8 = 404
tv289 = 612
__$ArrayPad$ = 616
z$ = 656
sizelist$ = 664
num$ = 672
?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z PROC ; stbi__zbuild_huffman, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4068
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 664				; 00000298H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+696]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4069
	mov	DWORD PTR k$[rbp], 0
; Line 4073
	mov	r8d, 68					; 00000044H
	xor	edx, edx
	lea	rcx, QWORD PTR sizes$[rbp]
	call	memset
; Line 4074
	mov	rax, QWORD PTR z$[rbp]
	mov	r8d, 1024				; 00000400H
	xor	edx, edx
	mov	rcx, rax
	call	memset
; Line 4075
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__zbui
$LN2@stbi__zbui:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__zbui:
	mov	eax, DWORD PTR num$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__zbui
; Line 4076
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR sizelist$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	eax, DWORD PTR sizes$[rbp+rax*4]
	inc	eax
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR sizelist$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	DWORD PTR sizes$[rbp+rcx*4], eax
	jmp	SHORT $LN2@stbi__zbui
$LN3@stbi__zbui:
; Line 4077
	mov	eax, 4
	imul	rax, rax, 0
	mov	DWORD PTR sizes$[rbp+rax], 0
; Line 4078
	mov	DWORD PTR i$[rbp], 1
	jmp	SHORT $LN7@stbi__zbui
$LN5@stbi__zbui:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@stbi__zbui:
	cmp	DWORD PTR i$[rbp], 16
	jge	SHORT $LN6@stbi__zbui
; Line 4079
	movsxd	rax, DWORD PTR i$[rbp]
	mov	ecx, DWORD PTR i$[rbp]
	mov	edx, 1
	shl	edx, cl
	mov	ecx, edx
	cmp	DWORD PTR sizes$[rbp+rax*4], ecx
	jle	SHORT $LN16@stbi__zbui
; Line 4080
	lea	rcx, OFFSET FLAT:??_C@_09EOHLEIKL@bad?5sizes@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__zbui
$LN16@stbi__zbui:
	jmp	SHORT $LN5@stbi__zbui
$LN6@stbi__zbui:
; Line 4081
	mov	DWORD PTR code$[rbp], 0
; Line 4082
	mov	DWORD PTR i$[rbp], 1
	jmp	SHORT $LN10@stbi__zbui
$LN8@stbi__zbui:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN10@stbi__zbui:
	cmp	DWORD PTR i$[rbp], 16
	jge	$LN9@stbi__zbui
; Line 4083
	movsxd	rax, DWORD PTR i$[rbp]
	mov	ecx, DWORD PTR code$[rbp]
	mov	DWORD PTR next_code$[rbp+rax*4], ecx
; Line 4084
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	movzx	edx, WORD PTR code$[rbp]
	mov	WORD PTR [rcx+rax*2+1024], dx
; Line 4085
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	movzx	edx, WORD PTR k$[rbp]
	mov	WORD PTR [rcx+rax*2+1124], dx
; Line 4086
	movsxd	rax, DWORD PTR i$[rbp]
	mov	eax, DWORD PTR sizes$[rbp+rax*4]
	mov	ecx, DWORD PTR code$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR code$[rbp], eax
; Line 4087
	movsxd	rax, DWORD PTR i$[rbp]
	cmp	DWORD PTR sizes$[rbp+rax*4], 0
	je	SHORT $LN17@stbi__zbui
; Line 4088
	mov	eax, DWORD PTR code$[rbp]
	dec	eax
	mov	ecx, DWORD PTR i$[rbp]
	mov	edx, 1
	shl	edx, cl
	mov	ecx, edx
	cmp	eax, ecx
	jl	SHORT $LN18@stbi__zbui
	lea	rcx, OFFSET FLAT:??_C@_0BA@MDNKOBMC@bad?5codelengths@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__zbui
$LN18@stbi__zbui:
$LN17@stbi__zbui:
; Line 4089
	mov	eax, 16
	sub	eax, DWORD PTR i$[rbp]
	movzx	ecx, al
	mov	eax, DWORD PTR code$[rbp]
	shl	eax, cl
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx*4+1056], eax
; Line 4090
	mov	eax, DWORD PTR code$[rbp]
	shl	eax, 1
	mov	DWORD PTR code$[rbp], eax
; Line 4091
	movsxd	rax, DWORD PTR i$[rbp]
	mov	eax, DWORD PTR sizes$[rbp+rax*4]
	mov	ecx, DWORD PTR k$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR k$[rbp], eax
; Line 4092
	jmp	$LN8@stbi__zbui
$LN9@stbi__zbui:
; Line 4093
	mov	eax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+rax+1056], 65536		; 00010000H
; Line 4094
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN13@stbi__zbui
$LN11@stbi__zbui:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN13@stbi__zbui:
	mov	eax, DWORD PTR num$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN12@stbi__zbui
; Line 4095
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR sizelist$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR s$5[rbp], eax
; Line 4096
	cmp	DWORD PTR s$5[rbp], 0
	je	$LN19@stbi__zbui
; Line 4097
	movsxd	rax, DWORD PTR s$5[rbp]
	movsxd	rcx, DWORD PTR s$5[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx*2+1024]
	mov	eax, DWORD PTR next_code$[rbp+rax*4]
	sub	eax, ecx
	movsxd	rcx, DWORD PTR s$5[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx*2+1124]
	add	eax, ecx
	mov	DWORD PTR c$6[rbp], eax
; Line 4098
	mov	eax, DWORD PTR s$5[rbp]
	shl	eax, 9
	or	eax, DWORD PTR i$[rbp]
	mov	WORD PTR fastv$7[rbp], ax
; Line 4099
	movsxd	rax, DWORD PTR c$6[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	movzx	edx, BYTE PTR s$5[rbp]
	mov	BYTE PTR [rcx+rax+1156], dl
; Line 4100
	movsxd	rax, DWORD PTR c$6[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	movzx	edx, WORD PTR i$[rbp]
	mov	WORD PTR [rcx+rax*2+1444], dx
; Line 4101
	cmp	DWORD PTR s$5[rbp], 9
	jg	SHORT $LN20@stbi__zbui
; Line 4102
	movsxd	rax, DWORD PTR s$5[rbp]
	mov	edx, DWORD PTR s$5[rbp]
	mov	ecx, DWORD PTR next_code$[rbp+rax*4]
	call	?stbi__bit_reverse@@YAHHH@Z		; stbi__bit_reverse
	mov	DWORD PTR j$8[rbp], eax
$LN14@stbi__zbui:
; Line 4103
	cmp	DWORD PTR j$8[rbp], 512			; 00000200H
	jge	SHORT $LN15@stbi__zbui
; Line 4104
	movsxd	rax, DWORD PTR j$8[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	movzx	edx, WORD PTR fastv$7[rbp]
	mov	WORD PTR [rcx+rax*2], dx
; Line 4105
	mov	eax, DWORD PTR s$5[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv289[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv289[rbp]
	shl	eax, cl
	mov	ecx, DWORD PTR j$8[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR j$8[rbp], eax
; Line 4106
	jmp	SHORT $LN14@stbi__zbui
$LN15@stbi__zbui:
$LN20@stbi__zbui:
; Line 4108
	movsxd	rax, DWORD PTR s$5[rbp]
	mov	eax, DWORD PTR next_code$[rbp+rax*4]
	inc	eax
	movsxd	rcx, DWORD PTR s$5[rbp]
	mov	DWORD PTR next_code$[rbp+rcx*4], eax
$LN19@stbi__zbui:
; Line 4110
	jmp	$LN11@stbi__zbui
$LN12@stbi__zbui:
; Line 4111
	mov	eax, 1
$LN1@stbi__zbui:
; Line 4112
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+632]
	pop	rdi
	pop	rbp
	ret	0
?stbi__zbuild_huffman@@YAHPEAUstbi__zhuffman@@PEBEH@Z ENDP ; stbi__zbuild_huffman
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__bit_reverse@@YAHHH@Z
_TEXT	SEGMENT
v$ = 224
bits$ = 232
?stbi__bit_reverse@@YAHHH@Z PROC			; stbi__bit_reverse, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4060
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4061
	cmp	DWORD PTR bits$[rbp], 16
	jle	SHORT $LN3@stbi__bit_
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__bit_reverse@@YAHHH@Z@4JA
	inc	eax
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1BG@HKNLHECB@?$AAb?$AAi?$AAt?$AAs?$AA?5?$AA?$DM?$AA?$DN?$AA?5?$AA1?$AA6@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN3@stbi__bit_:
; Line 4064
	mov	ecx, DWORD PTR v$[rbp]
	call	?stbi__bitreverse16@@YAHH@Z		; stbi__bitreverse16
	mov	ecx, 16
	sub	ecx, DWORD PTR bits$[rbp]
	sar	eax, cl
; Line 4065
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__bit_reverse@@YAHHH@Z ENDP			; stbi__bit_reverse
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__bitreverse16@@YAHH@Z
_TEXT	SEGMENT
n$ = 224
?stbi__bitreverse16@@YAHH@Z PROC			; stbi__bitreverse16, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4051
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4052
	mov	eax, DWORD PTR n$[rbp]
	and	eax, 43690				; 0000aaaaH
	sar	eax, 1
	mov	ecx, DWORD PTR n$[rbp]
	and	ecx, 21845				; 00005555H
	shl	ecx, 1
	or	eax, ecx
	mov	DWORD PTR n$[rbp], eax
; Line 4053
	mov	eax, DWORD PTR n$[rbp]
	and	eax, 52428				; 0000ccccH
	sar	eax, 2
	mov	ecx, DWORD PTR n$[rbp]
	and	ecx, 13107				; 00003333H
	shl	ecx, 2
	or	eax, ecx
	mov	DWORD PTR n$[rbp], eax
; Line 4054
	mov	eax, DWORD PTR n$[rbp]
	and	eax, 61680				; 0000f0f0H
	sar	eax, 4
	mov	ecx, DWORD PTR n$[rbp]
	and	ecx, 3855				; 00000f0fH
	shl	ecx, 4
	or	eax, ecx
	mov	DWORD PTR n$[rbp], eax
; Line 4055
	mov	eax, DWORD PTR n$[rbp]
	and	eax, 65280				; 0000ff00H
	sar	eax, 8
	mov	ecx, DWORD PTR n$[rbp]
	and	ecx, 255				; 000000ffH
	shl	ecx, 8
	or	eax, ecx
	mov	DWORD PTR n$[rbp], eax
; Line 4056
	mov	eax, DWORD PTR n$[rbp]
; Line 4057
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__bitreverse16@@YAHH@Z ENDP			; stbi__bitreverse16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_info_raw@@YAHPEAUstbi__jpeg@@PEAH11@Z
_TEXT	SEGMENT
tv80 = 192
j$ = 240
x$ = 248
y$ = 256
comp$ = 264
?stbi__jpeg_info_raw@@YAHPEAUstbi__jpeg@@PEAH11@Z PROC	; stbi__jpeg_info_raw, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4001
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4002
	mov	edx, 2
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z ; stbi__decode_jpeg_header
	test	eax, eax
	jne	SHORT $LN2@stbi__jpeg
; Line 4003
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 4004
	xor	eax, eax
	jmp	$LN1@stbi__jpeg
$LN2@stbi__jpeg:
; Line 4006
	cmp	QWORD PTR x$[rbp], 0
	je	SHORT $LN3@stbi__jpeg
	mov	rax, QWORD PTR j$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR x$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx], eax
$LN3@stbi__jpeg:
; Line 4007
	cmp	QWORD PTR y$[rbp], 0
	je	SHORT $LN4@stbi__jpeg
	mov	rax, QWORD PTR j$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR y$[rbp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR [rcx], eax
$LN4@stbi__jpeg:
; Line 4008
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN5@stbi__jpeg
	mov	rax, QWORD PTR j$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	DWORD PTR [rax+8], 3
	jl	SHORT $LN7@stbi__jpeg
	mov	DWORD PTR tv80[rbp], 3
	jmp	SHORT $LN8@stbi__jpeg
$LN7@stbi__jpeg:
	mov	DWORD PTR tv80[rbp], 1
$LN8@stbi__jpeg:
	mov	rax, QWORD PTR comp$[rbp]
	mov	ecx, DWORD PTR tv80[rbp]
	mov	DWORD PTR [rax], ecx
$LN5@stbi__jpeg:
; Line 4009
	mov	eax, 1
$LN1@stbi__jpeg:
; Line 4010
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_info_raw@@YAHPEAUstbi__jpeg@@PEAH11@Z ENDP	; stbi__jpeg_info_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z
_TEXT	SEGMENT
n$ = 4
decode_n$ = 36
is_rgb$ = 68
k$5 = 100
i$6 = 132
j$7 = 164
output$8 = 200
coutput$9 = 232
res_comp$10 = 304
r$11 = 520
out$12 = 552
r$13 = 584
y_bot$14 = 612
y$15 = 648
m$16 = 676
m$17 = 708
m$18 = 740
r$19 = 772
g$20 = 804
b$21 = 836
y$22 = 872
tv709 = 1268
tv671 = 1268
tv641 = 1268
tv560 = 1268
tv531 = 1268
tv297 = 1268
tv289 = 1268
tv255 = 1268
tv234 = 1268
tv160 = 1268
tv92 = 1268
tv82 = 1268
tv71 = 1268
tv482 = 1272
tv426 = 1272
tv361 = 1272
tv286 = 1272
tv174 = 1272
tv166 = 1272
tv80 = 1272
tv284 = 1280
tv282 = 1284
tv268 = 1288
tv273 = 1296
__$ArrayPad$ = 1304
z$ = 1344
out_x$ = 1352
out_y$ = 1360
comp$ = 1368
req_comp$ = 1376
?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z PROC	; load_jpeg_image, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3812
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1368				; 00000558H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 234				; 000000eaH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1400]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3814
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	DWORD PTR [rax+8], 0
; Line 3817
	cmp	DWORD PTR req_comp$[rbp], 0
	jl	SHORT $LN42@load_jpeg_
	cmp	DWORD PTR req_comp$[rbp], 4
	jle	SHORT $LN41@load_jpeg_
$LN42@load_jpeg_:
	lea	rcx, OFFSET FLAT:??_C@_0N@KBPNPPBJ@bad?5req_comp@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN83@load_jpeg_
	mov	DWORD PTR tv71[rbp], 0
	jmp	SHORT $LN84@load_jpeg_
$LN83@load_jpeg_:
	mov	DWORD PTR tv71[rbp], 0
$LN84@load_jpeg_:
	movsxd	rax, DWORD PTR tv71[rbp]
	jmp	$LN1@load_jpeg_
$LN41@load_jpeg_:
; Line 3820
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__decode_jpeg_image@@YAHPEAUstbi__jpeg@@@Z ; stbi__decode_jpeg_image
	test	eax, eax
	jne	SHORT $LN43@load_jpeg_
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z ; stbi__cleanup_jpeg
	xor	eax, eax
	jmp	$LN1@load_jpeg_
$LN43@load_jpeg_:
; Line 3823
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN87@load_jpeg_
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR tv82[rbp], eax
	jmp	SHORT $LN88@load_jpeg_
$LN87@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	DWORD PTR [rax+8], 3
	jl	SHORT $LN85@load_jpeg_
	mov	DWORD PTR tv80[rbp], 3
	jmp	SHORT $LN86@load_jpeg_
$LN85@load_jpeg_:
	mov	DWORD PTR tv80[rbp], 1
$LN86@load_jpeg_:
	mov	eax, DWORD PTR tv80[rbp]
	mov	DWORD PTR tv82[rbp], eax
$LN88@load_jpeg_:
	mov	eax, DWORD PTR tv82[rbp]
	mov	DWORD PTR n$[rbp], eax
; Line 3825
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	DWORD PTR [rax+8], 3
	jne	SHORT $LN91@load_jpeg_
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18512], 3
	je	SHORT $LN90@load_jpeg_
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18508], 0
	jne	SHORT $LN89@load_jpeg_
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18504], 0
	jne	SHORT $LN91@load_jpeg_
$LN90@load_jpeg_:
	mov	DWORD PTR tv92[rbp], 1
	jmp	SHORT $LN92@load_jpeg_
$LN91@load_jpeg_:
$LN89@load_jpeg_:
	mov	DWORD PTR tv92[rbp], 0
$LN92@load_jpeg_:
	mov	eax, DWORD PTR tv92[rbp]
	mov	DWORD PTR is_rgb$[rbp], eax
; Line 3827
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	DWORD PTR [rax+8], 3
	jne	SHORT $LN44@load_jpeg_
	cmp	DWORD PTR n$[rbp], 3
	jge	SHORT $LN44@load_jpeg_
	cmp	DWORD PTR is_rgb$[rbp], 0
	jne	SHORT $LN44@load_jpeg_
; Line 3828
	mov	DWORD PTR decode_n$[rbp], 1
	jmp	SHORT $LN45@load_jpeg_
$LN44@load_jpeg_:
; Line 3830
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR decode_n$[rbp], eax
$LN45@load_jpeg_:
; Line 3834
	cmp	DWORD PTR decode_n$[rbp], 0
	jg	SHORT $LN46@load_jpeg_
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z ; stbi__cleanup_jpeg
	xor	eax, eax
	jmp	$LN1@load_jpeg_
$LN46@load_jpeg_:
; Line 3841
	mov	QWORD PTR coutput$9[rbp], 0
	mov	QWORD PTR coutput$9[rbp+8], 0
	mov	QWORD PTR coutput$9[rbp+16], 0
	mov	QWORD PTR coutput$9[rbp+24], 0
; Line 3845
	mov	DWORD PTR k$5[rbp], 0
	jmp	SHORT $LN4@load_jpeg_
$LN2@load_jpeg_:
	mov	eax, DWORD PTR k$5[rbp]
	inc	eax
	mov	DWORD PTR k$5[rbp], eax
$LN4@load_jpeg_:
	mov	eax, DWORD PTR decode_n$[rbp]
	cmp	DWORD PTR k$5[rbp], eax
	jge	$LN3@load_jpeg_
; Line 3846
	movsxd	rax, DWORD PTR k$5[rbp]
	imul	rax, rax, 48				; 00000030H
	lea	rax, QWORD PTR res_comp$10[rbp+rax]
	mov	QWORD PTR r$11[rbp], rax
; Line 3850
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	add	eax, 3
	mov	eax, eax
	mov	ecx, eax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	movsxd	rcx, DWORD PTR k$5[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rdx+rcx+18152], rax
; Line 3851
	movsxd	rax, DWORD PTR k$5[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	QWORD PTR [rcx+rax+18152], 0
	jne	SHORT $LN47@load_jpeg_
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z ; stbi__cleanup_jpeg
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN93@load_jpeg_
	mov	DWORD PTR tv160[rbp], 0
	jmp	SHORT $LN94@load_jpeg_
$LN93@load_jpeg_:
	mov	DWORD PTR tv160[rbp], 0
$LN94@load_jpeg_:
	movsxd	rax, DWORD PTR tv160[rbp]
	jmp	$LN1@load_jpeg_
$LN47@load_jpeg_:
; Line 3853
	movsxd	rax, DWORD PTR k$5[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	QWORD PTR tv166[rbp], rax
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+18056]
	cdq
	mov	rcx, QWORD PTR z$[rbp]
	mov	r8, QWORD PTR tv166[rbp]
	idiv	DWORD PTR [rcx+r8+18084]
	mov	rcx, QWORD PTR r$11[rbp]
	mov	DWORD PTR [rcx+24], eax
; Line 3854
	movsxd	rax, DWORD PTR k$5[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	QWORD PTR tv174[rbp], rax
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+18060]
	cdq
	mov	rcx, QWORD PTR z$[rbp]
	mov	r8, QWORD PTR tv174[rbp]
	idiv	DWORD PTR [rcx+r8+18088]
	mov	rcx, QWORD PTR r$11[rbp]
	mov	DWORD PTR [rcx+28], eax
; Line 3855
	mov	rax, QWORD PTR r$11[rbp]
	mov	eax, DWORD PTR [rax+28]
	sar	eax, 1
	mov	rcx, QWORD PTR r$11[rbp]
	mov	DWORD PTR [rcx+36], eax
; Line 3856
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR r$11[rbp]
	mov	ecx, DWORD PTR [rcx+24]
	lea	eax, DWORD PTR [rax+rcx-1]
	xor	edx, edx
	mov	rcx, QWORD PTR r$11[rbp]
	div	DWORD PTR [rcx+24]
	mov	rcx, QWORD PTR r$11[rbp]
	mov	DWORD PTR [rcx+32], eax
; Line 3857
	mov	rax, QWORD PTR r$11[rbp]
	mov	DWORD PTR [rax+40], 0
; Line 3858
	movsxd	rax, DWORD PTR k$5[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR r$11[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rdx+rax+18128]
	mov	QWORD PTR [rcx+16], rax
	mov	rax, QWORD PTR r$11[rbp]
	mov	rcx, QWORD PTR r$11[rbp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+8], rcx
; Line 3860
	mov	rax, QWORD PTR r$11[rbp]
	cmp	DWORD PTR [rax+24], 1
	jne	SHORT $LN48@load_jpeg_
	mov	rax, QWORD PTR r$11[rbp]
	cmp	DWORD PTR [rax+28], 1
	jne	SHORT $LN48@load_jpeg_
	mov	rax, QWORD PTR r$11[rbp]
	lea	rcx, OFFSET FLAT:?resample_row_1@@YAPEAEPEAE00HH@Z ; resample_row_1
	mov	QWORD PTR [rax], rcx
	jmp	$LN49@load_jpeg_
$LN48@load_jpeg_:
; Line 3861
	mov	rax, QWORD PTR r$11[rbp]
	cmp	DWORD PTR [rax+24], 1
	jne	SHORT $LN50@load_jpeg_
	mov	rax, QWORD PTR r$11[rbp]
	cmp	DWORD PTR [rax+28], 2
	jne	SHORT $LN50@load_jpeg_
	mov	rax, QWORD PTR r$11[rbp]
	lea	rcx, OFFSET FLAT:?stbi__resample_row_v_2@@YAPEAEPEAE00HH@Z ; stbi__resample_row_v_2
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN51@load_jpeg_
$LN50@load_jpeg_:
; Line 3862
	mov	rax, QWORD PTR r$11[rbp]
	cmp	DWORD PTR [rax+24], 2
	jne	SHORT $LN52@load_jpeg_
	mov	rax, QWORD PTR r$11[rbp]
	cmp	DWORD PTR [rax+28], 1
	jne	SHORT $LN52@load_jpeg_
	mov	rax, QWORD PTR r$11[rbp]
	lea	rcx, OFFSET FLAT:?stbi__resample_row_h_2@@YAPEAEPEAE00HH@Z ; stbi__resample_row_h_2
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN53@load_jpeg_
$LN52@load_jpeg_:
; Line 3863
	mov	rax, QWORD PTR r$11[rbp]
	cmp	DWORD PTR [rax+24], 2
	jne	SHORT $LN54@load_jpeg_
	mov	rax, QWORD PTR r$11[rbp]
	cmp	DWORD PTR [rax+28], 2
	jne	SHORT $LN54@load_jpeg_
	mov	rax, QWORD PTR r$11[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx+18560]
	mov	QWORD PTR [rax], rcx
	jmp	SHORT $LN55@load_jpeg_
$LN54@load_jpeg_:
; Line 3864
	mov	rax, QWORD PTR r$11[rbp]
	lea	rcx, OFFSET FLAT:?stbi__resample_row_generic@@YAPEAEPEAE00HH@Z ; stbi__resample_row_generic
	mov	QWORD PTR [rax], rcx
$LN55@load_jpeg_:
$LN53@load_jpeg_:
$LN51@load_jpeg_:
$LN49@load_jpeg_:
; Line 3865
	jmp	$LN2@load_jpeg_
$LN3@load_jpeg_:
; Line 3868
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	r9d, 1
	mov	r8d, DWORD PTR [rax+4]
	mov	edx, DWORD PTR [rcx]
	mov	ecx, DWORD PTR n$[rbp]
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	mov	QWORD PTR output$8[rbp], rax
; Line 3869
	cmp	QWORD PTR output$8[rbp], 0
	jne	SHORT $LN56@load_jpeg_
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z ; stbi__cleanup_jpeg
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN95@load_jpeg_
	mov	DWORD PTR tv234[rbp], 0
	jmp	SHORT $LN96@load_jpeg_
$LN95@load_jpeg_:
	mov	DWORD PTR tv234[rbp], 0
$LN96@load_jpeg_:
	movsxd	rax, DWORD PTR tv234[rbp]
	jmp	$LN1@load_jpeg_
$LN56@load_jpeg_:
; Line 3872
	mov	DWORD PTR j$7[rbp], 0
	jmp	SHORT $LN7@load_jpeg_
$LN5@load_jpeg_:
	mov	eax, DWORD PTR j$7[rbp]
	inc	eax
	mov	DWORD PTR j$7[rbp], eax
$LN7@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR j$7[rbp], eax
	jae	$LN6@load_jpeg_
; Line 3873
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, DWORD PTR n$[rbp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	imul	eax, DWORD PTR j$7[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR output$8[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$12[rbp], rax
; Line 3874
	mov	DWORD PTR k$5[rbp], 0
	jmp	SHORT $LN10@load_jpeg_
$LN8@load_jpeg_:
	mov	eax, DWORD PTR k$5[rbp]
	inc	eax
	mov	DWORD PTR k$5[rbp], eax
$LN10@load_jpeg_:
	mov	eax, DWORD PTR decode_n$[rbp]
	cmp	DWORD PTR k$5[rbp], eax
	jge	$LN9@load_jpeg_
; Line 3875
	movsxd	rax, DWORD PTR k$5[rbp]
	imul	rax, rax, 48				; 00000030H
	lea	rax, QWORD PTR res_comp$10[rbp+rax]
	mov	QWORD PTR r$13[rbp], rax
; Line 3876
	mov	rax, QWORD PTR r$13[rbp]
	mov	eax, DWORD PTR [rax+28]
	sar	eax, 1
	mov	rcx, QWORD PTR r$13[rbp]
	cmp	DWORD PTR [rcx+36], eax
	jl	SHORT $LN97@load_jpeg_
	mov	DWORD PTR tv255[rbp], 1
	jmp	SHORT $LN98@load_jpeg_
$LN97@load_jpeg_:
	mov	DWORD PTR tv255[rbp], 0
$LN98@load_jpeg_:
	mov	eax, DWORD PTR tv255[rbp]
	mov	DWORD PTR y_bot$14[rbp], eax
; Line 3877
	mov	rax, QWORD PTR r$13[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv286[rbp], rax
	mov	rax, QWORD PTR r$13[rbp]
	mov	eax, DWORD PTR [rax+24]
	mov	DWORD PTR tv284[rbp], eax
	mov	rax, QWORD PTR r$13[rbp]
	mov	eax, DWORD PTR [rax+32]
	mov	DWORD PTR tv282[rbp], eax
	cmp	DWORD PTR y_bot$14[rbp], 0
	je	SHORT $LN99@load_jpeg_
	mov	rax, QWORD PTR r$13[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv268[rbp], rax
	jmp	SHORT $LN100@load_jpeg_
$LN99@load_jpeg_:
	mov	rax, QWORD PTR r$13[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv268[rbp], rax
$LN100@load_jpeg_:
	cmp	DWORD PTR y_bot$14[rbp], 0
	je	SHORT $LN101@load_jpeg_
	mov	rax, QWORD PTR r$13[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv273[rbp], rax
	jmp	SHORT $LN102@load_jpeg_
$LN101@load_jpeg_:
	mov	rax, QWORD PTR r$13[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv273[rbp], rax
$LN102@load_jpeg_:
	movsxd	rax, DWORD PTR k$5[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	ecx, DWORD PTR tv284[rbp]
	mov	DWORD PTR [rsp+32], ecx
	mov	r9d, DWORD PTR tv282[rbp]
	mov	r8, QWORD PTR tv268[rbp]
	mov	rdx, QWORD PTR tv273[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx+rax+18152]
	call	QWORD PTR tv286[rbp]
	movsxd	rcx, DWORD PTR k$5[rbp]
	mov	QWORD PTR coutput$9[rbp+rcx*8], rax
; Line 3881
	mov	rax, QWORD PTR r$13[rbp]
	mov	eax, DWORD PTR [rax+36]
	inc	eax
	mov	DWORD PTR tv289[rbp], eax
	mov	rax, QWORD PTR r$13[rbp]
	mov	ecx, DWORD PTR tv289[rbp]
	mov	DWORD PTR [rax+36], ecx
	mov	rax, QWORD PTR r$13[rbp]
	mov	eax, DWORD PTR [rax+28]
	cmp	DWORD PTR tv289[rbp], eax
	jl	$LN57@load_jpeg_
; Line 3882
	mov	rax, QWORD PTR r$13[rbp]
	mov	DWORD PTR [rax+36], 0
; Line 3883
	mov	rax, QWORD PTR r$13[rbp]
	mov	rcx, QWORD PTR r$13[rbp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+8], rcx
; Line 3884
	mov	rax, QWORD PTR r$13[rbp]
	mov	eax, DWORD PTR [rax+40]
	inc	eax
	mov	DWORD PTR tv297[rbp], eax
	mov	rax, QWORD PTR r$13[rbp]
	mov	ecx, DWORD PTR tv297[rbp]
	mov	DWORD PTR [rax+40], ecx
	movsxd	rax, DWORD PTR k$5[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18112]
	cmp	DWORD PTR tv297[rbp], eax
	jge	SHORT $LN58@load_jpeg_
; Line 3885
	movsxd	rax, DWORD PTR k$5[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	movsxd	rax, DWORD PTR [rcx+rax+18116]
	mov	rcx, QWORD PTR r$13[rbp]
	add	rax, QWORD PTR [rcx+16]
	mov	rcx, QWORD PTR r$13[rbp]
	mov	QWORD PTR [rcx+16], rax
$LN58@load_jpeg_:
$LN57@load_jpeg_:
; Line 3887
	jmp	$LN8@load_jpeg_
$LN9@load_jpeg_:
; Line 3888
	cmp	DWORD PTR n$[rbp], 3
	jl	$LN59@load_jpeg_
; Line 3889
	mov	eax, 8
	imul	rax, rax, 0
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	mov	QWORD PTR y$15[rbp], rax
; Line 3890
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	DWORD PTR [rax+8], 3
	jne	$LN61@load_jpeg_
; Line 3891
	cmp	DWORD PTR is_rgb$[rbp], 0
	je	$LN63@load_jpeg_
; Line 3892
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN13@load_jpeg_
$LN11@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN13@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	$LN12@load_jpeg_
; Line 3893
	mov	eax, DWORD PTR i$6[rbp]
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$12[rbp]
	mov	r8, QWORD PTR y$15[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 3894
	mov	eax, 8
	imul	rax, rax, 1
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	mov	edx, 1
	imul	rdx, rdx, 1
	mov	r8, QWORD PTR out$12[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
; Line 3895
	mov	eax, 8
	imul	rax, rax, 2
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	mov	edx, 1
	imul	rdx, rdx, 2
	mov	r8, QWORD PTR out$12[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
; Line 3896
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 3897
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$12[rbp], rax
; Line 3898
	jmp	$LN11@load_jpeg_
$LN12@load_jpeg_:
; Line 3899
	jmp	SHORT $LN64@load_jpeg_
$LN63@load_jpeg_:
; Line 3900
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax+18552]
	mov	QWORD PTR tv361[rbp], rax
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	edx, 8
	imul	rdx, rdx, 1
	mov	r8d, DWORD PTR n$[rbp]
	mov	DWORD PTR [rsp+40], r8d
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR coutput$9[rbp+rcx]
	mov	r8, QWORD PTR coutput$9[rbp+rdx]
	mov	rdx, QWORD PTR y$15[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	call	QWORD PTR tv361[rbp]
$LN64@load_jpeg_:
; Line 3901
	jmp	$LN62@load_jpeg_
$LN61@load_jpeg_:
; Line 3902
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	DWORD PTR [rax+8], 4
	jne	$LN65@load_jpeg_
; Line 3903
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18508], 0
	jne	$LN67@load_jpeg_
; Line 3904
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN16@load_jpeg_
$LN14@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN16@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	$LN15@load_jpeg_
; Line 3905
	mov	eax, 8
	imul	rax, rax, 3
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR m$16[rbp], al
; Line 3906
	mov	eax, 8
	imul	rax, rax, 0
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	edx, BYTE PTR m$16[rbp]
	movzx	ecx, BYTE PTR [rax+rcx]
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3907
	mov	eax, 8
	imul	rax, rax, 1
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	edx, BYTE PTR m$16[rbp]
	movzx	ecx, BYTE PTR [rax+rcx]
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3908
	mov	eax, 8
	imul	rax, rax, 2
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	edx, BYTE PTR m$16[rbp]
	movzx	ecx, BYTE PTR [rax+rcx]
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3909
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 3910
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$12[rbp], rax
; Line 3911
	jmp	$LN14@load_jpeg_
$LN15@load_jpeg_:
; Line 3912
	jmp	$LN68@load_jpeg_
$LN67@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18508], 2
	jne	$LN69@load_jpeg_
; Line 3913
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax+18552]
	mov	QWORD PTR tv426[rbp], rax
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	edx, 8
	imul	rdx, rdx, 1
	mov	r8d, DWORD PTR n$[rbp]
	mov	DWORD PTR [rsp+40], r8d
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR coutput$9[rbp+rcx]
	mov	r8, QWORD PTR coutput$9[rbp+rdx]
	mov	rdx, QWORD PTR y$15[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	call	QWORD PTR tv426[rbp]
; Line 3914
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN19@load_jpeg_
$LN17@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN19@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	$LN18@load_jpeg_
; Line 3915
	mov	eax, 8
	imul	rax, rax, 3
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR m$17[rbp], al
; Line 3916
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR out$12[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 255				; 000000ffH
	sub	ecx, eax
	mov	eax, ecx
	movzx	edx, BYTE PTR m$17[rbp]
	movzx	ecx, al
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3917
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR out$12[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 255				; 000000ffH
	sub	ecx, eax
	mov	eax, ecx
	movzx	edx, BYTE PTR m$17[rbp]
	movzx	ecx, al
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3918
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR out$12[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 255				; 000000ffH
	sub	ecx, eax
	mov	eax, ecx
	movzx	edx, BYTE PTR m$17[rbp]
	movzx	ecx, al
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3919
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$12[rbp], rax
; Line 3920
	jmp	$LN17@load_jpeg_
$LN18@load_jpeg_:
; Line 3921
	jmp	SHORT $LN70@load_jpeg_
$LN69@load_jpeg_:
; Line 3922
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax+18552]
	mov	QWORD PTR tv482[rbp], rax
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	ecx, 8
	imul	rcx, rcx, 2
	mov	edx, 8
	imul	rdx, rdx, 1
	mov	r8d, DWORD PTR n$[rbp]
	mov	DWORD PTR [rsp+40], r8d
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR coutput$9[rbp+rcx]
	mov	r8, QWORD PTR coutput$9[rbp+rdx]
	mov	rdx, QWORD PTR y$15[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	call	QWORD PTR tv482[rbp]
$LN70@load_jpeg_:
$LN68@load_jpeg_:
; Line 3924
	jmp	$LN66@load_jpeg_
$LN65@load_jpeg_:
; Line 3925
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN22@load_jpeg_
$LN20@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN22@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	$LN21@load_jpeg_
; Line 3926
	mov	eax, DWORD PTR i$6[rbp]
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR out$12[rbp]
	mov	r8, QWORD PTR y$15[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR out$12[rbp]
	mov	r8, QWORD PTR out$12[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$12[rbp]
	mov	r8, QWORD PTR out$12[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 3927
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 3928
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$12[rbp], rax
; Line 3929
	jmp	$LN20@load_jpeg_
$LN21@load_jpeg_:
$LN66@load_jpeg_:
$LN62@load_jpeg_:
; Line 3930
	jmp	$LN60@load_jpeg_
$LN59@load_jpeg_:
; Line 3931
	cmp	DWORD PTR is_rgb$[rbp], 0
	je	$LN71@load_jpeg_
; Line 3932
	cmp	DWORD PTR n$[rbp], 1
	jne	$LN73@load_jpeg_
; Line 3933
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN25@load_jpeg_
$LN23@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN25@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	$LN24@load_jpeg_
; Line 3934
	mov	eax, 8
	imul	rax, rax, 2
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	edx, DWORD PTR i$6[rbp]
	mov	rcx, QWORD PTR coutput$9[rbp+rcx]
	movzx	ecx, BYTE PTR [rcx+rdx]
	mov	edx, 8
	imul	rdx, rdx, 0
	mov	r8d, DWORD PTR i$6[rbp]
	mov	rdx, QWORD PTR coutput$9[rbp+rdx]
	movzx	edx, BYTE PTR [rdx+r8]
	mov	DWORD PTR tv531[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv531[rbp]
	mov	ecx, eax
	call	?stbi__compute_y@@YAEHHH@Z		; stbi__compute_y
	mov	rcx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR out$12[rbp]
	inc	rax
	mov	QWORD PTR out$12[rbp], rax
	jmp	$LN23@load_jpeg_
$LN24@load_jpeg_:
	jmp	$LN74@load_jpeg_
$LN73@load_jpeg_:
; Line 3936
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN28@load_jpeg_
$LN26@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
	mov	rax, QWORD PTR out$12[rbp]
	add	rax, 2
	mov	QWORD PTR out$12[rbp], rax
$LN28@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	$LN27@load_jpeg_
; Line 3937
	mov	eax, 8
	imul	rax, rax, 2
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	ecx, 8
	imul	rcx, rcx, 1
	mov	edx, DWORD PTR i$6[rbp]
	mov	rcx, QWORD PTR coutput$9[rbp+rcx]
	movzx	ecx, BYTE PTR [rcx+rdx]
	mov	edx, 8
	imul	rdx, rdx, 0
	mov	r8d, DWORD PTR i$6[rbp]
	mov	rdx, QWORD PTR coutput$9[rbp+rdx]
	movzx	edx, BYTE PTR [rdx+r8]
	mov	DWORD PTR tv560[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv560[rbp]
	mov	ecx, eax
	call	?stbi__compute_y@@YAEHHH@Z		; stbi__compute_y
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3938
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 3939
	jmp	$LN26@load_jpeg_
$LN27@load_jpeg_:
$LN74@load_jpeg_:
; Line 3940
	jmp	$LN72@load_jpeg_
$LN71@load_jpeg_:
; Line 3941
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	DWORD PTR [rax+8], 4
	jne	$LN75@load_jpeg_
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18508], 0
	jne	$LN75@load_jpeg_
; Line 3942
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN31@load_jpeg_
$LN29@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN31@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	$LN30@load_jpeg_
; Line 3943
	mov	eax, 8
	imul	rax, rax, 3
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR m$18[rbp], al
; Line 3944
	mov	eax, 8
	imul	rax, rax, 0
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	edx, BYTE PTR m$18[rbp]
	movzx	ecx, BYTE PTR [rax+rcx]
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	BYTE PTR r$19[rbp], al
; Line 3945
	mov	eax, 8
	imul	rax, rax, 1
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	edx, BYTE PTR m$18[rbp]
	movzx	ecx, BYTE PTR [rax+rcx]
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	BYTE PTR g$20[rbp], al
; Line 3946
	mov	eax, 8
	imul	rax, rax, 2
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	movzx	edx, BYTE PTR m$18[rbp]
	movzx	ecx, BYTE PTR [rax+rcx]
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	BYTE PTR b$21[rbp], al
; Line 3947
	movzx	eax, BYTE PTR b$21[rbp]
	movzx	ecx, BYTE PTR g$20[rbp]
	movzx	edx, BYTE PTR r$19[rbp]
	mov	DWORD PTR tv641[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv641[rbp]
	mov	ecx, eax
	call	?stbi__compute_y@@YAEHHH@Z		; stbi__compute_y
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3948
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 3949
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$12[rbp], rax
; Line 3950
	jmp	$LN29@load_jpeg_
$LN30@load_jpeg_:
; Line 3951
	jmp	$LN76@load_jpeg_
$LN75@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	DWORD PTR [rax+8], 4
	jne	$LN77@load_jpeg_
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18508], 2
	jne	$LN77@load_jpeg_
; Line 3952
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN34@load_jpeg_
$LN32@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN34@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	$LN33@load_jpeg_
; Line 3953
	mov	eax, 8
	imul	rax, rax, 3
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	mov	edx, 8
	imul	rdx, rdx, 0
	mov	r8d, DWORD PTR i$6[rbp]
	mov	rdx, QWORD PTR coutput$9[rbp+rdx]
	movzx	edx, BYTE PTR [rdx+r8]
	mov	r8d, 255				; 000000ffH
	sub	r8d, edx
	mov	edx, r8d
	mov	DWORD PTR tv671[rbp], edx
	movzx	edx, BYTE PTR [rax+rcx]
	mov	eax, DWORD PTR tv671[rbp]
	movzx	ecx, al
	call	?stbi__blinn_8x8@@YAEEE@Z		; stbi__blinn_8x8
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3954
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 3955
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$12[rbp], rax
; Line 3956
	jmp	$LN32@load_jpeg_
$LN33@load_jpeg_:
; Line 3957
	jmp	$LN78@load_jpeg_
$LN77@load_jpeg_:
; Line 3958
	mov	eax, 8
	imul	rax, rax, 0
	mov	rax, QWORD PTR coutput$9[rbp+rax]
	mov	QWORD PTR y$22[rbp], rax
; Line 3959
	cmp	DWORD PTR n$[rbp], 1
	jne	SHORT $LN79@load_jpeg_
; Line 3960
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN37@load_jpeg_
$LN35@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN37@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	SHORT $LN36@load_jpeg_
	mov	eax, DWORD PTR i$6[rbp]
	mov	ecx, DWORD PTR i$6[rbp]
	mov	rdx, QWORD PTR out$12[rbp]
	mov	r8, QWORD PTR y$22[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN35@load_jpeg_
$LN36@load_jpeg_:
	jmp	SHORT $LN80@load_jpeg_
$LN79@load_jpeg_:
; Line 3962
	mov	DWORD PTR i$6[rbp], 0
	jmp	SHORT $LN40@load_jpeg_
$LN38@load_jpeg_:
	mov	eax, DWORD PTR i$6[rbp]
	inc	eax
	mov	DWORD PTR i$6[rbp], eax
$LN40@load_jpeg_:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$6[rbp], eax
	jae	SHORT $LN39@load_jpeg_
	mov	eax, DWORD PTR i$6[rbp]
	mov	rcx, QWORD PTR out$12[rbp]
	mov	rdx, QWORD PTR y$22[rbp]
	movzx	eax, BYTE PTR [rdx+rax]
	mov	BYTE PTR [rcx], al
	mov	rax, QWORD PTR out$12[rbp]
	inc	rax
	mov	QWORD PTR out$12[rbp], rax
	mov	rax, QWORD PTR out$12[rbp]
	mov	BYTE PTR [rax], 255			; 000000ffH
	mov	rax, QWORD PTR out$12[rbp]
	inc	rax
	mov	QWORD PTR out$12[rbp], rax
	jmp	SHORT $LN38@load_jpeg_
$LN39@load_jpeg_:
$LN80@load_jpeg_:
$LN78@load_jpeg_:
$LN76@load_jpeg_:
$LN72@load_jpeg_:
$LN60@load_jpeg_:
; Line 3965
	jmp	$LN5@load_jpeg_
$LN6@load_jpeg_:
; Line 3966
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z ; stbi__cleanup_jpeg
; Line 3967
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR out_x$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rcx], eax
; Line 3968
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR out_y$[rbp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR [rcx], eax
; Line 3969
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN81@load_jpeg_
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	DWORD PTR [rax+8], 3
	jl	SHORT $LN103@load_jpeg_
	mov	DWORD PTR tv709[rbp], 3
	jmp	SHORT $LN104@load_jpeg_
$LN103@load_jpeg_:
	mov	DWORD PTR tv709[rbp], 1
$LN104@load_jpeg_:
	mov	rax, QWORD PTR comp$[rbp]
	mov	ecx, DWORD PTR tv709[rbp]
	mov	DWORD PTR [rax], ecx
$LN81@load_jpeg_:
; Line 3970
	mov	rax, QWORD PTR output$8[rbp]
$LN1@load_jpeg_:
; Line 3972
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1320]
	pop	rdi
	pop	rbp
	ret	0
?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z ENDP	; load_jpeg_image
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__blinn_8x8@@YAEEE@Z
_TEXT	SEGMENT
t$ = 4
x$ = 256
y$ = 264
?stbi__blinn_8x8@@YAEEE@Z PROC				; stbi__blinn_8x8, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3806
	mov	BYTE PTR [rsp+16], dl
	mov	BYTE PTR [rsp+8], cl
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3807
	movzx	eax, BYTE PTR x$[rbp]
	movzx	ecx, BYTE PTR y$[rbp]
	imul	eax, ecx
	add	eax, 128				; 00000080H
	mov	DWORD PTR t$[rbp], eax
; Line 3808
	mov	eax, DWORD PTR t$[rbp]
	shr	eax, 8
	mov	ecx, DWORD PTR t$[rbp]
	add	ecx, eax
	mov	eax, ecx
	shr	eax, 8
; Line 3809
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__blinn_8x8@@YAEEE@Z ENDP				; stbi__blinn_8x8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
j$ = 224
?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z PROC		; stbi__cleanup_jpeg, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3790
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3791
	mov	rax, QWORD PTR j$[rbp]
	mov	rax, QWORD PTR [rax]
	xor	r8d, r8d
	mov	edx, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z ; stbi__free_jpeg_components
; Line 3792
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__cleanup_jpeg@@YAXPEAUstbi__jpeg@@@Z ENDP		; stbi__cleanup_jpeg
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
j$ = 224
?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z PROC		; stbi__setup_jpeg, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3768
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3769
	mov	rax, QWORD PTR j$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__idct_block@@YAXPEAEHQEAF@Z ; stbi__idct_block
	mov	QWORD PTR [rax+18544], rcx
; Line 3770
	mov	rax, QWORD PTR j$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__YCbCr_to_RGB_row@@YAXPEAEPEBE11HH@Z ; stbi__YCbCr_to_RGB_row
	mov	QWORD PTR [rax+18552], rcx
; Line 3771
	mov	rax, QWORD PTR j$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__resample_row_hv_2@@YAPEAEPEAE00HH@Z ; stbi__resample_row_hv_2
	mov	QWORD PTR [rax+18560], rcx
; Line 3774
	call	?stbi__sse2_available@@YAHXZ		; stbi__sse2_available
	test	eax, eax
	je	SHORT $LN2@stbi__setu
; Line 3775
	mov	rax, QWORD PTR j$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__idct_simd@@YAXPEAEHQEAF@Z ; stbi__idct_simd
	mov	QWORD PTR [rax+18544], rcx
; Line 3776
	mov	rax, QWORD PTR j$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__YCbCr_to_RGB_simd@@YAXPEAEPEBE11HH@Z ; stbi__YCbCr_to_RGB_simd
	mov	QWORD PTR [rax+18552], rcx
; Line 3777
	mov	rax, QWORD PTR j$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z ; stbi__resample_row_hv_2_simd
	mov	QWORD PTR [rax+18560], rcx
$LN2@stbi__setu:
; Line 3786
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z ENDP		; stbi__setup_jpeg
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__YCbCr_to_RGB_simd@@YAXPEAEPEBE11HH@Z
_TEXT	SEGMENT
i$ = 4
signflip$1 = 48
cr_const0$2 = 96
cr_const1$3 = 144
cb_const0$4 = 192
cb_const1$5 = 240
y_bias$6 = 288
xw$7 = 336
y_bytes$8 = 384
cr_bytes$9 = 432
cb_bytes$10 = 480
cr_biased$11 = 528
cb_biased$12 = 576
yw$13 = 624
crw$14 = 672
cbw$15 = 720
yws$16 = 768
cr0$17 = 816
cb0$18 = 864
cb1$19 = 912
cr1$20 = 960
rws$21 = 1008
gwt$22 = 1056
bws$23 = 1104
gws$24 = 1152
rw$25 = 1200
bw$26 = 1248
gw$27 = 1296
brb$28 = 1344
gxb$29 = 1392
t0$30 = 1440
t1$31 = 1488
o0$32 = 1536
o1$33 = 1584
y_fixed$34 = 1620
r$35 = 1652
g$36 = 1684
b$37 = 1716
cr$38 = 1748
cb$39 = 1780
$T40 = 3168
$T41 = 3216
$T42 = 3264
$T43 = 3312
$T44 = 3360
$T45 = 3408
$T46 = 3456
$T47 = 3504
$T48 = 3552
$T49 = 3600
$T50 = 3648
$T51 = 3696
$T52 = 3744
$T53 = 3792
$T54 = 3840
$T55 = 3888
$T56 = 3936
$T57 = 3984
$T58 = 4032
$T59 = 4080
$T60 = 4128
$T61 = 4176
$T62 = 4224
$T63 = 4272
$T64 = 4320
$T65 = 4368
$T66 = 4416
$T67 = 4464
$T68 = 4512
$T69 = 4560
$T70 = 4608
$T71 = 4656
$T72 = 4704
$T73 = 4752
$T74 = 4800
out$ = 4864
y$ = 4872
pcb$ = 4880
pcr$ = 4888
count$ = 4896
step$ = 4904
?stbi__YCbCr_to_RGB_simd@@YAXPEAEPEBE11HH@Z PROC	; stbi__YCbCr_to_RGB_simd, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3633
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 4872				; 00001308H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3634
	mov	DWORD PTR i$[rbp], 0
; Line 3640
	cmp	DWORD PTR step$[rbp], 4
	jne	$LN8@stbi__YCbC
; Line 3642
	movdqa	xmm0, XMMWORD PTR __xmm@80808080808080808080808080808080
	movdqa	XMMWORD PTR $T40[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T40[rbp]
	movdqa	XMMWORD PTR signflip$1[rbp], xmm0
; Line 3643
	movdqa	xmm0, XMMWORD PTR __xmm@166f166f166f166f166f166f166f166f
	movdqa	XMMWORD PTR $T41[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T41[rbp]
	movdqa	XMMWORD PTR cr_const0$2[rbp], xmm0
; Line 3644
	movdqa	xmm0, XMMWORD PTR __xmm@f493f493f493f493f493f493f493f493
	movdqa	XMMWORD PTR $T42[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T42[rbp]
	movdqa	XMMWORD PTR cr_const1$3[rbp], xmm0
; Line 3645
	movdqa	xmm0, XMMWORD PTR __xmm@fa7efa7efa7efa7efa7efa7efa7efa7e
	movdqa	XMMWORD PTR $T43[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T43[rbp]
	movdqa	XMMWORD PTR cb_const0$4[rbp], xmm0
; Line 3646
	movdqa	xmm0, XMMWORD PTR __xmm@1c5a1c5a1c5a1c5a1c5a1c5a1c5a1c5a
	movdqa	XMMWORD PTR $T44[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T44[rbp]
	movdqa	XMMWORD PTR cb_const1$5[rbp], xmm0
; Line 3647
	movdqa	xmm0, XMMWORD PTR __xmm@80808080808080808080808080808080
	movdqa	XMMWORD PTR $T45[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T45[rbp]
	movdqa	XMMWORD PTR y_bias$6[rbp], xmm0
; Line 3648
	movdqa	xmm0, XMMWORD PTR __xmm@00ff00ff00ff00ff00ff00ff00ff00ff
	movdqa	XMMWORD PTR $T46[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T46[rbp]
	movdqa	XMMWORD PTR xw$7[rbp], xmm0
; Line 3650
	jmp	SHORT $LN4@stbi__YCbC
$LN2@stbi__YCbC:
	mov	eax, DWORD PTR i$[rbp]
	add	eax, 8
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__YCbC:
	mov	eax, DWORD PTR i$[rbp]
	add	eax, 7
	cmp	eax, DWORD PTR count$[rbp]
	jge	$LN3@stbi__YCbC
; Line 3652
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR y$[rbp]
	add	rcx, rax
	mov	rax, rcx
	movq	xmm0, QWORD PTR [rax]
	movdqa	XMMWORD PTR $T47[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T47[rbp]
	movdqa	XMMWORD PTR y_bytes$8[rbp], xmm0
; Line 3653
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR pcr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	movq	xmm0, QWORD PTR [rax]
	movdqa	XMMWORD PTR $T48[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T48[rbp]
	movdqa	XMMWORD PTR cr_bytes$9[rbp], xmm0
; Line 3654
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR pcb$[rbp]
	add	rcx, rax
	mov	rax, rcx
	movq	xmm0, QWORD PTR [rax]
	movdqa	XMMWORD PTR $T49[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T49[rbp]
	movdqa	XMMWORD PTR cb_bytes$10[rbp], xmm0
; Line 3655
	movdqa	xmm0, XMMWORD PTR cr_bytes$9[rbp]
	pxor	xmm0, XMMWORD PTR signflip$1[rbp]
	movdqa	XMMWORD PTR $T50[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T50[rbp]
	movdqa	XMMWORD PTR cr_biased$11[rbp], xmm0
; Line 3656
	movdqa	xmm0, XMMWORD PTR cb_bytes$10[rbp]
	pxor	xmm0, XMMWORD PTR signflip$1[rbp]
	movdqa	XMMWORD PTR $T51[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T51[rbp]
	movdqa	XMMWORD PTR cb_biased$12[rbp], xmm0
; Line 3659
	movdqa	xmm0, XMMWORD PTR y_bias$6[rbp]
	punpcklbw xmm0, XMMWORD PTR y_bytes$8[rbp]
	movdqa	XMMWORD PTR $T52[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T52[rbp]
	movdqa	XMMWORD PTR yw$13[rbp], xmm0
; Line 3660
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T54[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T54[rbp]
	punpcklbw xmm0, XMMWORD PTR cr_biased$11[rbp]
	movdqa	XMMWORD PTR $T53[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T53[rbp]
	movdqa	XMMWORD PTR crw$14[rbp], xmm0
; Line 3661
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T56[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T56[rbp]
	punpcklbw xmm0, XMMWORD PTR cb_biased$12[rbp]
	movdqa	XMMWORD PTR $T55[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T55[rbp]
	movdqa	XMMWORD PTR cbw$15[rbp], xmm0
; Line 3664
	movdqa	xmm0, XMMWORD PTR yw$13[rbp]
	psrlw	xmm0, 4
	movdqa	XMMWORD PTR $T57[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T57[rbp]
	movdqa	XMMWORD PTR yws$16[rbp], xmm0
; Line 3665
	movdqa	xmm0, XMMWORD PTR cr_const0$2[rbp]
	pmulhw	xmm0, XMMWORD PTR crw$14[rbp]
	movdqa	XMMWORD PTR $T58[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T58[rbp]
	movdqa	XMMWORD PTR cr0$17[rbp], xmm0
; Line 3666
	movdqa	xmm0, XMMWORD PTR cb_const0$4[rbp]
	pmulhw	xmm0, XMMWORD PTR cbw$15[rbp]
	movdqa	XMMWORD PTR $T59[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T59[rbp]
	movdqa	XMMWORD PTR cb0$18[rbp], xmm0
; Line 3667
	movdqa	xmm0, XMMWORD PTR cbw$15[rbp]
	pmulhw	xmm0, XMMWORD PTR cb_const1$5[rbp]
	movdqa	XMMWORD PTR $T60[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T60[rbp]
	movdqa	XMMWORD PTR cb1$19[rbp], xmm0
; Line 3668
	movdqa	xmm0, XMMWORD PTR crw$14[rbp]
	pmulhw	xmm0, XMMWORD PTR cr_const1$3[rbp]
	movdqa	XMMWORD PTR $T61[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T61[rbp]
	movdqa	XMMWORD PTR cr1$20[rbp], xmm0
; Line 3669
	movdqa	xmm0, XMMWORD PTR cr0$17[rbp]
	paddw	xmm0, XMMWORD PTR yws$16[rbp]
	movdqa	XMMWORD PTR $T62[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T62[rbp]
	movdqa	XMMWORD PTR rws$21[rbp], xmm0
; Line 3670
	movdqa	xmm0, XMMWORD PTR cb0$18[rbp]
	paddw	xmm0, XMMWORD PTR yws$16[rbp]
	movdqa	XMMWORD PTR $T63[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T63[rbp]
	movdqa	XMMWORD PTR gwt$22[rbp], xmm0
; Line 3671
	movdqa	xmm0, XMMWORD PTR yws$16[rbp]
	paddw	xmm0, XMMWORD PTR cb1$19[rbp]
	movdqa	XMMWORD PTR $T64[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T64[rbp]
	movdqa	XMMWORD PTR bws$23[rbp], xmm0
; Line 3672
	movdqa	xmm0, XMMWORD PTR gwt$22[rbp]
	paddw	xmm0, XMMWORD PTR cr1$20[rbp]
	movdqa	XMMWORD PTR $T65[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T65[rbp]
	movdqa	XMMWORD PTR gws$24[rbp], xmm0
; Line 3675
	movdqa	xmm0, XMMWORD PTR rws$21[rbp]
	psraw	xmm0, 4
	movdqa	XMMWORD PTR $T66[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T66[rbp]
	movdqa	XMMWORD PTR rw$25[rbp], xmm0
; Line 3676
	movdqa	xmm0, XMMWORD PTR bws$23[rbp]
	psraw	xmm0, 4
	movdqa	XMMWORD PTR $T67[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T67[rbp]
	movdqa	XMMWORD PTR bw$26[rbp], xmm0
; Line 3677
	movdqa	xmm0, XMMWORD PTR gws$24[rbp]
	psraw	xmm0, 4
	movdqa	XMMWORD PTR $T68[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T68[rbp]
	movdqa	XMMWORD PTR gw$27[rbp], xmm0
; Line 3680
	movdqa	xmm0, XMMWORD PTR rw$25[rbp]
	packuswb xmm0, XMMWORD PTR bw$26[rbp]
	movdqa	XMMWORD PTR $T69[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T69[rbp]
	movdqa	XMMWORD PTR brb$28[rbp], xmm0
; Line 3681
	movdqa	xmm0, XMMWORD PTR gw$27[rbp]
	packuswb xmm0, XMMWORD PTR xw$7[rbp]
	movdqa	XMMWORD PTR $T70[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T70[rbp]
	movdqa	XMMWORD PTR gxb$29[rbp], xmm0
; Line 3684
	movdqa	xmm0, XMMWORD PTR brb$28[rbp]
	punpcklbw xmm0, XMMWORD PTR gxb$29[rbp]
	movdqa	XMMWORD PTR $T71[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T71[rbp]
	movdqa	XMMWORD PTR t0$30[rbp], xmm0
; Line 3685
	movdqa	xmm0, XMMWORD PTR brb$28[rbp]
	punpckhbw xmm0, XMMWORD PTR gxb$29[rbp]
	movdqa	XMMWORD PTR $T72[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T72[rbp]
	movdqa	XMMWORD PTR t1$31[rbp], xmm0
; Line 3686
	movdqa	xmm0, XMMWORD PTR t0$30[rbp]
	punpcklwd xmm0, XMMWORD PTR t1$31[rbp]
	movdqa	XMMWORD PTR $T73[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T73[rbp]
	movdqa	XMMWORD PTR o0$32[rbp], xmm0
; Line 3687
	movdqa	xmm0, XMMWORD PTR t0$30[rbp]
	punpckhwd xmm0, XMMWORD PTR t1$31[rbp]
	movdqa	XMMWORD PTR $T74[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T74[rbp]
	movdqa	XMMWORD PTR o1$33[rbp], xmm0
; Line 3690
	mov	rax, QWORD PTR out$[rbp]
	movdqa	xmm0, XMMWORD PTR o0$32[rbp]
	movdqu	XMMWORD PTR [rax], xmm0
; Line 3691
	mov	rax, QWORD PTR out$[rbp]
	add	rax, 16
	movdqa	xmm0, XMMWORD PTR o1$33[rbp]
	movdqu	XMMWORD PTR [rax], xmm0
; Line 3692
	mov	rax, QWORD PTR out$[rbp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR out$[rbp], rax
; Line 3693
	jmp	$LN2@stbi__YCbC
$LN3@stbi__YCbC:
$LN8@stbi__YCbC:
; Line 3743
	jmp	SHORT $LN7@stbi__YCbC
$LN5@stbi__YCbC:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@stbi__YCbC:
	mov	eax, DWORD PTR count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN6@stbi__YCbC
; Line 3744
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR y$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	shl	eax, 20
	add	eax, 524288				; 00080000H
	mov	DWORD PTR y_fixed$34[rbp], eax
; Line 3746
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR pcr$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	sub	eax, 128				; 00000080H
	mov	DWORD PTR cr$38[rbp], eax
; Line 3747
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR pcb$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	sub	eax, 128				; 00000080H
	mov	DWORD PTR cb$39[rbp], eax
; Line 3748
	imul	eax, DWORD PTR cr$38[rbp], 1470208	; 00166f00H
	mov	ecx, DWORD PTR y_fixed$34[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR r$35[rbp], eax
; Line 3749
	imul	eax, DWORD PTR cr$38[rbp], -748800	; fffffffffff49300H
	mov	ecx, DWORD PTR y_fixed$34[rbp]
	add	ecx, eax
	mov	eax, ecx
	imul	ecx, DWORD PTR cb$39[rbp], -360960	; fffffffffffa7e00H
	and	ecx, -65536				; ffff0000H
	add	eax, ecx
	mov	DWORD PTR g$36[rbp], eax
; Line 3750
	imul	eax, DWORD PTR cb$39[rbp], 1858048	; 001c5a00H
	mov	ecx, DWORD PTR y_fixed$34[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR b$37[rbp], eax
; Line 3751
	mov	eax, DWORD PTR r$35[rbp]
	sar	eax, 20
	mov	DWORD PTR r$35[rbp], eax
; Line 3752
	mov	eax, DWORD PTR g$36[rbp]
	sar	eax, 20
	mov	DWORD PTR g$36[rbp], eax
; Line 3753
	mov	eax, DWORD PTR b$37[rbp]
	sar	eax, 20
	mov	DWORD PTR b$37[rbp], eax
; Line 3754
	cmp	DWORD PTR r$35[rbp], 255		; 000000ffH
	jbe	SHORT $LN9@stbi__YCbC
	cmp	DWORD PTR r$35[rbp], 0
	jge	SHORT $LN10@stbi__YCbC
	mov	DWORD PTR r$35[rbp], 0
	jmp	SHORT $LN11@stbi__YCbC
$LN10@stbi__YCbC:
	mov	DWORD PTR r$35[rbp], 255		; 000000ffH
$LN11@stbi__YCbC:
$LN9@stbi__YCbC:
; Line 3755
	cmp	DWORD PTR g$36[rbp], 255		; 000000ffH
	jbe	SHORT $LN12@stbi__YCbC
	cmp	DWORD PTR g$36[rbp], 0
	jge	SHORT $LN13@stbi__YCbC
	mov	DWORD PTR g$36[rbp], 0
	jmp	SHORT $LN14@stbi__YCbC
$LN13@stbi__YCbC:
	mov	DWORD PTR g$36[rbp], 255		; 000000ffH
$LN14@stbi__YCbC:
$LN12@stbi__YCbC:
; Line 3756
	cmp	DWORD PTR b$37[rbp], 255		; 000000ffH
	jbe	SHORT $LN15@stbi__YCbC
	cmp	DWORD PTR b$37[rbp], 0
	jge	SHORT $LN16@stbi__YCbC
	mov	DWORD PTR b$37[rbp], 0
	jmp	SHORT $LN17@stbi__YCbC
$LN16@stbi__YCbC:
	mov	DWORD PTR b$37[rbp], 255		; 000000ffH
$LN17@stbi__YCbC:
$LN15@stbi__YCbC:
; Line 3757
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR r$35[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 3758
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR g$36[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 3759
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR b$37[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 3760
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 3761
	movsxd	rax, DWORD PTR step$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$[rbp], rax
; Line 3762
	jmp	$LN5@stbi__YCbC
$LN6@stbi__YCbC:
; Line 3763
	lea	rsp, QWORD PTR [rbp+4840]
	pop	rdi
	pop	rbp
	ret	0
?stbi__YCbCr_to_RGB_simd@@YAXPEAEPEBE11HH@Z ENDP	; stbi__YCbCr_to_RGB_simd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__YCbCr_to_RGB_row@@YAXPEAEPEBE11HH@Z
_TEXT	SEGMENT
i$ = 4
y_fixed$1 = 36
r$2 = 68
g$3 = 100
b$4 = 132
cr$5 = 164
cb$6 = 196
out$ = 448
y$ = 456
pcb$ = 464
pcr$ = 472
count$ = 480
step$ = 488
?stbi__YCbCr_to_RGB_row@@YAXPEAEPEBE11HH@Z PROC		; stbi__YCbCr_to_RGB_row, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3607
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 456				; 000001c8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3609
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__YCbC
$LN2@stbi__YCbC:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__YCbC:
	mov	eax, DWORD PTR count$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN3@stbi__YCbC
; Line 3610
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR y$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	shl	eax, 20
	add	eax, 524288				; 00080000H
	mov	DWORD PTR y_fixed$1[rbp], eax
; Line 3612
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR pcr$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	sub	eax, 128				; 00000080H
	mov	DWORD PTR cr$5[rbp], eax
; Line 3613
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR pcb$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	sub	eax, 128				; 00000080H
	mov	DWORD PTR cb$6[rbp], eax
; Line 3614
	imul	eax, DWORD PTR cr$5[rbp], 1470208	; 00166f00H
	mov	ecx, DWORD PTR y_fixed$1[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR r$2[rbp], eax
; Line 3615
	imul	eax, DWORD PTR cr$5[rbp], -748800	; fffffffffff49300H
	mov	ecx, DWORD PTR y_fixed$1[rbp]
	add	ecx, eax
	mov	eax, ecx
	imul	ecx, DWORD PTR cb$6[rbp], -360960	; fffffffffffa7e00H
	and	ecx, -65536				; ffff0000H
	add	eax, ecx
	mov	DWORD PTR g$3[rbp], eax
; Line 3616
	imul	eax, DWORD PTR cb$6[rbp], 1858048	; 001c5a00H
	mov	ecx, DWORD PTR y_fixed$1[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR b$4[rbp], eax
; Line 3617
	mov	eax, DWORD PTR r$2[rbp]
	sar	eax, 20
	mov	DWORD PTR r$2[rbp], eax
; Line 3618
	mov	eax, DWORD PTR g$3[rbp]
	sar	eax, 20
	mov	DWORD PTR g$3[rbp], eax
; Line 3619
	mov	eax, DWORD PTR b$4[rbp]
	sar	eax, 20
	mov	DWORD PTR b$4[rbp], eax
; Line 3620
	cmp	DWORD PTR r$2[rbp], 255			; 000000ffH
	jbe	SHORT $LN5@stbi__YCbC
	cmp	DWORD PTR r$2[rbp], 0
	jge	SHORT $LN6@stbi__YCbC
	mov	DWORD PTR r$2[rbp], 0
	jmp	SHORT $LN7@stbi__YCbC
$LN6@stbi__YCbC:
	mov	DWORD PTR r$2[rbp], 255			; 000000ffH
$LN7@stbi__YCbC:
$LN5@stbi__YCbC:
; Line 3621
	cmp	DWORD PTR g$3[rbp], 255			; 000000ffH
	jbe	SHORT $LN8@stbi__YCbC
	cmp	DWORD PTR g$3[rbp], 0
	jge	SHORT $LN9@stbi__YCbC
	mov	DWORD PTR g$3[rbp], 0
	jmp	SHORT $LN10@stbi__YCbC
$LN9@stbi__YCbC:
	mov	DWORD PTR g$3[rbp], 255			; 000000ffH
$LN10@stbi__YCbC:
$LN8@stbi__YCbC:
; Line 3622
	cmp	DWORD PTR b$4[rbp], 255			; 000000ffH
	jbe	SHORT $LN11@stbi__YCbC
	cmp	DWORD PTR b$4[rbp], 0
	jge	SHORT $LN12@stbi__YCbC
	mov	DWORD PTR b$4[rbp], 0
	jmp	SHORT $LN13@stbi__YCbC
$LN12@stbi__YCbC:
	mov	DWORD PTR b$4[rbp], 255			; 000000ffH
$LN13@stbi__YCbC:
$LN11@stbi__YCbC:
; Line 3623
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR r$2[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 3624
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR g$3[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 3625
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR b$4[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 3626
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
; Line 3627
	movsxd	rax, DWORD PTR step$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$[rbp], rax
; Line 3628
	jmp	$LN2@stbi__YCbC
$LN3@stbi__YCbC:
; Line 3629
	lea	rsp, QWORD PTR [rbp+424]
	pop	rdi
	pop	rbp
	ret	0
?stbi__YCbCr_to_RGB_row@@YAXPEAEPEBE11HH@Z ENDP		; stbi__YCbCr_to_RGB_row
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__resample_row_generic@@YAPEAEPEAE00HH@Z
_TEXT	SEGMENT
i$ = 4
j$ = 36
out$ = 288
in_near$ = 296
in_far$ = 304
w$ = 312
hs$ = 320
?stbi__resample_row_generic@@YAPEAEPEAE00HH@Z PROC	; stbi__resample_row_generic, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3593
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3597
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__resa
$LN2@stbi__resa:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__resa:
	mov	eax, DWORD PTR w$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__resa
; Line 3598
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN7@stbi__resa
$LN5@stbi__resa:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN7@stbi__resa:
	mov	eax, DWORD PTR hs$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jge	SHORT $LN6@stbi__resa
; Line 3599
	movsxd	rax, DWORD PTR i$[rbp]
	mov	ecx, DWORD PTR i$[rbp]
	imul	ecx, DWORD PTR hs$[rbp]
	add	ecx, DWORD PTR j$[rbp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	r8, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN5@stbi__resa
$LN6@stbi__resa:
	jmp	SHORT $LN2@stbi__resa
$LN3@stbi__resa:
; Line 3600
	mov	rax, QWORD PTR out$[rbp]
; Line 3601
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__resample_row_generic@@YAPEAEPEAE00HH@Z ENDP	; stbi__resample_row_generic
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z
_TEXT	SEGMENT
i$ = 4
t0$ = 36
t1$ = 68
zero$1 = 112
farb$2 = 160
nearb$3 = 208
farw$4 = 256
nearw$5 = 304
diff$6 = 352
nears$7 = 400
curr$8 = 448
prv0$9 = 496
nxt0$10 = 544
prev$11 = 592
next$12 = 640
bias$13 = 688
curs$14 = 736
prvd$15 = 784
nxtd$16 = 832
curb$17 = 880
even$18 = 928
odd$19 = 976
int0$20 = 1024
int1$21 = 1072
de0$22 = 1120
de1$23 = 1168
outv$24 = 1216
$T25 = 2224
$T26 = 2272
$T27 = 2320
$T28 = 2368
$T29 = 2416
$T30 = 2464
$T31 = 2512
$T32 = 2560
$T33 = 2608
$T34 = 2656
$T35 = 2704
$T36 = 2752
$T37 = 2800
$T38 = 2848
$T39 = 2896
$T40 = 2944
$T41 = 2992
$T42 = 3040
$T43 = 3088
$T44 = 3136
$T45 = 3184
$T46 = 3232
$T47 = 3280
$T48 = 3328
tv78 = 3348
out$ = 3392
in_near$ = 3400
in_far$ = 3408
w$ = 3416
hs$ = 3424
?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z PROC	; stbi__resample_row_hv_2_simd, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3477
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 3400				; 00000d48H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3479
	mov	DWORD PTR i$[rbp], 0
; Line 3481
	cmp	DWORD PTR w$[rbp], 1
	jne	SHORT $LN8@stbi__resa
; Line 3482
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	lea	eax, DWORD PTR [rax+rcx+2]
	sar	eax, 2
	mov	DWORD PTR tv78[rbp], eax
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR tv78[rbp]
	mov	BYTE PTR [rcx+rax], dl
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR tv78[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 3483
	mov	rax, QWORD PTR out$[rbp]
	jmp	$LN1@stbi__resa
$LN8@stbi__resa:
; Line 3486
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	mov	DWORD PTR t1$[rbp], eax
; Line 3490
	jmp	SHORT $LN4@stbi__resa
$LN2@stbi__resa:
	mov	eax, DWORD PTR i$[rbp]
	add	eax, 8
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__resa:
	mov	eax, DWORD PTR w$[rbp]
	dec	eax
	and	eax, -8
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN3@stbi__resa
; Line 3494
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T25[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T25[rbp]
	movdqa	XMMWORD PTR zero$1[rbp], xmm0
; Line 3495
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR in_far$[rbp]
	add	rcx, rax
	mov	rax, rcx
	movq	xmm0, QWORD PTR [rax]
	movdqa	XMMWORD PTR $T26[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T26[rbp]
	movdqa	XMMWORD PTR farb$2[rbp], xmm0
; Line 3496
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR in_near$[rbp]
	add	rcx, rax
	mov	rax, rcx
	movq	xmm0, QWORD PTR [rax]
	movdqa	XMMWORD PTR $T27[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T27[rbp]
	movdqa	XMMWORD PTR nearb$3[rbp], xmm0
; Line 3497
	movdqa	xmm0, XMMWORD PTR farb$2[rbp]
	punpcklbw xmm0, XMMWORD PTR zero$1[rbp]
	movdqa	XMMWORD PTR $T28[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T28[rbp]
	movdqa	XMMWORD PTR farw$4[rbp], xmm0
; Line 3498
	movdqa	xmm0, XMMWORD PTR nearb$3[rbp]
	punpcklbw xmm0, XMMWORD PTR zero$1[rbp]
	movdqa	XMMWORD PTR $T29[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T29[rbp]
	movdqa	XMMWORD PTR nearw$5[rbp], xmm0
; Line 3499
	movdqa	xmm0, XMMWORD PTR farw$4[rbp]
	psubw	xmm0, XMMWORD PTR nearw$5[rbp]
	movdqa	XMMWORD PTR $T30[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T30[rbp]
	movdqa	XMMWORD PTR diff$6[rbp], xmm0
; Line 3500
	movdqa	xmm0, XMMWORD PTR nearw$5[rbp]
	psllw	xmm0, 2
	movdqa	XMMWORD PTR $T31[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T31[rbp]
	movdqa	XMMWORD PTR nears$7[rbp], xmm0
; Line 3501
	movdqa	xmm0, XMMWORD PTR nears$7[rbp]
	paddw	xmm0, XMMWORD PTR diff$6[rbp]
	movdqa	XMMWORD PTR $T32[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T32[rbp]
	movdqa	XMMWORD PTR curr$8[rbp], xmm0
; Line 3508
	movdqa	xmm0, XMMWORD PTR curr$8[rbp]
	pslldq	xmm0, 2
	movdqa	XMMWORD PTR $T33[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T33[rbp]
	movdqa	XMMWORD PTR prv0$9[rbp], xmm0
; Line 3509
	movdqa	xmm0, XMMWORD PTR curr$8[rbp]
	psrldq	xmm0, 2
	movdqa	XMMWORD PTR $T34[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T34[rbp]
	movdqa	XMMWORD PTR nxt0$10[rbp], xmm0
; Line 3510
	movdqa	xmm0, XMMWORD PTR prv0$9[rbp]
	pinsrw	xmm0, DWORD PTR t1$[rbp], 0
	movdqa	XMMWORD PTR $T35[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T35[rbp]
	movdqa	XMMWORD PTR prev$11[rbp], xmm0
; Line 3511
	mov	eax, DWORD PTR i$[rbp]
	add	eax, 8
	cdqe
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	mov	ecx, DWORD PTR i$[rbp]
	add	ecx, 8
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	movdqa	xmm0, XMMWORD PTR nxt0$10[rbp]
	pinsrw	xmm0, eax, 7
	movdqa	XMMWORD PTR $T36[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T36[rbp]
	movdqa	XMMWORD PTR next$12[rbp], xmm0
; Line 3517
	movdqa	xmm0, XMMWORD PTR __xmm@00080008000800080008000800080008
	movdqa	XMMWORD PTR $T37[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T37[rbp]
	movdqa	XMMWORD PTR bias$13[rbp], xmm0
; Line 3518
	movdqa	xmm0, XMMWORD PTR curr$8[rbp]
	psllw	xmm0, 2
	movdqa	XMMWORD PTR $T38[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T38[rbp]
	movdqa	XMMWORD PTR curs$14[rbp], xmm0
; Line 3519
	movdqa	xmm0, XMMWORD PTR prev$11[rbp]
	psubw	xmm0, XMMWORD PTR curr$8[rbp]
	movdqa	XMMWORD PTR $T39[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T39[rbp]
	movdqa	XMMWORD PTR prvd$15[rbp], xmm0
; Line 3520
	movdqa	xmm0, XMMWORD PTR next$12[rbp]
	psubw	xmm0, XMMWORD PTR curr$8[rbp]
	movdqa	XMMWORD PTR $T40[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T40[rbp]
	movdqa	XMMWORD PTR nxtd$16[rbp], xmm0
; Line 3521
	movdqa	xmm0, XMMWORD PTR curs$14[rbp]
	paddw	xmm0, XMMWORD PTR bias$13[rbp]
	movdqa	XMMWORD PTR $T41[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T41[rbp]
	movdqa	XMMWORD PTR curb$17[rbp], xmm0
; Line 3522
	movdqa	xmm0, XMMWORD PTR prvd$15[rbp]
	paddw	xmm0, XMMWORD PTR curb$17[rbp]
	movdqa	XMMWORD PTR $T42[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T42[rbp]
	movdqa	XMMWORD PTR even$18[rbp], xmm0
; Line 3523
	movdqa	xmm0, XMMWORD PTR nxtd$16[rbp]
	paddw	xmm0, XMMWORD PTR curb$17[rbp]
	movdqa	XMMWORD PTR $T43[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T43[rbp]
	movdqa	XMMWORD PTR odd$19[rbp], xmm0
; Line 3526
	movdqa	xmm0, XMMWORD PTR even$18[rbp]
	punpcklwd xmm0, XMMWORD PTR odd$19[rbp]
	movdqa	XMMWORD PTR $T44[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T44[rbp]
	movdqa	XMMWORD PTR int0$20[rbp], xmm0
; Line 3527
	movdqa	xmm0, XMMWORD PTR even$18[rbp]
	punpckhwd xmm0, XMMWORD PTR odd$19[rbp]
	movdqa	XMMWORD PTR $T45[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T45[rbp]
	movdqa	XMMWORD PTR int1$21[rbp], xmm0
; Line 3528
	movdqa	xmm0, XMMWORD PTR int0$20[rbp]
	psrlw	xmm0, 4
	movdqa	XMMWORD PTR $T46[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T46[rbp]
	movdqa	XMMWORD PTR de0$22[rbp], xmm0
; Line 3529
	movdqa	xmm0, XMMWORD PTR int1$21[rbp]
	psrlw	xmm0, 4
	movdqa	XMMWORD PTR $T47[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T47[rbp]
	movdqa	XMMWORD PTR de1$23[rbp], xmm0
; Line 3532
	movdqa	xmm0, XMMWORD PTR de0$22[rbp]
	packuswb xmm0, XMMWORD PTR de1$23[rbp]
	movdqa	XMMWORD PTR $T48[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T48[rbp]
	movdqa	XMMWORD PTR outv$24[rbp], xmm0
; Line 3533
	mov	eax, DWORD PTR i$[rbp]
	add	eax, eax
	cdqe
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	movdqa	xmm0, XMMWORD PTR outv$24[rbp]
	movdqu	XMMWORD PTR [rax], xmm0
; Line 3571
	mov	eax, DWORD PTR i$[rbp]
	add	eax, 7
	cdqe
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	mov	ecx, DWORD PTR i$[rbp]
	add	ecx, 7
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	mov	DWORD PTR t1$[rbp], eax
; Line 3572
	jmp	$LN2@stbi__resa
$LN3@stbi__resa:
; Line 3574
	mov	eax, DWORD PTR t1$[rbp]
	mov	DWORD PTR t0$[rbp], eax
; Line 3575
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	mov	DWORD PTR t1$[rbp], eax
; Line 3576
	imul	eax, DWORD PTR t1$[rbp], 3
	mov	ecx, DWORD PTR t0$[rbp]
	lea	eax, DWORD PTR [rax+rcx+8]
	sar	eax, 4
	mov	ecx, DWORD PTR i$[rbp]
	add	ecx, ecx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3578
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN7@stbi__resa
$LN5@stbi__resa:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@stbi__resa:
	mov	eax, DWORD PTR w$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN6@stbi__resa
; Line 3579
	mov	eax, DWORD PTR t1$[rbp]
	mov	DWORD PTR t0$[rbp], eax
; Line 3580
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	mov	DWORD PTR t1$[rbp], eax
; Line 3581
	imul	eax, DWORD PTR t0$[rbp], 3
	mov	ecx, DWORD PTR t1$[rbp]
	lea	eax, DWORD PTR [rax+rcx+8]
	sar	eax, 4
	mov	ecx, DWORD PTR i$[rbp]
	lea	ecx, DWORD PTR [rcx+rcx-1]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3582
	imul	eax, DWORD PTR t1$[rbp], 3
	mov	ecx, DWORD PTR t0$[rbp]
	lea	eax, DWORD PTR [rax+rcx+8]
	sar	eax, 4
	mov	ecx, DWORD PTR i$[rbp]
	shl	ecx, 1
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3583
	jmp	$LN5@stbi__resa
$LN6@stbi__resa:
; Line 3584
	mov	eax, DWORD PTR t1$[rbp]
	add	eax, 2
	sar	eax, 2
	mov	ecx, DWORD PTR w$[rbp]
	lea	ecx, DWORD PTR [rcx+rcx-1]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3588
	mov	rax, QWORD PTR out$[rbp]
$LN1@stbi__resa:
; Line 3589
	lea	rsp, QWORD PTR [rbp+3368]
	pop	rdi
	pop	rbp
	ret	0
?stbi__resample_row_hv_2_simd@@YAPEAEPEAE00HH@Z ENDP	; stbi__resample_row_hv_2_simd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__resample_row_hv_2@@YAPEAEPEAE00HH@Z
_TEXT	SEGMENT
i$ = 4
t0$ = 36
t1$ = 68
tv78 = 276
out$ = 320
in_near$ = 328
in_far$ = 336
w$ = 344
hs$ = 352
?stbi__resample_row_hv_2@@YAPEAEPEAE00HH@Z PROC		; stbi__resample_row_hv_2, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3452
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3455
	cmp	DWORD PTR w$[rbp], 1
	jne	SHORT $LN5@stbi__resa
; Line 3456
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	lea	eax, DWORD PTR [rax+rcx+2]
	sar	eax, 2
	mov	DWORD PTR tv78[rbp], eax
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR tv78[rbp]
	mov	BYTE PTR [rcx+rax], dl
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR tv78[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 3457
	mov	rax, QWORD PTR out$[rbp]
	jmp	$LN1@stbi__resa
$LN5@stbi__resa:
; Line 3460
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	mov	DWORD PTR t1$[rbp], eax
; Line 3461
	mov	eax, DWORD PTR t1$[rbp]
	add	eax, 2
	sar	eax, 2
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3462
	mov	DWORD PTR i$[rbp], 1
	jmp	SHORT $LN4@stbi__resa
$LN2@stbi__resa:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__resa:
	mov	eax, DWORD PTR w$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__resa
; Line 3463
	mov	eax, DWORD PTR t1$[rbp]
	mov	DWORD PTR t0$[rbp], eax
; Line 3464
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	mov	DWORD PTR t1$[rbp], eax
; Line 3465
	imul	eax, DWORD PTR t0$[rbp], 3
	mov	ecx, DWORD PTR t1$[rbp]
	lea	eax, DWORD PTR [rax+rcx+8]
	sar	eax, 4
	mov	ecx, DWORD PTR i$[rbp]
	lea	ecx, DWORD PTR [rcx+rcx-1]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3466
	imul	eax, DWORD PTR t1$[rbp], 3
	mov	ecx, DWORD PTR t0$[rbp]
	lea	eax, DWORD PTR [rax+rcx+8]
	sar	eax, 4
	mov	ecx, DWORD PTR i$[rbp]
	shl	ecx, 1
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3467
	jmp	$LN2@stbi__resa
$LN3@stbi__resa:
; Line 3468
	mov	eax, DWORD PTR t1$[rbp]
	add	eax, 2
	sar	eax, 2
	mov	ecx, DWORD PTR w$[rbp]
	lea	ecx, DWORD PTR [rcx+rcx-1]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3472
	mov	rax, QWORD PTR out$[rbp]
$LN1@stbi__resa:
; Line 3473
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__resample_row_hv_2@@YAPEAEPEAE00HH@Z ENDP		; stbi__resample_row_hv_2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__resample_row_h_2@@YAPEAEPEAE00HH@Z
_TEXT	SEGMENT
i$ = 4
input$ = 40
n$1 = 68
out$ = 320
in_near$ = 328
in_far$ = 336
w$ = 344
hs$ = 352
?stbi__resample_row_h_2@@YAPEAEPEAE00HH@Z PROC		; stbi__resample_row_h_2, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3422
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3425
	mov	rax, QWORD PTR in_near$[rbp]
	mov	QWORD PTR input$[rbp], rax
; Line 3427
	cmp	DWORD PTR w$[rbp], 1
	jne	SHORT $LN5@stbi__resa
; Line 3429
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR out$[rbp]
	mov	r8, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 3430
	mov	rax, QWORD PTR out$[rbp]
	jmp	$LN1@stbi__resa
$LN5@stbi__resa:
; Line 3433
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR out$[rbp]
	mov	r8, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 3434
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR input$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	lea	eax, DWORD PTR [rax+rcx+2]
	sar	eax, 2
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3435
	mov	DWORD PTR i$[rbp], 1
	jmp	SHORT $LN4@stbi__resa
$LN2@stbi__resa:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__resa:
	mov	eax, DWORD PTR w$[rbp]
	dec	eax
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__resa
; Line 3436
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	add	eax, 2
	mov	DWORD PTR n$1[rbp], eax
; Line 3437
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	cdqe
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, DWORD PTR n$1[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 2
	mov	ecx, DWORD PTR i$[rbp]
	add	ecx, ecx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3438
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	cdqe
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, DWORD PTR n$1[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 2
	mov	ecx, DWORD PTR i$[rbp]
	lea	ecx, DWORD PTR [rcx+rcx+1]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3439
	jmp	$LN2@stbi__resa
$LN3@stbi__resa:
; Line 3440
	mov	eax, DWORD PTR w$[rbp]
	sub	eax, 2
	cdqe
	mov	rcx, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	mov	ecx, DWORD PTR w$[rbp]
	dec	ecx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR input$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	lea	eax, DWORD PTR [rax+rcx+2]
	sar	eax, 2
	mov	ecx, DWORD PTR i$[rbp]
	add	ecx, ecx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 3441
	mov	eax, DWORD PTR w$[rbp]
	dec	eax
	cdqe
	mov	ecx, DWORD PTR i$[rbp]
	lea	ecx, DWORD PTR [rcx+rcx+1]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	r8, QWORD PTR input$[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 3446
	mov	rax, QWORD PTR out$[rbp]
$LN1@stbi__resa:
; Line 3447
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__resample_row_h_2@@YAPEAEPEAE00HH@Z ENDP		; stbi__resample_row_h_2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__resample_row_v_2@@YAPEAEPEAE00HH@Z
_TEXT	SEGMENT
i$ = 4
out$ = 256
in_near$ = 264
in_far$ = 272
w$ = 280
hs$ = 288
?stbi__resample_row_v_2@@YAPEAEPEAE00HH@Z PROC		; stbi__resample_row_v_2, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3412
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3416
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__resa
$LN2@stbi__resa:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__resa:
	mov	eax, DWORD PTR w$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__resa
; Line 3417
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR in_near$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	imul	eax, eax, 3
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR in_far$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	lea	eax, DWORD PTR [rax+rcx+2]
	sar	eax, 2
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN2@stbi__resa
$LN3@stbi__resa:
; Line 3418
	mov	rax, QWORD PTR out$[rbp]
; Line 3419
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__resample_row_v_2@@YAPEAEPEAE00HH@Z ENDP		; stbi__resample_row_v_2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?resample_row_1@@YAPEAEPEAE00HH@Z
_TEXT	SEGMENT
out$ = 224
in_near$ = 232
in_far$ = 240
w$ = 248
hs$ = 256
?resample_row_1@@YAPEAEPEAE00HH@Z PROC			; resample_row_1, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3403
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3408
	mov	rax, QWORD PTR in_near$[rbp]
; Line 3409
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?resample_row_1@@YAPEAEPEAE00HH@Z ENDP			; resample_row_1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__decode_jpeg_image@@YAHPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
m$ = 4
x$1 = 36
Ld$2 = 68
NL$3 = 100
j$ = 352
?stbi__decode_jpeg_image@@YAHPEAUstbi__jpeg@@@Z PROC	; stbi__decode_jpeg_image, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3356
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3358
	mov	DWORD PTR m$[rbp], 0
	jmp	SHORT $LN4@stbi__deco
$LN2@stbi__deco:
	mov	eax, DWORD PTR m$[rbp]
	inc	eax
	mov	DWORD PTR m$[rbp], eax
$LN4@stbi__deco:
	cmp	DWORD PTR m$[rbp], 4
	jge	SHORT $LN3@stbi__deco
; Line 3359
	movsxd	rax, DWORD PTR m$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR j$[rbp]
	mov	QWORD PTR [rcx+rax+18136], 0
; Line 3360
	movsxd	rax, DWORD PTR m$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR j$[rbp]
	mov	QWORD PTR [rcx+rax+18144], 0
; Line 3361
	jmp	SHORT $LN2@stbi__deco
$LN3@stbi__deco:
; Line 3362
	mov	rax, QWORD PTR j$[rbp]
	mov	DWORD PTR [rax+18536], 0
; Line 3363
	xor	edx, edx
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z ; stbi__decode_jpeg_header
	test	eax, eax
	jne	SHORT $LN9@stbi__deco
	xor	eax, eax
	jmp	$LN1@stbi__deco
$LN9@stbi__deco:
; Line 3364
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z ; stbi__get_marker
	movzx	eax, al
	mov	DWORD PTR m$[rbp], eax
$LN5@stbi__deco:
; Line 3365
	cmp	DWORD PTR m$[rbp], 217			; 000000d9H
	je	$LN6@stbi__deco
; Line 3366
	cmp	DWORD PTR m$[rbp], 218			; 000000daH
	jne	$LN10@stbi__deco
; Line 3367
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__process_scan_header@@YAHPEAUstbi__jpeg@@@Z ; stbi__process_scan_header
	test	eax, eax
	jne	SHORT $LN12@stbi__deco
	xor	eax, eax
	jmp	$LN1@stbi__deco
$LN12@stbi__deco:
; Line 3368
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z ; stbi__parse_entropy_coded_data
	test	eax, eax
	jne	SHORT $LN13@stbi__deco
	xor	eax, eax
	jmp	$LN1@stbi__deco
$LN13@stbi__deco:
; Line 3369
	mov	rax, QWORD PTR j$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN14@stbi__deco
$LN7@stbi__deco:
; Line 3371
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	jne	SHORT $LN8@stbi__deco
; Line 3372
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR x$1[rbp], eax
; Line 3373
	cmp	DWORD PTR x$1[rbp], 255			; 000000ffH
	jne	SHORT $LN15@stbi__deco
; Line 3374
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR j$[rbp]
	mov	BYTE PTR [rcx+18472], al
; Line 3375
	jmp	SHORT $LN8@stbi__deco
$LN15@stbi__deco:
; Line 3377
	jmp	SHORT $LN7@stbi__deco
$LN8@stbi__deco:
$LN14@stbi__deco:
; Line 3379
	jmp	SHORT $LN11@stbi__deco
$LN10@stbi__deco:
; Line 3380
	cmp	DWORD PTR m$[rbp], 220			; 000000dcH
	jne	SHORT $LN16@stbi__deco
; Line 3381
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR Ld$2[rbp], eax
; Line 3382
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR NL$3[rbp], eax
; Line 3383
	cmp	DWORD PTR Ld$2[rbp], 4
	je	SHORT $LN18@stbi__deco
	lea	rcx, OFFSET FLAT:??_C@_0M@EPMOIECP@bad?5DNL?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__deco
$LN18@stbi__deco:
; Line 3384
	mov	rax, QWORD PTR j$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR NL$3[rbp], eax
	je	SHORT $LN19@stbi__deco
	lea	rcx, OFFSET FLAT:??_C@_0P@PNCLKCLJ@bad?5DNL?5height@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__deco
$LN19@stbi__deco:
; Line 3385
	jmp	SHORT $LN17@stbi__deco
$LN16@stbi__deco:
; Line 3386
	mov	edx, DWORD PTR m$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z ; stbi__process_marker
	test	eax, eax
	jne	SHORT $LN20@stbi__deco
	xor	eax, eax
	jmp	SHORT $LN1@stbi__deco
$LN20@stbi__deco:
$LN17@stbi__deco:
$LN11@stbi__deco:
; Line 3388
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z ; stbi__get_marker
	movzx	eax, al
	mov	DWORD PTR m$[rbp], eax
; Line 3389
	jmp	$LN5@stbi__deco
$LN6@stbi__deco:
; Line 3390
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18480], 0
	je	SHORT $LN21@stbi__deco
; Line 3391
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z ; stbi__jpeg_finish
$LN21@stbi__deco:
; Line 3392
	mov	eax, 1
$LN1@stbi__deco:
; Line 3393
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?stbi__decode_jpeg_image@@YAHPEAUstbi__jpeg@@@Z ENDP	; stbi__decode_jpeg_image
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z
_TEXT	SEGMENT
m$ = 4
tv131 = 212
z$ = 256
scan$ = 264
?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z PROC	; stbi__decode_jpeg_header, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3331
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3333
	mov	rax, QWORD PTR z$[rbp]
	mov	DWORD PTR [rax+18504], 0
; Line 3334
	mov	rax, QWORD PTR z$[rbp]
	mov	DWORD PTR [rax+18508], -1
; Line 3335
	mov	rax, QWORD PTR z$[rbp]
	mov	BYTE PTR [rax+18472], 255		; 000000ffH
; Line 3336
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z ; stbi__get_marker
	movzx	eax, al
	mov	DWORD PTR m$[rbp], eax
; Line 3337
	cmp	DWORD PTR m$[rbp], 216			; 000000d8H
	je	SHORT $LN6@stbi__deco
	lea	rcx, OFFSET FLAT:??_C@_06CLMBLEP@no?5SOI@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__deco
$LN6@stbi__deco:
; Line 3338
	cmp	DWORD PTR scan$[rbp], 1
	jne	SHORT $LN7@stbi__deco
	mov	eax, 1
	jmp	$LN1@stbi__deco
$LN7@stbi__deco:
; Line 3339
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z ; stbi__get_marker
	movzx	eax, al
	mov	DWORD PTR m$[rbp], eax
$LN2@stbi__deco:
; Line 3340
	cmp	DWORD PTR m$[rbp], 192			; 000000c0H
	je	$LN3@stbi__deco
	cmp	DWORD PTR m$[rbp], 193			; 000000c1H
	je	SHORT $LN3@stbi__deco
	cmp	DWORD PTR m$[rbp], 194			; 000000c2H
	je	SHORT $LN3@stbi__deco
; Line 3341
	mov	edx, DWORD PTR m$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z ; stbi__process_marker
	test	eax, eax
	jne	SHORT $LN8@stbi__deco
	xor	eax, eax
	jmp	$LN1@stbi__deco
$LN8@stbi__deco:
; Line 3342
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z ; stbi__get_marker
	movzx	eax, al
	mov	DWORD PTR m$[rbp], eax
$LN4@stbi__deco:
; Line 3343
	cmp	DWORD PTR m$[rbp], 255			; 000000ffH
	jne	SHORT $LN5@stbi__deco
; Line 3345
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	je	SHORT $LN9@stbi__deco
	lea	rcx, OFFSET FLAT:??_C@_06IFCEAHIA@no?5SOF@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__deco
$LN9@stbi__deco:
; Line 3346
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z ; stbi__get_marker
	movzx	eax, al
	mov	DWORD PTR m$[rbp], eax
; Line 3347
	jmp	SHORT $LN4@stbi__deco
$LN5@stbi__deco:
; Line 3348
	jmp	$LN2@stbi__deco
$LN3@stbi__deco:
; Line 3349
	cmp	DWORD PTR m$[rbp], 194			; 000000c2H
	jne	SHORT $LN12@stbi__deco
	mov	DWORD PTR tv131[rbp], 1
	jmp	SHORT $LN13@stbi__deco
$LN12@stbi__deco:
	mov	DWORD PTR tv131[rbp], 0
$LN13@stbi__deco:
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR tv131[rbp]
	mov	DWORD PTR [rax+18480], ecx
; Line 3350
	mov	edx, DWORD PTR scan$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z ; stbi__process_frame_header
	test	eax, eax
	jne	SHORT $LN10@stbi__deco
	xor	eax, eax
	jmp	SHORT $LN1@stbi__deco
$LN10@stbi__deco:
; Line 3351
	mov	eax, 1
$LN1@stbi__deco:
; Line 3352
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z ENDP	; stbi__decode_jpeg_header
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z
_TEXT	SEGMENT
s$ = 8
Lf$ = 36
p$ = 68
i$ = 100
q$ = 132
h_max$ = 164
v_max$ = 196
c$ = 228
tv294 = 440
tv285 = 440
z$ = 480
scan$ = 488
?stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z PROC ; stbi__process_frame_header, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3230
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3231
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR s$[rbp], rax
; Line 3232
	mov	DWORD PTR h_max$[rbp], 1
	mov	DWORD PTR v_max$[rbp], 1
; Line 3233
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR Lf$[rbp], eax
	cmp	DWORD PTR Lf$[rbp], 11
	jge	SHORT $LN17@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0M@DOFMJEMP@bad?5SOF?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN17@stbi__proc:
; Line 3234
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR p$[rbp], eax
	cmp	DWORD PTR p$[rbp], 8
	je	SHORT $LN18@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0L@BCINMEBJ@only?58?9bit@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN18@stbi__proc:
; Line 3235
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+4], eax
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+4], 0
	jne	SHORT $LN19@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0BB@LNEGOMA@no?5header?5height@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN19@stbi__proc:
; Line 3236
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx], eax
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN20@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_07BIDACDEF@0?5width@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN20@stbi__proc:
; Line 3237
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+4], 16777216		; 01000000H
	jbe	SHORT $LN21@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN21@stbi__proc:
; Line 3238
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax], 16777216		; 01000000H
	jbe	SHORT $LN22@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN22@stbi__proc:
; Line 3239
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR c$[rbp], eax
; Line 3240
	cmp	DWORD PTR c$[rbp], 3
	je	SHORT $LN23@stbi__proc
	cmp	DWORD PTR c$[rbp], 1
	je	SHORT $LN23@stbi__proc
	cmp	DWORD PTR c$[rbp], 4
	je	SHORT $LN23@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0BE@DAPHADHL@bad?5component?5count@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN23@stbi__proc:
; Line 3241
	mov	rax, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR c$[rbp]
	mov	DWORD PTR [rax+8], ecx
; Line 3242
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__proc
$LN2@stbi__proc:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__proc:
	mov	eax, DWORD PTR c$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__proc
; Line 3243
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18128], 0
; Line 3244
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18152], 0
; Line 3245
	jmp	SHORT $LN2@stbi__proc
$LN3@stbi__proc:
; Line 3247
	mov	rax, QWORD PTR s$[rbp]
	imul	eax, DWORD PTR [rax+8], 3
	add	eax, 8
	cmp	DWORD PTR Lf$[rbp], eax
	je	SHORT $LN24@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0M@DOFMJEMP@bad?5SOF?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN24@stbi__proc:
; Line 3249
	mov	rax, QWORD PTR z$[rbp]
	mov	DWORD PTR [rax+18512], 0
; Line 3250
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN7@stbi__proc
$LN5@stbi__proc:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@stbi__proc:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN6@stbi__proc
; Line 3252
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18080], eax
; Line 3253
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+8], 3
	jne	SHORT $LN25@stbi__proc
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	movsxd	rcx, DWORD PTR i$[rbp]
	lea	rdx, OFFSET FLAT:?rgb@?BG@??stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z@4QBEB
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	rdx, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rdx+rax+18080], ecx
	jne	SHORT $LN25@stbi__proc
; Line 3254
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18512]
	inc	eax
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18512], eax
$LN25@stbi__proc:
; Line 3255
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR q$[rbp], eax
; Line 3256
	mov	eax, DWORD PTR q$[rbp]
	sar	eax, 4
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18084], eax
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rcx+rax+18084], 0
	je	SHORT $LN27@stbi__proc
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rcx+rax+18084], 4
	jle	SHORT $LN26@stbi__proc
$LN27@stbi__proc:
	lea	rcx, OFFSET FLAT:??_C@_05BLPKENEJ@bad?5H@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN26@stbi__proc:
; Line 3257
	mov	eax, DWORD PTR q$[rbp]
	and	eax, 15
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18088], eax
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rcx+rax+18088], 0
	je	SHORT $LN29@stbi__proc
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rcx+rax+18088], 4
	jle	SHORT $LN28@stbi__proc
$LN29@stbi__proc:
	lea	rcx, OFFSET FLAT:??_C@_05MPLLHCJG@bad?5V@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN28@stbi__proc:
; Line 3258
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18092], eax
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rcx+rax+18092], 3
	jle	SHORT $LN30@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_06LJIHDFHI@bad?5TQ@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN30@stbi__proc:
; Line 3259
	jmp	$LN5@stbi__proc
$LN6@stbi__proc:
; Line 3261
	cmp	DWORD PTR scan$[rbp], 0
	je	SHORT $LN31@stbi__proc
	mov	eax, 1
	jmp	$LN1@stbi__proc
$LN31@stbi__proc:
; Line 3263
	xor	r9d, r9d
	mov	rax, QWORD PTR s$[rbp]
	mov	r8d, DWORD PTR [rax+8]
	mov	rax, QWORD PTR s$[rbp]
	mov	edx, DWORD PTR [rax+4]
	mov	rax, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rax]
	call	?stbi__mad3sizes_valid@@YAHHHHH@Z	; stbi__mad3sizes_valid
	test	eax, eax
	jne	SHORT $LN32@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN32@stbi__proc:
; Line 3265
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN10@stbi__proc
$LN8@stbi__proc:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN10@stbi__proc:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN9@stbi__proc
; Line 3266
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR h_max$[rbp]
	cmp	DWORD PTR [rcx+rax+18084], edx
	jle	SHORT $LN33@stbi__proc
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18084]
	mov	DWORD PTR h_max$[rbp], eax
$LN33@stbi__proc:
; Line 3267
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR v_max$[rbp]
	cmp	DWORD PTR [rcx+rax+18088], edx
	jle	SHORT $LN34@stbi__proc
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18088]
	mov	DWORD PTR v_max$[rbp], eax
$LN34@stbi__proc:
; Line 3268
	jmp	$LN8@stbi__proc
$LN9@stbi__proc:
; Line 3272
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN13@stbi__proc
$LN11@stbi__proc:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN13@stbi__proc:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN12@stbi__proc
; Line 3273
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	QWORD PTR tv285[rbp], rax
	mov	eax, DWORD PTR h_max$[rbp]
	cdq
	mov	rcx, QWORD PTR z$[rbp]
	mov	r8, QWORD PTR tv285[rbp]
	idiv	DWORD PTR [rcx+r8+18084]
	mov	eax, edx
	test	eax, eax
	je	SHORT $LN35@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_05BLPKENEJ@bad?5H@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN35@stbi__proc:
; Line 3274
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	QWORD PTR tv294[rbp], rax
	mov	eax, DWORD PTR v_max$[rbp]
	cdq
	mov	rcx, QWORD PTR z$[rbp]
	mov	r8, QWORD PTR tv294[rbp]
	idiv	DWORD PTR [rcx+r8+18088]
	mov	eax, edx
	test	eax, eax
	je	SHORT $LN36@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_05MPLLHCJG@bad?5V@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN36@stbi__proc:
; Line 3275
	jmp	$LN11@stbi__proc
$LN12@stbi__proc:
; Line 3278
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR h_max$[rbp]
	mov	DWORD PTR [rax+18056], ecx
; Line 3279
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR v_max$[rbp]
	mov	DWORD PTR [rax+18060], ecx
; Line 3280
	mov	eax, DWORD PTR h_max$[rbp]
	shl	eax, 3
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18072], eax
; Line 3281
	mov	eax, DWORD PTR v_max$[rbp]
	shl	eax, 3
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18076], eax
; Line 3283
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rcx+18072]
	lea	eax, DWORD PTR [rax+rcx-1]
	xor	edx, edx
	mov	rcx, QWORD PTR z$[rbp]
	div	DWORD PTR [rcx+18072]
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18064], eax
; Line 3284
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+4]
	mov	rcx, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rcx+18076]
	lea	eax, DWORD PTR [rax+rcx-1]
	xor	edx, edx
	mov	rcx, QWORD PTR z$[rbp]
	div	DWORD PTR [rcx+18076]
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18068], eax
; Line 3286
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN16@stbi__proc
$LN14@stbi__proc:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN16@stbi__proc:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN15@stbi__proc
; Line 3288
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR s$[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rcx]
	imul	ecx, DWORD PTR [rdx+rax+18084]
	mov	eax, ecx
	mov	ecx, DWORD PTR h_max$[rbp]
	lea	eax, DWORD PTR [rax+rcx-1]
	xor	edx, edx
	div	DWORD PTR h_max$[rbp]
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18108], eax
; Line 3289
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR s$[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	imul	ecx, DWORD PTR [rdx+rax+18088]
	mov	eax, ecx
	mov	ecx, DWORD PTR v_max$[rbp]
	lea	eax, DWORD PTR [rax+rcx-1]
	xor	edx, edx
	div	DWORD PTR v_max$[rbp]
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18112], eax
; Line 3297
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rcx+18064]
	imul	ecx, DWORD PTR [rdx+rax+18084]
	mov	eax, ecx
	shl	eax, 3
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18116], eax
; Line 3298
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rcx+18068]
	imul	ecx, DWORD PTR [rdx+rax+18088]
	mov	eax, ecx
	shl	eax, 3
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18120], eax
; Line 3299
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18160], 0
; Line 3300
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18144], 0
; Line 3301
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18152], 0
; Line 3302
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	r8d, 15
	mov	rdx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR [rdx+rax+18120]
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rax+rcx+18116]
	call	?stbi__malloc_mad2@@YAPEAXHHH@Z		; stbi__malloc_mad2
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rdx+rcx+18136], rax
; Line 3303
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	QWORD PTR [rcx+rax+18136], 0
	jne	SHORT $LN37@stbi__proc
; Line 3304
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	mov	ecx, DWORD PTR i$[rbp]
	inc	ecx
	mov	r8d, eax
	mov	edx, ecx
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z ; stbi__free_jpeg_components
	jmp	$LN1@stbi__proc
$LN37@stbi__proc:
; Line 3306
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rcx+rax+18136]
	add	rax, 15
	and	rax, -16
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rdx+rcx+18128], rax
; Line 3307
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18480], 0
	je	$LN38@stbi__proc
; Line 3309
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18116]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18168], eax
; Line 3310
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18120]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18172], eax
; Line 3311
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	r9d, 15
	mov	r8d, 2
	mov	rdx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR [rdx+rax+18120]
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rax+rcx+18116]
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rdx+rcx+18144], rax
; Line 3312
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	QWORD PTR [rcx+rax+18144], 0
	jne	SHORT $LN39@stbi__proc
; Line 3313
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	mov	ecx, DWORD PTR i$[rbp]
	inc	ecx
	mov	r8d, eax
	mov	edx, ecx
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z ; stbi__free_jpeg_components
	jmp	SHORT $LN1@stbi__proc
$LN39@stbi__proc:
; Line 3314
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rcx+rax+18144]
	add	rax, 15
	and	rax, -16
	movsxd	rcx, DWORD PTR i$[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rdx+rcx+18160], rax
$LN38@stbi__proc:
; Line 3316
	jmp	$LN14@stbi__proc
$LN15@stbi__proc:
; Line 3318
	mov	eax, 1
$LN1@stbi__proc:
; Line 3319
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
?stbi__process_frame_header@@YAHPEAUstbi__jpeg@@H@Z ENDP ; stbi__process_frame_header
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z
_TEXT	SEGMENT
i$ = 4
z$ = 256
ncomp$ = 264
why$ = 272
?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z PROC ; stbi__free_jpeg_components, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3208
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3210
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__free
$LN2@stbi__free:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__free:
	mov	eax, DWORD PTR ncomp$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN3@stbi__free
; Line 3211
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	QWORD PTR [rcx+rax+18136], 0
	je	SHORT $LN5@stbi__free
; Line 3212
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx+rax+18136]
	call	QWORD PTR __imp_free
; Line 3213
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18136], 0
; Line 3214
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18128], 0
$LN5@stbi__free:
; Line 3216
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	QWORD PTR [rcx+rax+18144], 0
	je	SHORT $LN6@stbi__free
; Line 3217
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx+rax+18144]
	call	QWORD PTR __imp_free
; Line 3218
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18144], 0
; Line 3219
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18160], 0
$LN6@stbi__free:
; Line 3221
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	QWORD PTR [rcx+rax+18152], 0
	je	SHORT $LN7@stbi__free
; Line 3222
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rcx+rax+18152]
	call	QWORD PTR __imp_free
; Line 3223
	movsxd	rax, DWORD PTR i$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	QWORD PTR [rcx+rax+18152], 0
$LN7@stbi__free:
; Line 3225
	jmp	$LN2@stbi__free
$LN3@stbi__free:
; Line 3226
	mov	eax, DWORD PTR why$[rbp]
; Line 3227
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__free_jpeg_components@@YAHPEAUstbi__jpeg@@HH@Z ENDP ; stbi__free_jpeg_components
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__process_scan_header@@YAHPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
i$ = 4
Ls$ = 36
id$1 = 68
which$2 = 100
q$3 = 132
aa$4 = 164
z$ = 416
?stbi__process_scan_header@@YAHPEAUstbi__jpeg@@@Z PROC	; stbi__process_scan_header, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3169
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3171
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR Ls$[rbp], eax
; Line 3172
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18516], eax
; Line 3173
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18516], 1
	jl	SHORT $LN9@stbi__proc
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18516], 4
	jg	SHORT $LN9@stbi__proc
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR [rcx+18516], eax
	jle	SHORT $LN8@stbi__proc
$LN9@stbi__proc:
	lea	rcx, OFFSET FLAT:??_C@_0BI@DHFJCMBA@bad?5SOS?5component?5count@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN8@stbi__proc:
; Line 3174
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18516]
	lea	eax, DWORD PTR [rax+rax+6]
	cmp	DWORD PTR Ls$[rbp], eax
	je	SHORT $LN10@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0M@GNEHAHOH@bad?5SOS?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN10@stbi__proc:
; Line 3175
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__proc
$LN2@stbi__proc:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__proc:
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18516]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN3@stbi__proc
; Line 3176
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR id$1[rbp], eax
; Line 3177
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR q$3[rbp], eax
; Line 3178
	mov	DWORD PTR which$2[rbp], 0
	jmp	SHORT $LN7@stbi__proc
$LN5@stbi__proc:
	mov	eax, DWORD PTR which$2[rbp]
	inc	eax
	mov	DWORD PTR which$2[rbp], eax
$LN7@stbi__proc:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR which$2[rbp], eax
	jge	SHORT $LN6@stbi__proc
; Line 3179
	movsxd	rax, DWORD PTR which$2[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR id$1[rbp]
	cmp	DWORD PTR [rcx+rax+18080], edx
	jne	SHORT $LN11@stbi__proc
; Line 3180
	jmp	SHORT $LN6@stbi__proc
$LN11@stbi__proc:
	jmp	SHORT $LN5@stbi__proc
$LN6@stbi__proc:
; Line 3181
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR which$2[rbp], eax
	jne	SHORT $LN12@stbi__proc
	xor	eax, eax
	jmp	$LN1@stbi__proc
$LN12@stbi__proc:
; Line 3182
	mov	eax, DWORD PTR q$3[rbp]
	sar	eax, 4
	movsxd	rcx, DWORD PTR which$2[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18096], eax
	movsxd	rax, DWORD PTR which$2[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rcx+rax+18096], 3
	jle	SHORT $LN13@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0M@NOCCBFAC@bad?5DC?5huff@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN13@stbi__proc:
; Line 3183
	mov	eax, DWORD PTR q$3[rbp]
	and	eax, 15
	movsxd	rcx, DWORD PTR which$2[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rdx+rcx+18100], eax
	movsxd	rax, DWORD PTR which$2[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rcx+rax+18100], 3
	jle	SHORT $LN14@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0M@JGMCBLGG@bad?5AC?5huff@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN14@stbi__proc:
; Line 3184
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR which$2[rbp]
	mov	DWORD PTR [rcx+rax*4+18520], edx
; Line 3185
	jmp	$LN2@stbi__proc
$LN3@stbi__proc:
; Line 3189
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18484], eax
; Line 3190
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18488], eax
; Line 3191
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR aa$4[rbp], eax
; Line 3192
	mov	eax, DWORD PTR aa$4[rbp]
	sar	eax, 4
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18492], eax
; Line 3193
	mov	eax, DWORD PTR aa$4[rbp]
	and	eax, 15
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18496], eax
; Line 3194
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18480], 0
	je	SHORT $LN15@stbi__proc
; Line 3195
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18484], 63		; 0000003fH
	jg	SHORT $LN18@stbi__proc
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18488], 63		; 0000003fH
	jg	SHORT $LN18@stbi__proc
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR [rcx+18488]
	cmp	DWORD PTR [rax+18484], ecx
	jg	SHORT $LN18@stbi__proc
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18492], 13
	jg	SHORT $LN18@stbi__proc
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18496], 13
	jle	SHORT $LN17@stbi__proc
$LN18@stbi__proc:
; Line 3196
	lea	rcx, OFFSET FLAT:??_C@_07EEJOMGGP@bad?5SOS@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__proc
$LN17@stbi__proc:
; Line 3197
	jmp	SHORT $LN16@stbi__proc
$LN15@stbi__proc:
; Line 3198
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18484], 0
	je	SHORT $LN19@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_07EEJOMGGP@bad?5SOS@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__proc
$LN19@stbi__proc:
; Line 3199
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18492], 0
	jne	SHORT $LN21@stbi__proc
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18496], 0
	je	SHORT $LN20@stbi__proc
$LN21@stbi__proc:
	lea	rcx, OFFSET FLAT:??_C@_07EEJOMGGP@bad?5SOS@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__proc
$LN20@stbi__proc:
; Line 3200
	mov	rax, QWORD PTR z$[rbp]
	mov	DWORD PTR [rax+18488], 63		; 0000003fH
$LN16@stbi__proc:
; Line 3204
	mov	eax, 1
$LN1@stbi__proc:
; Line 3205
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?stbi__process_scan_header@@YAHPEAUstbi__jpeg@@@Z ENDP	; stbi__process_scan_header
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z
_TEXT	SEGMENT
L$ = 4
q$4 = 36
p$5 = 68
sixteen$6 = 100
t$7 = 132
i$8 = 164
v$9 = 200
sizes$10 = 240
i$11 = 324
n$12 = 356
q$13 = 388
tc$14 = 420
th$15 = 452
ok$16 = 484
i$17 = 516
ok$18 = 548
i$19 = 580
tv233 = 980
tv155 = 980
tv152 = 980
tv149 = 980
tv88 = 980
tv64 = 980
__$ArrayPad$ = 984
z$ = 1024
m$ = 1032
?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z PROC	; stbi__process_marker, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3066
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1032				; 00000408H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1064]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3068
	mov	eax, DWORD PTR m$[rbp]
	mov	DWORD PTR tv64[rbp], eax
	cmp	DWORD PTR tv64[rbp], 196		; 000000c4H
	je	$LN29@stbi__proc
	cmp	DWORD PTR tv64[rbp], 219		; 000000dbH
	je	SHORT $LN26@stbi__proc
	cmp	DWORD PTR tv64[rbp], 221		; 000000ddH
	je	SHORT $LN24@stbi__proc
	cmp	DWORD PTR tv64[rbp], 255		; 000000ffH
	je	SHORT $LN23@stbi__proc
	jmp	$LN2@stbi__proc
$LN23@stbi__proc:
; Line 3070
	lea	rcx, OFFSET FLAT:??_C@_0BA@KLNDOKJD@expected?5marker@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN24@stbi__proc:
; Line 3073
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	cmp	eax, 4
	je	SHORT $LN25@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0M@LPHNODCG@bad?5DRI?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN25@stbi__proc:
; Line 3074
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18536], eax
; Line 3075
	mov	eax, 1
	jmp	$LN1@stbi__proc
$LN26@stbi__proc:
; Line 3078
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	sub	eax, 2
	mov	DWORD PTR L$[rbp], eax
$LN4@stbi__proc:
; Line 3079
	cmp	DWORD PTR L$[rbp], 0
	jle	$LN5@stbi__proc
; Line 3080
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR q$4[rbp], eax
; Line 3081
	mov	eax, DWORD PTR q$4[rbp]
	sar	eax, 4
	mov	DWORD PTR p$5[rbp], eax
	cmp	DWORD PTR p$5[rbp], 0
	je	SHORT $LN51@stbi__proc
	mov	DWORD PTR tv88[rbp], 1
	jmp	SHORT $LN52@stbi__proc
$LN51@stbi__proc:
	mov	DWORD PTR tv88[rbp], 0
$LN52@stbi__proc:
	mov	eax, DWORD PTR tv88[rbp]
	mov	DWORD PTR sixteen$6[rbp], eax
; Line 3082
	mov	eax, DWORD PTR q$4[rbp]
	and	eax, 15
	mov	DWORD PTR t$7[rbp], eax
; Line 3083
	cmp	DWORD PTR p$5[rbp], 0
	je	SHORT $LN27@stbi__proc
	cmp	DWORD PTR p$5[rbp], 1
	je	SHORT $LN27@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0N@BOFJCHAP@bad?5DQT?5type@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN27@stbi__proc:
; Line 3084
	cmp	DWORD PTR t$7[rbp], 3
	jle	SHORT $LN28@stbi__proc
	lea	rcx, OFFSET FLAT:??_C@_0O@CNHKKDIM@bad?5DQT?5table@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN28@stbi__proc:
; Line 3086
	mov	DWORD PTR i$8[rbp], 0
	jmp	SHORT $LN8@stbi__proc
$LN6@stbi__proc:
	mov	eax, DWORD PTR i$8[rbp]
	inc	eax
	mov	DWORD PTR i$8[rbp], eax
$LN8@stbi__proc:
	cmp	DWORD PTR i$8[rbp], 64			; 00000040H
	jge	SHORT $LN7@stbi__proc
; Line 3087
	cmp	DWORD PTR sixteen$6[rbp], 0
	je	SHORT $LN53@stbi__proc
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR tv149[rbp], eax
	jmp	SHORT $LN54@stbi__proc
$LN53@stbi__proc:
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tv149[rbp], eax
$LN54@stbi__proc:
	movsxd	rax, DWORD PTR t$7[rbp]
	imul	rax, rax, 128				; 00000080H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+13448]
	movsxd	rcx, DWORD PTR i$8[rbp]
	lea	rdx, OFFSET FLAT:?stbi__jpeg_dezigzag@@3QBEB
	movzx	ecx, BYTE PTR [rdx+rcx]
	movzx	edx, WORD PTR tv149[rbp]
	mov	WORD PTR [rax+rcx*2], dx
	jmp	$LN6@stbi__proc
$LN7@stbi__proc:
; Line 3088
	cmp	DWORD PTR sixteen$6[rbp], 0
	je	SHORT $LN55@stbi__proc
	mov	DWORD PTR tv152[rbp], 129		; 00000081H
	jmp	SHORT $LN56@stbi__proc
$LN55@stbi__proc:
	mov	DWORD PTR tv152[rbp], 65		; 00000041H
$LN56@stbi__proc:
	mov	eax, DWORD PTR tv152[rbp]
	mov	ecx, DWORD PTR L$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR L$[rbp], eax
; Line 3089
	jmp	$LN4@stbi__proc
$LN5@stbi__proc:
; Line 3090
	cmp	DWORD PTR L$[rbp], 0
	jne	SHORT $LN57@stbi__proc
	mov	DWORD PTR tv155[rbp], 1
	jmp	SHORT $LN58@stbi__proc
$LN57@stbi__proc:
	mov	DWORD PTR tv155[rbp], 0
$LN58@stbi__proc:
	mov	eax, DWORD PTR tv155[rbp]
	jmp	$LN1@stbi__proc
$LN29@stbi__proc:
; Line 3093
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	sub	eax, 2
	mov	DWORD PTR L$[rbp], eax
$LN9@stbi__proc:
; Line 3094
	cmp	DWORD PTR L$[rbp], 0
	jle	$LN10@stbi__proc
; Line 3096
	mov	DWORD PTR n$12[rbp], 0
; Line 3097
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR q$13[rbp], eax
; Line 3098
	mov	eax, DWORD PTR q$13[rbp]
	sar	eax, 4
	mov	DWORD PTR tc$14[rbp], eax
; Line 3099
	mov	eax, DWORD PTR q$13[rbp]
	and	eax, 15
	mov	DWORD PTR th$15[rbp], eax
; Line 3100
	cmp	DWORD PTR tc$14[rbp], 1
	jg	SHORT $LN31@stbi__proc
	cmp	DWORD PTR th$15[rbp], 3
	jle	SHORT $LN30@stbi__proc
$LN31@stbi__proc:
	lea	rcx, OFFSET FLAT:??_C@_0P@JLGKOCGN@bad?5DHT?5header@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN30@stbi__proc:
; Line 3101
	mov	DWORD PTR i$11[rbp], 0
	jmp	SHORT $LN13@stbi__proc
$LN11@stbi__proc:
	mov	eax, DWORD PTR i$11[rbp]
	inc	eax
	mov	DWORD PTR i$11[rbp], eax
$LN13@stbi__proc:
	cmp	DWORD PTR i$11[rbp], 16
	jge	SHORT $LN12@stbi__proc
; Line 3102
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	movsxd	rcx, DWORD PTR i$11[rbp]
	mov	DWORD PTR sizes$10[rbp+rcx*4], eax
; Line 3103
	movsxd	rax, DWORD PTR i$11[rbp]
	mov	eax, DWORD PTR sizes$10[rbp+rax*4]
	mov	ecx, DWORD PTR n$12[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR n$12[rbp], eax
; Line 3104
	jmp	SHORT $LN11@stbi__proc
$LN12@stbi__proc:
; Line 3105
	mov	eax, DWORD PTR L$[rbp]
	sub	eax, 17
	mov	DWORD PTR L$[rbp], eax
; Line 3106
	cmp	DWORD PTR tc$14[rbp], 0
	jne	SHORT $LN32@stbi__proc
; Line 3107
	movsxd	rax, DWORD PTR th$15[rbp]
	imul	rax, rax, 1680				; 00000690H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+8]
	lea	rdx, QWORD PTR sizes$10[rbp]
	mov	rcx, rax
	call	?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z ; stbi__build_huffman
	test	eax, eax
	jne	SHORT $LN34@stbi__proc
	xor	eax, eax
	jmp	$LN1@stbi__proc
$LN34@stbi__proc:
; Line 3108
	movsxd	rax, DWORD PTR th$15[rbp]
	imul	rax, rax, 1680				; 00000690H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+1032]
	mov	QWORD PTR v$9[rbp], rax
; Line 3109
	jmp	SHORT $LN33@stbi__proc
$LN32@stbi__proc:
; Line 3110
	movsxd	rax, DWORD PTR th$15[rbp]
	imul	rax, rax, 1680				; 00000690H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+6728]
	lea	rdx, QWORD PTR sizes$10[rbp]
	mov	rcx, rax
	call	?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z ; stbi__build_huffman
	test	eax, eax
	jne	SHORT $LN35@stbi__proc
	xor	eax, eax
	jmp	$LN1@stbi__proc
$LN35@stbi__proc:
; Line 3111
	movsxd	rax, DWORD PTR th$15[rbp]
	imul	rax, rax, 1680				; 00000690H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+7752]
	mov	QWORD PTR v$9[rbp], rax
$LN33@stbi__proc:
; Line 3113
	mov	DWORD PTR i$11[rbp], 0
	jmp	SHORT $LN16@stbi__proc
$LN14@stbi__proc:
	mov	eax, DWORD PTR i$11[rbp]
	inc	eax
	mov	DWORD PTR i$11[rbp], eax
$LN16@stbi__proc:
	mov	eax, DWORD PTR n$12[rbp]
	cmp	DWORD PTR i$11[rbp], eax
	jge	SHORT $LN15@stbi__proc
; Line 3114
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movsxd	rcx, DWORD PTR i$11[rbp]
	mov	rdx, QWORD PTR v$9[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN14@stbi__proc
$LN15@stbi__proc:
; Line 3115
	cmp	DWORD PTR tc$14[rbp], 0
	je	SHORT $LN36@stbi__proc
; Line 3116
	movsxd	rax, DWORD PTR th$15[rbp]
	imul	rax, rax, 1680				; 00000690H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+6728]
	movsxd	rcx, DWORD PTR th$15[rbp]
	imul	rcx, rcx, 1024				; 00000400H
	mov	rdx, QWORD PTR z$[rbp]
	lea	rcx, QWORD PTR [rdx+rcx+13960]
	mov	rdx, rax
	call	?stbi__build_fast_ac@@YAXPEAFPEAUstbi__huffman@@@Z ; stbi__build_fast_ac
$LN36@stbi__proc:
; Line 3117
	mov	eax, DWORD PTR n$12[rbp]
	mov	ecx, DWORD PTR L$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR L$[rbp], eax
; Line 3118
	jmp	$LN9@stbi__proc
$LN10@stbi__proc:
; Line 3119
	cmp	DWORD PTR L$[rbp], 0
	jne	SHORT $LN59@stbi__proc
	mov	DWORD PTR tv233[rbp], 1
	jmp	SHORT $LN60@stbi__proc
$LN59@stbi__proc:
	mov	DWORD PTR tv233[rbp], 0
$LN60@stbi__proc:
	mov	eax, DWORD PTR tv233[rbp]
	jmp	$LN1@stbi__proc
$LN2@stbi__proc:
; Line 3123
	cmp	DWORD PTR m$[rbp], 224			; 000000e0H
	jl	SHORT $LN39@stbi__proc
	cmp	DWORD PTR m$[rbp], 239			; 000000efH
	jle	SHORT $LN38@stbi__proc
$LN39@stbi__proc:
	cmp	DWORD PTR m$[rbp], 254			; 000000feH
	jne	$LN37@stbi__proc
$LN38@stbi__proc:
; Line 3124
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR L$[rbp], eax
; Line 3125
	cmp	DWORD PTR L$[rbp], 2
	jge	SHORT $LN40@stbi__proc
; Line 3126
	cmp	DWORD PTR m$[rbp], 254			; 000000feH
	jne	SHORT $LN41@stbi__proc
; Line 3127
	lea	rcx, OFFSET FLAT:??_C@_0M@CICAFFCH@bad?5COM?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
	jmp	SHORT $LN42@stbi__proc
$LN41@stbi__proc:
; Line 3129
	lea	rcx, OFFSET FLAT:??_C@_0M@EENLKPDI@bad?5APP?5len@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__proc
$LN42@stbi__proc:
$LN40@stbi__proc:
; Line 3131
	mov	eax, DWORD PTR L$[rbp]
	sub	eax, 2
	mov	DWORD PTR L$[rbp], eax
; Line 3133
	cmp	DWORD PTR m$[rbp], 224			; 000000e0H
	jne	$LN43@stbi__proc
	cmp	DWORD PTR L$[rbp], 5
	jl	$LN43@stbi__proc
; Line 3135
	mov	DWORD PTR ok$16[rbp], 1
; Line 3137
	mov	DWORD PTR i$17[rbp], 0
	jmp	SHORT $LN19@stbi__proc
$LN17@stbi__proc:
	mov	eax, DWORD PTR i$17[rbp]
	inc	eax
	mov	DWORD PTR i$17[rbp], eax
$LN19@stbi__proc:
	cmp	DWORD PTR i$17[rbp], 5
	jge	SHORT $LN18@stbi__proc
; Line 3138
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	movsxd	rcx, DWORD PTR i$17[rbp]
	lea	rdx, OFFSET FLAT:?tag@?CL@??stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z@4QBEB
	movzx	ecx, BYTE PTR [rdx+rcx]
	cmp	eax, ecx
	je	SHORT $LN45@stbi__proc
; Line 3139
	mov	DWORD PTR ok$16[rbp], 0
$LN45@stbi__proc:
	jmp	SHORT $LN17@stbi__proc
$LN18@stbi__proc:
; Line 3140
	mov	eax, DWORD PTR L$[rbp]
	sub	eax, 5
	mov	DWORD PTR L$[rbp], eax
; Line 3141
	cmp	DWORD PTR ok$16[rbp], 0
	je	SHORT $LN46@stbi__proc
; Line 3142
	mov	rax, QWORD PTR z$[rbp]
	mov	DWORD PTR [rax+18504], 1
$LN46@stbi__proc:
	jmp	$LN44@stbi__proc
$LN43@stbi__proc:
; Line 3143
	cmp	DWORD PTR m$[rbp], 238			; 000000eeH
	jne	$LN47@stbi__proc
	cmp	DWORD PTR L$[rbp], 12
	jl	$LN47@stbi__proc
; Line 3145
	mov	DWORD PTR ok$18[rbp], 1
; Line 3147
	mov	DWORD PTR i$19[rbp], 0
	jmp	SHORT $LN22@stbi__proc
$LN20@stbi__proc:
	mov	eax, DWORD PTR i$19[rbp]
	inc	eax
	mov	DWORD PTR i$19[rbp], eax
$LN22@stbi__proc:
	cmp	DWORD PTR i$19[rbp], 6
	jge	SHORT $LN21@stbi__proc
; Line 3148
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	movsxd	rcx, DWORD PTR i$19[rbp]
	lea	rdx, OFFSET FLAT:?tag@?DE@??stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z@4QBEB
	movzx	ecx, BYTE PTR [rdx+rcx]
	cmp	eax, ecx
	je	SHORT $LN48@stbi__proc
; Line 3149
	mov	DWORD PTR ok$18[rbp], 0
$LN48@stbi__proc:
	jmp	SHORT $LN20@stbi__proc
$LN21@stbi__proc:
; Line 3150
	mov	eax, DWORD PTR L$[rbp]
	sub	eax, 6
	mov	DWORD PTR L$[rbp], eax
; Line 3151
	cmp	DWORD PTR ok$18[rbp], 0
	je	SHORT $LN49@stbi__proc
; Line 3152
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
; Line 3153
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
; Line 3154
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
; Line 3155
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	rcx, QWORD PTR z$[rbp]
	mov	DWORD PTR [rcx+18508], eax
; Line 3156
	mov	eax, DWORD PTR L$[rbp]
	sub	eax, 6
	mov	DWORD PTR L$[rbp], eax
$LN49@stbi__proc:
$LN47@stbi__proc:
$LN44@stbi__proc:
; Line 3160
	mov	edx, DWORD PTR L$[rbp]
	mov	rax, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 3161
	mov	eax, 1
	jmp	SHORT $LN1@stbi__proc
$LN37@stbi__proc:
; Line 3164
	lea	rcx, OFFSET FLAT:??_C@_0P@NNGPHMMK@unknown?5marker@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
$LN1@stbi__proc:
; Line 3165
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1000]
	pop	rdi
	pop	rbp
	ret	0
?stbi__process_marker@@YAHPEAUstbi__jpeg@@H@Z ENDP	; stbi__process_marker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
i$1 = 4
j$2 = 36
n$3 = 68
w$4 = 100
h$5 = 132
data$6 = 168
tv174 = 376
z$ = 416
?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z PROC		; stbi__jpeg_finish, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3047
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3048
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18480], 0
	je	$LN11@stbi__jpeg
; Line 3051
	mov	DWORD PTR n$3[rbp], 0
	jmp	SHORT $LN4@stbi__jpeg
$LN2@stbi__jpeg:
	mov	eax, DWORD PTR n$3[rbp]
	inc	eax
	mov	DWORD PTR n$3[rbp], eax
$LN4@stbi__jpeg:
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR n$3[rbp], eax
	jge	$LN3@stbi__jpeg
; Line 3052
	movsxd	rax, DWORD PTR n$3[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18108]
	add	eax, 7
	sar	eax, 3
	mov	DWORD PTR w$4[rbp], eax
; Line 3053
	movsxd	rax, DWORD PTR n$3[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18112]
	add	eax, 7
	sar	eax, 3
	mov	DWORD PTR h$5[rbp], eax
; Line 3054
	mov	DWORD PTR j$2[rbp], 0
	jmp	SHORT $LN7@stbi__jpeg
$LN5@stbi__jpeg:
	mov	eax, DWORD PTR j$2[rbp]
	inc	eax
	mov	DWORD PTR j$2[rbp], eax
$LN7@stbi__jpeg:
	mov	eax, DWORD PTR h$5[rbp]
	cmp	DWORD PTR j$2[rbp], eax
	jge	$LN6@stbi__jpeg
; Line 3055
	mov	DWORD PTR i$1[rbp], 0
	jmp	SHORT $LN10@stbi__jpeg
$LN8@stbi__jpeg:
	mov	eax, DWORD PTR i$1[rbp]
	inc	eax
	mov	DWORD PTR i$1[rbp], eax
$LN10@stbi__jpeg:
	mov	eax, DWORD PTR w$4[rbp]
	cmp	DWORD PTR i$1[rbp], eax
	jge	$LN9@stbi__jpeg
; Line 3056
	movsxd	rax, DWORD PTR n$3[rbp]
	imul	rax, rax, 96				; 00000060H
	movsxd	rcx, DWORD PTR n$3[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	r8d, DWORD PTR j$2[rbp]
	imul	r8d, DWORD PTR [rdx+rcx+18168]
	mov	ecx, r8d
	mov	edx, DWORD PTR i$1[rbp]
	add	edx, ecx
	mov	ecx, edx
	imul	ecx, ecx, 64				; 00000040H
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rdx+rax+18160]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR data$6[rbp], rax
; Line 3057
	movsxd	rax, DWORD PTR n$3[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	movsxd	rax, DWORD PTR [rcx+rax+18092]
	imul	rax, rax, 128				; 00000080H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+13448]
	mov	rdx, rax
	mov	rcx, QWORD PTR data$6[rbp]
	call	?stbi__jpeg_dequantize@@YAXPEAFPEAG@Z	; stbi__jpeg_dequantize
; Line 3058
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax+18544]
	mov	QWORD PTR tv174[rbp], rax
	movsxd	rax, DWORD PTR n$3[rbp]
	imul	rax, rax, 96				; 00000060H
	movsxd	rcx, DWORD PTR n$3[rbp]
	imul	rcx, rcx, 96				; 00000060H
	movsxd	rdx, DWORD PTR n$3[rbp]
	imul	rdx, rdx, 96				; 00000060H
	mov	r8, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR [r8+rdx+18116]
	imul	edx, DWORD PTR j$2[rbp]
	shl	edx, 3
	movsxd	rdx, edx
	mov	r8, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [r8+rcx+18128]
	add	rcx, rdx
	mov	edx, DWORD PTR i$1[rbp]
	shl	edx, 3
	movsxd	rdx, edx
	add	rcx, rdx
	mov	r8, QWORD PTR data$6[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR [rdx+rax+18116]
	call	QWORD PTR tv174[rbp]
; Line 3059
	jmp	$LN8@stbi__jpeg
$LN9@stbi__jpeg:
; Line 3060
	jmp	$LN5@stbi__jpeg
$LN6@stbi__jpeg:
; Line 3061
	jmp	$LN2@stbi__jpeg
$LN3@stbi__jpeg:
$LN11@stbi__jpeg:
; Line 3063
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_finish@@YAXPEAUstbi__jpeg@@@Z ENDP		; stbi__jpeg_finish
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_dequantize@@YAXPEAFPEAG@Z
_TEXT	SEGMENT
i$ = 4
data$ = 256
dequant$ = 264
?stbi__jpeg_dequantize@@YAXPEAFPEAG@Z PROC		; stbi__jpeg_dequantize, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3040
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3042
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__jpeg
$LN2@stbi__jpeg:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__jpeg:
	cmp	DWORD PTR i$[rbp], 64			; 00000040H
	jge	SHORT $LN3@stbi__jpeg
; Line 3043
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR dequant$[rbp]
	movzx	eax, WORD PTR [rcx+rax*2]
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR data$[rbp]
	movsx	ecx, WORD PTR [rdx+rcx*2]
	imul	ecx, eax
	mov	eax, ecx
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR data$[rbp]
	mov	WORD PTR [rdx+rcx*2], ax
	jmp	SHORT $LN2@stbi__jpeg
$LN3@stbi__jpeg:
; Line 3044
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_dequantize@@YAXPEAFPEAG@Z ENDP		; stbi__jpeg_dequantize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
i$5 = 4
j$6 = 36
data$7 = 80
n$8 = 228
w$9 = 260
h$10 = 292
ha$11 = 324
i$12 = 356
j$13 = 388
k$14 = 420
x$15 = 452
y$16 = 484
data$17 = 528
n$18 = 676
x2$19 = 708
y2$20 = 740
ha$21 = 772
i$22 = 804
j$23 = 836
n$24 = 868
w$25 = 900
h$26 = 932
data$27 = 968
ha$28 = 996
i$29 = 1028
j$30 = 1060
k$31 = 1092
x$32 = 1124
y$33 = 1156
n$34 = 1188
x2$35 = 1220
y2$36 = 1252
data$37 = 1288
tv522 = 1876
tv404 = 1876
tv315 = 1876
tv192 = 1876
tv312 = 1880
tv189 = 1880
__$ArrayPad$ = 1888
z$ = 1936
?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z PROC ; stbi__parse_entropy_coded_data, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2916
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1976				; 000007b8H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 334				; 0000014eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+2008]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2917
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z ; stbi__jpeg_reset
; Line 2918
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18480], 0
	jne	$LN44@stbi__pars
; Line 2919
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18516], 1
	jne	$LN46@stbi__pars
; Line 2922
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18520]
	mov	DWORD PTR n$8[rbp], eax
; Line 2927
	movsxd	rax, DWORD PTR n$8[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18108]
	add	eax, 7
	sar	eax, 3
	mov	DWORD PTR w$9[rbp], eax
; Line 2928
	movsxd	rax, DWORD PTR n$8[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18112]
	add	eax, 7
	sar	eax, 3
	mov	DWORD PTR h$10[rbp], eax
; Line 2929
	mov	DWORD PTR j$6[rbp], 0
	jmp	SHORT $LN4@stbi__pars
$LN2@stbi__pars:
	mov	eax, DWORD PTR j$6[rbp]
	inc	eax
	mov	DWORD PTR j$6[rbp], eax
$LN4@stbi__pars:
	mov	eax, DWORD PTR h$10[rbp]
	cmp	DWORD PTR j$6[rbp], eax
	jge	$LN3@stbi__pars
; Line 2930
	mov	DWORD PTR i$5[rbp], 0
	jmp	SHORT $LN7@stbi__pars
$LN5@stbi__pars:
	mov	eax, DWORD PTR i$5[rbp]
	inc	eax
	mov	DWORD PTR i$5[rbp], eax
$LN7@stbi__pars:
	mov	eax, DWORD PTR w$9[rbp]
	cmp	DWORD PTR i$5[rbp], eax
	jge	$LN6@stbi__pars
; Line 2931
	movsxd	rax, DWORD PTR n$8[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18100]
	mov	DWORD PTR ha$11[rbp], eax
; Line 2932
	movsxd	rax, DWORD PTR n$8[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	movsxd	rax, DWORD PTR [rcx+rax+18092]
	imul	rax, rax, 128				; 00000080H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+13448]
	movsxd	rcx, DWORD PTR ha$11[rbp]
	imul	rcx, rcx, 1024				; 00000400H
	mov	rdx, QWORD PTR z$[rbp]
	lea	rcx, QWORD PTR [rdx+rcx+13960]
	movsxd	rdx, DWORD PTR ha$11[rbp]
	imul	rdx, rdx, 1680				; 00000690H
	mov	r8, QWORD PTR z$[rbp]
	lea	rdx, QWORD PTR [r8+rdx+6728]
	movsxd	r8, DWORD PTR n$8[rbp]
	imul	r8, r8, 96				; 00000060H
	mov	r9, QWORD PTR z$[rbp]
	movsxd	r8, DWORD PTR [r9+r8+18096]
	imul	r8, r8, 1680				; 00000690H
	mov	r9, QWORD PTR z$[rbp]
	lea	r8, QWORD PTR [r9+r8+8]
	mov	QWORD PTR [rsp+48], rax
	mov	eax, DWORD PTR n$8[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, rdx
	lea	rdx, QWORD PTR data$7[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z ; stbi__jpeg_decode_block
	test	eax, eax
	jne	SHORT $LN48@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN48@stbi__pars:
; Line 2933
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax+18544]
	mov	QWORD PTR tv189[rbp], rax
	movsxd	rax, DWORD PTR n$8[rbp]
	imul	rax, rax, 96				; 00000060H
	movsxd	rcx, DWORD PTR n$8[rbp]
	imul	rcx, rcx, 96				; 00000060H
	movsxd	rdx, DWORD PTR n$8[rbp]
	imul	rdx, rdx, 96				; 00000060H
	mov	r8, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR [r8+rdx+18116]
	imul	edx, DWORD PTR j$6[rbp]
	shl	edx, 3
	movsxd	rdx, edx
	mov	r8, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [r8+rcx+18128]
	add	rcx, rdx
	mov	edx, DWORD PTR i$5[rbp]
	shl	edx, 3
	movsxd	rdx, edx
	add	rcx, rdx
	lea	r8, QWORD PTR data$7[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR [rdx+rax+18116]
	call	QWORD PTR tv189[rbp]
; Line 2935
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18540]
	dec	eax
	mov	DWORD PTR tv192[rbp], eax
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR tv192[rbp]
	mov	DWORD PTR [rax+18540], ecx
	cmp	DWORD PTR tv192[rbp], 0
	jg	SHORT $LN49@stbi__pars
; Line 2936
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18468], 24
	jge	SHORT $LN50@stbi__pars
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN50@stbi__pars:
; Line 2939
	mov	rax, QWORD PTR z$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 208				; 000000d0H
	jl	SHORT $LN52@stbi__pars
	mov	rax, QWORD PTR z$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 215				; 000000d7H
	jle	SHORT $LN51@stbi__pars
$LN52@stbi__pars:
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN51@stbi__pars:
; Line 2940
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z ; stbi__jpeg_reset
$LN49@stbi__pars:
; Line 2942
	jmp	$LN5@stbi__pars
$LN6@stbi__pars:
; Line 2943
	jmp	$LN2@stbi__pars
$LN3@stbi__pars:
; Line 2944
	mov	eax, 1
	jmp	$LN1@stbi__pars
; Line 2945
	jmp	$LN47@stbi__pars
$LN46@stbi__pars:
; Line 2948
	mov	DWORD PTR j$13[rbp], 0
	jmp	SHORT $LN10@stbi__pars
$LN8@stbi__pars:
	mov	eax, DWORD PTR j$13[rbp]
	inc	eax
	mov	DWORD PTR j$13[rbp], eax
$LN10@stbi__pars:
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18068]
	cmp	DWORD PTR j$13[rbp], eax
	jge	$LN9@stbi__pars
; Line 2949
	mov	DWORD PTR i$12[rbp], 0
	jmp	SHORT $LN13@stbi__pars
$LN11@stbi__pars:
	mov	eax, DWORD PTR i$12[rbp]
	inc	eax
	mov	DWORD PTR i$12[rbp], eax
$LN13@stbi__pars:
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18064]
	cmp	DWORD PTR i$12[rbp], eax
	jge	$LN12@stbi__pars
; Line 2951
	mov	DWORD PTR k$14[rbp], 0
	jmp	SHORT $LN16@stbi__pars
$LN14@stbi__pars:
	mov	eax, DWORD PTR k$14[rbp]
	inc	eax
	mov	DWORD PTR k$14[rbp], eax
$LN16@stbi__pars:
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18516]
	cmp	DWORD PTR k$14[rbp], eax
	jge	$LN15@stbi__pars
; Line 2952
	movsxd	rax, DWORD PTR k$14[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+18520]
	mov	DWORD PTR n$18[rbp], eax
; Line 2955
	mov	DWORD PTR y$16[rbp], 0
	jmp	SHORT $LN19@stbi__pars
$LN17@stbi__pars:
	mov	eax, DWORD PTR y$16[rbp]
	inc	eax
	mov	DWORD PTR y$16[rbp], eax
$LN19@stbi__pars:
	movsxd	rax, DWORD PTR n$18[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18088]
	cmp	DWORD PTR y$16[rbp], eax
	jge	$LN18@stbi__pars
; Line 2956
	mov	DWORD PTR x$15[rbp], 0
	jmp	SHORT $LN22@stbi__pars
$LN20@stbi__pars:
	mov	eax, DWORD PTR x$15[rbp]
	inc	eax
	mov	DWORD PTR x$15[rbp], eax
$LN22@stbi__pars:
	movsxd	rax, DWORD PTR n$18[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18084]
	cmp	DWORD PTR x$15[rbp], eax
	jge	$LN21@stbi__pars
; Line 2957
	movsxd	rax, DWORD PTR n$18[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR i$12[rbp]
	imul	edx, DWORD PTR [rcx+rax+18084]
	mov	eax, edx
	add	eax, DWORD PTR x$15[rbp]
	shl	eax, 3
	mov	DWORD PTR x2$19[rbp], eax
; Line 2958
	movsxd	rax, DWORD PTR n$18[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR j$13[rbp]
	imul	edx, DWORD PTR [rcx+rax+18088]
	mov	eax, edx
	add	eax, DWORD PTR y$16[rbp]
	shl	eax, 3
	mov	DWORD PTR y2$20[rbp], eax
; Line 2959
	movsxd	rax, DWORD PTR n$18[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18100]
	mov	DWORD PTR ha$21[rbp], eax
; Line 2960
	movsxd	rax, DWORD PTR n$18[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	movsxd	rax, DWORD PTR [rcx+rax+18092]
	imul	rax, rax, 128				; 00000080H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+13448]
	movsxd	rcx, DWORD PTR ha$21[rbp]
	imul	rcx, rcx, 1024				; 00000400H
	mov	rdx, QWORD PTR z$[rbp]
	lea	rcx, QWORD PTR [rdx+rcx+13960]
	movsxd	rdx, DWORD PTR ha$21[rbp]
	imul	rdx, rdx, 1680				; 00000690H
	mov	r8, QWORD PTR z$[rbp]
	lea	rdx, QWORD PTR [r8+rdx+6728]
	movsxd	r8, DWORD PTR n$18[rbp]
	imul	r8, r8, 96				; 00000060H
	mov	r9, QWORD PTR z$[rbp]
	movsxd	r8, DWORD PTR [r9+r8+18096]
	imul	r8, r8, 1680				; 00000690H
	mov	r9, QWORD PTR z$[rbp]
	lea	r8, QWORD PTR [r9+r8+8]
	mov	QWORD PTR [rsp+48], rax
	mov	eax, DWORD PTR n$18[rbp]
	mov	DWORD PTR [rsp+40], eax
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, rdx
	lea	rdx, QWORD PTR data$17[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z ; stbi__jpeg_decode_block
	test	eax, eax
	jne	SHORT $LN53@stbi__pars
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN53@stbi__pars:
; Line 2961
	mov	rax, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rax+18544]
	mov	QWORD PTR tv312[rbp], rax
	movsxd	rax, DWORD PTR n$18[rbp]
	imul	rax, rax, 96				; 00000060H
	movsxd	rcx, DWORD PTR n$18[rbp]
	imul	rcx, rcx, 96				; 00000060H
	movsxd	rdx, DWORD PTR n$18[rbp]
	imul	rdx, rdx, 96				; 00000060H
	mov	r8, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR [r8+rdx+18116]
	imul	edx, DWORD PTR y2$20[rbp]
	movsxd	rdx, edx
	mov	r8, QWORD PTR z$[rbp]
	mov	rcx, QWORD PTR [r8+rcx+18128]
	add	rcx, rdx
	movsxd	rdx, DWORD PTR x2$19[rbp]
	add	rcx, rdx
	lea	r8, QWORD PTR data$17[rbp]
	mov	rdx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR [rdx+rax+18116]
	call	QWORD PTR tv312[rbp]
; Line 2962
	jmp	$LN20@stbi__pars
$LN21@stbi__pars:
; Line 2963
	jmp	$LN17@stbi__pars
$LN18@stbi__pars:
; Line 2964
	jmp	$LN14@stbi__pars
$LN15@stbi__pars:
; Line 2967
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18540]
	dec	eax
	mov	DWORD PTR tv315[rbp], eax
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR tv315[rbp]
	mov	DWORD PTR [rax+18540], ecx
	cmp	DWORD PTR tv315[rbp], 0
	jg	SHORT $LN54@stbi__pars
; Line 2968
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18468], 24
	jge	SHORT $LN55@stbi__pars
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN55@stbi__pars:
; Line 2969
	mov	rax, QWORD PTR z$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 208				; 000000d0H
	jl	SHORT $LN57@stbi__pars
	mov	rax, QWORD PTR z$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 215				; 000000d7H
	jle	SHORT $LN56@stbi__pars
$LN57@stbi__pars:
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN56@stbi__pars:
; Line 2970
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z ; stbi__jpeg_reset
$LN54@stbi__pars:
; Line 2972
	jmp	$LN11@stbi__pars
$LN12@stbi__pars:
; Line 2973
	jmp	$LN8@stbi__pars
$LN9@stbi__pars:
; Line 2974
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN47@stbi__pars:
; Line 2976
	jmp	$LN45@stbi__pars
$LN44@stbi__pars:
; Line 2977
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18516], 1
	jne	$LN58@stbi__pars
; Line 2979
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18520]
	mov	DWORD PTR n$24[rbp], eax
; Line 2984
	movsxd	rax, DWORD PTR n$24[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18108]
	add	eax, 7
	sar	eax, 3
	mov	DWORD PTR w$25[rbp], eax
; Line 2985
	movsxd	rax, DWORD PTR n$24[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18112]
	add	eax, 7
	sar	eax, 3
	mov	DWORD PTR h$26[rbp], eax
; Line 2986
	mov	DWORD PTR j$23[rbp], 0
	jmp	SHORT $LN25@stbi__pars
$LN23@stbi__pars:
	mov	eax, DWORD PTR j$23[rbp]
	inc	eax
	mov	DWORD PTR j$23[rbp], eax
$LN25@stbi__pars:
	mov	eax, DWORD PTR h$26[rbp]
	cmp	DWORD PTR j$23[rbp], eax
	jge	$LN24@stbi__pars
; Line 2987
	mov	DWORD PTR i$22[rbp], 0
	jmp	SHORT $LN28@stbi__pars
$LN26@stbi__pars:
	mov	eax, DWORD PTR i$22[rbp]
	inc	eax
	mov	DWORD PTR i$22[rbp], eax
$LN28@stbi__pars:
	mov	eax, DWORD PTR w$25[rbp]
	cmp	DWORD PTR i$22[rbp], eax
	jge	$LN27@stbi__pars
; Line 2988
	movsxd	rax, DWORD PTR n$24[rbp]
	imul	rax, rax, 96				; 00000060H
	movsxd	rcx, DWORD PTR n$24[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	r8d, DWORD PTR j$23[rbp]
	imul	r8d, DWORD PTR [rdx+rcx+18168]
	mov	ecx, r8d
	mov	edx, DWORD PTR i$22[rbp]
	add	edx, ecx
	mov	ecx, edx
	imul	ecx, ecx, 64				; 00000040H
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rdx+rax+18160]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR data$27[rbp], rax
; Line 2989
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18484], 0
	jne	SHORT $LN60@stbi__pars
; Line 2990
	movsxd	rax, DWORD PTR n$24[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	movsxd	rax, DWORD PTR [rcx+rax+18096]
	imul	rax, rax, 1680				; 00000690H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+8]
	mov	r9d, DWORD PTR n$24[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR data$27[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z ; stbi__jpeg_decode_block_prog_dc
	test	eax, eax
	jne	SHORT $LN62@stbi__pars
; Line 2991
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN62@stbi__pars:
; Line 2992
	jmp	SHORT $LN61@stbi__pars
$LN60@stbi__pars:
; Line 2993
	movsxd	rax, DWORD PTR n$24[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18100]
	mov	DWORD PTR ha$28[rbp], eax
; Line 2994
	movsxd	rax, DWORD PTR ha$28[rbp]
	imul	rax, rax, 1024				; 00000400H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+13960]
	movsxd	rcx, DWORD PTR ha$28[rbp]
	imul	rcx, rcx, 1680				; 00000690H
	mov	rdx, QWORD PTR z$[rbp]
	lea	rcx, QWORD PTR [rdx+rcx+6728]
	mov	r9, rax
	mov	r8, rcx
	mov	rdx, QWORD PTR data$27[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_decode_block_prog_ac@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@PEAF@Z ; stbi__jpeg_decode_block_prog_ac
	test	eax, eax
	jne	SHORT $LN63@stbi__pars
; Line 2995
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN63@stbi__pars:
$LN61@stbi__pars:
; Line 2998
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18540]
	dec	eax
	mov	DWORD PTR tv404[rbp], eax
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR tv404[rbp]
	mov	DWORD PTR [rax+18540], ecx
	cmp	DWORD PTR tv404[rbp], 0
	jg	SHORT $LN64@stbi__pars
; Line 2999
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18468], 24
	jge	SHORT $LN65@stbi__pars
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN65@stbi__pars:
; Line 3000
	mov	rax, QWORD PTR z$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 208				; 000000d0H
	jl	SHORT $LN67@stbi__pars
	mov	rax, QWORD PTR z$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 215				; 000000d7H
	jle	SHORT $LN66@stbi__pars
$LN67@stbi__pars:
	mov	eax, 1
	jmp	$LN1@stbi__pars
$LN66@stbi__pars:
; Line 3001
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z ; stbi__jpeg_reset
$LN64@stbi__pars:
; Line 3003
	jmp	$LN26@stbi__pars
$LN27@stbi__pars:
; Line 3004
	jmp	$LN23@stbi__pars
$LN24@stbi__pars:
; Line 3005
	mov	eax, 1
	jmp	$LN1@stbi__pars
; Line 3006
	jmp	$LN59@stbi__pars
$LN58@stbi__pars:
; Line 3008
	mov	DWORD PTR j$30[rbp], 0
	jmp	SHORT $LN31@stbi__pars
$LN29@stbi__pars:
	mov	eax, DWORD PTR j$30[rbp]
	inc	eax
	mov	DWORD PTR j$30[rbp], eax
$LN31@stbi__pars:
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18068]
	cmp	DWORD PTR j$30[rbp], eax
	jge	$LN30@stbi__pars
; Line 3009
	mov	DWORD PTR i$29[rbp], 0
	jmp	SHORT $LN34@stbi__pars
$LN32@stbi__pars:
	mov	eax, DWORD PTR i$29[rbp]
	inc	eax
	mov	DWORD PTR i$29[rbp], eax
$LN34@stbi__pars:
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18064]
	cmp	DWORD PTR i$29[rbp], eax
	jge	$LN33@stbi__pars
; Line 3011
	mov	DWORD PTR k$31[rbp], 0
	jmp	SHORT $LN37@stbi__pars
$LN35@stbi__pars:
	mov	eax, DWORD PTR k$31[rbp]
	inc	eax
	mov	DWORD PTR k$31[rbp], eax
$LN37@stbi__pars:
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18516]
	cmp	DWORD PTR k$31[rbp], eax
	jge	$LN36@stbi__pars
; Line 3012
	movsxd	rax, DWORD PTR k$31[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+18520]
	mov	DWORD PTR n$34[rbp], eax
; Line 3015
	mov	DWORD PTR y$33[rbp], 0
	jmp	SHORT $LN40@stbi__pars
$LN38@stbi__pars:
	mov	eax, DWORD PTR y$33[rbp]
	inc	eax
	mov	DWORD PTR y$33[rbp], eax
$LN40@stbi__pars:
	movsxd	rax, DWORD PTR n$34[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18088]
	cmp	DWORD PTR y$33[rbp], eax
	jge	$LN39@stbi__pars
; Line 3016
	mov	DWORD PTR x$32[rbp], 0
	jmp	SHORT $LN43@stbi__pars
$LN41@stbi__pars:
	mov	eax, DWORD PTR x$32[rbp]
	inc	eax
	mov	DWORD PTR x$32[rbp], eax
$LN43@stbi__pars:
	movsxd	rax, DWORD PTR n$34[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18084]
	cmp	DWORD PTR x$32[rbp], eax
	jge	$LN42@stbi__pars
; Line 3017
	movsxd	rax, DWORD PTR n$34[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR i$29[rbp]
	imul	edx, DWORD PTR [rcx+rax+18084]
	mov	eax, edx
	add	eax, DWORD PTR x$32[rbp]
	mov	DWORD PTR x2$35[rbp], eax
; Line 3018
	movsxd	rax, DWORD PTR n$34[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	mov	edx, DWORD PTR j$30[rbp]
	imul	edx, DWORD PTR [rcx+rax+18088]
	mov	eax, edx
	add	eax, DWORD PTR y$33[rbp]
	mov	DWORD PTR y2$36[rbp], eax
; Line 3019
	movsxd	rax, DWORD PTR n$34[rbp]
	imul	rax, rax, 96				; 00000060H
	movsxd	rcx, DWORD PTR n$34[rbp]
	imul	rcx, rcx, 96				; 00000060H
	mov	rdx, QWORD PTR z$[rbp]
	mov	r8d, DWORD PTR y2$36[rbp]
	imul	r8d, DWORD PTR [rdx+rcx+18168]
	mov	ecx, r8d
	mov	edx, DWORD PTR x2$35[rbp]
	add	edx, ecx
	mov	ecx, edx
	imul	ecx, ecx, 64				; 00000040H
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR z$[rbp]
	mov	rax, QWORD PTR [rdx+rax+18160]
	lea	rax, QWORD PTR [rax+rcx*2]
	mov	QWORD PTR data$37[rbp], rax
; Line 3020
	movsxd	rax, DWORD PTR n$34[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR z$[rbp]
	movsxd	rax, DWORD PTR [rcx+rax+18096]
	imul	rax, rax, 1680				; 00000690H
	mov	rcx, QWORD PTR z$[rbp]
	lea	rax, QWORD PTR [rcx+rax+8]
	mov	r9d, DWORD PTR n$34[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR data$37[rbp]
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z ; stbi__jpeg_decode_block_prog_dc
	test	eax, eax
	jne	SHORT $LN68@stbi__pars
; Line 3021
	xor	eax, eax
	jmp	$LN1@stbi__pars
$LN68@stbi__pars:
; Line 3022
	jmp	$LN41@stbi__pars
$LN42@stbi__pars:
; Line 3023
	jmp	$LN38@stbi__pars
$LN39@stbi__pars:
; Line 3024
	jmp	$LN35@stbi__pars
$LN36@stbi__pars:
; Line 3027
	mov	rax, QWORD PTR z$[rbp]
	mov	eax, DWORD PTR [rax+18540]
	dec	eax
	mov	DWORD PTR tv522[rbp], eax
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR tv522[rbp]
	mov	DWORD PTR [rax+18540], ecx
	cmp	DWORD PTR tv522[rbp], 0
	jg	SHORT $LN69@stbi__pars
; Line 3028
	mov	rax, QWORD PTR z$[rbp]
	cmp	DWORD PTR [rax+18468], 24
	jge	SHORT $LN70@stbi__pars
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN70@stbi__pars:
; Line 3029
	mov	rax, QWORD PTR z$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 208				; 000000d0H
	jl	SHORT $LN72@stbi__pars
	mov	rax, QWORD PTR z$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 215				; 000000d7H
	jle	SHORT $LN71@stbi__pars
$LN72@stbi__pars:
	mov	eax, 1
	jmp	SHORT $LN1@stbi__pars
$LN71@stbi__pars:
; Line 3030
	mov	rcx, QWORD PTR z$[rbp]
	call	?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z ; stbi__jpeg_reset
$LN69@stbi__pars:
; Line 3032
	jmp	$LN32@stbi__pars
$LN33@stbi__pars:
; Line 3033
	jmp	$LN29@stbi__pars
$LN30@stbi__pars:
; Line 3034
	mov	eax, 1
$LN59@stbi__pars:
$LN45@stbi__pars:
$LN1@stbi__pars:
; Line 3037
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1912]
	pop	rdi
	pop	rbp
	ret	0
?stbi__parse_entropy_coded_data@@YAHPEAUstbi__jpeg@@@Z ENDP ; stbi__parse_entropy_coded_data
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
tv88 = 192
j$ = 240
?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z PROC		; stbi__jpeg_reset, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2903
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2904
	mov	rax, QWORD PTR j$[rbp]
	mov	DWORD PTR [rax+18468], 0
; Line 2905
	mov	rax, QWORD PTR j$[rbp]
	mov	DWORD PTR [rax+18464], 0
; Line 2906
	mov	rax, QWORD PTR j$[rbp]
	mov	DWORD PTR [rax+18476], 0
; Line 2907
	mov	eax, 96					; 00000060H
	imul	rax, rax, 3
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+rax+18104], 0
	mov	eax, 96					; 00000060H
	imul	rax, rax, 2
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+rax+18104], 0
	mov	eax, 96					; 00000060H
	imul	rax, rax, 1
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+rax+18104], 0
	mov	eax, 96					; 00000060H
	imul	rax, rax, 0
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+rax+18104], 0
; Line 2908
	mov	rax, QWORD PTR j$[rbp]
	mov	BYTE PTR [rax+18472], 255		; 000000ffH
; Line 2909
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18536], 0
	je	SHORT $LN3@stbi__jpeg
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18536]
	mov	DWORD PTR tv88[rbp], eax
	jmp	SHORT $LN4@stbi__jpeg
$LN3@stbi__jpeg:
	mov	DWORD PTR tv88[rbp], 2147483647		; 7fffffffH
$LN4@stbi__jpeg:
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR tv88[rbp]
	mov	DWORD PTR [rax+18540], ecx
; Line 2910
	mov	rax, QWORD PTR j$[rbp]
	mov	DWORD PTR [rax+18500], 0
; Line 2913
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_reset@@YAXPEAUstbi__jpeg@@@Z ENDP		; stbi__jpeg_reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
x$ = 4
j$ = 256
?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z PROC		; stbi__get_marker, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2886
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2888
	mov	rax, QWORD PTR j$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN4@stbi__get_
	mov	rax, QWORD PTR j$[rbp]
	movzx	eax, BYTE PTR [rax+18472]
	mov	BYTE PTR x$[rbp], al
	mov	rax, QWORD PTR j$[rbp]
	mov	BYTE PTR [rax+18472], 255		; 000000ffH
	movzx	eax, BYTE PTR x$[rbp]
	jmp	SHORT $LN1@stbi__get_
$LN4@stbi__get_:
; Line 2889
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR x$[rbp], al
; Line 2890
	movzx	eax, BYTE PTR x$[rbp]
	cmp	eax, 255				; 000000ffH
	je	SHORT $LN5@stbi__get_
	mov	al, 255					; 000000ffH
	jmp	SHORT $LN1@stbi__get_
$LN5@stbi__get_:
$LN2@stbi__get_:
; Line 2891
	movzx	eax, BYTE PTR x$[rbp]
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN3@stbi__get_
; Line 2892
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR x$[rbp], al
	jmp	SHORT $LN2@stbi__get_
$LN3@stbi__get_:
; Line 2893
	movzx	eax, BYTE PTR x$[rbp]
$LN1@stbi__get_:
; Line 2894
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__get_marker@@YAEPEAUstbi__jpeg@@@Z ENDP		; stbi__get_marker
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__idct_simd@@YAXPEAEHQEAF@Z
_TEXT	SEGMENT
row0$ = 16
row1$ = 64
row2$ = 112
row3$ = 160
row4$ = 208
row5$ = 256
row6$ = 304
row7$ = 352
tmp$ = 400
rot0_0$ = 448
rot0_1$ = 496
rot1_0$ = 544
rot1_1$ = 592
rot2_0$ = 640
rot2_1$ = 688
rot3_0$ = 736
rot3_1$ = 784
bias_0$ = 832
bias_1$ = 880
rot0_0lo$1 = 928
rot0_0hi$2 = 976
t2e_l$3 = 1024
t2e_h$4 = 1072
t3e_l$5 = 1120
t3e_h$6 = 1168
sum04$7 = 1216
dif04$8 = 1264
t0e_l$9 = 1312
t0e_h$10 = 1360
t1e_l$11 = 1408
t1e_h$12 = 1456
x0_l$13 = 1504
x0_h$14 = 1552
x3_l$15 = 1600
x3_h$16 = 1648
x1_l$17 = 1696
x1_h$18 = 1744
x2_l$19 = 1792
x2_h$20 = 1840
rot2_0lo$21 = 1888
rot2_0hi$22 = 1936
y0o_l$23 = 1984
y0o_h$24 = 2032
y2o_l$25 = 2080
y2o_h$26 = 2128
rot3_0lo$27 = 2176
rot3_0hi$28 = 2224
y1o_l$29 = 2272
y1o_h$30 = 2320
y3o_l$31 = 2368
y3o_h$32 = 2416
sum17$33 = 2464
sum35$34 = 2512
rot1_0lo$35 = 2560
rot1_0hi$36 = 2608
y4o_l$37 = 2656
y4o_h$38 = 2704
y5o_l$39 = 2752
y5o_h$40 = 2800
x4_l$41 = 2848
x4_h$42 = 2896
x5_l$43 = 2944
x5_h$44 = 2992
x6_l$45 = 3040
x6_h$46 = 3088
x7_l$47 = 3136
x7_h$48 = 3184
abiased_l$49 = 3232
abiased_h$50 = 3280
sum_l$51 = 3328
sum_h$52 = 3376
dif_l$53 = 3424
dif_h$54 = 3472
abiased_l$55 = 3520
abiased_h$56 = 3568
sum_l$57 = 3616
sum_h$58 = 3664
dif_l$59 = 3712
dif_h$60 = 3760
abiased_l$61 = 3808
abiased_h$62 = 3856
sum_l$63 = 3904
sum_h$64 = 3952
dif_l$65 = 4000
dif_h$66 = 4048
abiased_l$67 = 4096
abiased_h$68 = 4144
sum_l$69 = 4192
sum_h$70 = 4240
dif_l$71 = 4288
dif_h$72 = 4336
rot0_0lo$73 = 4384
rot0_0hi$74 = 4432
t2e_l$75 = 4480
t2e_h$76 = 4528
t3e_l$77 = 4576
t3e_h$78 = 4624
sum04$79 = 4672
dif04$80 = 4720
t0e_l$81 = 4768
t0e_h$82 = 4816
t1e_l$83 = 4864
t1e_h$84 = 4912
x0_l$85 = 4960
x0_h$86 = 5008
x3_l$87 = 5056
x3_h$88 = 5104
x1_l$89 = 5152
x1_h$90 = 5200
x2_l$91 = 5248
x2_h$92 = 5296
rot2_0lo$93 = 5344
rot2_0hi$94 = 5392
y0o_l$95 = 5440
y0o_h$96 = 5488
y2o_l$97 = 5536
y2o_h$98 = 5584
rot3_0lo$99 = 5632
rot3_0hi$100 = 5680
y1o_l$101 = 5728
y1o_h$102 = 5776
y3o_l$103 = 5824
y3o_h$104 = 5872
sum17$105 = 5920
sum35$106 = 5968
rot1_0lo$107 = 6016
rot1_0hi$108 = 6064
y4o_l$109 = 6112
y4o_h$110 = 6160
y5o_l$111 = 6208
y5o_h$112 = 6256
x4_l$113 = 6304
x4_h$114 = 6352
x5_l$115 = 6400
x5_h$116 = 6448
x6_l$117 = 6496
x6_h$118 = 6544
x7_l$119 = 6592
x7_h$120 = 6640
abiased_l$121 = 6688
abiased_h$122 = 6736
sum_l$123 = 6784
sum_h$124 = 6832
dif_l$125 = 6880
dif_h$126 = 6928
abiased_l$127 = 6976
abiased_h$128 = 7024
sum_l$129 = 7072
sum_h$130 = 7120
dif_l$131 = 7168
dif_h$132 = 7216
abiased_l$133 = 7264
abiased_h$134 = 7312
sum_l$135 = 7360
sum_h$136 = 7408
dif_l$137 = 7456
dif_h$138 = 7504
abiased_l$139 = 7552
abiased_h$140 = 7600
sum_l$141 = 7648
sum_h$142 = 7696
dif_l$143 = 7744
dif_h$144 = 7792
p0$145 = 7840
p1$146 = 7888
p2$147 = 7936
p3$148 = 7984
$T149 = 9568
$T150 = 9616
$T151 = 9664
$T152 = 9712
$T153 = 9760
$T154 = 9808
$T155 = 9856
$T156 = 9904
$T157 = 9952
$T158 = 10000
$T159 = 10048
$T160 = 10096
$T161 = 10144
$T162 = 10192
$T163 = 10240
$T164 = 10288
$T165 = 10336
$T166 = 10384
$T167 = 10432
$T168 = 10480
$T169 = 10528
$T170 = 10576
$T171 = 10624
$T172 = 10672
$T173 = 10720
$T174 = 10768
$T175 = 10816
$T176 = 10864
$T177 = 10912
$T178 = 10960
$T179 = 11008
$T180 = 11056
$T181 = 11104
$T182 = 11152
$T183 = 11200
$T184 = 11248
$T185 = 11296
$T186 = 11344
$T187 = 11392
$T188 = 11440
$T189 = 11488
$T190 = 11536
$T191 = 11584
$T192 = 11632
$T193 = 11680
$T194 = 11728
$T195 = 11776
$T196 = 11824
$T197 = 11872
$T198 = 11920
$T199 = 11968
$T200 = 12016
$T201 = 12064
$T202 = 12112
$T203 = 12160
$T204 = 12208
$T205 = 12256
$T206 = 12304
$T207 = 12352
$T208 = 12400
$T209 = 12448
$T210 = 12496
$T211 = 12544
$T212 = 12592
$T213 = 12640
$T214 = 12688
$T215 = 12736
$T216 = 12784
$T217 = 12832
$T218 = 12880
$T219 = 12928
$T220 = 12976
$T221 = 13024
$T222 = 13072
$T223 = 13120
$T224 = 13168
$T225 = 13216
$T226 = 13264
$T227 = 13312
$T228 = 13360
$T229 = 13408
$T230 = 13456
$T231 = 13504
$T232 = 13552
$T233 = 13600
$T234 = 13648
$T235 = 13696
$T236 = 13744
$T237 = 13792
$T238 = 13840
$T239 = 13888
$T240 = 13936
$T241 = 13984
$T242 = 14032
$T243 = 14080
$T244 = 14128
$T245 = 14176
$T246 = 14224
$T247 = 14272
$T248 = 14320
$T249 = 14368
$T250 = 14416
$T251 = 14464
$T252 = 14512
$T253 = 14560
$T254 = 14608
$T255 = 14656
$T256 = 14704
$T257 = 14752
$T258 = 14800
$T259 = 14848
$T260 = 14896
$T261 = 14944
$T262 = 14992
$T263 = 15040
$T264 = 15088
$T265 = 15136
$T266 = 15184
$T267 = 15232
$T268 = 15280
$T269 = 15328
$T270 = 15376
$T271 = 15424
$T272 = 15472
$T273 = 15520
$T274 = 15568
$T275 = 15616
$T276 = 15664
$T277 = 15712
$T278 = 15760
$T279 = 15808
$T280 = 15856
$T281 = 15904
$T282 = 15952
$T283 = 16000
$T284 = 16048
$T285 = 16096
$T286 = 16144
$T287 = 16192
$T288 = 16240
$T289 = 16288
$T290 = 16336
$T291 = 16384
$T292 = 16432
$T293 = 16480
$T294 = 16528
$T295 = 16576
$T296 = 16624
$T297 = 16672
$T298 = 16720
$T299 = 16768
$T300 = 16816
$T301 = 16864
$T302 = 16912
$T303 = 16960
$T304 = 17008
$T305 = 17056
$T306 = 17104
$T307 = 17152
$T308 = 17200
$T309 = 17248
$T310 = 17296
$T311 = 17344
$T312 = 17392
$T313 = 17440
$T314 = 17488
$T315 = 17536
$T316 = 17584
$T317 = 17632
$T318 = 17680
$T319 = 17728
$T320 = 17776
$T321 = 17824
$T322 = 17872
$T323 = 17920
$T324 = 17968
$T325 = 18016
$T326 = 18064
$T327 = 18112
$T328 = 18160
$T329 = 18208
$T330 = 18256
$T331 = 18304
$T332 = 18352
$T333 = 18400
$T334 = 18448
$T335 = 18496
$T336 = 18544
$T337 = 18592
$T338 = 18640
$T339 = 18688
$T340 = 18736
$T341 = 18784
$T342 = 18832
$T343 = 18880
$T344 = 18928
$T345 = 18976
$T346 = 19024
$T347 = 19072
$T348 = 19120
$T349 = 19168
$T350 = 19216
$T351 = 19264
$T352 = 19312
$T353 = 19360
$T354 = 19408
$T355 = 19456
$T356 = 19504
$T357 = 19552
$T358 = 19600
$T359 = 19648
$T360 = 19696
$T361 = 19744
$T362 = 19792
$T363 = 19840
$T364 = 19888
$T365 = 19936
$T366 = 19984
$T367 = 20032
$T368 = 20080
$T369 = 20128
$T370 = 20176
$T371 = 20224
$T372 = 20272
$T373 = 20320
$T374 = 20368
$T375 = 20416
$T376 = 20464
$T377 = 20512
$T378 = 20560
$T379 = 20608
$T380 = 20656
$T381 = 20704
$T382 = 20752
$T383 = 20800
$T384 = 20848
$T385 = 20896
$T386 = 20944
$T387 = 20992
$T388 = 21040
$T389 = 21088
$T390 = 21136
$T391 = 21184
$T392 = 21232
$T393 = 21280
$T394 = 21328
$T395 = 21376
$T396 = 21424
$T397 = 21472
$T398 = 21520
$T399 = 21568
$T400 = 21616
$T401 = 21664
$T402 = 21712
$T403 = 21760
$T404 = 21808
$T405 = 21856
$T406 = 21904
$T407 = 21952
$T408 = 22000
$T409 = 22048
$T410 = 22096
$T411 = 22144
$T412 = 22192
$T413 = 22240
$T414 = 22288
$T415 = 22336
$T416 = 22384
$T417 = 22432
$T418 = 22480
out$ = 22544
out_stride$ = 22552
data$ = 22560
?stbi__idct_simd@@YAXPEAEHQEAF@Z PROC			; stbi__idct_simd, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2497
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 22552				; 00005818H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2581
	movdqa	xmm0, XMMWORD PTR __xmm@eb1a08a9eb1a08a9eb1a08a9eb1a08a9
	movdqa	XMMWORD PTR $T149[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T149[rbp]
	movdqa	XMMWORD PTR rot0_0$[rbp], xmm0
; Line 2582
	movdqa	xmm0, XMMWORD PTR __xmm@08a914e808a914e808a914e808a914e8
	movdqa	XMMWORD PTR $T150[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T150[rbp]
	movdqa	XMMWORD PTR rot0_1$[rbp], xmm0
; Line 2583
	movdqa	xmm0, XMMWORD PTR __xmm@12d0046b12d0046b12d0046b12d0046b
	movdqa	XMMWORD PTR $T151[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T151[rbp]
	movdqa	XMMWORD PTR rot1_0$[rbp], xmm0
; Line 2584
	movdqa	xmm0, XMMWORD PTR __xmm@e9cf12d0e9cf12d0e9cf12d0e9cf12d0
	movdqa	XMMWORD PTR $T152[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T152[rbp]
	movdqa	XMMWORD PTR rot1_1$[rbp], xmm0
; Line 2585
	movdqa	xmm0, XMMWORD PTR __xmm@e09ee565e09ee565e09ee565e09ee565
	movdqa	XMMWORD PTR $T153[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T153[rbp]
	movdqa	XMMWORD PTR rot2_0$[rbp], xmm0
; Line 2586
	movdqa	xmm0, XMMWORD PTR __xmm@11c8e09e11c8e09e11c8e09e11c8e09e
	movdqa	XMMWORD PTR $T154[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T154[rbp]
	movdqa	XMMWORD PTR rot2_1$[rbp], xmm0
; Line 2587
	movdqa	xmm0, XMMWORD PTR __xmm@f9c31a9df9c31a9df9c31a9df9c31a9d
	movdqa	XMMWORD PTR $T155[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T155[rbp]
	movdqa	XMMWORD PTR rot3_0$[rbp], xmm0
; Line 2588
	movdqa	xmm0, XMMWORD PTR __xmm@11c8f9c311c8f9c311c8f9c311c8f9c3
	movdqa	XMMWORD PTR $T156[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T156[rbp]
	movdqa	XMMWORD PTR rot3_1$[rbp], xmm0
; Line 2591
	movdqa	xmm0, XMMWORD PTR __xmm@00000200000002000000020000000200
	movdqa	XMMWORD PTR $T157[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T157[rbp]
	movdqa	XMMWORD PTR bias_0$[rbp], xmm0
; Line 2592
	movdqa	xmm0, XMMWORD PTR __xmm@01010000010100000101000001010000
	movdqa	XMMWORD PTR $T158[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T158[rbp]
	movdqa	XMMWORD PTR bias_1$[rbp], xmm0
; Line 2595
	mov	rax, QWORD PTR data$[rbp]
	movdqu	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T159[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T159[rbp]
	movdqa	XMMWORD PTR row0$[rbp], xmm0
; Line 2596
	mov	rax, QWORD PTR data$[rbp]
	add	rax, 16
	movdqu	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T160[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T160[rbp]
	movdqa	XMMWORD PTR row1$[rbp], xmm0
; Line 2597
	mov	rax, QWORD PTR data$[rbp]
	add	rax, 32					; 00000020H
	movdqu	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T161[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T161[rbp]
	movdqa	XMMWORD PTR row2$[rbp], xmm0
; Line 2598
	mov	rax, QWORD PTR data$[rbp]
	add	rax, 48					; 00000030H
	movdqu	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T162[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T162[rbp]
	movdqa	XMMWORD PTR row3$[rbp], xmm0
; Line 2599
	mov	rax, QWORD PTR data$[rbp]
	add	rax, 64					; 00000040H
	movdqu	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T163[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T163[rbp]
	movdqa	XMMWORD PTR row4$[rbp], xmm0
; Line 2600
	mov	rax, QWORD PTR data$[rbp]
	add	rax, 80					; 00000050H
	movdqu	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T164[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T164[rbp]
	movdqa	XMMWORD PTR row5$[rbp], xmm0
; Line 2601
	mov	rax, QWORD PTR data$[rbp]
	add	rax, 96					; 00000060H
	movdqu	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T165[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T165[rbp]
	movdqa	XMMWORD PTR row6$[rbp], xmm0
; Line 2602
	mov	rax, QWORD PTR data$[rbp]
	add	rax, 112				; 00000070H
	movdqu	xmm0, XMMWORD PTR [rax]
	movdqa	XMMWORD PTR $T166[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T166[rbp]
	movdqa	XMMWORD PTR row7$[rbp], xmm0
; Line 2605
	movdqa	xmm0, XMMWORD PTR row2$[rbp]
	punpcklwd xmm0, XMMWORD PTR row6$[rbp]
	movdqa	XMMWORD PTR $T167[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T167[rbp]
	movdqa	XMMWORD PTR rot0_0lo$1[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row2$[rbp]
	punpckhwd xmm0, XMMWORD PTR row6$[rbp]
	movdqa	XMMWORD PTR $T168[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T168[rbp]
	movdqa	XMMWORD PTR rot0_0hi$2[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot0_0lo$1[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot0_0$[rbp]
	movdqa	XMMWORD PTR $T169[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T169[rbp]
	movdqa	XMMWORD PTR t2e_l$3[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot0_0hi$2[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot0_0$[rbp]
	movdqa	XMMWORD PTR $T170[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T170[rbp]
	movdqa	XMMWORD PTR t2e_h$4[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot0_0lo$1[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot0_1$[rbp]
	movdqa	XMMWORD PTR $T171[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T171[rbp]
	movdqa	XMMWORD PTR t3e_l$5[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot0_0hi$2[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot0_1$[rbp]
	movdqa	XMMWORD PTR $T172[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T172[rbp]
	movdqa	XMMWORD PTR t3e_h$6[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	paddw	xmm0, XMMWORD PTR row4$[rbp]
	movdqa	XMMWORD PTR $T173[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T173[rbp]
	movdqa	XMMWORD PTR sum04$7[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	psubw	xmm0, XMMWORD PTR row4$[rbp]
	movdqa	XMMWORD PTR $T174[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T174[rbp]
	movdqa	XMMWORD PTR dif04$8[rbp], xmm0
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T177[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T177[rbp]
	punpcklwd xmm0, XMMWORD PTR sum04$7[rbp]
	movdqa	XMMWORD PTR $T176[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T176[rbp]
	psrad	xmm0, 4
	movdqa	XMMWORD PTR $T175[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T175[rbp]
	movdqa	XMMWORD PTR t0e_l$9[rbp], xmm0
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T180[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T180[rbp]
	punpckhwd xmm0, XMMWORD PTR sum04$7[rbp]
	movdqa	XMMWORD PTR $T179[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T179[rbp]
	psrad	xmm0, 4
	movdqa	XMMWORD PTR $T178[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T178[rbp]
	movdqa	XMMWORD PTR t0e_h$10[rbp], xmm0
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T183[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T183[rbp]
	punpcklwd xmm0, XMMWORD PTR dif04$8[rbp]
	movdqa	XMMWORD PTR $T182[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T182[rbp]
	psrad	xmm0, 4
	movdqa	XMMWORD PTR $T181[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T181[rbp]
	movdqa	XMMWORD PTR t1e_l$11[rbp], xmm0
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T186[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T186[rbp]
	punpckhwd xmm0, XMMWORD PTR dif04$8[rbp]
	movdqa	XMMWORD PTR $T185[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T185[rbp]
	psrad	xmm0, 4
	movdqa	XMMWORD PTR $T184[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T184[rbp]
	movdqa	XMMWORD PTR t1e_h$12[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t0e_l$9[rbp]
	paddd	xmm0, XMMWORD PTR t3e_l$5[rbp]
	movdqa	XMMWORD PTR $T187[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T187[rbp]
	movdqa	XMMWORD PTR x0_l$13[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t0e_h$10[rbp]
	paddd	xmm0, XMMWORD PTR t3e_h$6[rbp]
	movdqa	XMMWORD PTR $T188[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T188[rbp]
	movdqa	XMMWORD PTR x0_h$14[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t0e_l$9[rbp]
	psubd	xmm0, XMMWORD PTR t3e_l$5[rbp]
	movdqa	XMMWORD PTR $T189[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T189[rbp]
	movdqa	XMMWORD PTR x3_l$15[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t0e_h$10[rbp]
	psubd	xmm0, XMMWORD PTR t3e_h$6[rbp]
	movdqa	XMMWORD PTR $T190[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T190[rbp]
	movdqa	XMMWORD PTR x3_h$16[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t1e_l$11[rbp]
	paddd	xmm0, XMMWORD PTR t2e_l$3[rbp]
	movdqa	XMMWORD PTR $T191[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T191[rbp]
	movdqa	XMMWORD PTR x1_l$17[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t1e_h$12[rbp]
	paddd	xmm0, XMMWORD PTR t2e_h$4[rbp]
	movdqa	XMMWORD PTR $T192[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T192[rbp]
	movdqa	XMMWORD PTR x1_h$18[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t1e_l$11[rbp]
	psubd	xmm0, XMMWORD PTR t2e_l$3[rbp]
	movdqa	XMMWORD PTR $T193[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T193[rbp]
	movdqa	XMMWORD PTR x2_l$19[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t1e_h$12[rbp]
	psubd	xmm0, XMMWORD PTR t2e_h$4[rbp]
	movdqa	XMMWORD PTR $T194[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T194[rbp]
	movdqa	XMMWORD PTR x2_h$20[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row7$[rbp]
	punpcklwd xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR $T195[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T195[rbp]
	movdqa	XMMWORD PTR rot2_0lo$21[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row7$[rbp]
	punpckhwd xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR $T196[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T196[rbp]
	movdqa	XMMWORD PTR rot2_0hi$22[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot2_0lo$21[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot2_0$[rbp]
	movdqa	XMMWORD PTR $T197[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T197[rbp]
	movdqa	XMMWORD PTR y0o_l$23[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot2_0hi$22[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot2_0$[rbp]
	movdqa	XMMWORD PTR $T198[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T198[rbp]
	movdqa	XMMWORD PTR y0o_h$24[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot2_0lo$21[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot2_1$[rbp]
	movdqa	XMMWORD PTR $T199[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T199[rbp]
	movdqa	XMMWORD PTR y2o_l$25[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot2_0hi$22[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot2_1$[rbp]
	movdqa	XMMWORD PTR $T200[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T200[rbp]
	movdqa	XMMWORD PTR y2o_h$26[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row5$[rbp]
	punpcklwd xmm0, XMMWORD PTR row1$[rbp]
	movdqa	XMMWORD PTR $T201[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T201[rbp]
	movdqa	XMMWORD PTR rot3_0lo$27[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row5$[rbp]
	punpckhwd xmm0, XMMWORD PTR row1$[rbp]
	movdqa	XMMWORD PTR $T202[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T202[rbp]
	movdqa	XMMWORD PTR rot3_0hi$28[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot3_0lo$27[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot3_0$[rbp]
	movdqa	XMMWORD PTR $T203[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T203[rbp]
	movdqa	XMMWORD PTR y1o_l$29[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot3_0hi$28[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot3_0$[rbp]
	movdqa	XMMWORD PTR $T204[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T204[rbp]
	movdqa	XMMWORD PTR y1o_h$30[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot3_0lo$27[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot3_1$[rbp]
	movdqa	XMMWORD PTR $T205[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T205[rbp]
	movdqa	XMMWORD PTR y3o_l$31[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot3_0hi$28[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot3_1$[rbp]
	movdqa	XMMWORD PTR $T206[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T206[rbp]
	movdqa	XMMWORD PTR y3o_h$32[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row1$[rbp]
	paddw	xmm0, XMMWORD PTR row7$[rbp]
	movdqa	XMMWORD PTR $T207[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T207[rbp]
	movdqa	XMMWORD PTR sum17$33[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row3$[rbp]
	paddw	xmm0, XMMWORD PTR row5$[rbp]
	movdqa	XMMWORD PTR $T208[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T208[rbp]
	movdqa	XMMWORD PTR sum35$34[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum17$33[rbp]
	punpcklwd xmm0, XMMWORD PTR sum35$34[rbp]
	movdqa	XMMWORD PTR $T209[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T209[rbp]
	movdqa	XMMWORD PTR rot1_0lo$35[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum17$33[rbp]
	punpckhwd xmm0, XMMWORD PTR sum35$34[rbp]
	movdqa	XMMWORD PTR $T210[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T210[rbp]
	movdqa	XMMWORD PTR rot1_0hi$36[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot1_0lo$35[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot1_0$[rbp]
	movdqa	XMMWORD PTR $T211[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T211[rbp]
	movdqa	XMMWORD PTR y4o_l$37[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot1_0hi$36[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot1_0$[rbp]
	movdqa	XMMWORD PTR $T212[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T212[rbp]
	movdqa	XMMWORD PTR y4o_h$38[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot1_0lo$35[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot1_1$[rbp]
	movdqa	XMMWORD PTR $T213[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T213[rbp]
	movdqa	XMMWORD PTR y5o_l$39[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot1_0hi$36[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot1_1$[rbp]
	movdqa	XMMWORD PTR $T214[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T214[rbp]
	movdqa	XMMWORD PTR y5o_h$40[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y0o_l$23[rbp]
	paddd	xmm0, XMMWORD PTR y4o_l$37[rbp]
	movdqa	XMMWORD PTR $T215[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T215[rbp]
	movdqa	XMMWORD PTR x4_l$41[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y0o_h$24[rbp]
	paddd	xmm0, XMMWORD PTR y4o_h$38[rbp]
	movdqa	XMMWORD PTR $T216[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T216[rbp]
	movdqa	XMMWORD PTR x4_h$42[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y1o_l$29[rbp]
	paddd	xmm0, XMMWORD PTR y5o_l$39[rbp]
	movdqa	XMMWORD PTR $T217[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T217[rbp]
	movdqa	XMMWORD PTR x5_l$43[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y1o_h$30[rbp]
	paddd	xmm0, XMMWORD PTR y5o_h$40[rbp]
	movdqa	XMMWORD PTR $T218[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T218[rbp]
	movdqa	XMMWORD PTR x5_h$44[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y2o_l$25[rbp]
	paddd	xmm0, XMMWORD PTR y5o_l$39[rbp]
	movdqa	XMMWORD PTR $T219[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T219[rbp]
	movdqa	XMMWORD PTR x6_l$45[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y2o_h$26[rbp]
	paddd	xmm0, XMMWORD PTR y5o_h$40[rbp]
	movdqa	XMMWORD PTR $T220[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T220[rbp]
	movdqa	XMMWORD PTR x6_h$46[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y3o_l$31[rbp]
	paddd	xmm0, XMMWORD PTR y4o_l$37[rbp]
	movdqa	XMMWORD PTR $T221[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T221[rbp]
	movdqa	XMMWORD PTR x7_l$47[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y3o_h$32[rbp]
	paddd	xmm0, XMMWORD PTR y4o_h$38[rbp]
	movdqa	XMMWORD PTR $T222[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T222[rbp]
	movdqa	XMMWORD PTR x7_h$48[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x0_l$13[rbp]
	paddd	xmm0, XMMWORD PTR bias_0$[rbp]
	movdqa	XMMWORD PTR $T223[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T223[rbp]
	movdqa	XMMWORD PTR abiased_l$49[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x0_h$14[rbp]
	paddd	xmm0, XMMWORD PTR bias_0$[rbp]
	movdqa	XMMWORD PTR $T224[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T224[rbp]
	movdqa	XMMWORD PTR abiased_h$50[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$49[rbp]
	paddd	xmm0, XMMWORD PTR x7_l$47[rbp]
	movdqa	XMMWORD PTR $T225[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T225[rbp]
	movdqa	XMMWORD PTR sum_l$51[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$50[rbp]
	paddd	xmm0, XMMWORD PTR x7_h$48[rbp]
	movdqa	XMMWORD PTR $T226[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T226[rbp]
	movdqa	XMMWORD PTR sum_h$52[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$49[rbp]
	psubd	xmm0, XMMWORD PTR x7_l$47[rbp]
	movdqa	XMMWORD PTR $T227[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T227[rbp]
	movdqa	XMMWORD PTR dif_l$53[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$50[rbp]
	psubd	xmm0, XMMWORD PTR x7_h$48[rbp]
	movdqa	XMMWORD PTR $T228[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T228[rbp]
	movdqa	XMMWORD PTR dif_h$54[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_h$52[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T230[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_l$51[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T231[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T231[rbp]
	packssdw xmm0, XMMWORD PTR $T230[rbp]
	movdqa	XMMWORD PTR $T229[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T229[rbp]
	movdqa	XMMWORD PTR row0$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_h$54[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T233[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_l$53[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T234[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T234[rbp]
	packssdw xmm0, XMMWORD PTR $T233[rbp]
	movdqa	XMMWORD PTR $T232[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T232[rbp]
	movdqa	XMMWORD PTR row7$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x1_l$17[rbp]
	paddd	xmm0, XMMWORD PTR bias_0$[rbp]
	movdqa	XMMWORD PTR $T235[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T235[rbp]
	movdqa	XMMWORD PTR abiased_l$55[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x1_h$18[rbp]
	paddd	xmm0, XMMWORD PTR bias_0$[rbp]
	movdqa	XMMWORD PTR $T236[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T236[rbp]
	movdqa	XMMWORD PTR abiased_h$56[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$55[rbp]
	paddd	xmm0, XMMWORD PTR x6_l$45[rbp]
	movdqa	XMMWORD PTR $T237[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T237[rbp]
	movdqa	XMMWORD PTR sum_l$57[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$56[rbp]
	paddd	xmm0, XMMWORD PTR x6_h$46[rbp]
	movdqa	XMMWORD PTR $T238[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T238[rbp]
	movdqa	XMMWORD PTR sum_h$58[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$55[rbp]
	psubd	xmm0, XMMWORD PTR x6_l$45[rbp]
	movdqa	XMMWORD PTR $T239[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T239[rbp]
	movdqa	XMMWORD PTR dif_l$59[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$56[rbp]
	psubd	xmm0, XMMWORD PTR x6_h$46[rbp]
	movdqa	XMMWORD PTR $T240[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T240[rbp]
	movdqa	XMMWORD PTR dif_h$60[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_h$58[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T242[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_l$57[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T243[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T243[rbp]
	packssdw xmm0, XMMWORD PTR $T242[rbp]
	movdqa	XMMWORD PTR $T241[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T241[rbp]
	movdqa	XMMWORD PTR row1$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_h$60[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T245[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_l$59[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T246[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T246[rbp]
	packssdw xmm0, XMMWORD PTR $T245[rbp]
	movdqa	XMMWORD PTR $T244[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T244[rbp]
	movdqa	XMMWORD PTR row6$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x2_l$19[rbp]
	paddd	xmm0, XMMWORD PTR bias_0$[rbp]
	movdqa	XMMWORD PTR $T247[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T247[rbp]
	movdqa	XMMWORD PTR abiased_l$61[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x2_h$20[rbp]
	paddd	xmm0, XMMWORD PTR bias_0$[rbp]
	movdqa	XMMWORD PTR $T248[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T248[rbp]
	movdqa	XMMWORD PTR abiased_h$62[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$61[rbp]
	paddd	xmm0, XMMWORD PTR x5_l$43[rbp]
	movdqa	XMMWORD PTR $T249[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T249[rbp]
	movdqa	XMMWORD PTR sum_l$63[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$62[rbp]
	paddd	xmm0, XMMWORD PTR x5_h$44[rbp]
	movdqa	XMMWORD PTR $T250[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T250[rbp]
	movdqa	XMMWORD PTR sum_h$64[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$61[rbp]
	psubd	xmm0, XMMWORD PTR x5_l$43[rbp]
	movdqa	XMMWORD PTR $T251[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T251[rbp]
	movdqa	XMMWORD PTR dif_l$65[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$62[rbp]
	psubd	xmm0, XMMWORD PTR x5_h$44[rbp]
	movdqa	XMMWORD PTR $T252[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T252[rbp]
	movdqa	XMMWORD PTR dif_h$66[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_h$64[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T254[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_l$63[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T255[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T255[rbp]
	packssdw xmm0, XMMWORD PTR $T254[rbp]
	movdqa	XMMWORD PTR $T253[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T253[rbp]
	movdqa	XMMWORD PTR row2$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_h$66[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T257[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_l$65[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T258[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T258[rbp]
	packssdw xmm0, XMMWORD PTR $T257[rbp]
	movdqa	XMMWORD PTR $T256[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T256[rbp]
	movdqa	XMMWORD PTR row5$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x3_l$15[rbp]
	paddd	xmm0, XMMWORD PTR bias_0$[rbp]
	movdqa	XMMWORD PTR $T259[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T259[rbp]
	movdqa	XMMWORD PTR abiased_l$67[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x3_h$16[rbp]
	paddd	xmm0, XMMWORD PTR bias_0$[rbp]
	movdqa	XMMWORD PTR $T260[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T260[rbp]
	movdqa	XMMWORD PTR abiased_h$68[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$67[rbp]
	paddd	xmm0, XMMWORD PTR x4_l$41[rbp]
	movdqa	XMMWORD PTR $T261[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T261[rbp]
	movdqa	XMMWORD PTR sum_l$69[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$68[rbp]
	paddd	xmm0, XMMWORD PTR x4_h$42[rbp]
	movdqa	XMMWORD PTR $T262[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T262[rbp]
	movdqa	XMMWORD PTR sum_h$70[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$67[rbp]
	psubd	xmm0, XMMWORD PTR x4_l$41[rbp]
	movdqa	XMMWORD PTR $T263[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T263[rbp]
	movdqa	XMMWORD PTR dif_l$71[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$68[rbp]
	psubd	xmm0, XMMWORD PTR x4_h$42[rbp]
	movdqa	XMMWORD PTR $T264[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T264[rbp]
	movdqa	XMMWORD PTR dif_h$72[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_h$70[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T266[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_l$69[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T267[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T267[rbp]
	packssdw xmm0, XMMWORD PTR $T266[rbp]
	movdqa	XMMWORD PTR $T265[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T265[rbp]
	movdqa	XMMWORD PTR row3$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_h$72[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T269[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_l$71[rbp]
	psrad	xmm0, 10
	movdqa	XMMWORD PTR $T270[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T270[rbp]
	packssdw xmm0, XMMWORD PTR $T269[rbp]
	movdqa	XMMWORD PTR $T268[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T268[rbp]
	movdqa	XMMWORD PTR row4$[rbp], xmm0
; Line 2609
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	punpcklwd xmm0, XMMWORD PTR row4$[rbp]
	movdqa	XMMWORD PTR $T271[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T271[rbp]
	movdqa	XMMWORD PTR row0$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row4$[rbp]
	movdqa	XMMWORD PTR $T272[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T272[rbp]
	movdqa	XMMWORD PTR row4$[rbp], xmm0
; Line 2610
	movdqa	xmm0, XMMWORD PTR row1$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row1$[rbp]
	punpcklwd xmm0, XMMWORD PTR row5$[rbp]
	movdqa	XMMWORD PTR $T273[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T273[rbp]
	movdqa	XMMWORD PTR row1$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row5$[rbp]
	movdqa	XMMWORD PTR $T274[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T274[rbp]
	movdqa	XMMWORD PTR row5$[rbp], xmm0
; Line 2611
	movdqa	xmm0, XMMWORD PTR row2$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row2$[rbp]
	punpcklwd xmm0, XMMWORD PTR row6$[rbp]
	movdqa	XMMWORD PTR $T275[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T275[rbp]
	movdqa	XMMWORD PTR row2$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row6$[rbp]
	movdqa	XMMWORD PTR $T276[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T276[rbp]
	movdqa	XMMWORD PTR row6$[rbp], xmm0
; Line 2612
	movdqa	xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row3$[rbp]
	punpcklwd xmm0, XMMWORD PTR row7$[rbp]
	movdqa	XMMWORD PTR $T277[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T277[rbp]
	movdqa	XMMWORD PTR row3$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row7$[rbp]
	movdqa	XMMWORD PTR $T278[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T278[rbp]
	movdqa	XMMWORD PTR row7$[rbp], xmm0
; Line 2615
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	punpcklwd xmm0, XMMWORD PTR row2$[rbp]
	movdqa	XMMWORD PTR $T279[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T279[rbp]
	movdqa	XMMWORD PTR row0$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row2$[rbp]
	movdqa	XMMWORD PTR $T280[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T280[rbp]
	movdqa	XMMWORD PTR row2$[rbp], xmm0
; Line 2616
	movdqa	xmm0, XMMWORD PTR row1$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row1$[rbp]
	punpcklwd xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR $T281[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T281[rbp]
	movdqa	XMMWORD PTR row1$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR $T282[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T282[rbp]
	movdqa	XMMWORD PTR row3$[rbp], xmm0
; Line 2617
	movdqa	xmm0, XMMWORD PTR row4$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row4$[rbp]
	punpcklwd xmm0, XMMWORD PTR row6$[rbp]
	movdqa	XMMWORD PTR $T283[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T283[rbp]
	movdqa	XMMWORD PTR row4$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row6$[rbp]
	movdqa	XMMWORD PTR $T284[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T284[rbp]
	movdqa	XMMWORD PTR row6$[rbp], xmm0
; Line 2618
	movdqa	xmm0, XMMWORD PTR row5$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row5$[rbp]
	punpcklwd xmm0, XMMWORD PTR row7$[rbp]
	movdqa	XMMWORD PTR $T285[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T285[rbp]
	movdqa	XMMWORD PTR row5$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row7$[rbp]
	movdqa	XMMWORD PTR $T286[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T286[rbp]
	movdqa	XMMWORD PTR row7$[rbp], xmm0
; Line 2621
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	punpcklwd xmm0, XMMWORD PTR row1$[rbp]
	movdqa	XMMWORD PTR $T287[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T287[rbp]
	movdqa	XMMWORD PTR row0$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row1$[rbp]
	movdqa	XMMWORD PTR $T288[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T288[rbp]
	movdqa	XMMWORD PTR row1$[rbp], xmm0
; Line 2622
	movdqa	xmm0, XMMWORD PTR row2$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row2$[rbp]
	punpcklwd xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR $T289[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T289[rbp]
	movdqa	XMMWORD PTR row2$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR $T290[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T290[rbp]
	movdqa	XMMWORD PTR row3$[rbp], xmm0
; Line 2623
	movdqa	xmm0, XMMWORD PTR row4$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row4$[rbp]
	punpcklwd xmm0, XMMWORD PTR row5$[rbp]
	movdqa	XMMWORD PTR $T291[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T291[rbp]
	movdqa	XMMWORD PTR row4$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row5$[rbp]
	movdqa	XMMWORD PTR $T292[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T292[rbp]
	movdqa	XMMWORD PTR row5$[rbp], xmm0
; Line 2624
	movdqa	xmm0, XMMWORD PTR row6$[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row6$[rbp]
	punpcklwd xmm0, XMMWORD PTR row7$[rbp]
	movdqa	XMMWORD PTR $T293[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T293[rbp]
	movdqa	XMMWORD PTR row6$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhwd xmm0, XMMWORD PTR row7$[rbp]
	movdqa	XMMWORD PTR $T294[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T294[rbp]
	movdqa	XMMWORD PTR row7$[rbp], xmm0
; Line 2628
	movdqa	xmm0, XMMWORD PTR row2$[rbp]
	punpcklwd xmm0, XMMWORD PTR row6$[rbp]
	movdqa	XMMWORD PTR $T295[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T295[rbp]
	movdqa	XMMWORD PTR rot0_0lo$73[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row2$[rbp]
	punpckhwd xmm0, XMMWORD PTR row6$[rbp]
	movdqa	XMMWORD PTR $T296[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T296[rbp]
	movdqa	XMMWORD PTR rot0_0hi$74[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot0_0lo$73[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot0_0$[rbp]
	movdqa	XMMWORD PTR $T297[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T297[rbp]
	movdqa	XMMWORD PTR t2e_l$75[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot0_0hi$74[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot0_0$[rbp]
	movdqa	XMMWORD PTR $T298[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T298[rbp]
	movdqa	XMMWORD PTR t2e_h$76[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot0_0lo$73[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot0_1$[rbp]
	movdqa	XMMWORD PTR $T299[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T299[rbp]
	movdqa	XMMWORD PTR t3e_l$77[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot0_0hi$74[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot0_1$[rbp]
	movdqa	XMMWORD PTR $T300[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T300[rbp]
	movdqa	XMMWORD PTR t3e_h$78[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	paddw	xmm0, XMMWORD PTR row4$[rbp]
	movdqa	XMMWORD PTR $T301[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T301[rbp]
	movdqa	XMMWORD PTR sum04$79[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	psubw	xmm0, XMMWORD PTR row4$[rbp]
	movdqa	XMMWORD PTR $T302[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T302[rbp]
	movdqa	XMMWORD PTR dif04$80[rbp], xmm0
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T305[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T305[rbp]
	punpcklwd xmm0, XMMWORD PTR sum04$79[rbp]
	movdqa	XMMWORD PTR $T304[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T304[rbp]
	psrad	xmm0, 4
	movdqa	XMMWORD PTR $T303[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T303[rbp]
	movdqa	XMMWORD PTR t0e_l$81[rbp], xmm0
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T308[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T308[rbp]
	punpckhwd xmm0, XMMWORD PTR sum04$79[rbp]
	movdqa	XMMWORD PTR $T307[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T307[rbp]
	psrad	xmm0, 4
	movdqa	XMMWORD PTR $T306[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T306[rbp]
	movdqa	XMMWORD PTR t0e_h$82[rbp], xmm0
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T311[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T311[rbp]
	punpcklwd xmm0, XMMWORD PTR dif04$80[rbp]
	movdqa	XMMWORD PTR $T310[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T310[rbp]
	psrad	xmm0, 4
	movdqa	XMMWORD PTR $T309[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T309[rbp]
	movdqa	XMMWORD PTR t1e_l$83[rbp], xmm0
	pxor	xmm0, xmm0
	movdqa	XMMWORD PTR $T314[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T314[rbp]
	punpckhwd xmm0, XMMWORD PTR dif04$80[rbp]
	movdqa	XMMWORD PTR $T313[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T313[rbp]
	psrad	xmm0, 4
	movdqa	XMMWORD PTR $T312[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T312[rbp]
	movdqa	XMMWORD PTR t1e_h$84[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t0e_l$81[rbp]
	paddd	xmm0, XMMWORD PTR t3e_l$77[rbp]
	movdqa	XMMWORD PTR $T315[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T315[rbp]
	movdqa	XMMWORD PTR x0_l$85[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t0e_h$82[rbp]
	paddd	xmm0, XMMWORD PTR t3e_h$78[rbp]
	movdqa	XMMWORD PTR $T316[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T316[rbp]
	movdqa	XMMWORD PTR x0_h$86[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t0e_l$81[rbp]
	psubd	xmm0, XMMWORD PTR t3e_l$77[rbp]
	movdqa	XMMWORD PTR $T317[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T317[rbp]
	movdqa	XMMWORD PTR x3_l$87[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t0e_h$82[rbp]
	psubd	xmm0, XMMWORD PTR t3e_h$78[rbp]
	movdqa	XMMWORD PTR $T318[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T318[rbp]
	movdqa	XMMWORD PTR x3_h$88[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t1e_l$83[rbp]
	paddd	xmm0, XMMWORD PTR t2e_l$75[rbp]
	movdqa	XMMWORD PTR $T319[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T319[rbp]
	movdqa	XMMWORD PTR x1_l$89[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t1e_h$84[rbp]
	paddd	xmm0, XMMWORD PTR t2e_h$76[rbp]
	movdqa	XMMWORD PTR $T320[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T320[rbp]
	movdqa	XMMWORD PTR x1_h$90[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t1e_l$83[rbp]
	psubd	xmm0, XMMWORD PTR t2e_l$75[rbp]
	movdqa	XMMWORD PTR $T321[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T321[rbp]
	movdqa	XMMWORD PTR x2_l$91[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR t1e_h$84[rbp]
	psubd	xmm0, XMMWORD PTR t2e_h$76[rbp]
	movdqa	XMMWORD PTR $T322[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T322[rbp]
	movdqa	XMMWORD PTR x2_h$92[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row7$[rbp]
	punpcklwd xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR $T323[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T323[rbp]
	movdqa	XMMWORD PTR rot2_0lo$93[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row7$[rbp]
	punpckhwd xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR $T324[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T324[rbp]
	movdqa	XMMWORD PTR rot2_0hi$94[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot2_0lo$93[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot2_0$[rbp]
	movdqa	XMMWORD PTR $T325[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T325[rbp]
	movdqa	XMMWORD PTR y0o_l$95[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot2_0hi$94[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot2_0$[rbp]
	movdqa	XMMWORD PTR $T326[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T326[rbp]
	movdqa	XMMWORD PTR y0o_h$96[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot2_0lo$93[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot2_1$[rbp]
	movdqa	XMMWORD PTR $T327[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T327[rbp]
	movdqa	XMMWORD PTR y2o_l$97[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot2_0hi$94[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot2_1$[rbp]
	movdqa	XMMWORD PTR $T328[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T328[rbp]
	movdqa	XMMWORD PTR y2o_h$98[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row5$[rbp]
	punpcklwd xmm0, XMMWORD PTR row1$[rbp]
	movdqa	XMMWORD PTR $T329[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T329[rbp]
	movdqa	XMMWORD PTR rot3_0lo$99[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row5$[rbp]
	punpckhwd xmm0, XMMWORD PTR row1$[rbp]
	movdqa	XMMWORD PTR $T330[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T330[rbp]
	movdqa	XMMWORD PTR rot3_0hi$100[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot3_0lo$99[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot3_0$[rbp]
	movdqa	XMMWORD PTR $T331[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T331[rbp]
	movdqa	XMMWORD PTR y1o_l$101[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot3_0hi$100[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot3_0$[rbp]
	movdqa	XMMWORD PTR $T332[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T332[rbp]
	movdqa	XMMWORD PTR y1o_h$102[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot3_0lo$99[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot3_1$[rbp]
	movdqa	XMMWORD PTR $T333[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T333[rbp]
	movdqa	XMMWORD PTR y3o_l$103[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot3_0hi$100[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot3_1$[rbp]
	movdqa	XMMWORD PTR $T334[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T334[rbp]
	movdqa	XMMWORD PTR y3o_h$104[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row1$[rbp]
	paddw	xmm0, XMMWORD PTR row7$[rbp]
	movdqa	XMMWORD PTR $T335[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T335[rbp]
	movdqa	XMMWORD PTR sum17$105[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR row3$[rbp]
	paddw	xmm0, XMMWORD PTR row5$[rbp]
	movdqa	XMMWORD PTR $T336[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T336[rbp]
	movdqa	XMMWORD PTR sum35$106[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum17$105[rbp]
	punpcklwd xmm0, XMMWORD PTR sum35$106[rbp]
	movdqa	XMMWORD PTR $T337[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T337[rbp]
	movdqa	XMMWORD PTR rot1_0lo$107[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum17$105[rbp]
	punpckhwd xmm0, XMMWORD PTR sum35$106[rbp]
	movdqa	XMMWORD PTR $T338[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T338[rbp]
	movdqa	XMMWORD PTR rot1_0hi$108[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot1_0lo$107[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot1_0$[rbp]
	movdqa	XMMWORD PTR $T339[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T339[rbp]
	movdqa	XMMWORD PTR y4o_l$109[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot1_0hi$108[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot1_0$[rbp]
	movdqa	XMMWORD PTR $T340[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T340[rbp]
	movdqa	XMMWORD PTR y4o_h$110[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot1_0lo$107[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot1_1$[rbp]
	movdqa	XMMWORD PTR $T341[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T341[rbp]
	movdqa	XMMWORD PTR y5o_l$111[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR rot1_0hi$108[rbp]
	pmaddwd	xmm0, XMMWORD PTR rot1_1$[rbp]
	movdqa	XMMWORD PTR $T342[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T342[rbp]
	movdqa	XMMWORD PTR y5o_h$112[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y0o_l$95[rbp]
	paddd	xmm0, XMMWORD PTR y4o_l$109[rbp]
	movdqa	XMMWORD PTR $T343[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T343[rbp]
	movdqa	XMMWORD PTR x4_l$113[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y0o_h$96[rbp]
	paddd	xmm0, XMMWORD PTR y4o_h$110[rbp]
	movdqa	XMMWORD PTR $T344[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T344[rbp]
	movdqa	XMMWORD PTR x4_h$114[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y1o_l$101[rbp]
	paddd	xmm0, XMMWORD PTR y5o_l$111[rbp]
	movdqa	XMMWORD PTR $T345[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T345[rbp]
	movdqa	XMMWORD PTR x5_l$115[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y1o_h$102[rbp]
	paddd	xmm0, XMMWORD PTR y5o_h$112[rbp]
	movdqa	XMMWORD PTR $T346[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T346[rbp]
	movdqa	XMMWORD PTR x5_h$116[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y2o_l$97[rbp]
	paddd	xmm0, XMMWORD PTR y5o_l$111[rbp]
	movdqa	XMMWORD PTR $T347[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T347[rbp]
	movdqa	XMMWORD PTR x6_l$117[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y2o_h$98[rbp]
	paddd	xmm0, XMMWORD PTR y5o_h$112[rbp]
	movdqa	XMMWORD PTR $T348[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T348[rbp]
	movdqa	XMMWORD PTR x6_h$118[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y3o_l$103[rbp]
	paddd	xmm0, XMMWORD PTR y4o_l$109[rbp]
	movdqa	XMMWORD PTR $T349[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T349[rbp]
	movdqa	XMMWORD PTR x7_l$119[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR y3o_h$104[rbp]
	paddd	xmm0, XMMWORD PTR y4o_h$110[rbp]
	movdqa	XMMWORD PTR $T350[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T350[rbp]
	movdqa	XMMWORD PTR x7_h$120[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x0_l$85[rbp]
	paddd	xmm0, XMMWORD PTR bias_1$[rbp]
	movdqa	XMMWORD PTR $T351[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T351[rbp]
	movdqa	XMMWORD PTR abiased_l$121[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x0_h$86[rbp]
	paddd	xmm0, XMMWORD PTR bias_1$[rbp]
	movdqa	XMMWORD PTR $T352[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T352[rbp]
	movdqa	XMMWORD PTR abiased_h$122[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$121[rbp]
	paddd	xmm0, XMMWORD PTR x7_l$119[rbp]
	movdqa	XMMWORD PTR $T353[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T353[rbp]
	movdqa	XMMWORD PTR sum_l$123[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$122[rbp]
	paddd	xmm0, XMMWORD PTR x7_h$120[rbp]
	movdqa	XMMWORD PTR $T354[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T354[rbp]
	movdqa	XMMWORD PTR sum_h$124[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$121[rbp]
	psubd	xmm0, XMMWORD PTR x7_l$119[rbp]
	movdqa	XMMWORD PTR $T355[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T355[rbp]
	movdqa	XMMWORD PTR dif_l$125[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$122[rbp]
	psubd	xmm0, XMMWORD PTR x7_h$120[rbp]
	movdqa	XMMWORD PTR $T356[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T356[rbp]
	movdqa	XMMWORD PTR dif_h$126[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_h$124[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T358[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_l$123[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T359[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T359[rbp]
	packssdw xmm0, XMMWORD PTR $T358[rbp]
	movdqa	XMMWORD PTR $T357[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T357[rbp]
	movdqa	XMMWORD PTR row0$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_h$126[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T361[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_l$125[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T362[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T362[rbp]
	packssdw xmm0, XMMWORD PTR $T361[rbp]
	movdqa	XMMWORD PTR $T360[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T360[rbp]
	movdqa	XMMWORD PTR row7$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x1_l$89[rbp]
	paddd	xmm0, XMMWORD PTR bias_1$[rbp]
	movdqa	XMMWORD PTR $T363[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T363[rbp]
	movdqa	XMMWORD PTR abiased_l$127[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x1_h$90[rbp]
	paddd	xmm0, XMMWORD PTR bias_1$[rbp]
	movdqa	XMMWORD PTR $T364[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T364[rbp]
	movdqa	XMMWORD PTR abiased_h$128[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$127[rbp]
	paddd	xmm0, XMMWORD PTR x6_l$117[rbp]
	movdqa	XMMWORD PTR $T365[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T365[rbp]
	movdqa	XMMWORD PTR sum_l$129[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$128[rbp]
	paddd	xmm0, XMMWORD PTR x6_h$118[rbp]
	movdqa	XMMWORD PTR $T366[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T366[rbp]
	movdqa	XMMWORD PTR sum_h$130[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$127[rbp]
	psubd	xmm0, XMMWORD PTR x6_l$117[rbp]
	movdqa	XMMWORD PTR $T367[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T367[rbp]
	movdqa	XMMWORD PTR dif_l$131[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$128[rbp]
	psubd	xmm0, XMMWORD PTR x6_h$118[rbp]
	movdqa	XMMWORD PTR $T368[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T368[rbp]
	movdqa	XMMWORD PTR dif_h$132[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_h$130[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T370[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_l$129[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T371[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T371[rbp]
	packssdw xmm0, XMMWORD PTR $T370[rbp]
	movdqa	XMMWORD PTR $T369[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T369[rbp]
	movdqa	XMMWORD PTR row1$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_h$132[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T373[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_l$131[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T374[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T374[rbp]
	packssdw xmm0, XMMWORD PTR $T373[rbp]
	movdqa	XMMWORD PTR $T372[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T372[rbp]
	movdqa	XMMWORD PTR row6$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x2_l$91[rbp]
	paddd	xmm0, XMMWORD PTR bias_1$[rbp]
	movdqa	XMMWORD PTR $T375[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T375[rbp]
	movdqa	XMMWORD PTR abiased_l$133[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x2_h$92[rbp]
	paddd	xmm0, XMMWORD PTR bias_1$[rbp]
	movdqa	XMMWORD PTR $T376[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T376[rbp]
	movdqa	XMMWORD PTR abiased_h$134[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$133[rbp]
	paddd	xmm0, XMMWORD PTR x5_l$115[rbp]
	movdqa	XMMWORD PTR $T377[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T377[rbp]
	movdqa	XMMWORD PTR sum_l$135[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$134[rbp]
	paddd	xmm0, XMMWORD PTR x5_h$116[rbp]
	movdqa	XMMWORD PTR $T378[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T378[rbp]
	movdqa	XMMWORD PTR sum_h$136[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$133[rbp]
	psubd	xmm0, XMMWORD PTR x5_l$115[rbp]
	movdqa	XMMWORD PTR $T379[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T379[rbp]
	movdqa	XMMWORD PTR dif_l$137[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$134[rbp]
	psubd	xmm0, XMMWORD PTR x5_h$116[rbp]
	movdqa	XMMWORD PTR $T380[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T380[rbp]
	movdqa	XMMWORD PTR dif_h$138[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_h$136[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T382[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_l$135[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T383[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T383[rbp]
	packssdw xmm0, XMMWORD PTR $T382[rbp]
	movdqa	XMMWORD PTR $T381[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T381[rbp]
	movdqa	XMMWORD PTR row2$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_h$138[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T385[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_l$137[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T386[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T386[rbp]
	packssdw xmm0, XMMWORD PTR $T385[rbp]
	movdqa	XMMWORD PTR $T384[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T384[rbp]
	movdqa	XMMWORD PTR row5$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x3_l$87[rbp]
	paddd	xmm0, XMMWORD PTR bias_1$[rbp]
	movdqa	XMMWORD PTR $T387[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T387[rbp]
	movdqa	XMMWORD PTR abiased_l$139[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR x3_h$88[rbp]
	paddd	xmm0, XMMWORD PTR bias_1$[rbp]
	movdqa	XMMWORD PTR $T388[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T388[rbp]
	movdqa	XMMWORD PTR abiased_h$140[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$139[rbp]
	paddd	xmm0, XMMWORD PTR x4_l$113[rbp]
	movdqa	XMMWORD PTR $T389[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T389[rbp]
	movdqa	XMMWORD PTR sum_l$141[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$140[rbp]
	paddd	xmm0, XMMWORD PTR x4_h$114[rbp]
	movdqa	XMMWORD PTR $T390[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T390[rbp]
	movdqa	XMMWORD PTR sum_h$142[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_l$139[rbp]
	psubd	xmm0, XMMWORD PTR x4_l$113[rbp]
	movdqa	XMMWORD PTR $T391[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T391[rbp]
	movdqa	XMMWORD PTR dif_l$143[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR abiased_h$140[rbp]
	psubd	xmm0, XMMWORD PTR x4_h$114[rbp]
	movdqa	XMMWORD PTR $T392[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T392[rbp]
	movdqa	XMMWORD PTR dif_h$144[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_h$142[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T394[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR sum_l$141[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T395[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T395[rbp]
	packssdw xmm0, XMMWORD PTR $T394[rbp]
	movdqa	XMMWORD PTR $T393[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T393[rbp]
	movdqa	XMMWORD PTR row3$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_h$144[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T397[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR dif_l$143[rbp]
	psrad	xmm0, 17
	movdqa	XMMWORD PTR $T398[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T398[rbp]
	packssdw xmm0, XMMWORD PTR $T397[rbp]
	movdqa	XMMWORD PTR $T396[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T396[rbp]
	movdqa	XMMWORD PTR row4$[rbp], xmm0
; Line 2632
	movdqa	xmm0, XMMWORD PTR row0$[rbp]
	packuswb xmm0, XMMWORD PTR row1$[rbp]
	movdqa	XMMWORD PTR $T399[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T399[rbp]
	movdqa	XMMWORD PTR p0$145[rbp], xmm0
; Line 2633
	movdqa	xmm0, XMMWORD PTR row2$[rbp]
	packuswb xmm0, XMMWORD PTR row3$[rbp]
	movdqa	XMMWORD PTR $T400[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T400[rbp]
	movdqa	XMMWORD PTR p1$146[rbp], xmm0
; Line 2634
	movdqa	xmm0, XMMWORD PTR row4$[rbp]
	packuswb xmm0, XMMWORD PTR row5$[rbp]
	movdqa	XMMWORD PTR $T401[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T401[rbp]
	movdqa	XMMWORD PTR p2$147[rbp], xmm0
; Line 2635
	movdqa	xmm0, XMMWORD PTR row6$[rbp]
	packuswb xmm0, XMMWORD PTR row7$[rbp]
	movdqa	XMMWORD PTR $T402[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T402[rbp]
	movdqa	XMMWORD PTR p3$148[rbp], xmm0
; Line 2638
	movdqa	xmm0, XMMWORD PTR p0$145[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR p0$145[rbp]
	punpcklbw xmm0, XMMWORD PTR p2$147[rbp]
	movdqa	XMMWORD PTR $T403[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T403[rbp]
	movdqa	XMMWORD PTR p0$145[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhbw xmm0, XMMWORD PTR p2$147[rbp]
	movdqa	XMMWORD PTR $T404[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T404[rbp]
	movdqa	XMMWORD PTR p2$147[rbp], xmm0
; Line 2639
	movdqa	xmm0, XMMWORD PTR p1$146[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR p1$146[rbp]
	punpcklbw xmm0, XMMWORD PTR p3$148[rbp]
	movdqa	XMMWORD PTR $T405[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T405[rbp]
	movdqa	XMMWORD PTR p1$146[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhbw xmm0, XMMWORD PTR p3$148[rbp]
	movdqa	XMMWORD PTR $T406[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T406[rbp]
	movdqa	XMMWORD PTR p3$148[rbp], xmm0
; Line 2642
	movdqa	xmm0, XMMWORD PTR p0$145[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR p0$145[rbp]
	punpcklbw xmm0, XMMWORD PTR p1$146[rbp]
	movdqa	XMMWORD PTR $T407[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T407[rbp]
	movdqa	XMMWORD PTR p0$145[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhbw xmm0, XMMWORD PTR p1$146[rbp]
	movdqa	XMMWORD PTR $T408[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T408[rbp]
	movdqa	XMMWORD PTR p1$146[rbp], xmm0
; Line 2643
	movdqa	xmm0, XMMWORD PTR p2$147[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR p2$147[rbp]
	punpcklbw xmm0, XMMWORD PTR p3$148[rbp]
	movdqa	XMMWORD PTR $T409[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T409[rbp]
	movdqa	XMMWORD PTR p2$147[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhbw xmm0, XMMWORD PTR p3$148[rbp]
	movdqa	XMMWORD PTR $T410[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T410[rbp]
	movdqa	XMMWORD PTR p3$148[rbp], xmm0
; Line 2646
	movdqa	xmm0, XMMWORD PTR p0$145[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR p0$145[rbp]
	punpcklbw xmm0, XMMWORD PTR p2$147[rbp]
	movdqa	XMMWORD PTR $T411[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T411[rbp]
	movdqa	XMMWORD PTR p0$145[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhbw xmm0, XMMWORD PTR p2$147[rbp]
	movdqa	XMMWORD PTR $T412[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T412[rbp]
	movdqa	XMMWORD PTR p2$147[rbp], xmm0
; Line 2647
	movdqa	xmm0, XMMWORD PTR p1$146[rbp]
	movdqa	XMMWORD PTR tmp$[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR p1$146[rbp]
	punpcklbw xmm0, XMMWORD PTR p3$148[rbp]
	movdqa	XMMWORD PTR $T413[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T413[rbp]
	movdqa	XMMWORD PTR p1$146[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR tmp$[rbp]
	punpckhbw xmm0, XMMWORD PTR p3$148[rbp]
	movdqa	XMMWORD PTR $T414[rbp], xmm0
	movdqa	xmm0, XMMWORD PTR $T414[rbp]
	movdqa	XMMWORD PTR p3$148[rbp], xmm0
; Line 2650
	mov	rax, QWORD PTR out$[rbp]
	movdqa	xmm0, XMMWORD PTR p0$145[rbp]
	movq	QWORD PTR [rax], xmm0
	movsxd	rax, DWORD PTR out_stride$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$[rbp], rax
; Line 2651
	movdqa	xmm0, XMMWORD PTR p0$145[rbp]
	pshufd	xmm0, xmm0, 78				; 0000004eH
	movdqa	XMMWORD PTR $T415[rbp], xmm0
	mov	rax, QWORD PTR out$[rbp]
	movdqa	xmm0, XMMWORD PTR $T415[rbp]
	movq	QWORD PTR [rax], xmm0
	movsxd	rax, DWORD PTR out_stride$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$[rbp], rax
; Line 2652
	mov	rax, QWORD PTR out$[rbp]
	movdqa	xmm0, XMMWORD PTR p2$147[rbp]
	movq	QWORD PTR [rax], xmm0
	movsxd	rax, DWORD PTR out_stride$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$[rbp], rax
; Line 2653
	movdqa	xmm0, XMMWORD PTR p2$147[rbp]
	pshufd	xmm0, xmm0, 78				; 0000004eH
	movdqa	XMMWORD PTR $T416[rbp], xmm0
	mov	rax, QWORD PTR out$[rbp]
	movdqa	xmm0, XMMWORD PTR $T416[rbp]
	movq	QWORD PTR [rax], xmm0
	movsxd	rax, DWORD PTR out_stride$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$[rbp], rax
; Line 2654
	mov	rax, QWORD PTR out$[rbp]
	movdqa	xmm0, XMMWORD PTR p1$146[rbp]
	movq	QWORD PTR [rax], xmm0
	movsxd	rax, DWORD PTR out_stride$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$[rbp], rax
; Line 2655
	movdqa	xmm0, XMMWORD PTR p1$146[rbp]
	pshufd	xmm0, xmm0, 78				; 0000004eH
	movdqa	XMMWORD PTR $T417[rbp], xmm0
	mov	rax, QWORD PTR out$[rbp]
	movdqa	xmm0, XMMWORD PTR $T417[rbp]
	movq	QWORD PTR [rax], xmm0
	movsxd	rax, DWORD PTR out_stride$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$[rbp], rax
; Line 2656
	mov	rax, QWORD PTR out$[rbp]
	movdqa	xmm0, XMMWORD PTR p3$148[rbp]
	movq	QWORD PTR [rax], xmm0
	movsxd	rax, DWORD PTR out_stride$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR out$[rbp], rax
; Line 2657
	movdqa	xmm0, XMMWORD PTR p3$148[rbp]
	pshufd	xmm0, xmm0, 78				; 0000004eH
	movdqa	XMMWORD PTR $T418[rbp], xmm0
	mov	rax, QWORD PTR out$[rbp]
	movdqa	xmm0, XMMWORD PTR $T418[rbp]
	movq	QWORD PTR [rax], xmm0
; Line 2669
	lea	rsp, QWORD PTR [rbp+22520]
	pop	rdi
	pop	rbp
	ret	0
?stbi__idct_simd@@YAXPEAEHQEAF@Z ENDP			; stbi__idct_simd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__idct_block@@YAXPEAEHQEAF@Z
_TEXT	SEGMENT
i$ = 4
val$ = 48
v$ = 328
o$ = 360
d$ = 392
dcterm$4 = 420
t0$5 = 452
t1$6 = 484
t2$7 = 516
t3$8 = 548
p1$9 = 580
p2$10 = 612
p3$11 = 644
p4$12 = 676
p5$13 = 708
x0$14 = 740
x1$15 = 772
x2$16 = 804
x3$17 = 836
t0$18 = 868
t1$19 = 900
t2$20 = 932
t3$21 = 964
p1$22 = 996
p2$23 = 1028
p3$24 = 1060
p4$25 = 1092
p5$26 = 1124
x0$27 = 1156
x1$28 = 1188
x2$29 = 1220
x3$30 = 1252
__$ArrayPad$ = 1848
out$ = 1888
out_stride$ = 1896
data$ = 1904
?stbi__idct_block@@YAXPEAEHQEAF@Z PROC			; stbi__idct_block, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2434
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1896				; 00000768H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 322				; 00000142H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1928]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2435
	lea	rax, QWORD PTR val$[rbp]
	mov	QWORD PTR v$[rbp], rax
; Line 2437
	mov	rax, QWORD PTR data$[rbp]
	mov	QWORD PTR d$[rbp], rax
; Line 2440
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__idct
$LN2@stbi__idct:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR d$[rbp]
	add	rax, 2
	mov	QWORD PTR d$[rbp], rax
	mov	rax, QWORD PTR v$[rbp]
	add	rax, 4
	mov	QWORD PTR v$[rbp], rax
$LN4@stbi__idct:
	cmp	DWORD PTR i$[rbp], 8
	jge	$LN3@stbi__idct
; Line 2443
	mov	eax, 2
	imul	rax, rax, 8
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	test	eax, eax
	jne	$LN8@stbi__idct
	mov	eax, 2
	imul	rax, rax, 16
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	test	eax, eax
	jne	$LN8@stbi__idct
	mov	eax, 2
	imul	rax, rax, 24
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	test	eax, eax
	jne	$LN8@stbi__idct
	mov	eax, 2
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	test	eax, eax
	jne	$LN8@stbi__idct
	mov	eax, 2
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	test	eax, eax
	jne	$LN8@stbi__idct
	mov	eax, 2
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	test	eax, eax
	jne	$LN8@stbi__idct
	mov	eax, 2
	imul	rax, rax, 56				; 00000038H
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	test	eax, eax
	jne	$LN8@stbi__idct
; Line 2448
	mov	eax, 2
	imul	rax, rax, 0
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	shl	eax, 2
	mov	DWORD PTR dcterm$4[rbp], eax
; Line 2449
	mov	eax, 4
	imul	rax, rax, 56				; 00000038H
	mov	rcx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR dcterm$4[rbp]
	mov	DWORD PTR [rcx+rax], edx
	mov	eax, 4
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR dcterm$4[rbp]
	mov	DWORD PTR [rcx+rax], edx
	mov	eax, 4
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR dcterm$4[rbp]
	mov	DWORD PTR [rcx+rax], edx
	mov	eax, 4
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR dcterm$4[rbp]
	mov	DWORD PTR [rcx+rax], edx
	mov	eax, 4
	imul	rax, rax, 24
	mov	rcx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR dcterm$4[rbp]
	mov	DWORD PTR [rcx+rax], edx
	mov	eax, 4
	imul	rax, rax, 16
	mov	rcx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR dcterm$4[rbp]
	mov	DWORD PTR [rcx+rax], edx
	mov	eax, 4
	imul	rax, rax, 8
	mov	rcx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR dcterm$4[rbp]
	mov	DWORD PTR [rcx+rax], edx
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR v$[rbp]
	mov	edx, DWORD PTR dcterm$4[rbp]
	mov	DWORD PTR [rcx+rax], edx
; Line 2450
	jmp	$LN9@stbi__idct
$LN8@stbi__idct:
; Line 2451
	mov	eax, 2
	imul	rax, rax, 16
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	mov	DWORD PTR p2$10[rbp], eax
	mov	eax, 2
	imul	rax, rax, 48				; 00000030H
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	mov	DWORD PTR p3$11[rbp], eax
	mov	eax, DWORD PTR p3$11[rbp]
	mov	ecx, DWORD PTR p2$10[rbp]
	add	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 2217				; 000008a9H
	mov	DWORD PTR p1$9[rbp], eax
	imul	eax, DWORD PTR p3$11[rbp], -7567	; ffffffffffffe271H
	mov	ecx, DWORD PTR p1$9[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t2$7[rbp], eax
	imul	eax, DWORD PTR p2$10[rbp], 3135		; 00000c3fH
	mov	ecx, DWORD PTR p1$9[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t3$8[rbp], eax
	mov	eax, 2
	imul	rax, rax, 0
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	mov	DWORD PTR p2$10[rbp], eax
	mov	eax, 2
	imul	rax, rax, 32				; 00000020H
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	mov	DWORD PTR p3$11[rbp], eax
	mov	eax, DWORD PTR p3$11[rbp]
	mov	ecx, DWORD PTR p2$10[rbp]
	add	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 4096				; 00001000H
	mov	DWORD PTR t0$5[rbp], eax
	mov	eax, DWORD PTR p3$11[rbp]
	mov	ecx, DWORD PTR p2$10[rbp]
	sub	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 4096				; 00001000H
	mov	DWORD PTR t1$6[rbp], eax
	mov	eax, DWORD PTR t3$8[rbp]
	mov	ecx, DWORD PTR t0$5[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR x0$14[rbp], eax
	mov	eax, DWORD PTR t3$8[rbp]
	mov	ecx, DWORD PTR t0$5[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR x3$17[rbp], eax
	mov	eax, DWORD PTR t2$7[rbp]
	mov	ecx, DWORD PTR t1$6[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR x1$15[rbp], eax
	mov	eax, DWORD PTR t2$7[rbp]
	mov	ecx, DWORD PTR t1$6[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR x2$16[rbp], eax
	mov	eax, 2
	imul	rax, rax, 56				; 00000038H
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	mov	DWORD PTR t0$5[rbp], eax
	mov	eax, 2
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	mov	DWORD PTR t1$6[rbp], eax
	mov	eax, 2
	imul	rax, rax, 24
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	mov	DWORD PTR t2$7[rbp], eax
	mov	eax, 2
	imul	rax, rax, 8
	mov	rcx, QWORD PTR d$[rbp]
	movsx	eax, WORD PTR [rcx+rax]
	mov	DWORD PTR t3$8[rbp], eax
	mov	eax, DWORD PTR t2$7[rbp]
	mov	ecx, DWORD PTR t0$5[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p3$11[rbp], eax
	mov	eax, DWORD PTR t3$8[rbp]
	mov	ecx, DWORD PTR t1$6[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p4$12[rbp], eax
	mov	eax, DWORD PTR t3$8[rbp]
	mov	ecx, DWORD PTR t0$5[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p1$9[rbp], eax
	mov	eax, DWORD PTR t2$7[rbp]
	mov	ecx, DWORD PTR t1$6[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p2$10[rbp], eax
	mov	eax, DWORD PTR p4$12[rbp]
	mov	ecx, DWORD PTR p3$11[rbp]
	add	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 4816				; 000012d0H
	mov	DWORD PTR p5$13[rbp], eax
	imul	eax, DWORD PTR t0$5[rbp], 1223		; 000004c7H
	mov	DWORD PTR t0$5[rbp], eax
	imul	eax, DWORD PTR t1$6[rbp], 8410		; 000020daH
	mov	DWORD PTR t1$6[rbp], eax
	imul	eax, DWORD PTR t2$7[rbp], 12586		; 0000312aH
	mov	DWORD PTR t2$7[rbp], eax
	imul	eax, DWORD PTR t3$8[rbp], 6149		; 00001805H
	mov	DWORD PTR t3$8[rbp], eax
	imul	eax, DWORD PTR p1$9[rbp], -3685		; fffffffffffff19bH
	mov	ecx, DWORD PTR p5$13[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p1$9[rbp], eax
	imul	eax, DWORD PTR p2$10[rbp], -10497	; ffffffffffffd6ffH
	mov	ecx, DWORD PTR p5$13[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p2$10[rbp], eax
	imul	eax, DWORD PTR p3$11[rbp], -8034	; ffffffffffffe09eH
	mov	DWORD PTR p3$11[rbp], eax
	imul	eax, DWORD PTR p4$12[rbp], -1597	; fffffffffffff9c3H
	mov	DWORD PTR p4$12[rbp], eax
	mov	eax, DWORD PTR p4$12[rbp]
	mov	ecx, DWORD PTR p1$9[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR t3$8[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t3$8[rbp], eax
	mov	eax, DWORD PTR p3$11[rbp]
	mov	ecx, DWORD PTR p2$10[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR t2$7[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t2$7[rbp], eax
	mov	eax, DWORD PTR p4$12[rbp]
	mov	ecx, DWORD PTR p2$10[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR t1$6[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t1$6[rbp], eax
	mov	eax, DWORD PTR p3$11[rbp]
	mov	ecx, DWORD PTR p1$9[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR t0$5[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t0$5[rbp], eax
; Line 2454
	mov	eax, DWORD PTR x0$14[rbp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR x0$14[rbp], eax
	mov	eax, DWORD PTR x1$15[rbp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR x1$15[rbp], eax
	mov	eax, DWORD PTR x2$16[rbp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR x2$16[rbp], eax
	mov	eax, DWORD PTR x3$17[rbp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR x3$17[rbp], eax
; Line 2455
	mov	eax, DWORD PTR t3$8[rbp]
	mov	ecx, DWORD PTR x0$14[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 10
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR v$[rbp]
	mov	DWORD PTR [rdx+rcx], eax
; Line 2456
	mov	eax, DWORD PTR t3$8[rbp]
	mov	ecx, DWORD PTR x0$14[rbp]
	sub	ecx, eax
	mov	eax, ecx
	sar	eax, 10
	mov	ecx, 4
	imul	rcx, rcx, 56				; 00000038H
	mov	rdx, QWORD PTR v$[rbp]
	mov	DWORD PTR [rdx+rcx], eax
; Line 2457
	mov	eax, DWORD PTR t2$7[rbp]
	mov	ecx, DWORD PTR x1$15[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 10
	mov	ecx, 4
	imul	rcx, rcx, 8
	mov	rdx, QWORD PTR v$[rbp]
	mov	DWORD PTR [rdx+rcx], eax
; Line 2458
	mov	eax, DWORD PTR t2$7[rbp]
	mov	ecx, DWORD PTR x1$15[rbp]
	sub	ecx, eax
	mov	eax, ecx
	sar	eax, 10
	mov	ecx, 4
	imul	rcx, rcx, 48				; 00000030H
	mov	rdx, QWORD PTR v$[rbp]
	mov	DWORD PTR [rdx+rcx], eax
; Line 2459
	mov	eax, DWORD PTR t1$6[rbp]
	mov	ecx, DWORD PTR x2$16[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 10
	mov	ecx, 4
	imul	rcx, rcx, 16
	mov	rdx, QWORD PTR v$[rbp]
	mov	DWORD PTR [rdx+rcx], eax
; Line 2460
	mov	eax, DWORD PTR t1$6[rbp]
	mov	ecx, DWORD PTR x2$16[rbp]
	sub	ecx, eax
	mov	eax, ecx
	sar	eax, 10
	mov	ecx, 4
	imul	rcx, rcx, 40				; 00000028H
	mov	rdx, QWORD PTR v$[rbp]
	mov	DWORD PTR [rdx+rcx], eax
; Line 2461
	mov	eax, DWORD PTR t0$5[rbp]
	mov	ecx, DWORD PTR x3$17[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 10
	mov	ecx, 4
	imul	rcx, rcx, 24
	mov	rdx, QWORD PTR v$[rbp]
	mov	DWORD PTR [rdx+rcx], eax
; Line 2462
	mov	eax, DWORD PTR t0$5[rbp]
	mov	ecx, DWORD PTR x3$17[rbp]
	sub	ecx, eax
	mov	eax, ecx
	sar	eax, 10
	mov	ecx, 4
	imul	rcx, rcx, 32				; 00000020H
	mov	rdx, QWORD PTR v$[rbp]
	mov	DWORD PTR [rdx+rcx], eax
$LN9@stbi__idct:
; Line 2464
	jmp	$LN2@stbi__idct
$LN3@stbi__idct:
; Line 2466
	mov	DWORD PTR i$[rbp], 0
	lea	rax, QWORD PTR val$[rbp]
	mov	QWORD PTR v$[rbp], rax
	mov	rax, QWORD PTR out$[rbp]
	mov	QWORD PTR o$[rbp], rax
	jmp	SHORT $LN7@stbi__idct
$LN5@stbi__idct:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR v$[rbp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR v$[rbp], rax
	movsxd	rax, DWORD PTR out_stride$[rbp]
	mov	rcx, QWORD PTR o$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR o$[rbp], rax
$LN7@stbi__idct:
	cmp	DWORD PTR i$[rbp], 8
	jge	$LN6@stbi__idct
; Line 2468
	mov	eax, 4
	imul	rax, rax, 2
	mov	rcx, QWORD PTR v$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR p2$23[rbp], eax
	mov	eax, 4
	imul	rax, rax, 6
	mov	rcx, QWORD PTR v$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR p3$24[rbp], eax
	mov	eax, DWORD PTR p3$24[rbp]
	mov	ecx, DWORD PTR p2$23[rbp]
	add	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 2217				; 000008a9H
	mov	DWORD PTR p1$22[rbp], eax
	imul	eax, DWORD PTR p3$24[rbp], -7567	; ffffffffffffe271H
	mov	ecx, DWORD PTR p1$22[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t2$20[rbp], eax
	imul	eax, DWORD PTR p2$23[rbp], 3135		; 00000c3fH
	mov	ecx, DWORD PTR p1$22[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t3$21[rbp], eax
	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR v$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR p2$23[rbp], eax
	mov	eax, 4
	imul	rax, rax, 4
	mov	rcx, QWORD PTR v$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR p3$24[rbp], eax
	mov	eax, DWORD PTR p3$24[rbp]
	mov	ecx, DWORD PTR p2$23[rbp]
	add	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 4096				; 00001000H
	mov	DWORD PTR t0$18[rbp], eax
	mov	eax, DWORD PTR p3$24[rbp]
	mov	ecx, DWORD PTR p2$23[rbp]
	sub	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 4096				; 00001000H
	mov	DWORD PTR t1$19[rbp], eax
	mov	eax, DWORD PTR t3$21[rbp]
	mov	ecx, DWORD PTR t0$18[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR x0$27[rbp], eax
	mov	eax, DWORD PTR t3$21[rbp]
	mov	ecx, DWORD PTR t0$18[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR x3$30[rbp], eax
	mov	eax, DWORD PTR t2$20[rbp]
	mov	ecx, DWORD PTR t1$19[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR x1$28[rbp], eax
	mov	eax, DWORD PTR t2$20[rbp]
	mov	ecx, DWORD PTR t1$19[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR x2$29[rbp], eax
	mov	eax, 4
	imul	rax, rax, 7
	mov	rcx, QWORD PTR v$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR t0$18[rbp], eax
	mov	eax, 4
	imul	rax, rax, 5
	mov	rcx, QWORD PTR v$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR t1$19[rbp], eax
	mov	eax, 4
	imul	rax, rax, 3
	mov	rcx, QWORD PTR v$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR t2$20[rbp], eax
	mov	eax, 4
	imul	rax, rax, 1
	mov	rcx, QWORD PTR v$[rbp]
	mov	eax, DWORD PTR [rcx+rax]
	mov	DWORD PTR t3$21[rbp], eax
	mov	eax, DWORD PTR t2$20[rbp]
	mov	ecx, DWORD PTR t0$18[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p3$24[rbp], eax
	mov	eax, DWORD PTR t3$21[rbp]
	mov	ecx, DWORD PTR t1$19[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p4$25[rbp], eax
	mov	eax, DWORD PTR t3$21[rbp]
	mov	ecx, DWORD PTR t0$18[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p1$22[rbp], eax
	mov	eax, DWORD PTR t2$20[rbp]
	mov	ecx, DWORD PTR t1$19[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p2$23[rbp], eax
	mov	eax, DWORD PTR p4$25[rbp]
	mov	ecx, DWORD PTR p3$24[rbp]
	add	ecx, eax
	mov	eax, ecx
	imul	eax, eax, 4816				; 000012d0H
	mov	DWORD PTR p5$26[rbp], eax
	imul	eax, DWORD PTR t0$18[rbp], 1223		; 000004c7H
	mov	DWORD PTR t0$18[rbp], eax
	imul	eax, DWORD PTR t1$19[rbp], 8410		; 000020daH
	mov	DWORD PTR t1$19[rbp], eax
	imul	eax, DWORD PTR t2$20[rbp], 12586	; 0000312aH
	mov	DWORD PTR t2$20[rbp], eax
	imul	eax, DWORD PTR t3$21[rbp], 6149		; 00001805H
	mov	DWORD PTR t3$21[rbp], eax
	imul	eax, DWORD PTR p1$22[rbp], -3685	; fffffffffffff19bH
	mov	ecx, DWORD PTR p5$26[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p1$22[rbp], eax
	imul	eax, DWORD PTR p2$23[rbp], -10497	; ffffffffffffd6ffH
	mov	ecx, DWORD PTR p5$26[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR p2$23[rbp], eax
	imul	eax, DWORD PTR p3$24[rbp], -8034	; ffffffffffffe09eH
	mov	DWORD PTR p3$24[rbp], eax
	imul	eax, DWORD PTR p4$25[rbp], -1597	; fffffffffffff9c3H
	mov	DWORD PTR p4$25[rbp], eax
	mov	eax, DWORD PTR p4$25[rbp]
	mov	ecx, DWORD PTR p1$22[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR t3$21[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t3$21[rbp], eax
	mov	eax, DWORD PTR p3$24[rbp]
	mov	ecx, DWORD PTR p2$23[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR t2$20[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t2$20[rbp], eax
	mov	eax, DWORD PTR p4$25[rbp]
	mov	ecx, DWORD PTR p2$23[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR t1$19[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t1$19[rbp], eax
	mov	eax, DWORD PTR p3$24[rbp]
	mov	ecx, DWORD PTR p1$22[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR t0$18[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR t0$18[rbp], eax
; Line 2475
	mov	eax, DWORD PTR x0$27[rbp]
	add	eax, 16842752				; 01010000H
	mov	DWORD PTR x0$27[rbp], eax
; Line 2476
	mov	eax, DWORD PTR x1$28[rbp]
	add	eax, 16842752				; 01010000H
	mov	DWORD PTR x1$28[rbp], eax
; Line 2477
	mov	eax, DWORD PTR x2$29[rbp]
	add	eax, 16842752				; 01010000H
	mov	DWORD PTR x2$29[rbp], eax
; Line 2478
	mov	eax, DWORD PTR x3$30[rbp]
	add	eax, 16842752				; 01010000H
	mov	DWORD PTR x3$30[rbp], eax
; Line 2481
	mov	eax, DWORD PTR t3$21[rbp]
	mov	ecx, DWORD PTR x0$27[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 17
	mov	ecx, eax
	call	?stbi__clamp@@YAEH@Z			; stbi__clamp
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR o$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 2482
	mov	eax, DWORD PTR t3$21[rbp]
	mov	ecx, DWORD PTR x0$27[rbp]
	sub	ecx, eax
	mov	eax, ecx
	sar	eax, 17
	mov	ecx, eax
	call	?stbi__clamp@@YAEH@Z			; stbi__clamp
	mov	ecx, 1
	imul	rcx, rcx, 7
	mov	rdx, QWORD PTR o$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 2483
	mov	eax, DWORD PTR t2$20[rbp]
	mov	ecx, DWORD PTR x1$28[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 17
	mov	ecx, eax
	call	?stbi__clamp@@YAEH@Z			; stbi__clamp
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR o$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 2484
	mov	eax, DWORD PTR t2$20[rbp]
	mov	ecx, DWORD PTR x1$28[rbp]
	sub	ecx, eax
	mov	eax, ecx
	sar	eax, 17
	mov	ecx, eax
	call	?stbi__clamp@@YAEH@Z			; stbi__clamp
	mov	ecx, 1
	imul	rcx, rcx, 6
	mov	rdx, QWORD PTR o$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 2485
	mov	eax, DWORD PTR t1$19[rbp]
	mov	ecx, DWORD PTR x2$29[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 17
	mov	ecx, eax
	call	?stbi__clamp@@YAEH@Z			; stbi__clamp
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR o$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 2486
	mov	eax, DWORD PTR t1$19[rbp]
	mov	ecx, DWORD PTR x2$29[rbp]
	sub	ecx, eax
	mov	eax, ecx
	sar	eax, 17
	mov	ecx, eax
	call	?stbi__clamp@@YAEH@Z			; stbi__clamp
	mov	ecx, 1
	imul	rcx, rcx, 5
	mov	rdx, QWORD PTR o$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 2487
	mov	eax, DWORD PTR t0$18[rbp]
	mov	ecx, DWORD PTR x3$30[rbp]
	add	ecx, eax
	mov	eax, ecx
	sar	eax, 17
	mov	ecx, eax
	call	?stbi__clamp@@YAEH@Z			; stbi__clamp
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR o$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 2488
	mov	eax, DWORD PTR t0$18[rbp]
	mov	ecx, DWORD PTR x3$30[rbp]
	sub	ecx, eax
	mov	eax, ecx
	sar	eax, 17
	mov	ecx, eax
	call	?stbi__clamp@@YAEH@Z			; stbi__clamp
	mov	ecx, 1
	imul	rcx, rcx, 4
	mov	rdx, QWORD PTR o$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 2489
	jmp	$LN5@stbi__idct
$LN6@stbi__idct:
; Line 2490
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__idct_block@@YAXPEAEHQEAF@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1864]
	pop	rdi
	pop	rbp
	ret	0
?stbi__idct_block@@YAXPEAEHQEAF@Z ENDP			; stbi__idct_block
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__clamp@@YAEH@Z
_TEXT	SEGMENT
x$ = 224
?stbi__clamp@@YAEH@Z PROC				; stbi__clamp, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2383
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2385
	cmp	DWORD PTR x$[rbp], 255			; 000000ffH
	jbe	SHORT $LN2@stbi__clam
; Line 2386
	cmp	DWORD PTR x$[rbp], 0
	jge	SHORT $LN3@stbi__clam
	xor	al, al
	jmp	SHORT $LN1@stbi__clam
$LN3@stbi__clam:
; Line 2387
	cmp	DWORD PTR x$[rbp], 255			; 000000ffH
	jle	SHORT $LN4@stbi__clam
	mov	al, 255					; 000000ffH
	jmp	SHORT $LN1@stbi__clam
$LN4@stbi__clam:
$LN2@stbi__clam:
; Line 2389
	movzx	eax, BYTE PTR x$[rbp]
$LN1@stbi__clam:
; Line 2390
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__clamp@@YAEH@Z ENDP				; stbi__clamp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_decode_block_prog_ac@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@PEAF@Z
_TEXT	SEGMENT
k$ = 4
shift$1 = 36
zig$2 = 68
c$3 = 100
r$4 = 132
s$5 = 164
rs$6 = 196
bit$7 = 228
p$8 = 264
r$9 = 292
s$10 = 324
rs$11 = 356
p$12 = 392
tv428 = 596
tv401 = 596
tv376 = 596
tv250 = 596
tv178 = 596
tv165 = 596
tv136 = 596
tv358 = 600
tv271 = 600
tv248 = 600
tv163 = 600
j$ = 640
data$ = 648
hac$ = 656
fac$ = 664
?stbi__jpeg_decode_block_prog_ac@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@PEAF@Z PROC ; stbi__jpeg_decode_block_prog_ac, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2263
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 648				; 00000288H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2265
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18484], 0
	jne	SHORT $LN13@stbi__jpeg
	lea	rcx, OFFSET FLAT:??_C@_0BG@PJBJDAGM@can?8t?5merge?5dc?5and?5ac@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__jpeg
$LN13@stbi__jpeg:
; Line 2267
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18492], 0
	jne	$LN14@stbi__jpeg
; Line 2268
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18496]
	mov	DWORD PTR shift$1[rbp], eax
; Line 2270
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18500], 0
	je	SHORT $LN16@stbi__jpeg
; Line 2271
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18500]
	dec	eax
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18500], eax
; Line 2272
	mov	eax, 1
	jmp	$LN1@stbi__jpeg
$LN16@stbi__jpeg:
; Line 2275
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18484]
	mov	DWORD PTR k$[rbp], eax
$LN4@stbi__jpeg:
; Line 2279
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18468], 16
	jge	SHORT $LN17@stbi__jpeg
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN17@stbi__jpeg:
; Line 2280
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shr	eax, 23
	and	eax, 511				; 000001ffH
	mov	DWORD PTR c$3[rbp], eax
; Line 2281
	movsxd	rax, DWORD PTR c$3[rbp]
	mov	rcx, QWORD PTR fac$[rbp]
	movsx	eax, WORD PTR [rcx+rax*2]
	mov	DWORD PTR r$4[rbp], eax
; Line 2282
	cmp	DWORD PTR r$4[rbp], 0
	je	$LN18@stbi__jpeg
; Line 2283
	mov	eax, DWORD PTR r$4[rbp]
	sar	eax, 4
	and	eax, 15
	mov	ecx, DWORD PTR k$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR k$[rbp], eax
; Line 2284
	mov	eax, DWORD PTR r$4[rbp]
	and	eax, 15
	mov	DWORD PTR s$5[rbp], eax
; Line 2285
	mov	eax, DWORD PTR s$5[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	mov	QWORD PTR tv358[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv358[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shl	eax, cl
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18464], eax
; Line 2286
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR s$5[rbp]
	mov	eax, DWORD PTR [rax+18468]
	sub	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18468], eax
; Line 2287
	movsxd	rax, DWORD PTR k$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__jpeg_dezigzag@@3QBEB
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv136[rbp], eax
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
	mov	eax, DWORD PTR tv136[rbp]
	mov	DWORD PTR zig$2[rbp], eax
; Line 2288
	mov	eax, DWORD PTR r$4[rbp]
	sar	eax, 8
	mov	ecx, DWORD PTR shift$1[rbp]
	mov	edx, 1
	shl	edx, cl
	mov	ecx, edx
	imul	eax, ecx
	mov	ecx, DWORD PTR zig$2[rbp]
	mov	rdx, QWORD PTR data$[rbp]
	mov	WORD PTR [rdx+rcx*2], ax
; Line 2289
	jmp	$LN19@stbi__jpeg
$LN18@stbi__jpeg:
; Line 2290
	mov	rdx, QWORD PTR hac$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z ; stbi__jpeg_huff_decode
	mov	DWORD PTR rs$6[rbp], eax
; Line 2291
	cmp	DWORD PTR rs$6[rbp], 0
	jge	SHORT $LN20@stbi__jpeg
	lea	rcx, OFFSET FLAT:??_C@_0BB@IIMLINA@bad?5huffman?5code@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__jpeg
$LN20@stbi__jpeg:
; Line 2292
	mov	eax, DWORD PTR rs$6[rbp]
	and	eax, 15
	mov	DWORD PTR s$5[rbp], eax
; Line 2293
	mov	eax, DWORD PTR rs$6[rbp]
	sar	eax, 4
	mov	DWORD PTR r$4[rbp], eax
; Line 2294
	cmp	DWORD PTR s$5[rbp], 0
	jne	$LN21@stbi__jpeg
; Line 2295
	cmp	DWORD PTR r$4[rbp], 15
	jge	$LN23@stbi__jpeg
; Line 2296
	mov	eax, DWORD PTR r$4[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv376[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv376[rbp]
	shl	eax, cl
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18500], eax
; Line 2297
	cmp	DWORD PTR r$4[rbp], 0
	je	SHORT $LN24@stbi__jpeg
; Line 2298
	mov	edx, DWORD PTR r$4[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z ; stbi__jpeg_get_bits
	mov	DWORD PTR tv165[rbp], eax
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18500]
	mov	DWORD PTR tv163[rbp], eax
	mov	eax, DWORD PTR tv165[rbp]
	mov	ecx, DWORD PTR tv163[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18500], eax
$LN24@stbi__jpeg:
; Line 2299
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18500]
	dec	eax
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18500], eax
; Line 2300
	jmp	$LN3@stbi__jpeg
$LN23@stbi__jpeg:
; Line 2302
	mov	eax, DWORD PTR k$[rbp]
	add	eax, 16
	mov	DWORD PTR k$[rbp], eax
; Line 2303
	jmp	SHORT $LN22@stbi__jpeg
$LN21@stbi__jpeg:
; Line 2304
	mov	eax, DWORD PTR r$4[rbp]
	mov	ecx, DWORD PTR k$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR k$[rbp], eax
; Line 2305
	movsxd	rax, DWORD PTR k$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__jpeg_dezigzag@@3QBEB
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv178[rbp], eax
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
	mov	eax, DWORD PTR tv178[rbp]
	mov	DWORD PTR zig$2[rbp], eax
; Line 2306
	mov	edx, DWORD PTR s$5[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z ; stbi__extend_receive
	mov	ecx, DWORD PTR shift$1[rbp]
	mov	edx, 1
	shl	edx, cl
	mov	ecx, edx
	imul	eax, ecx
	mov	ecx, DWORD PTR zig$2[rbp]
	mov	rdx, QWORD PTR data$[rbp]
	mov	WORD PTR [rdx+rcx*2], ax
$LN22@stbi__jpeg:
$LN19@stbi__jpeg:
; Line 2309
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18488]
	cmp	DWORD PTR k$[rbp], eax
	jle	$LN4@stbi__jpeg
$LN3@stbi__jpeg:
; Line 2310
	jmp	$LN15@stbi__jpeg
$LN14@stbi__jpeg:
; Line 2313
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18496]
	mov	ecx, 1
	mov	DWORD PTR tv401[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv401[rbp]
	shl	eax, cl
	mov	WORD PTR bit$7[rbp], ax
; Line 2315
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18500], 0
	je	$LN25@stbi__jpeg
; Line 2316
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18500]
	dec	eax
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18500], eax
; Line 2317
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18484]
	mov	DWORD PTR k$[rbp], eax
	jmp	SHORT $LN7@stbi__jpeg
$LN5@stbi__jpeg:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN7@stbi__jpeg:
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18488]
	cmp	DWORD PTR k$[rbp], eax
	jg	$LN6@stbi__jpeg
; Line 2318
	movsxd	rax, DWORD PTR k$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__jpeg_dezigzag@@3QBEB
	movzx	eax, BYTE PTR [rcx+rax]
	mov	rcx, QWORD PTR data$[rbp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR p$8[rbp], rax
; Line 2319
	mov	rax, QWORD PTR p$8[rbp]
	movsx	eax, WORD PTR [rax]
	test	eax, eax
	je	SHORT $LN27@stbi__jpeg
; Line 2320
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z ; stbi__jpeg_get_bit
	test	eax, eax
	je	SHORT $LN28@stbi__jpeg
; Line 2321
	mov	rax, QWORD PTR p$8[rbp]
	movsx	eax, WORD PTR [rax]
	movsx	ecx, WORD PTR bit$7[rbp]
	and	eax, ecx
	test	eax, eax
	jne	SHORT $LN29@stbi__jpeg
; Line 2322
	mov	rax, QWORD PTR p$8[rbp]
	movsx	eax, WORD PTR [rax]
	test	eax, eax
	jle	SHORT $LN30@stbi__jpeg
; Line 2323
	movsx	eax, WORD PTR bit$7[rbp]
	mov	rcx, QWORD PTR p$8[rbp]
	movsx	ecx, WORD PTR [rcx]
	add	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR p$8[rbp]
	mov	WORD PTR [rcx], ax
	jmp	SHORT $LN31@stbi__jpeg
$LN30@stbi__jpeg:
; Line 2325
	movsx	eax, WORD PTR bit$7[rbp]
	mov	rcx, QWORD PTR p$8[rbp]
	movsx	ecx, WORD PTR [rcx]
	sub	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR p$8[rbp]
	mov	WORD PTR [rcx], ax
$LN31@stbi__jpeg:
$LN29@stbi__jpeg:
$LN28@stbi__jpeg:
$LN27@stbi__jpeg:
; Line 2327
	jmp	$LN5@stbi__jpeg
$LN6@stbi__jpeg:
; Line 2328
	jmp	$LN26@stbi__jpeg
$LN25@stbi__jpeg:
; Line 2329
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18484]
	mov	DWORD PTR k$[rbp], eax
$LN10@stbi__jpeg:
; Line 2332
	mov	rdx, QWORD PTR hac$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z ; stbi__jpeg_huff_decode
	mov	DWORD PTR rs$11[rbp], eax
; Line 2333
	cmp	DWORD PTR rs$11[rbp], 0
	jge	SHORT $LN32@stbi__jpeg
	lea	rcx, OFFSET FLAT:??_C@_0BB@IIMLINA@bad?5huffman?5code@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__jpeg
$LN32@stbi__jpeg:
; Line 2334
	mov	eax, DWORD PTR rs$11[rbp]
	and	eax, 15
	mov	DWORD PTR s$10[rbp], eax
; Line 2335
	mov	eax, DWORD PTR rs$11[rbp]
	sar	eax, 4
	mov	DWORD PTR r$9[rbp], eax
; Line 2336
	cmp	DWORD PTR s$10[rbp], 0
	jne	$LN33@stbi__jpeg
; Line 2337
	cmp	DWORD PTR r$9[rbp], 15
	jge	$LN35@stbi__jpeg
; Line 2338
	mov	eax, DWORD PTR r$9[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv428[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv428[rbp]
	shl	eax, cl
	dec	eax
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18500], eax
; Line 2339
	cmp	DWORD PTR r$9[rbp], 0
	je	SHORT $LN37@stbi__jpeg
; Line 2340
	mov	edx, DWORD PTR r$9[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z ; stbi__jpeg_get_bits
	mov	DWORD PTR tv250[rbp], eax
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18500]
	mov	DWORD PTR tv248[rbp], eax
	mov	eax, DWORD PTR tv250[rbp]
	mov	ecx, DWORD PTR tv248[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18500], eax
$LN37@stbi__jpeg:
; Line 2341
	mov	DWORD PTR r$9[rbp], 64			; 00000040H
$LN35@stbi__jpeg:
; Line 2347
	jmp	SHORT $LN34@stbi__jpeg
$LN33@stbi__jpeg:
; Line 2348
	cmp	DWORD PTR s$10[rbp], 1
	je	SHORT $LN38@stbi__jpeg
	lea	rcx, OFFSET FLAT:??_C@_0BB@IIMLINA@bad?5huffman?5code@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__jpeg
$LN38@stbi__jpeg:
; Line 2350
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z ; stbi__jpeg_get_bit
	test	eax, eax
	je	SHORT $LN39@stbi__jpeg
; Line 2351
	movsx	eax, WORD PTR bit$7[rbp]
	mov	DWORD PTR s$10[rbp], eax
	jmp	SHORT $LN40@stbi__jpeg
$LN39@stbi__jpeg:
; Line 2353
	movsx	eax, WORD PTR bit$7[rbp]
	neg	eax
	mov	DWORD PTR s$10[rbp], eax
$LN40@stbi__jpeg:
$LN34@stbi__jpeg:
$LN11@stbi__jpeg:
; Line 2357
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18488]
	cmp	DWORD PTR k$[rbp], eax
	jg	$LN12@stbi__jpeg
; Line 2358
	movsxd	rax, DWORD PTR k$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__jpeg_dezigzag@@3QBEB
	movzx	eax, BYTE PTR [rcx+rax]
	mov	rcx, QWORD PTR data$[rbp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR tv271[rbp], rax
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
	mov	rax, QWORD PTR tv271[rbp]
	mov	QWORD PTR p$12[rbp], rax
; Line 2359
	mov	rax, QWORD PTR p$12[rbp]
	movsx	eax, WORD PTR [rax]
	test	eax, eax
	je	SHORT $LN41@stbi__jpeg
; Line 2360
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z ; stbi__jpeg_get_bit
	test	eax, eax
	je	SHORT $LN43@stbi__jpeg
; Line 2361
	mov	rax, QWORD PTR p$12[rbp]
	movsx	eax, WORD PTR [rax]
	movsx	ecx, WORD PTR bit$7[rbp]
	and	eax, ecx
	test	eax, eax
	jne	SHORT $LN44@stbi__jpeg
; Line 2362
	mov	rax, QWORD PTR p$12[rbp]
	movsx	eax, WORD PTR [rax]
	test	eax, eax
	jle	SHORT $LN45@stbi__jpeg
; Line 2363
	movsx	eax, WORD PTR bit$7[rbp]
	mov	rcx, QWORD PTR p$12[rbp]
	movsx	ecx, WORD PTR [rcx]
	add	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR p$12[rbp]
	mov	WORD PTR [rcx], ax
	jmp	SHORT $LN46@stbi__jpeg
$LN45@stbi__jpeg:
; Line 2365
	movsx	eax, WORD PTR bit$7[rbp]
	mov	rcx, QWORD PTR p$12[rbp]
	movsx	ecx, WORD PTR [rcx]
	sub	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR p$12[rbp]
	mov	WORD PTR [rcx], ax
$LN46@stbi__jpeg:
$LN44@stbi__jpeg:
$LN43@stbi__jpeg:
; Line 2367
	jmp	SHORT $LN42@stbi__jpeg
$LN41@stbi__jpeg:
; Line 2368
	cmp	DWORD PTR r$9[rbp], 0
	jne	SHORT $LN47@stbi__jpeg
; Line 2369
	mov	rax, QWORD PTR p$12[rbp]
	movzx	ecx, WORD PTR s$10[rbp]
	mov	WORD PTR [rax], cx
; Line 2370
	jmp	SHORT $LN12@stbi__jpeg
$LN47@stbi__jpeg:
; Line 2372
	mov	eax, DWORD PTR r$9[rbp]
	dec	eax
	mov	DWORD PTR r$9[rbp], eax
$LN42@stbi__jpeg:
; Line 2374
	jmp	$LN11@stbi__jpeg
$LN12@stbi__jpeg:
; Line 2375
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18488]
	cmp	DWORD PTR k$[rbp], eax
	jle	$LN10@stbi__jpeg
$LN26@stbi__jpeg:
$LN15@stbi__jpeg:
; Line 2378
	mov	eax, 1
$LN1@stbi__jpeg:
; Line 2379
	lea	rsp, QWORD PTR [rbp+616]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_decode_block_prog_ac@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@PEAF@Z ENDP ; stbi__jpeg_decode_block_prog_ac
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z
_TEXT	SEGMENT
diff$ = 4
dc$ = 36
t$ = 68
tv184 = 276
tv176 = 276
tv87 = 276
j$ = 320
data$ = 328
hdc$ = 336
b$ = 344
?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z PROC ; stbi__jpeg_decode_block_prog_dc, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2235
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2238
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18488], 0
	je	SHORT $LN2@stbi__jpeg
	lea	rcx, OFFSET FLAT:??_C@_0BG@PJBJDAGM@can?8t?5merge?5dc?5and?5ac@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__jpeg
$LN2@stbi__jpeg:
; Line 2240
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18468], 16
	jge	SHORT $LN3@stbi__jpeg
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN3@stbi__jpeg:
; Line 2242
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18492], 0
	jne	$LN4@stbi__jpeg
; Line 2244
	mov	r8d, 128				; 00000080H
	xor	edx, edx
	mov	rcx, QWORD PTR data$[rbp]
	call	memset
; Line 2245
	mov	rdx, QWORD PTR hdc$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z ; stbi__jpeg_huff_decode
	mov	DWORD PTR t$[rbp], eax
; Line 2246
	cmp	DWORD PTR t$[rbp], 0
	jl	SHORT $LN7@stbi__jpeg
	cmp	DWORD PTR t$[rbp], 15
	jle	SHORT $LN6@stbi__jpeg
$LN7@stbi__jpeg:
	lea	rcx, OFFSET FLAT:??_C@_0BG@PJBJDAGM@can?8t?5merge?5dc?5and?5ac@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__jpeg
$LN6@stbi__jpeg:
; Line 2247
	cmp	DWORD PTR t$[rbp], 0
	je	SHORT $LN10@stbi__jpeg
	mov	edx, DWORD PTR t$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z ; stbi__extend_receive
	mov	DWORD PTR tv87[rbp], eax
	jmp	SHORT $LN11@stbi__jpeg
$LN10@stbi__jpeg:
	mov	DWORD PTR tv87[rbp], 0
$LN11@stbi__jpeg:
	mov	eax, DWORD PTR tv87[rbp]
	mov	DWORD PTR diff$[rbp], eax
; Line 2249
	movsxd	rax, DWORD PTR b$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18104]
	add	eax, DWORD PTR diff$[rbp]
	mov	DWORD PTR dc$[rbp], eax
; Line 2250
	movsxd	rax, DWORD PTR b$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR j$[rbp]
	mov	edx, DWORD PTR dc$[rbp]
	mov	DWORD PTR [rcx+rax+18104], edx
; Line 2251
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18496]
	mov	ecx, 1
	mov	DWORD PTR tv176[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv176[rbp]
	shl	eax, cl
	mov	ecx, DWORD PTR dc$[rbp]
	imul	ecx, eax
	mov	eax, ecx
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR data$[rbp]
	mov	WORD PTR [rdx+rcx], ax
; Line 2252
	jmp	SHORT $LN5@stbi__jpeg
$LN4@stbi__jpeg:
; Line 2254
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z ; stbi__jpeg_get_bit
	test	eax, eax
	je	SHORT $LN8@stbi__jpeg
; Line 2255
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18496]
	mov	ecx, 1
	mov	DWORD PTR tv184[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv184[rbp]
	shl	eax, cl
	cwde
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR data$[rbp]
	movsx	ecx, WORD PTR [rdx+rcx]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR data$[rbp]
	mov	WORD PTR [rdx+rcx], ax
$LN8@stbi__jpeg:
$LN5@stbi__jpeg:
; Line 2257
	mov	eax, 1
$LN1@stbi__jpeg:
; Line 2258
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_decode_block_prog_dc@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@H@Z ENDP ; stbi__jpeg_decode_block_prog_dc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z
_TEXT	SEGMENT
diff$ = 4
dc$ = 36
k$ = 68
t$ = 100
zig$1 = 132
c$2 = 164
r$3 = 196
s$4 = 228
rs$5 = 260
tv188 = 468
tv159 = 468
tv81 = 468
tv241 = 472
j$ = 512
data$ = 520
hdc$ = 528
hac$ = 536
fac$ = 544
b$ = 552
dequant$ = 560
?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z PROC ; stbi__jpeg_decode_block, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2183
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 520				; 00000208H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2187
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18468], 16
	jge	SHORT $LN5@stbi__jpeg
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN5@stbi__jpeg:
; Line 2188
	mov	rdx, QWORD PTR hdc$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z ; stbi__jpeg_huff_decode
	mov	DWORD PTR t$[rbp], eax
; Line 2189
	cmp	DWORD PTR t$[rbp], 0
	jl	SHORT $LN7@stbi__jpeg
	cmp	DWORD PTR t$[rbp], 15
	jle	SHORT $LN6@stbi__jpeg
$LN7@stbi__jpeg:
	lea	rcx, OFFSET FLAT:??_C@_0BB@IIMLINA@bad?5huffman?5code@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__jpeg
$LN6@stbi__jpeg:
; Line 2192
	mov	r8d, 128				; 00000080H
	xor	edx, edx
	mov	rcx, QWORD PTR data$[rbp]
	call	memset
; Line 2194
	cmp	DWORD PTR t$[rbp], 0
	je	SHORT $LN16@stbi__jpeg
	mov	edx, DWORD PTR t$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z ; stbi__extend_receive
	mov	DWORD PTR tv81[rbp], eax
	jmp	SHORT $LN17@stbi__jpeg
$LN16@stbi__jpeg:
	mov	DWORD PTR tv81[rbp], 0
$LN17@stbi__jpeg:
	mov	eax, DWORD PTR tv81[rbp]
	mov	DWORD PTR diff$[rbp], eax
; Line 2195
	movsxd	rax, DWORD PTR b$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rcx+rax+18104]
	add	eax, DWORD PTR diff$[rbp]
	mov	DWORD PTR dc$[rbp], eax
; Line 2196
	movsxd	rax, DWORD PTR b$[rbp]
	imul	rax, rax, 96				; 00000060H
	mov	rcx, QWORD PTR j$[rbp]
	mov	edx, DWORD PTR dc$[rbp]
	mov	DWORD PTR [rcx+rax+18104], edx
; Line 2197
	mov	eax, 2
	imul	rax, rax, 0
	mov	rcx, QWORD PTR dequant$[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	mov	ecx, DWORD PTR dc$[rbp]
	imul	ecx, eax
	mov	eax, ecx
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR data$[rbp]
	mov	WORD PTR [rdx+rcx], ax
; Line 2200
	mov	DWORD PTR k$[rbp], 1
$LN4@stbi__jpeg:
; Line 2204
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18468], 16
	jge	SHORT $LN8@stbi__jpeg
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN8@stbi__jpeg:
; Line 2205
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shr	eax, 23
	and	eax, 511				; 000001ffH
	mov	DWORD PTR c$2[rbp], eax
; Line 2206
	movsxd	rax, DWORD PTR c$2[rbp]
	mov	rcx, QWORD PTR fac$[rbp]
	movsx	eax, WORD PTR [rcx+rax*2]
	mov	DWORD PTR r$3[rbp], eax
; Line 2207
	cmp	DWORD PTR r$3[rbp], 0
	je	$LN9@stbi__jpeg
; Line 2208
	mov	eax, DWORD PTR r$3[rbp]
	sar	eax, 4
	and	eax, 15
	mov	ecx, DWORD PTR k$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR k$[rbp], eax
; Line 2209
	mov	eax, DWORD PTR r$3[rbp]
	and	eax, 15
	mov	DWORD PTR s$4[rbp], eax
; Line 2210
	mov	eax, DWORD PTR s$4[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	mov	QWORD PTR tv241[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv241[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shl	eax, cl
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18464], eax
; Line 2211
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR s$4[rbp]
	mov	eax, DWORD PTR [rax+18468]
	sub	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18468], eax
; Line 2213
	movsxd	rax, DWORD PTR k$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__jpeg_dezigzag@@3QBEB
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv159[rbp], eax
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
	mov	eax, DWORD PTR tv159[rbp]
	mov	DWORD PTR zig$1[rbp], eax
; Line 2214
	mov	eax, DWORD PTR r$3[rbp]
	sar	eax, 8
	mov	ecx, DWORD PTR zig$1[rbp]
	mov	rdx, QWORD PTR dequant$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx*2]
	imul	eax, ecx
	mov	ecx, DWORD PTR zig$1[rbp]
	mov	rdx, QWORD PTR data$[rbp]
	mov	WORD PTR [rdx+rcx*2], ax
; Line 2215
	jmp	$LN10@stbi__jpeg
$LN9@stbi__jpeg:
; Line 2216
	mov	rdx, QWORD PTR hac$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z ; stbi__jpeg_huff_decode
	mov	DWORD PTR rs$5[rbp], eax
; Line 2217
	cmp	DWORD PTR rs$5[rbp], 0
	jge	SHORT $LN11@stbi__jpeg
	lea	rcx, OFFSET FLAT:??_C@_0BB@IIMLINA@bad?5huffman?5code@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__jpeg
$LN11@stbi__jpeg:
; Line 2218
	mov	eax, DWORD PTR rs$5[rbp]
	and	eax, 15
	mov	DWORD PTR s$4[rbp], eax
; Line 2219
	mov	eax, DWORD PTR rs$5[rbp]
	sar	eax, 4
	mov	DWORD PTR r$3[rbp], eax
; Line 2220
	cmp	DWORD PTR s$4[rbp], 0
	jne	SHORT $LN12@stbi__jpeg
; Line 2221
	cmp	DWORD PTR rs$5[rbp], 240		; 000000f0H
	je	SHORT $LN14@stbi__jpeg
	jmp	$LN3@stbi__jpeg
$LN14@stbi__jpeg:
; Line 2222
	mov	eax, DWORD PTR k$[rbp]
	add	eax, 16
	mov	DWORD PTR k$[rbp], eax
; Line 2223
	jmp	SHORT $LN13@stbi__jpeg
$LN12@stbi__jpeg:
; Line 2224
	mov	eax, DWORD PTR r$3[rbp]
	mov	ecx, DWORD PTR k$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR k$[rbp], eax
; Line 2226
	movsxd	rax, DWORD PTR k$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__jpeg_dezigzag@@3QBEB
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR tv188[rbp], eax
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
	mov	eax, DWORD PTR tv188[rbp]
	mov	DWORD PTR zig$1[rbp], eax
; Line 2227
	mov	edx, DWORD PTR s$4[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z ; stbi__extend_receive
	mov	ecx, DWORD PTR zig$1[rbp]
	mov	rdx, QWORD PTR dequant$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx*2]
	imul	eax, ecx
	mov	ecx, DWORD PTR zig$1[rbp]
	mov	rdx, QWORD PTR data$[rbp]
	mov	WORD PTR [rdx+rcx*2], ax
$LN13@stbi__jpeg:
$LN10@stbi__jpeg:
; Line 2230
	cmp	DWORD PTR k$[rbp], 64			; 00000040H
	jl	$LN4@stbi__jpeg
$LN3@stbi__jpeg:
; Line 2231
	mov	eax, 1
$LN1@stbi__jpeg:
; Line 2232
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_decode_block@@YAHPEAUstbi__jpeg@@QEAFPEAUstbi__huffman@@2PEAFHPEAG@Z ENDP ; stbi__jpeg_decode_block
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
k$ = 4
j$ = 256
?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z PROC		; stbi__jpeg_get_bit, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2155
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2157
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18468], 1
	jge	SHORT $LN2@stbi__jpeg
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN2@stbi__jpeg:
; Line 2158
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18464]
	mov	DWORD PTR k$[rbp], eax
; Line 2159
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shl	eax, 1
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18464], eax
; Line 2160
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18468]
	dec	eax
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18468], eax
; Line 2161
	mov	eax, DWORD PTR k$[rbp]
	and	eax, -2147483648			; 80000000H
; Line 2162
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_get_bit@@YAHPEAUstbi__jpeg@@@Z ENDP		; stbi__jpeg_get_bit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z
_TEXT	SEGMENT
k$ = 4
j$ = 256
n$ = 264
?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z PROC	; stbi__jpeg_get_bits, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2144
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2146
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	cmp	DWORD PTR [rax+18468], ecx
	jge	SHORT $LN2@stbi__jpeg
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN2@stbi__jpeg:
; Line 2147
	mov	edx, DWORD PTR n$[rbp]
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR [rax+18464]
	call	_lrotl
	mov	DWORD PTR k$[rbp], eax
; Line 2148
	movsxd	rax, DWORD PTR n$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__bmask@@3QBIB
	mov	eax, DWORD PTR [rcx+rax*4]
	not	eax
	mov	ecx, DWORD PTR k$[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18464], eax
; Line 2149
	movsxd	rax, DWORD PTR n$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__bmask@@3QBIB
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	ecx, DWORD PTR k$[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR k$[rbp], eax
; Line 2150
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	mov	eax, DWORD PTR [rax+18468]
	sub	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18468], eax
; Line 2151
	mov	eax, DWORD PTR k$[rbp]
; Line 2152
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_get_bits@@YAHPEAUstbi__jpeg@@H@Z ENDP	; stbi__jpeg_get_bits
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z
_TEXT	SEGMENT
k$ = 4
sgn$ = 36
j$ = 288
n$ = 296
?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z PROC	; stbi__extend_receive, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2129
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2132
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	cmp	DWORD PTR [rax+18468], ecx
	jge	SHORT $LN2@stbi__exte
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN2@stbi__exte:
; Line 2134
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shr	eax, 31
	mov	DWORD PTR sgn$[rbp], eax
; Line 2135
	mov	edx, DWORD PTR n$[rbp]
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR [rax+18464]
	call	_lrotl
	mov	DWORD PTR k$[rbp], eax
; Line 2136
	movsxd	rax, DWORD PTR n$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__bmask@@3QBIB
	mov	eax, DWORD PTR [rcx+rax*4]
	not	eax
	mov	ecx, DWORD PTR k$[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18464], eax
; Line 2137
	movsxd	rax, DWORD PTR n$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__bmask@@3QBIB
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	ecx, DWORD PTR k$[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR k$[rbp], eax
; Line 2138
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	mov	eax, DWORD PTR [rax+18468]
	sub	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18468], eax
; Line 2139
	movsxd	rax, DWORD PTR n$[rbp]
	lea	rcx, OFFSET FLAT:?stbi__jbias@@3QBHB
	mov	edx, DWORD PTR sgn$[rbp]
	dec	edx
	mov	eax, DWORD PTR [rcx+rax*4]
	and	eax, edx
	mov	ecx, DWORD PTR k$[rbp]
	add	ecx, eax
	mov	eax, ecx
; Line 2140
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__extend_receive@@YAHPEAUstbi__jpeg@@H@Z ENDP	; stbi__extend_receive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z
_TEXT	SEGMENT
temp$ = 4
c$ = 36
k$ = 68
s$1 = 100
tv253 = 312
tv241 = 312
tv232 = 312
tv211 = 312
j$ = 352
h$ = 360
?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z PROC ; stbi__jpeg_huff_decode, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2075
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2079
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18468], 16
	jge	SHORT $LN5@stbi__jpeg
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ; stbi__grow_buffer_unsafe
$LN5@stbi__jpeg:
; Line 2083
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shr	eax, 23
	and	eax, 511				; 000001ffH
	mov	DWORD PTR c$[rbp], eax
; Line 2084
	movsxd	rax, DWORD PTR c$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	DWORD PTR k$[rbp], eax
; Line 2085
	cmp	DWORD PTR k$[rbp], 255			; 000000ffH
	jge	$LN6@stbi__jpeg
; Line 2086
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1280]
	mov	DWORD PTR s$1[rbp], eax
; Line 2087
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18468]
	cmp	DWORD PTR s$1[rbp], eax
	jle	SHORT $LN7@stbi__jpeg
; Line 2088
	mov	eax, -1
	jmp	$LN1@stbi__jpeg
$LN7@stbi__jpeg:
; Line 2089
	mov	eax, DWORD PTR s$1[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	mov	QWORD PTR tv211[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv211[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shl	eax, cl
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18464], eax
; Line 2090
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR s$1[rbp]
	mov	eax, DWORD PTR [rax+18468]
	sub	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18468], eax
; Line 2091
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1024]
	jmp	$LN1@stbi__jpeg
$LN6@stbi__jpeg:
; Line 2100
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shr	eax, 16
	mov	DWORD PTR temp$[rbp], eax
; Line 2101
	mov	DWORD PTR k$[rbp], 10
	jmp	SHORT $LN4@stbi__jpeg
$LN2@stbi__jpeg:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN4@stbi__jpeg:
; Line 2102
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+1540]
	cmp	DWORD PTR temp$[rbp], eax
	jae	SHORT $LN8@stbi__jpeg
; Line 2103
	jmp	SHORT $LN3@stbi__jpeg
$LN8@stbi__jpeg:
	jmp	SHORT $LN2@stbi__jpeg
$LN3@stbi__jpeg:
; Line 2104
	cmp	DWORD PTR k$[rbp], 17
	jne	SHORT $LN9@stbi__jpeg
; Line 2106
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18468]
	sub	eax, 16
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18468], eax
; Line 2107
	mov	eax, -1
	jmp	$LN1@stbi__jpeg
$LN9@stbi__jpeg:
; Line 2110
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18468]
	cmp	DWORD PTR k$[rbp], eax
	jle	SHORT $LN10@stbi__jpeg
; Line 2111
	mov	eax, -1
	jmp	$LN1@stbi__jpeg
$LN10@stbi__jpeg:
; Line 2114
	mov	eax, 32					; 00000020H
	sub	eax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	mov	QWORD PTR tv232[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv232[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shr	eax, cl
	movsxd	rcx, DWORD PTR k$[rbp]
	lea	rdx, OFFSET FLAT:?stbi__bmask@@3QBIB
	and	eax, DWORD PTR [rdx+rcx*4]
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR h$[rbp]
	add	eax, DWORD PTR [rdx+rcx*4+1612]
	mov	DWORD PTR c$[rbp], eax
; Line 2115
	movsxd	rax, DWORD PTR c$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1280]
	mov	ecx, 32					; 00000020H
	sub	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	QWORD PTR tv241[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv241[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shr	eax, cl
	movsxd	rcx, DWORD PTR c$[rbp]
	mov	rdx, QWORD PTR h$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx+1280]
	lea	rdx, OFFSET FLAT:?stbi__bmask@@3QBIB
	and	eax, DWORD PTR [rdx+rcx*4]
	movsxd	rcx, DWORD PTR c$[rbp]
	mov	rdx, QWORD PTR h$[rbp]
	movzx	ecx, WORD PTR [rdx+rcx*2+512]
	cmp	eax, ecx
	je	SHORT $LN12@stbi__jpeg
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z@4JA
	add	eax, 40					; 00000028H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1KE@JGKPJEBO@?$AA?$CI?$AA?$CI?$AA?$CI?$AAj?$AA?9?$AA?$DO?$AAc?$AAo?$AAd?$AAe?$AA_?$AAb?$AAu?$AAf?$AAf@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN12@stbi__jpeg:
; Line 2118
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR k$[rbp]
	mov	eax, DWORD PTR [rax+18468]
	sub	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18468], eax
; Line 2119
	mov	eax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	mov	QWORD PTR tv253[rbp], rcx
	movzx	ecx, al
	mov	rax, QWORD PTR tv253[rbp]
	mov	eax, DWORD PTR [rax+18464]
	shl	eax, cl
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18464], eax
; Line 2120
	movsxd	rax, DWORD PTR c$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1024]
$LN1@stbi__jpeg:
; Line 2121
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_huff_decode@@YAHPEAUstbi__jpeg@@PEAUstbi__huffman@@@Z ENDP ; stbi__jpeg_huff_decode
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z
_TEXT	SEGMENT
b$1 = 4
c$2 = 36
tv70 = 244
j$ = 288
?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z PROC	; stbi__grow_buffer_unsafe, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2053
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
$LN4@stbi__grow:
; Line 2055
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18476], 0
	je	SHORT $LN10@stbi__grow
	mov	DWORD PTR tv70[rbp], 0
	jmp	SHORT $LN11@stbi__grow
$LN10@stbi__grow:
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tv70[rbp], eax
$LN11@stbi__grow:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR b$1[rbp], eax
; Line 2056
	cmp	DWORD PTR b$1[rbp], 255			; 000000ffH
	jne	SHORT $LN7@stbi__grow
; Line 2057
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR c$2[rbp], eax
$LN5@stbi__grow:
; Line 2058
	cmp	DWORD PTR c$2[rbp], 255			; 000000ffH
	jne	SHORT $LN6@stbi__grow
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR c$2[rbp], eax
	jmp	SHORT $LN5@stbi__grow
$LN6@stbi__grow:
; Line 2059
	cmp	DWORD PTR c$2[rbp], 0
	je	SHORT $LN8@stbi__grow
; Line 2060
	mov	rax, QWORD PTR j$[rbp]
	movzx	ecx, BYTE PTR c$2[rbp]
	mov	BYTE PTR [rax+18472], cl
; Line 2061
	mov	rax, QWORD PTR j$[rbp]
	mov	DWORD PTR [rax+18476], 1
; Line 2062
	jmp	SHORT $LN1@stbi__grow
$LN8@stbi__grow:
$LN7@stbi__grow:
; Line 2065
	mov	rax, QWORD PTR j$[rbp]
	mov	ecx, 24
	sub	ecx, DWORD PTR [rax+18468]
	mov	eax, ecx
	movzx	ecx, al
	mov	eax, DWORD PTR b$1[rbp]
	shl	eax, cl
	mov	rcx, QWORD PTR j$[rbp]
	mov	ecx, DWORD PTR [rcx+18464]
	or	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18464], eax
; Line 2066
	mov	rax, QWORD PTR j$[rbp]
	mov	eax, DWORD PTR [rax+18468]
	add	eax, 8
	mov	rcx, QWORD PTR j$[rbp]
	mov	DWORD PTR [rcx+18468], eax
; Line 2067
	mov	rax, QWORD PTR j$[rbp]
	cmp	DWORD PTR [rax+18468], 24
	jle	$LN4@stbi__grow
$LN1@stbi__grow:
; Line 2068
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__grow_buffer_unsafe@@YAXPEAUstbi__jpeg@@@Z ENDP	; stbi__grow_buffer_unsafe
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__build_fast_ac@@YAXPEAFPEAUstbi__huffman@@@Z
_TEXT	SEGMENT
i$ = 4
fast$1 = 36
rs$2 = 68
run$3 = 100
magbits$4 = 132
len$5 = 164
k$6 = 196
m$7 = 228
tv178 = 436
tv174 = 436
fast_ac$ = 480
h$ = 488
?stbi__build_fast_ac@@YAXPEAFPEAUstbi__huffman@@@Z PROC	; stbi__build_fast_ac, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 2028
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 2030
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__buil
$LN2@stbi__buil:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__buil:
	cmp	DWORD PTR i$[rbp], 512			; 00000200H
	jge	$LN3@stbi__buil
; Line 2031
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR fast$1[rbp], al
; Line 2032
	movsxd	rax, DWORD PTR i$[rbp]
	xor	ecx, ecx
	mov	rdx, QWORD PTR fast_ac$[rbp]
	mov	WORD PTR [rdx+rax*2], cx
; Line 2033
	movzx	eax, BYTE PTR fast$1[rbp]
	cmp	eax, 255				; 000000ffH
	jge	$LN5@stbi__buil
; Line 2034
	movzx	eax, BYTE PTR fast$1[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1024]
	mov	DWORD PTR rs$2[rbp], eax
; Line 2035
	mov	eax, DWORD PTR rs$2[rbp]
	sar	eax, 4
	and	eax, 15
	mov	DWORD PTR run$3[rbp], eax
; Line 2036
	mov	eax, DWORD PTR rs$2[rbp]
	and	eax, 15
	mov	DWORD PTR magbits$4[rbp], eax
; Line 2037
	movzx	eax, BYTE PTR fast$1[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1280]
	mov	DWORD PTR len$5[rbp], eax
; Line 2039
	cmp	DWORD PTR magbits$4[rbp], 0
	je	$LN6@stbi__buil
	mov	eax, DWORD PTR magbits$4[rbp]
	mov	ecx, DWORD PTR len$5[rbp]
	add	ecx, eax
	mov	eax, ecx
	cmp	eax, 9
	jg	$LN6@stbi__buil
; Line 2041
	mov	eax, DWORD PTR len$5[rbp]
	movzx	ecx, al
	mov	eax, DWORD PTR i$[rbp]
	shl	eax, cl
	and	eax, 511				; 000001ffH
	mov	ecx, 9
	sub	ecx, DWORD PTR magbits$4[rbp]
	sar	eax, cl
	mov	DWORD PTR k$6[rbp], eax
; Line 2042
	mov	eax, DWORD PTR magbits$4[rbp]
	dec	eax
	mov	ecx, 1
	mov	DWORD PTR tv174[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv174[rbp]
	shl	eax, cl
	mov	DWORD PTR m$7[rbp], eax
; Line 2043
	mov	eax, DWORD PTR m$7[rbp]
	cmp	DWORD PTR k$6[rbp], eax
	jge	SHORT $LN7@stbi__buil
	mov	eax, DWORD PTR magbits$4[rbp]
	mov	ecx, -1					; ffffffffH
	mov	DWORD PTR tv178[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv178[rbp]
	shl	eax, cl
	mov	ecx, DWORD PTR k$6[rbp]
	lea	eax, DWORD PTR [rcx+rax+1]
	mov	DWORD PTR k$6[rbp], eax
$LN7@stbi__buil:
; Line 2045
	cmp	DWORD PTR k$6[rbp], -128		; ffffffffffffff80H
	jl	SHORT $LN8@stbi__buil
	cmp	DWORD PTR k$6[rbp], 127			; 0000007fH
	jg	SHORT $LN8@stbi__buil
; Line 2046
	imul	eax, DWORD PTR k$6[rbp], 256		; 00000100H
	imul	ecx, DWORD PTR run$3[rbp], 16
	add	eax, ecx
	mov	ecx, DWORD PTR magbits$4[rbp]
	mov	edx, DWORD PTR len$5[rbp]
	add	edx, ecx
	mov	ecx, edx
	add	eax, ecx
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR fast_ac$[rbp]
	mov	WORD PTR [rdx+rcx*2], ax
$LN8@stbi__buil:
$LN6@stbi__buil:
$LN5@stbi__buil:
; Line 2049
	jmp	$LN2@stbi__buil
$LN3@stbi__buil:
; Line 2050
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
?stbi__build_fast_ac@@YAXPEAFPEAUstbi__huffman@@@Z ENDP	; stbi__build_fast_ac
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z
_TEXT	SEGMENT
i$ = 4
j$ = 36
k$ = 68
code$ = 100
s$1 = 132
c$2 = 164
m$3 = 196
tv236 = 404
tv140 = 404
h$ = 448
count$ = 456
?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z PROC	; stbi__build_huffman, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1984
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 456				; 000001c8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1985
	mov	DWORD PTR k$[rbp], 0
; Line 1988
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__buil
$LN2@stbi__buil:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__buil:
	cmp	DWORD PTR i$[rbp], 16
	jge	SHORT $LN3@stbi__buil
; Line 1989
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN7@stbi__buil
$LN5@stbi__buil:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN7@stbi__buil:
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR count$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4]
	cmp	DWORD PTR j$[rbp], eax
	jge	SHORT $LN6@stbi__buil
; Line 1990
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	movsxd	rcx, DWORD PTR k$[rbp]
	mov	rdx, QWORD PTR h$[rbp]
	mov	BYTE PTR [rdx+rcx+1280], al
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
	jmp	SHORT $LN5@stbi__buil
$LN6@stbi__buil:
	jmp	SHORT $LN2@stbi__buil
$LN3@stbi__buil:
; Line 1991
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	mov	BYTE PTR [rcx+rax+1280], 0
; Line 1994
	mov	DWORD PTR code$[rbp], 0
; Line 1995
	mov	DWORD PTR k$[rbp], 0
; Line 1996
	mov	DWORD PTR j$[rbp], 1
	jmp	SHORT $LN10@stbi__buil
$LN8@stbi__buil:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN10@stbi__buil:
	cmp	DWORD PTR j$[rbp], 16
	jg	$LN9@stbi__buil
; Line 1998
	mov	eax, DWORD PTR code$[rbp]
	mov	ecx, DWORD PTR k$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	movsxd	rcx, DWORD PTR j$[rbp]
	mov	rdx, QWORD PTR h$[rbp]
	mov	DWORD PTR [rdx+rcx*4+1612], eax
; Line 1999
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1280]
	cmp	eax, DWORD PTR j$[rbp]
	jne	SHORT $LN19@stbi__buil
$LN11@stbi__buil:
; Line 2000
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1280]
	cmp	eax, DWORD PTR j$[rbp]
	jne	SHORT $LN12@stbi__buil
; Line 2001
	movzx	eax, WORD PTR code$[rbp]
	mov	WORD PTR tv140[rbp], ax
	mov	eax, DWORD PTR code$[rbp]
	inc	eax
	mov	DWORD PTR code$[rbp], eax
	movsxd	rax, DWORD PTR k$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	edx, WORD PTR tv140[rbp]
	mov	WORD PTR [rcx+rax*2+512], dx
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
	jmp	SHORT $LN11@stbi__buil
$LN12@stbi__buil:
; Line 2002
	mov	eax, DWORD PTR code$[rbp]
	dec	eax
	mov	ecx, DWORD PTR j$[rbp]
	mov	edx, 1
	shl	edx, cl
	mov	ecx, edx
	cmp	eax, ecx
	jb	SHORT $LN20@stbi__buil
	lea	rcx, OFFSET FLAT:??_C@_0BB@FOKGPEKG@bad?5code?5lengths@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	$LN1@stbi__buil
$LN20@stbi__buil:
$LN19@stbi__buil:
; Line 2005
	mov	eax, 16
	sub	eax, DWORD PTR j$[rbp]
	movzx	ecx, al
	mov	eax, DWORD PTR code$[rbp]
	shl	eax, cl
	movsxd	rcx, DWORD PTR j$[rbp]
	mov	rdx, QWORD PTR h$[rbp]
	mov	DWORD PTR [rdx+rcx*4+1540], eax
; Line 2006
	mov	eax, DWORD PTR code$[rbp]
	shl	eax, 1
	mov	DWORD PTR code$[rbp], eax
; Line 2007
	jmp	$LN8@stbi__buil
$LN9@stbi__buil:
; Line 2008
	movsxd	rax, DWORD PTR j$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	mov	DWORD PTR [rcx+rax*4+1540], -1		; ffffffffH
; Line 2011
	mov	rax, QWORD PTR h$[rbp]
	mov	r8d, 512				; 00000200H
	mov	edx, 255				; 000000ffH
	mov	rcx, rax
	call	memset
; Line 2012
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN15@stbi__buil
$LN13@stbi__buil:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN15@stbi__buil:
	mov	eax, DWORD PTR k$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN14@stbi__buil
; Line 2013
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, BYTE PTR [rcx+rax+1280]
	mov	DWORD PTR s$1[rbp], eax
; Line 2014
	cmp	DWORD PTR s$1[rbp], 9
	jg	$LN21@stbi__buil
; Line 2015
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR h$[rbp]
	movzx	eax, WORD PTR [rcx+rax*2+512]
	mov	ecx, 9
	sub	ecx, DWORD PTR s$1[rbp]
	shl	eax, cl
	mov	DWORD PTR c$2[rbp], eax
; Line 2016
	mov	eax, 9
	sub	eax, DWORD PTR s$1[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv236[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv236[rbp]
	shl	eax, cl
	mov	DWORD PTR m$3[rbp], eax
; Line 2017
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN18@stbi__buil
$LN16@stbi__buil:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN18@stbi__buil:
	mov	eax, DWORD PTR m$3[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jge	SHORT $LN17@stbi__buil
; Line 2018
	mov	eax, DWORD PTR j$[rbp]
	mov	ecx, DWORD PTR c$2[rbp]
	add	ecx, eax
	mov	eax, ecx
	cdqe
	mov	rcx, QWORD PTR h$[rbp]
	movzx	edx, BYTE PTR i$[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 2019
	jmp	SHORT $LN16@stbi__buil
$LN17@stbi__buil:
$LN21@stbi__buil:
; Line 2021
	jmp	$LN13@stbi__buil
$LN14@stbi__buil:
; Line 2022
	mov	eax, 1
$LN1@stbi__buil:
; Line 2023
	lea	rsp, QWORD PTR [rbp+424]
	pop	rdi
	pop	rbp
	ret	0
?stbi__build_huffman@@YAHPEAUstbi__huffman@@PEAH@Z ENDP	; stbi__build_huffman
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__convert_format16@@YAPEAGPEAGHHII@Z
_TEXT	SEGMENT
i$ = 4
j$ = 36
good$ = 72
src$1 = 104
dest$2 = 136
tv359 = 340
tv325 = 340
tv305 = 340
tv283 = 340
tv263 = 340
tv131 = 340
tv83 = 340
data$ = 384
img_n$ = 392
req_comp$ = 400
x$ = 408
y$ = 416
?stbi__convert_format16@@YAPEAGPEAGHHII@Z PROC		; stbi__convert_format16, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1793
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1797
	mov	eax, DWORD PTR img_n$[rbp]
	cmp	DWORD PTR req_comp$[rbp], eax
	jne	SHORT $LN43@stbi__conv
	mov	rax, QWORD PTR data$[rbp]
	jmp	$LN1@stbi__conv
$LN43@stbi__conv:
; Line 1798
	cmp	DWORD PTR req_comp$[rbp], 1
	jl	SHORT $LN59@stbi__conv
	cmp	DWORD PTR req_comp$[rbp], 4
	jle	SHORT $LN60@stbi__conv
$LN59@stbi__conv:
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__convert_format16@@YAPEAGPEAGHHII@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DO@MABJBNAJ@?$AAr?$AAe?$AAq?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN60@stbi__conv:
; Line 1800
	mov	eax, DWORD PTR req_comp$[rbp]
	imul	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR y$[rbp]
	shl	eax, 1
	mov	eax, eax
	mov	ecx, eax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR good$[rbp], rax
; Line 1801
	cmp	QWORD PTR good$[rbp], 0
	jne	SHORT $LN44@stbi__conv
; Line 1802
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
; Line 1803
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN61@stbi__conv
	mov	DWORD PTR tv83[rbp], 0
	jmp	SHORT $LN62@stbi__conv
$LN61@stbi__conv:
	mov	DWORD PTR tv83[rbp], 0
$LN62@stbi__conv:
	movsxd	rax, DWORD PTR tv83[rbp]
	jmp	$LN1@stbi__conv
$LN44@stbi__conv:
; Line 1806
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN4@stbi__conv
$LN2@stbi__conv:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN4@stbi__conv:
	mov	eax, DWORD PTR y$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jge	$LN3@stbi__conv
; Line 1807
	mov	eax, DWORD PTR j$[rbp]
	imul	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR img_n$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR data$[rbp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR src$1[rbp], rax
; Line 1808
	mov	eax, DWORD PTR j$[rbp]
	imul	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR req_comp$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR good$[rbp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR dest$2[rbp], rax
; Line 1814
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	ecx, DWORD PTR img_n$[rbp]
	lea	eax, DWORD PTR [rax+rcx*8]
	mov	DWORD PTR tv131[rbp], eax
	mov	eax, DWORD PTR tv131[rbp]
	sub	eax, 10
	mov	DWORD PTR tv131[rbp], eax
	cmp	DWORD PTR tv131[rbp], 25
	ja	$LN57@stbi__conv
	movsxd	rax, DWORD PTR tv131[rbp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN66@stbi__conv[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN45@stbi__conv:
; Line 1815
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN9@stbi__conv
$LN7@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 2
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 4
	mov	QWORD PTR dest$2[rbp], rax
$LN9@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN8@stbi__conv
	mov	eax, 2
	imul	rax, rax, 0
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 1
	mov	ecx, 65535				; 0000ffffH
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	WORD PTR [rdx+rax], cx
	jmp	SHORT $LN7@stbi__conv
$LN8@stbi__conv:
	jmp	$LN5@stbi__conv
$LN46@stbi__conv:
; Line 1816
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN12@stbi__conv
$LN10@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 2
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 6
	mov	QWORD PTR dest$2[rbp], rax
$LN12@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN11@stbi__conv
	mov	eax, 2
	imul	rax, rax, 0
	mov	ecx, 2
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 2
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 1
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	jmp	$LN10@stbi__conv
$LN11@stbi__conv:
	jmp	$LN5@stbi__conv
$LN47@stbi__conv:
; Line 1817
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN15@stbi__conv
$LN13@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 2
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 8
	mov	QWORD PTR dest$2[rbp], rax
$LN15@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	$LN14@stbi__conv
	mov	eax, 2
	imul	rax, rax, 0
	mov	ecx, 2
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 2
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 1
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 3
	mov	ecx, 65535				; 0000ffffH
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	WORD PTR [rdx+rax], cx
	jmp	$LN13@stbi__conv
$LN14@stbi__conv:
	jmp	$LN5@stbi__conv
$LN48@stbi__conv:
; Line 1818
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN18@stbi__conv
$LN16@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 4
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 2
	mov	QWORD PTR dest$2[rbp], rax
$LN18@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN17@stbi__conv
	mov	eax, 2
	imul	rax, rax, 0
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	jmp	SHORT $LN16@stbi__conv
$LN17@stbi__conv:
	jmp	$LN5@stbi__conv
$LN49@stbi__conv:
; Line 1819
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN21@stbi__conv
$LN19@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 4
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 6
	mov	QWORD PTR dest$2[rbp], rax
$LN21@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN20@stbi__conv
	mov	eax, 2
	imul	rax, rax, 0
	mov	ecx, 2
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 2
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 1
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	jmp	$LN19@stbi__conv
$LN20@stbi__conv:
	jmp	$LN5@stbi__conv
$LN50@stbi__conv:
; Line 1820
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN24@stbi__conv
$LN22@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 4
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 8
	mov	QWORD PTR dest$2[rbp], rax
$LN24@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	$LN23@stbi__conv
	mov	eax, 2
	imul	rax, rax, 0
	mov	ecx, 2
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 2
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 1
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 1
	mov	ecx, 2
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	jmp	$LN22@stbi__conv
$LN23@stbi__conv:
	jmp	$LN5@stbi__conv
$LN51@stbi__conv:
; Line 1821
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN27@stbi__conv
$LN25@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 6
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 8
	mov	QWORD PTR dest$2[rbp], rax
$LN27@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	$LN26@stbi__conv
	mov	eax, 2
	imul	rax, rax, 0
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 1
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 2
	mov	ecx, 2
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 3
	mov	ecx, 65535				; 0000ffffH
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	WORD PTR [rdx+rax], cx
	jmp	$LN25@stbi__conv
$LN26@stbi__conv:
	jmp	$LN5@stbi__conv
$LN52@stbi__conv:
; Line 1822
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN30@stbi__conv
$LN28@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 6
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 2
	mov	QWORD PTR dest$2[rbp], rax
$LN30@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN29@stbi__conv
	mov	eax, 2
	imul	rax, rax, 2
	mov	rcx, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR src$1[rbp]
	movzx	ecx, WORD PTR [rdx+rcx]
	mov	edx, 2
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR src$1[rbp]
	movzx	edx, WORD PTR [r8+rdx]
	mov	DWORD PTR tv263[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv263[rbp]
	mov	ecx, eax
	call	?stbi__compute_y_16@@YAGHHH@Z		; stbi__compute_y_16
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	WORD PTR [rdx+rcx], ax
	jmp	$LN28@stbi__conv
$LN29@stbi__conv:
	jmp	$LN5@stbi__conv
$LN53@stbi__conv:
; Line 1823
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN33@stbi__conv
$LN31@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 6
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 4
	mov	QWORD PTR dest$2[rbp], rax
$LN33@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN32@stbi__conv
	mov	eax, 2
	imul	rax, rax, 2
	mov	rcx, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR src$1[rbp]
	movzx	ecx, WORD PTR [rdx+rcx]
	mov	edx, 2
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR src$1[rbp]
	movzx	edx, WORD PTR [r8+rdx]
	mov	DWORD PTR tv283[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv283[rbp]
	mov	ecx, eax
	call	?stbi__compute_y_16@@YAGHHH@Z		; stbi__compute_y_16
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 1
	mov	ecx, 65535				; 0000ffffH
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	WORD PTR [rdx+rax], cx
	jmp	$LN31@stbi__conv
$LN32@stbi__conv:
	jmp	$LN5@stbi__conv
$LN54@stbi__conv:
; Line 1824
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN36@stbi__conv
$LN34@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 8
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 2
	mov	QWORD PTR dest$2[rbp], rax
$LN36@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN35@stbi__conv
	mov	eax, 2
	imul	rax, rax, 2
	mov	rcx, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR src$1[rbp]
	movzx	ecx, WORD PTR [rdx+rcx]
	mov	edx, 2
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR src$1[rbp]
	movzx	edx, WORD PTR [r8+rdx]
	mov	DWORD PTR tv305[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv305[rbp]
	mov	ecx, eax
	call	?stbi__compute_y_16@@YAGHHH@Z		; stbi__compute_y_16
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	WORD PTR [rdx+rcx], ax
	jmp	$LN34@stbi__conv
$LN35@stbi__conv:
	jmp	$LN5@stbi__conv
$LN55@stbi__conv:
; Line 1825
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN39@stbi__conv
$LN37@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 8
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 4
	mov	QWORD PTR dest$2[rbp], rax
$LN39@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	$LN38@stbi__conv
	mov	eax, 2
	imul	rax, rax, 2
	mov	rcx, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR src$1[rbp]
	movzx	ecx, WORD PTR [rdx+rcx]
	mov	edx, 2
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR src$1[rbp]
	movzx	edx, WORD PTR [r8+rdx]
	mov	DWORD PTR tv325[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv325[rbp]
	mov	ecx, eax
	call	?stbi__compute_y_16@@YAGHHH@Z		; stbi__compute_y_16
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 3
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	jmp	$LN37@stbi__conv
$LN38@stbi__conv:
	jmp	$LN5@stbi__conv
$LN56@stbi__conv:
; Line 1826
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN42@stbi__conv
$LN40@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 8
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 6
	mov	QWORD PTR dest$2[rbp], rax
$LN42@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN41@stbi__conv
	mov	eax, 2
	imul	rax, rax, 0
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 1
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	mov	eax, 2
	imul	rax, rax, 2
	mov	ecx, 2
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, WORD PTR [r8+rax]
	mov	WORD PTR [rdx+rcx], ax
	jmp	$LN40@stbi__conv
$LN41@stbi__conv:
	jmp	SHORT $LN5@stbi__conv
$LN57@stbi__conv:
; Line 1827
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN63@stbi__conv
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__convert_format16@@YAPEAGPEAGHHII@Z@4JA
	add	eax, 34					; 00000022H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN63@stbi__conv:
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
	mov	rcx, QWORD PTR good$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_0M@MHDBFHD@unsupported@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN64@stbi__conv
	mov	DWORD PTR tv359[rbp], 0
	jmp	SHORT $LN65@stbi__conv
$LN64@stbi__conv:
	mov	DWORD PTR tv359[rbp], 0
$LN65@stbi__conv:
	movsxd	rax, DWORD PTR tv359[rbp]
	jmp	SHORT $LN1@stbi__conv
$LN5@stbi__conv:
; Line 1830
	jmp	$LN2@stbi__conv
$LN3@stbi__conv:
; Line 1832
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
; Line 1833
	mov	rax, QWORD PTR good$[rbp]
$LN1@stbi__conv:
; Line 1834
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
$LN66@stbi__conv:
	DD	$LN45@stbi__conv
	DD	$LN46@stbi__conv
	DD	$LN47@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN48@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN49@stbi__conv
	DD	$LN50@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN52@stbi__conv
	DD	$LN53@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN51@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN54@stbi__conv
	DD	$LN55@stbi__conv
	DD	$LN56@stbi__conv
?stbi__convert_format16@@YAPEAGPEAGHHII@Z ENDP		; stbi__convert_format16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__compute_y_16@@YAGHHH@Z
_TEXT	SEGMENT
r$ = 224
g$ = 232
b$ = 240
?stbi__compute_y_16@@YAGHHH@Z PROC			; stbi__compute_y_16, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1784
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1785
	imul	eax, DWORD PTR r$[rbp], 77		; 0000004dH
	imul	ecx, DWORD PTR g$[rbp], 150		; 00000096H
	add	eax, ecx
	imul	ecx, DWORD PTR b$[rbp], 29
	add	eax, ecx
	sar	eax, 8
; Line 1786
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__compute_y_16@@YAGHHH@Z ENDP			; stbi__compute_y_16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__convert_format@@YAPEAEPEAEHHII@Z
_TEXT	SEGMENT
i$ = 4
j$ = 36
good$ = 72
src$1 = 104
dest$2 = 136
tv356 = 340
tv322 = 340
tv302 = 340
tv280 = 340
tv260 = 340
tv128 = 340
tv82 = 340
data$ = 384
img_n$ = 392
req_comp$ = 400
x$ = 408
y$ = 416
?stbi__convert_format@@YAPEAEPEAEHHII@Z PROC		; stbi__convert_format, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1736
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1740
	mov	eax, DWORD PTR img_n$[rbp]
	cmp	DWORD PTR req_comp$[rbp], eax
	jne	SHORT $LN43@stbi__conv
	mov	rax, QWORD PTR data$[rbp]
	jmp	$LN1@stbi__conv
$LN43@stbi__conv:
; Line 1741
	cmp	DWORD PTR req_comp$[rbp], 1
	jl	SHORT $LN59@stbi__conv
	cmp	DWORD PTR req_comp$[rbp], 4
	jle	SHORT $LN60@stbi__conv
$LN59@stbi__conv:
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__convert_format@@YAPEAEPEAEHHII@Z@4JA
	add	eax, 5
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1DO@MABJBNAJ@?$AAr?$AAe?$AAq?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DO?$AA?$DN?$AA?5?$AA1?$AA?5?$AA?$CG@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN60@stbi__conv:
; Line 1743
	xor	r9d, r9d
	mov	r8d, DWORD PTR y$[rbp]
	mov	edx, DWORD PTR x$[rbp]
	mov	ecx, DWORD PTR req_comp$[rbp]
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	mov	QWORD PTR good$[rbp], rax
; Line 1744
	cmp	QWORD PTR good$[rbp], 0
	jne	SHORT $LN44@stbi__conv
; Line 1745
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
; Line 1746
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN61@stbi__conv
	mov	DWORD PTR tv82[rbp], 0
	jmp	SHORT $LN62@stbi__conv
$LN61@stbi__conv:
	mov	DWORD PTR tv82[rbp], 0
$LN62@stbi__conv:
	movsxd	rax, DWORD PTR tv82[rbp]
	jmp	$LN1@stbi__conv
$LN44@stbi__conv:
; Line 1749
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN4@stbi__conv
$LN2@stbi__conv:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN4@stbi__conv:
	mov	eax, DWORD PTR y$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jge	$LN3@stbi__conv
; Line 1750
	mov	eax, DWORD PTR j$[rbp]
	imul	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR img_n$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR data$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR src$1[rbp], rax
; Line 1751
	mov	eax, DWORD PTR j$[rbp]
	imul	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR req_comp$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR good$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR dest$2[rbp], rax
; Line 1757
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	ecx, DWORD PTR img_n$[rbp]
	lea	eax, DWORD PTR [rax+rcx*8]
	mov	DWORD PTR tv128[rbp], eax
	mov	eax, DWORD PTR tv128[rbp]
	sub	eax, 10
	mov	DWORD PTR tv128[rbp], eax
	cmp	DWORD PTR tv128[rbp], 25
	ja	$LN57@stbi__conv
	movsxd	rax, DWORD PTR tv128[rbp]
	lea	rcx, OFFSET FLAT:__ImageBase
	mov	eax, DWORD PTR $LN66@stbi__conv[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN45@stbi__conv:
; Line 1758
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN9@stbi__conv
$LN7@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	inc	rax
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 2
	mov	QWORD PTR dest$2[rbp], rax
$LN9@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN8@stbi__conv
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR dest$2[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	jmp	SHORT $LN7@stbi__conv
$LN8@stbi__conv:
	jmp	$LN5@stbi__conv
$LN46@stbi__conv:
; Line 1759
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN12@stbi__conv
$LN10@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	inc	rax
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 3
	mov	QWORD PTR dest$2[rbp], rax
$LN12@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN11@stbi__conv
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN10@stbi__conv
$LN11@stbi__conv:
	jmp	$LN5@stbi__conv
$LN47@stbi__conv:
; Line 1760
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN15@stbi__conv
$LN13@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	inc	rax
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 4
	mov	QWORD PTR dest$2[rbp], rax
$LN15@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	$LN14@stbi__conv
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR dest$2[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	jmp	$LN13@stbi__conv
$LN14@stbi__conv:
	jmp	$LN5@stbi__conv
$LN48@stbi__conv:
; Line 1761
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN18@stbi__conv
$LN16@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 2
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	inc	rax
	mov	QWORD PTR dest$2[rbp], rax
$LN18@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN17@stbi__conv
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN16@stbi__conv
$LN17@stbi__conv:
	jmp	$LN5@stbi__conv
$LN49@stbi__conv:
; Line 1762
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN21@stbi__conv
$LN19@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 2
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 3
	mov	QWORD PTR dest$2[rbp], rax
$LN21@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN20@stbi__conv
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN19@stbi__conv
$LN20@stbi__conv:
	jmp	$LN5@stbi__conv
$LN50@stbi__conv:
; Line 1763
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN24@stbi__conv
$LN22@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 2
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 4
	mov	QWORD PTR dest$2[rbp], rax
$LN24@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	$LN23@stbi__conv
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR dest$2[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN22@stbi__conv
$LN23@stbi__conv:
	jmp	$LN5@stbi__conv
$LN51@stbi__conv:
; Line 1764
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN27@stbi__conv
$LN25@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 3
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 4
	mov	QWORD PTR dest$2[rbp], rax
$LN27@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	$LN26@stbi__conv
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR dest$2[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	jmp	$LN25@stbi__conv
$LN26@stbi__conv:
	jmp	$LN5@stbi__conv
$LN52@stbi__conv:
; Line 1765
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN30@stbi__conv
$LN28@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 3
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	inc	rax
	mov	QWORD PTR dest$2[rbp], rax
$LN30@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN29@stbi__conv
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR src$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	edx, 1
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR src$1[rbp]
	movzx	edx, BYTE PTR [r8+rdx]
	mov	DWORD PTR tv260[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv260[rbp]
	mov	ecx, eax
	call	?stbi__compute_y@@YAEHHH@Z		; stbi__compute_y
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN28@stbi__conv
$LN29@stbi__conv:
	jmp	$LN5@stbi__conv
$LN53@stbi__conv:
; Line 1766
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN33@stbi__conv
$LN31@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 3
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 2
	mov	QWORD PTR dest$2[rbp], rax
$LN33@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN32@stbi__conv
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR src$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	edx, 1
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR src$1[rbp]
	movzx	edx, BYTE PTR [r8+rdx]
	mov	DWORD PTR tv280[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv280[rbp]
	mov	ecx, eax
	call	?stbi__compute_y@@YAEHHH@Z		; stbi__compute_y
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR dest$2[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	jmp	$LN31@stbi__conv
$LN32@stbi__conv:
	jmp	$LN5@stbi__conv
$LN54@stbi__conv:
; Line 1767
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN36@stbi__conv
$LN34@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 4
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	inc	rax
	mov	QWORD PTR dest$2[rbp], rax
$LN36@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN35@stbi__conv
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR src$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	edx, 1
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR src$1[rbp]
	movzx	edx, BYTE PTR [r8+rdx]
	mov	DWORD PTR tv302[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv302[rbp]
	mov	ecx, eax
	call	?stbi__compute_y@@YAEHHH@Z		; stbi__compute_y
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN34@stbi__conv
$LN35@stbi__conv:
	jmp	$LN5@stbi__conv
$LN55@stbi__conv:
; Line 1768
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN39@stbi__conv
$LN37@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 4
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 2
	mov	QWORD PTR dest$2[rbp], rax
$LN39@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	$LN38@stbi__conv
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR src$1[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	mov	edx, 1
	imul	rdx, rdx, 0
	mov	r8, QWORD PTR src$1[rbp]
	movzx	edx, BYTE PTR [r8+rdx]
	mov	DWORD PTR tv322[rbp], edx
	mov	r8d, eax
	mov	edx, ecx
	mov	eax, DWORD PTR tv322[rbp]
	mov	ecx, eax
	call	?stbi__compute_y@@YAEHHH@Z		; stbi__compute_y
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 3
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN37@stbi__conv
$LN38@stbi__conv:
	jmp	$LN5@stbi__conv
$LN56@stbi__conv:
; Line 1769
	mov	eax, DWORD PTR x$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN42@stbi__conv
$LN40@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR src$1[rbp]
	add	rax, 4
	mov	QWORD PTR src$1[rbp], rax
	mov	rax, QWORD PTR dest$2[rbp]
	add	rax, 3
	mov	QWORD PTR dest$2[rbp], rax
$LN42@stbi__conv:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN41@stbi__conv
	mov	eax, 1
	imul	rax, rax, 0
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 1
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR dest$2[rbp]
	mov	r8, QWORD PTR src$1[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	$LN40@stbi__conv
$LN41@stbi__conv:
	jmp	SHORT $LN5@stbi__conv
$LN57@stbi__conv:
; Line 1770
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN63@stbi__conv
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__convert_format@@YAPEAEPEAEHHII@Z@4JA
	add	eax, 34					; 00000022H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_13COJANIEC@?$AA0@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN63@stbi__conv:
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
	mov	rcx, QWORD PTR good$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_0M@MHDBFHD@unsupported@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN64@stbi__conv
	mov	DWORD PTR tv356[rbp], 0
	jmp	SHORT $LN65@stbi__conv
$LN64@stbi__conv:
	mov	DWORD PTR tv356[rbp], 0
$LN65@stbi__conv:
	movsxd	rax, DWORD PTR tv356[rbp]
	jmp	SHORT $LN1@stbi__conv
$LN5@stbi__conv:
; Line 1773
	jmp	$LN2@stbi__conv
$LN3@stbi__conv:
; Line 1775
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
; Line 1776
	mov	rax, QWORD PTR good$[rbp]
$LN1@stbi__conv:
; Line 1777
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
$LN66@stbi__conv:
	DD	$LN45@stbi__conv
	DD	$LN46@stbi__conv
	DD	$LN47@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN48@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN49@stbi__conv
	DD	$LN50@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN52@stbi__conv
	DD	$LN53@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN51@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN57@stbi__conv
	DD	$LN54@stbi__conv
	DD	$LN55@stbi__conv
	DD	$LN56@stbi__conv
?stbi__convert_format@@YAPEAEPEAEHHII@Z ENDP		; stbi__convert_format
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__compute_y@@YAEHHH@Z
_TEXT	SEGMENT
r$ = 224
g$ = 232
b$ = 240
?stbi__compute_y@@YAEHHH@Z PROC				; stbi__compute_y, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1727
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1728
	imul	eax, DWORD PTR r$[rbp], 77		; 0000004dH
	imul	ecx, DWORD PTR g$[rbp], 150		; 00000096H
	add	eax, ecx
	imul	ecx, DWORD PTR b$[rbp], 29
	add	eax, ecx
	sar	eax, 8
; Line 1729
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__compute_y@@YAEHHH@Z ENDP				; stbi__compute_y
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__get32le@@YAIPEAUstbi__context@@@Z
_TEXT	SEGMENT
z$ = 4
s$ = 256
?stbi__get32le@@YAIPEAUstbi__context@@@Z PROC		; stbi__get32le, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1703
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1704
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR z$[rbp], eax
; Line 1705
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	shl	eax, 16
	mov	ecx, DWORD PTR z$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR z$[rbp], eax
; Line 1706
	mov	eax, DWORD PTR z$[rbp]
; Line 1707
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__get32le@@YAIPEAUstbi__context@@@Z ENDP		; stbi__get32le
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__get16le@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
z$ = 4
s$ = 256
?stbi__get16le@@YAHPEAUstbi__context@@@Z PROC		; stbi__get16le, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1695
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1696
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR z$[rbp], eax
; Line 1697
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	shl	eax, 8
	mov	ecx, DWORD PTR z$[rbp]
	add	ecx, eax
	mov	eax, ecx
; Line 1698
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__get16le@@YAHPEAUstbi__context@@@Z ENDP		; stbi__get16le
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__get32be@@YAIPEAUstbi__context@@@Z
_TEXT	SEGMENT
z$ = 4
tv66 = 212
s$ = 256
?stbi__get32be@@YAIPEAUstbi__context@@@Z PROC		; stbi__get32be, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1685
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1686
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR z$[rbp], eax
; Line 1687
	mov	eax, DWORD PTR z$[rbp]
	shl	eax, 16
	mov	DWORD PTR tv66[rbp], eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	ecx, DWORD PTR tv66[rbp]
	add	ecx, eax
	mov	eax, ecx
; Line 1688
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__get32be@@YAIPEAUstbi__context@@@Z ENDP		; stbi__get32be
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__get16be@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
z$ = 4
tv67 = 212
s$ = 256
?stbi__get16be@@YAHPEAUstbi__context@@@Z PROC		; stbi__get16be, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1675
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1676
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR z$[rbp], eax
; Line 1677
	mov	eax, DWORD PTR z$[rbp]
	shl	eax, 8
	mov	DWORD PTR tv67[rbp], eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	ecx, DWORD PTR tv67[rbp]
	add	ecx, eax
	mov	eax, ecx
; Line 1678
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__get16be@@YAHPEAUstbi__context@@@Z ENDP		; stbi__get16be
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z
_TEXT	SEGMENT
blen$1 = 4
res$2 = 36
count$3 = 68
tv91 = 276
tv88 = 280
s$ = 320
buffer$ = 328
n$ = 336
?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z PROC		; stbi__getn, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1647
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1648
	mov	rax, QWORD PTR s$[rbp]
	cmp	QWORD PTR [rax+16], 0
	je	$LN2@stbi__getn
; Line 1649
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+192]
	mov	rax, QWORD PTR [rax+200]
	sub	rax, rcx
	mov	DWORD PTR blen$1[rbp], eax
; Line 1650
	mov	eax, DWORD PTR n$[rbp]
	cmp	DWORD PTR blen$1[rbp], eax
	jge	$LN3@stbi__getn
; Line 1653
	movsxd	rax, DWORD PTR blen$1[rbp]
	mov	r8, rax
	mov	rax, QWORD PTR s$[rbp]
	mov	rdx, QWORD PTR [rax+192]
	mov	rcx, QWORD PTR buffer$[rbp]
	call	memcpy
; Line 1655
	mov	rax, QWORD PTR s$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv88[rbp], rax
	mov	eax, DWORD PTR blen$1[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	movsxd	rcx, DWORD PTR blen$1[rbp]
	mov	rdx, QWORD PTR buffer$[rbp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	r8d, eax
	mov	rdx, rcx
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rax+40]
	call	QWORD PTR tv88[rbp]
	mov	DWORD PTR count$3[rbp], eax
; Line 1656
	mov	eax, DWORD PTR blen$1[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	cmp	DWORD PTR count$3[rbp], eax
	jne	SHORT $LN7@stbi__getn
	mov	DWORD PTR tv91[rbp], 1
	jmp	SHORT $LN8@stbi__getn
$LN7@stbi__getn:
	mov	DWORD PTR tv91[rbp], 0
$LN8@stbi__getn:
	mov	eax, DWORD PTR tv91[rbp]
	mov	DWORD PTR res$2[rbp], eax
; Line 1657
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+200]
	mov	QWORD PTR [rax+192], rcx
; Line 1658
	mov	eax, DWORD PTR res$2[rbp]
	jmp	SHORT $LN1@stbi__getn
$LN3@stbi__getn:
$LN2@stbi__getn:
; Line 1662
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	add	rax, QWORD PTR [rcx+192]
	mov	rcx, QWORD PTR s$[rbp]
	cmp	rax, QWORD PTR [rcx+200]
	ja	SHORT $LN4@stbi__getn
; Line 1663
	movsxd	rax, DWORD PTR n$[rbp]
	mov	r8, rax
	mov	rax, QWORD PTR s$[rbp]
	mov	rdx, QWORD PTR [rax+192]
	mov	rcx, QWORD PTR buffer$[rbp]
	call	memcpy
; Line 1664
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	add	rax, QWORD PTR [rcx+192]
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rcx+192], rax
; Line 1665
	mov	eax, 1
	jmp	SHORT $LN1@stbi__getn
; Line 1666
	jmp	SHORT $LN5@stbi__getn
$LN4@stbi__getn:
; Line 1667
	xor	eax, eax
$LN5@stbi__getn:
$LN1@stbi__getn:
; Line 1668
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z ENDP		; stbi__getn
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__skip@@YAXPEAUstbi__context@@H@Z
_TEXT	SEGMENT
blen$1 = 4
tv85 = 216
s$ = 256
n$ = 264
?stbi__skip@@YAXPEAUstbi__context@@H@Z PROC		; stbi__skip, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1625
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1626
	cmp	DWORD PTR n$[rbp], 0
	jne	SHORT $LN2@stbi__skip
	jmp	$LN1@stbi__skip
$LN2@stbi__skip:
; Line 1627
	cmp	DWORD PTR n$[rbp], 0
	jge	SHORT $LN3@stbi__skip
; Line 1628
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+200]
	mov	QWORD PTR [rax+192], rcx
; Line 1629
	jmp	$LN1@stbi__skip
$LN3@stbi__skip:
; Line 1631
	mov	rax, QWORD PTR s$[rbp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN4@stbi__skip
; Line 1632
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+192]
	mov	rax, QWORD PTR [rax+200]
	sub	rax, rcx
	mov	DWORD PTR blen$1[rbp], eax
; Line 1633
	mov	eax, DWORD PTR n$[rbp]
	cmp	DWORD PTR blen$1[rbp], eax
	jge	SHORT $LN5@stbi__skip
; Line 1634
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+200]
	mov	QWORD PTR [rax+192], rcx
; Line 1635
	mov	rax, QWORD PTR s$[rbp]
	mov	rax, QWORD PTR [rax+24]
	mov	QWORD PTR tv85[rbp], rax
	mov	eax, DWORD PTR blen$1[rbp]
	mov	ecx, DWORD PTR n$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	edx, eax
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rax+40]
	call	QWORD PTR tv85[rbp]
; Line 1636
	jmp	SHORT $LN1@stbi__skip
$LN5@stbi__skip:
$LN4@stbi__skip:
; Line 1639
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	add	rax, QWORD PTR [rcx+192]
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rcx+192], rax
$LN1@stbi__skip:
; Line 1640
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__skip@@YAXPEAUstbi__context@@H@Z ENDP		; stbi__skip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__at_eof@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
tv80 = 192
tv73 = 192
s$ = 240
?stbi__at_eof@@YAHPEAUstbi__context@@@Z PROC		; stbi__at_eof, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1609
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1610
	mov	rax, QWORD PTR s$[rbp]
	cmp	QWORD PTR [rax+16], 0
	je	SHORT $LN2@stbi__at_e
; Line 1611
	mov	rax, QWORD PTR s$[rbp]
	mov	rax, QWORD PTR [rax+32]
	mov	QWORD PTR tv73[rbp], rax
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rax+40]
	call	QWORD PTR tv73[rbp]
	test	eax, eax
	jne	SHORT $LN3@stbi__at_e
	xor	eax, eax
	jmp	SHORT $LN1@stbi__at_e
$LN3@stbi__at_e:
; Line 1614
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+48], 0
	jne	SHORT $LN4@stbi__at_e
	mov	eax, 1
	jmp	SHORT $LN1@stbi__at_e
$LN4@stbi__at_e:
$LN2@stbi__at_e:
; Line 1617
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+200]
	cmp	QWORD PTR [rax+192], rcx
	jb	SHORT $LN6@stbi__at_e
	mov	DWORD PTR tv80[rbp], 1
	jmp	SHORT $LN7@stbi__at_e
$LN6@stbi__at_e:
	mov	DWORD PTR tv80[rbp], 0
$LN7@stbi__at_e:
	mov	eax, DWORD PTR tv80[rbp]
$LN1@stbi__at_e:
; Line 1618
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__at_eof@@YAHPEAUstbi__context@@@Z ENDP		; stbi__at_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__get8@@YAEPEAUstbi__context@@@Z
_TEXT	SEGMENT
tv81 = 192
tv72 = 192
s$ = 240
?stbi__get8@@YAEPEAUstbi__context@@@Z PROC		; stbi__get8, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1595
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1596
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+200]
	cmp	QWORD PTR [rax+192], rcx
	jae	SHORT $LN2@stbi__get8
; Line 1597
	mov	rax, QWORD PTR s$[rbp]
	mov	rax, QWORD PTR [rax+192]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR tv72[rbp], al
	mov	rax, QWORD PTR s$[rbp]
	mov	rax, QWORD PTR [rax+192]
	inc	rax
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rcx+192], rax
	movzx	eax, BYTE PTR tv72[rbp]
	jmp	SHORT $LN1@stbi__get8
$LN2@stbi__get8:
; Line 1598
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+48], 0
	je	SHORT $LN3@stbi__get8
; Line 1599
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z ; stbi__refill_buffer
; Line 1600
	mov	rax, QWORD PTR s$[rbp]
	mov	rax, QWORD PTR [rax+192]
	movzx	eax, BYTE PTR [rax]
	mov	BYTE PTR tv81[rbp], al
	mov	rax, QWORD PTR s$[rbp]
	mov	rax, QWORD PTR [rax+192]
	inc	rax
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rcx+192], rax
	movzx	eax, BYTE PTR tv81[rbp]
	jmp	SHORT $LN1@stbi__get8
$LN3@stbi__get8:
; Line 1602
	xor	al, al
$LN1@stbi__get8:
; Line 1603
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__get8@@YAEPEAUstbi__context@@@Z ENDP		; stbi__get8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z
_TEXT	SEGMENT
data$ = 8
ri$4 = 40
hdr_data$5 = 88
tv129 = 292
tv89 = 292
__$ArrayPad$ = 296
s$ = 336
x$ = 344
y$ = 352
comp$ = 360
req_comp$ = 368
?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z PROC ; stbi__loadf_main, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1441
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1444
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_test@@YAHPEAUstbi__context@@@Z ; stbi__hdr_test
	test	eax, eax
	je	SHORT $LN2@stbi__load
; Line 1446
	lea	rax, QWORD PTR ri$4[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__hdr_load
	mov	QWORD PTR hdr_data$5[rbp], rax
; Line 1447
	cmp	QWORD PTR hdr_data$5[rbp], 0
	je	SHORT $LN3@stbi__load
; Line 1448
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR hdr_data$5[rbp]
	call	?stbi__float_postprocess@@YAXPEAMPEAH11H@Z ; stbi__float_postprocess
$LN3@stbi__load:
; Line 1449
	mov	rax, QWORD PTR hdr_data$5[rbp]
	jmp	$LN1@stbi__load
$LN2@stbi__load:
; Line 1452
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z ; stbi__load_and_postprocess_8bit
	mov	QWORD PTR data$[rbp], rax
; Line 1453
	cmp	QWORD PTR data$[rbp], 0
	je	SHORT $LN4@stbi__load
; Line 1454
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN6@stbi__load
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR tv89[rbp], eax
	jmp	SHORT $LN7@stbi__load
$LN6@stbi__load:
	mov	rax, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv89[rbp], eax
$LN7@stbi__load:
	mov	r9d, DWORD PTR tv89[rbp]
	mov	rax, QWORD PTR y$[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR x$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR data$[rbp]
	call	?stbi__ldr_to_hdr@@YAPEAMPEAEHHH@Z	; stbi__ldr_to_hdr
	jmp	SHORT $LN1@stbi__load
$LN4@stbi__load:
; Line 1455
	lea	rcx, OFFSET FLAT:??_C@_0BD@CBEDEJPH@unknown?5image?5type@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN8@stbi__load
	mov	DWORD PTR tv129[rbp], 0
	jmp	SHORT $LN9@stbi__load
$LN8@stbi__load:
	mov	DWORD PTR tv129[rbp], 0
$LN9@stbi__load:
	movsxd	rax, DWORD PTR tv129[rbp]
$LN1@stbi__load:
; Line 1456
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z ENDP ; stbi__loadf_main
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z
_TEXT	SEGMENT
f$ = 8
__$ArrayPad$ = 216
filename$ = 256
mode$ = 264
?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z PROC		; stbi__fopen, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1318
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1337
	mov	r8, QWORD PTR mode$[rbp]
	mov	rdx, QWORD PTR filename$[rbp]
	lea	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fopen_s
	test	eax, eax
	je	SHORT $LN2@stbi__fope
; Line 1338
	mov	QWORD PTR f$[rbp], 0
$LN2@stbi__fope:
; Line 1342
	mov	rax, QWORD PTR f$[rbp]
; Line 1343
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z ENDP		; stbi__fopen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__float_postprocess@@YAXPEAMPEAH11H@Z
_TEXT	SEGMENT
channels$1 = 4
tv81 = 212
tv77 = 212
result$ = 256
x$ = 264
y$ = 272
comp$ = 280
req_comp$ = 288
?stbi__float_postprocess@@YAXPEAMPEAH11H@Z PROC		; stbi__float_postprocess, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1295
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1296
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_set@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	cmp	DWORD PTR [rax+rcx], 0
	je	SHORT $LN4@stbi__floa
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_local@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	mov	DWORD PTR tv77[rbp], eax
	jmp	SHORT $LN5@stbi__floa
$LN4@stbi__floa:
	mov	eax, DWORD PTR ?stbi__vertically_flip_on_load_global@@3HA
	mov	DWORD PTR tv77[rbp], eax
$LN5@stbi__floa:
	cmp	DWORD PTR tv77[rbp], 0
	je	SHORT $LN2@stbi__floa
	cmp	QWORD PTR result$[rbp], 0
	je	SHORT $LN2@stbi__floa
; Line 1297
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN6@stbi__floa
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR tv81[rbp], eax
	jmp	SHORT $LN7@stbi__floa
$LN6@stbi__floa:
	mov	rax, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv81[rbp], eax
$LN7@stbi__floa:
	mov	eax, DWORD PTR tv81[rbp]
	mov	DWORD PTR channels$1[rbp], eax
; Line 1298
	movsxd	rax, DWORD PTR channels$1[rbp]
	shl	rax, 2
	mov	r9d, eax
	mov	rax, QWORD PTR y$[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR x$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR result$[rbp]
	call	?stbi__vertical_flip@@YAXPEAXHHH@Z	; stbi__vertical_flip
$LN2@stbi__floa:
; Line 1300
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__float_postprocess@@YAXPEAMPEAH11H@Z ENDP		; stbi__float_postprocess
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z
_TEXT	SEGMENT
ri$ = 8
result$ = 56
channels$4 = 84
tv136 = 292
tv133 = 292
tv83 = 292
__$ArrayPad$ = 296
s$ = 336
x$ = 344
y$ = 352
comp$ = 360
req_comp$ = 368
?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z PROC ; stbi__load_and_postprocess_16bit, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1267
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1269
	mov	DWORD PTR [rsp+48], 16
	lea	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z ; stbi__load_main
	mov	QWORD PTR result$[rbp], rax
; Line 1271
	cmp	QWORD PTR result$[rbp], 0
	jne	SHORT $LN2@stbi__load
; Line 1272
	xor	eax, eax
	jmp	$LN1@stbi__load
$LN2@stbi__load:
; Line 1275
	cmp	DWORD PTR ri$[rbp], 8
	je	SHORT $LN6@stbi__load
	cmp	DWORD PTR ri$[rbp], 16
	je	SHORT $LN6@stbi__load
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z@4JA
	add	eax, 8
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1GM@LFNCFCEN@?$AAr?$AAi?$AA?4?$AAb?$AAi?$AAt?$AAs?$AA_?$AAp?$AAe?$AAr?$AA_?$AAc?$AAh?$AAa@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@stbi__load:
; Line 1277
	cmp	DWORD PTR ri$[rbp], 16
	je	SHORT $LN3@stbi__load
; Line 1278
	cmp	DWORD PTR req_comp$[rbp], 0
	jne	SHORT $LN7@stbi__load
	mov	rax, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv83[rbp], eax
	jmp	SHORT $LN8@stbi__load
$LN7@stbi__load:
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR tv83[rbp], eax
$LN8@stbi__load:
	mov	r9d, DWORD PTR tv83[rbp]
	mov	rax, QWORD PTR y$[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR x$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR result$[rbp]
	call	?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z	; stbi__convert_8_to_16
	mov	QWORD PTR result$[rbp], rax
; Line 1279
	mov	DWORD PTR ri$[rbp], 16
$LN3@stbi__load:
; Line 1285
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_set@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	cmp	DWORD PTR [rax+rcx], 0
	je	SHORT $LN9@stbi__load
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_local@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	mov	DWORD PTR tv133[rbp], eax
	jmp	SHORT $LN10@stbi__load
$LN9@stbi__load:
	mov	eax, DWORD PTR ?stbi__vertically_flip_on_load_global@@3HA
	mov	DWORD PTR tv133[rbp], eax
$LN10@stbi__load:
	cmp	DWORD PTR tv133[rbp], 0
	je	SHORT $LN4@stbi__load
; Line 1286
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN11@stbi__load
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR tv136[rbp], eax
	jmp	SHORT $LN12@stbi__load
$LN11@stbi__load:
	mov	rax, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv136[rbp], eax
$LN12@stbi__load:
	mov	eax, DWORD PTR tv136[rbp]
	mov	DWORD PTR channels$4[rbp], eax
; Line 1287
	movsxd	rax, DWORD PTR channels$4[rbp]
	shl	rax, 1
	mov	r9d, eax
	mov	rax, QWORD PTR y$[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR x$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR result$[rbp]
	call	?stbi__vertical_flip@@YAXPEAXHHH@Z	; stbi__vertical_flip
$LN4@stbi__load:
; Line 1290
	mov	rax, QWORD PTR result$[rbp]
$LN1@stbi__load:
; Line 1291
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z ENDP ; stbi__load_and_postprocess_16bit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z
_TEXT	SEGMENT
ri$ = 8
result$ = 56
channels$4 = 84
tv136 = 292
tv133 = 292
tv83 = 292
__$ArrayPad$ = 296
s$ = 336
x$ = 344
y$ = 352
comp$ = 360
req_comp$ = 368
?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z PROC ; stbi__load_and_postprocess_8bit, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1241
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 30
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1243
	mov	DWORD PTR [rsp+48], 8
	lea	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z ; stbi__load_main
	mov	QWORD PTR result$[rbp], rax
; Line 1245
	cmp	QWORD PTR result$[rbp], 0
	jne	SHORT $LN2@stbi__load
; Line 1246
	xor	eax, eax
	jmp	$LN1@stbi__load
$LN2@stbi__load:
; Line 1249
	cmp	DWORD PTR ri$[rbp], 8
	je	SHORT $LN6@stbi__load
	cmp	DWORD PTR ri$[rbp], 16
	je	SHORT $LN6@stbi__load
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z@4JA
	add	eax, 8
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1GM@LFNCFCEN@?$AAr?$AAi?$AA?4?$AAb?$AAi?$AAt?$AAs?$AA_?$AAp?$AAe?$AAr?$AA_?$AAc?$AAh?$AAa@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN6@stbi__load:
; Line 1251
	cmp	DWORD PTR ri$[rbp], 8
	je	SHORT $LN3@stbi__load
; Line 1252
	cmp	DWORD PTR req_comp$[rbp], 0
	jne	SHORT $LN7@stbi__load
	mov	rax, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv83[rbp], eax
	jmp	SHORT $LN8@stbi__load
$LN7@stbi__load:
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR tv83[rbp], eax
$LN8@stbi__load:
	mov	r9d, DWORD PTR tv83[rbp]
	mov	rax, QWORD PTR y$[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR x$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR result$[rbp]
	call	?stbi__convert_16_to_8@@YAPEAEPEAGHHH@Z	; stbi__convert_16_to_8
	mov	QWORD PTR result$[rbp], rax
; Line 1253
	mov	DWORD PTR ri$[rbp], 8
$LN3@stbi__load:
; Line 1258
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_set@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	cmp	DWORD PTR [rax+rcx], 0
	je	SHORT $LN9@stbi__load
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_local@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	mov	DWORD PTR tv133[rbp], eax
	jmp	SHORT $LN10@stbi__load
$LN9@stbi__load:
	mov	eax, DWORD PTR ?stbi__vertically_flip_on_load_global@@3HA
	mov	DWORD PTR tv133[rbp], eax
$LN10@stbi__load:
	cmp	DWORD PTR tv133[rbp], 0
	je	SHORT $LN4@stbi__load
; Line 1259
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN11@stbi__load
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR tv136[rbp], eax
	jmp	SHORT $LN12@stbi__load
$LN11@stbi__load:
	mov	rax, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv136[rbp], eax
$LN12@stbi__load:
	mov	eax, DWORD PTR tv136[rbp]
	mov	DWORD PTR channels$4[rbp], eax
; Line 1260
	mov	r9d, DWORD PTR channels$4[rbp]
	mov	rax, QWORD PTR y$[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR x$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR result$[rbp]
	call	?stbi__vertical_flip@@YAXPEAXHHH@Z	; stbi__vertical_flip
$LN4@stbi__load:
; Line 1263
	mov	rax, QWORD PTR result$[rbp]
$LN1@stbi__load:
; Line 1264
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z ENDP ; stbi__load_and_postprocess_8bit
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__vertical_flip_slices@@YAXPEAXHHHH@Z
_TEXT	SEGMENT
slice$ = 4
slice_size$ = 36
bytes$ = 72
image$ = 320
w$ = 328
h$ = 336
z$ = 344
bytes_per_pixel$ = 352
?stbi__vertical_flip_slices@@YAXPEAXHHHH@Z PROC		; stbi__vertical_flip_slices, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1228
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1230
	mov	eax, DWORD PTR w$[rbp]
	imul	eax, DWORD PTR h$[rbp]
	imul	eax, DWORD PTR bytes_per_pixel$[rbp]
	mov	DWORD PTR slice_size$[rbp], eax
; Line 1232
	mov	rax, QWORD PTR image$[rbp]
	mov	QWORD PTR bytes$[rbp], rax
; Line 1233
	mov	DWORD PTR slice$[rbp], 0
	jmp	SHORT $LN4@stbi__vert
$LN2@stbi__vert:
	mov	eax, DWORD PTR slice$[rbp]
	inc	eax
	mov	DWORD PTR slice$[rbp], eax
$LN4@stbi__vert:
	mov	eax, DWORD PTR z$[rbp]
	cmp	DWORD PTR slice$[rbp], eax
	jge	SHORT $LN3@stbi__vert
; Line 1234
	mov	r9d, DWORD PTR bytes_per_pixel$[rbp]
	mov	r8d, DWORD PTR h$[rbp]
	mov	edx, DWORD PTR w$[rbp]
	mov	rcx, QWORD PTR bytes$[rbp]
	call	?stbi__vertical_flip@@YAXPEAXHHH@Z	; stbi__vertical_flip
; Line 1235
	movsxd	rax, DWORD PTR slice_size$[rbp]
	mov	rcx, QWORD PTR bytes$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR bytes$[rbp], rax
; Line 1236
	jmp	SHORT $LN2@stbi__vert
$LN3@stbi__vert:
; Line 1237
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__vertical_flip_slices@@YAXPEAXHHHH@Z ENDP		; stbi__vertical_flip_slices
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__vertical_flip@@YAXPEAXHHH@Z
_TEXT	SEGMENT
row$ = 4
bytes_per_row$ = 40
temp$ = 80
bytes$ = 2152
row0$4 = 2184
row1$5 = 2216
bytes_left$6 = 2248
bytes_copy$7 = 2280
tv80 = 3256
__$ArrayPad$ = 3264
image$ = 3312
w$ = 3320
h$ = 3328
bytes_per_pixel$ = 3336
?stbi__vertical_flip@@YAXPEAXHHH@Z PROC			; stbi__vertical_flip, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1203
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 3320				; 00000cf8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 582				; 00000246H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+3352]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1205
	movsxd	rax, DWORD PTR w$[rbp]
	movsxd	rcx, DWORD PTR bytes_per_pixel$[rbp]
	imul	rax, rcx
	mov	QWORD PTR bytes_per_row$[rbp], rax
; Line 1207
	mov	rax, QWORD PTR image$[rbp]
	mov	QWORD PTR bytes$[rbp], rax
; Line 1209
	mov	DWORD PTR row$[rbp], 0
	jmp	SHORT $LN4@stbi__vert
$LN2@stbi__vert:
	mov	eax, DWORD PTR row$[rbp]
	inc	eax
	mov	DWORD PTR row$[rbp], eax
$LN4@stbi__vert:
	mov	eax, DWORD PTR h$[rbp]
	sar	eax, 1
	cmp	DWORD PTR row$[rbp], eax
	jge	$LN3@stbi__vert
; Line 1210
	movsxd	rax, DWORD PTR row$[rbp]
	imul	rax, QWORD PTR bytes_per_row$[rbp]
	mov	rcx, QWORD PTR bytes$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR row0$4[rbp], rax
; Line 1211
	mov	eax, DWORD PTR row$[rbp]
	mov	ecx, DWORD PTR h$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	cdqe
	imul	rax, QWORD PTR bytes_per_row$[rbp]
	mov	rcx, QWORD PTR bytes$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR row1$5[rbp], rax
; Line 1213
	mov	rax, QWORD PTR bytes_per_row$[rbp]
	mov	QWORD PTR bytes_left$6[rbp], rax
$LN5@stbi__vert:
; Line 1214
	cmp	QWORD PTR bytes_left$6[rbp], 0
	je	$LN6@stbi__vert
; Line 1215
	cmp	QWORD PTR bytes_left$6[rbp], 2048	; 00000800H
	jae	SHORT $LN8@stbi__vert
	mov	rax, QWORD PTR bytes_left$6[rbp]
	mov	QWORD PTR tv80[rbp], rax
	jmp	SHORT $LN9@stbi__vert
$LN8@stbi__vert:
	mov	QWORD PTR tv80[rbp], 2048		; 00000800H
$LN9@stbi__vert:
	mov	rax, QWORD PTR tv80[rbp]
	mov	QWORD PTR bytes_copy$7[rbp], rax
; Line 1216
	mov	r8, QWORD PTR bytes_copy$7[rbp]
	mov	rdx, QWORD PTR row0$4[rbp]
	lea	rcx, QWORD PTR temp$[rbp]
	call	memcpy
; Line 1217
	mov	r8, QWORD PTR bytes_copy$7[rbp]
	mov	rdx, QWORD PTR row1$5[rbp]
	mov	rcx, QWORD PTR row0$4[rbp]
	call	memcpy
; Line 1218
	mov	r8, QWORD PTR bytes_copy$7[rbp]
	lea	rdx, QWORD PTR temp$[rbp]
	mov	rcx, QWORD PTR row1$5[rbp]
	call	memcpy
; Line 1219
	mov	rax, QWORD PTR bytes_copy$7[rbp]
	mov	rcx, QWORD PTR row0$4[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR row0$4[rbp], rax
; Line 1220
	mov	rax, QWORD PTR bytes_copy$7[rbp]
	mov	rcx, QWORD PTR row1$5[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR row1$5[rbp], rax
; Line 1221
	mov	rax, QWORD PTR bytes_copy$7[rbp]
	mov	rcx, QWORD PTR bytes_left$6[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR bytes_left$6[rbp], rax
; Line 1222
	jmp	$LN5@stbi__vert
$LN6@stbi__vert:
; Line 1223
	jmp	$LN2@stbi__vert
$LN3@stbi__vert:
; Line 1224
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__vertical_flip@@YAXPEAXHHH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+3288]
	pop	rdi
	pop	rbp
	ret	0
?stbi__vertical_flip@@YAXPEAXHHH@Z ENDP			; stbi__vertical_flip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z
_TEXT	SEGMENT
i$ = 4
img_len$ = 36
enlarged$ = 72
tv74 = 276
orig$ = 320
w$ = 328
h$ = 336
channels$ = 344
?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z PROC		; stbi__convert_8_to_16, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1187
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1189
	mov	eax, DWORD PTR w$[rbp]
	imul	eax, DWORD PTR h$[rbp]
	imul	eax, DWORD PTR channels$[rbp]
	mov	DWORD PTR img_len$[rbp], eax
; Line 1192
	mov	eax, DWORD PTR img_len$[rbp]
	shl	eax, 1
	cdqe
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR enlarged$[rbp], rax
; Line 1193
	cmp	QWORD PTR enlarged$[rbp], 0
	jne	SHORT $LN5@stbi__conv
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN7@stbi__conv
	mov	DWORD PTR tv74[rbp], 0
	jmp	SHORT $LN8@stbi__conv
$LN7@stbi__conv:
	mov	DWORD PTR tv74[rbp], 0
$LN8@stbi__conv:
	movsxd	rax, DWORD PTR tv74[rbp]
	jmp	SHORT $LN1@stbi__conv
$LN5@stbi__conv:
; Line 1195
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__conv
$LN2@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__conv:
	mov	eax, DWORD PTR img_len$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__conv
; Line 1196
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR orig$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	shl	eax, 8
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR orig$[rbp]
	movzx	ecx, BYTE PTR [rdx+rcx]
	add	eax, ecx
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR enlarged$[rbp]
	mov	WORD PTR [rdx+rcx*2], ax
	jmp	SHORT $LN2@stbi__conv
$LN3@stbi__conv:
; Line 1198
	mov	rcx, QWORD PTR orig$[rbp]
	call	QWORD PTR __imp_free
; Line 1199
	mov	rax, QWORD PTR enlarged$[rbp]
$LN1@stbi__conv:
; Line 1200
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__convert_8_to_16@@YAPEAGPEAEHHH@Z ENDP		; stbi__convert_8_to_16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__convert_16_to_8@@YAPEAEPEAGHHH@Z
_TEXT	SEGMENT
i$ = 4
img_len$ = 36
reduced$ = 72
tv73 = 276
orig$ = 320
w$ = 328
h$ = 336
channels$ = 344
?stbi__convert_16_to_8@@YAPEAEPEAGHHH@Z PROC		; stbi__convert_16_to_8, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1171
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1173
	mov	eax, DWORD PTR w$[rbp]
	imul	eax, DWORD PTR h$[rbp]
	imul	eax, DWORD PTR channels$[rbp]
	mov	DWORD PTR img_len$[rbp], eax
; Line 1176
	movsxd	rax, DWORD PTR img_len$[rbp]
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR reduced$[rbp], rax
; Line 1177
	cmp	QWORD PTR reduced$[rbp], 0
	jne	SHORT $LN5@stbi__conv
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN7@stbi__conv
	mov	DWORD PTR tv73[rbp], 0
	jmp	SHORT $LN8@stbi__conv
$LN7@stbi__conv:
	mov	DWORD PTR tv73[rbp], 0
$LN8@stbi__conv:
	movsxd	rax, DWORD PTR tv73[rbp]
	jmp	SHORT $LN1@stbi__conv
$LN5@stbi__conv:
; Line 1179
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__conv
$LN2@stbi__conv:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__conv:
	mov	eax, DWORD PTR img_len$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__conv
; Line 1180
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR orig$[rbp]
	movzx	eax, WORD PTR [rcx+rax*2]
	sar	eax, 8
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR reduced$[rbp]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN2@stbi__conv
$LN3@stbi__conv:
; Line 1182
	mov	rcx, QWORD PTR orig$[rbp]
	call	QWORD PTR __imp_free
; Line 1183
	mov	rax, QWORD PTR reduced$[rbp]
$LN1@stbi__conv:
; Line 1184
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__convert_16_to_8@@YAPEAEPEAGHHH@Z ENDP		; stbi__convert_16_to_8
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z
_TEXT	SEGMENT
hdr$1 = 8
tv203 = 212
tv185 = 212
s$ = 256
x$ = 264
y$ = 272
comp$ = 280
req_comp$ = 288
ri$ = 296
bpc$ = 304
?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z PROC ; stbi__load_main, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1118
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1119
	mov	r8d, 12
	xor	edx, edx
	mov	rcx, QWORD PTR ri$[rbp]
	call	memset
; Line 1120
	mov	rax, QWORD PTR ri$[rbp]
	mov	DWORD PTR [rax], 8
; Line 1121
	mov	rax, QWORD PTR ri$[rbp]
	mov	DWORD PTR [rax+8], 0
; Line 1122
	mov	rax, QWORD PTR ri$[rbp]
	mov	DWORD PTR [rax+4], 0
; Line 1127
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__png_test@@YAHPEAUstbi__context@@@Z ; stbi__png_test
	test	eax, eax
	je	SHORT $LN2@stbi__load
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__png_load
	jmp	$LN1@stbi__load
$LN2@stbi__load:
; Line 1130
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__bmp_test@@YAHPEAUstbi__context@@@Z ; stbi__bmp_test
	test	eax, eax
	je	SHORT $LN3@stbi__load
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__bmp_load
	jmp	$LN1@stbi__load
$LN3@stbi__load:
; Line 1133
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_test@@YAHPEAUstbi__context@@@Z ; stbi__gif_test
	test	eax, eax
	je	SHORT $LN4@stbi__load
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__gif_load
	jmp	$LN1@stbi__load
$LN4@stbi__load:
; Line 1136
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__psd_test@@YAHPEAUstbi__context@@@Z ; stbi__psd_test
	test	eax, eax
	je	SHORT $LN5@stbi__load
	mov	eax, DWORD PTR bpc$[rbp]
	mov	DWORD PTR [rsp+48], eax
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z ; stbi__psd_load
	jmp	$LN1@stbi__load
$LN5@stbi__load:
; Line 1141
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pic_test@@YAHPEAUstbi__context@@@Z ; stbi__pic_test
	test	eax, eax
	je	SHORT $LN6@stbi__load
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__pic_load
	jmp	$LN1@stbi__load
$LN6@stbi__load:
; Line 1148
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__jpeg_test@@YAHPEAUstbi__context@@@Z ; stbi__jpeg_test
	test	eax, eax
	je	SHORT $LN7@stbi__load
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__jpeg_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__jpeg_load
	jmp	$LN1@stbi__load
$LN7@stbi__load:
; Line 1151
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_test@@YAHPEAUstbi__context@@@Z ; stbi__pnm_test
	test	eax, eax
	je	SHORT $LN8@stbi__load
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__pnm_load
	jmp	$LN1@stbi__load
$LN8@stbi__load:
; Line 1155
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_test@@YAHPEAUstbi__context@@@Z ; stbi__hdr_test
	test	eax, eax
	je	$LN9@stbi__load
; Line 1156
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__hdr_load
	mov	QWORD PTR hdr$1[rbp], rax
; Line 1157
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN12@stbi__load
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR tv185[rbp], eax
	jmp	SHORT $LN13@stbi__load
$LN12@stbi__load:
	mov	rax, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR tv185[rbp], eax
$LN13@stbi__load:
	mov	r9d, DWORD PTR tv185[rbp]
	mov	rax, QWORD PTR y$[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR x$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR hdr$1[rbp]
	call	?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z	; stbi__hdr_to_ldr
	jmp	SHORT $LN1@stbi__load
$LN9@stbi__load:
; Line 1163
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__tga_test@@YAHPEAUstbi__context@@@Z ; stbi__tga_test
	test	eax, eax
	je	SHORT $LN10@stbi__load
; Line 1164
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__tga_load
	jmp	SHORT $LN1@stbi__load
$LN10@stbi__load:
; Line 1167
	lea	rcx, OFFSET FLAT:??_C@_0BD@CBEDEJPH@unknown?5image?5type@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN14@stbi__load
	mov	DWORD PTR tv203[rbp], 0
	jmp	SHORT $LN15@stbi__load
$LN14@stbi__load:
	mov	DWORD PTR tv203[rbp], 0
$LN15@stbi__load:
	movsxd	rax, DWORD PTR tv203[rbp]
$LN1@stbi__load:
; Line 1168
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__load_main@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z ENDP ; stbi__load_main
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z
_TEXT	SEGMENT
i$ = 4
k$ = 36
n$ = 68
output$ = 104
z$1 = 132
z$2 = 164
tv75 = 372
data$ = 416
x$ = 424
y$ = 432
comp$ = 440
?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z PROC			; stbi__hdr_to_ldr, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1865
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 424				; 000001a8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1868
	cmp	QWORD PTR data$[rbp], 0
	jne	SHORT $LN8@stbi__hdr_
	xor	eax, eax
	jmp	$LN1@stbi__hdr_
$LN8@stbi__hdr_:
; Line 1869
	xor	r9d, r9d
	mov	r8d, DWORD PTR comp$[rbp]
	mov	edx, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	mov	QWORD PTR output$[rbp], rax
; Line 1870
	cmp	QWORD PTR output$[rbp], 0
	jne	SHORT $LN9@stbi__hdr_
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN18@stbi__hdr_
	mov	DWORD PTR tv75[rbp], 0
	jmp	SHORT $LN19@stbi__hdr_
$LN18@stbi__hdr_:
	mov	DWORD PTR tv75[rbp], 0
$LN19@stbi__hdr_:
	movsxd	rax, DWORD PTR tv75[rbp]
	jmp	$LN1@stbi__hdr_
$LN9@stbi__hdr_:
; Line 1872
	mov	eax, DWORD PTR comp$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN10@stbi__hdr_
	mov	eax, DWORD PTR comp$[rbp]
	mov	DWORD PTR n$[rbp], eax
	jmp	SHORT $LN11@stbi__hdr_
$LN10@stbi__hdr_:
	mov	eax, DWORD PTR comp$[rbp]
	dec	eax
	mov	DWORD PTR n$[rbp], eax
$LN11@stbi__hdr_:
; Line 1873
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__hdr_
$LN2@stbi__hdr_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__hdr_:
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR y$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN3@stbi__hdr_
; Line 1874
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN7@stbi__hdr_
$LN5@stbi__hdr_:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN7@stbi__hdr_:
	mov	eax, DWORD PTR n$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	$LN6@stbi__hdr_
; Line 1875
	mov	eax, DWORD PTR i$[rbp]
	imul	eax, DWORD PTR comp$[rbp]
	add	eax, DWORD PTR k$[rbp]
	cdqe
	mov	rcx, QWORD PTR data$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4]
	mulss	xmm0, DWORD PTR ?stbi__h2l_scale_i@@3MA
	movss	xmm1, DWORD PTR ?stbi__h2l_gamma_i@@3MA
	call	?pow@@YAMMM@Z				; pow
	mulss	xmm0, DWORD PTR __real@437f0000
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR z$1[rbp], xmm0
; Line 1876
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR z$1[rbp]
	jbe	SHORT $LN12@stbi__hdr_
	xorps	xmm0, xmm0
	movss	DWORD PTR z$1[rbp], xmm0
$LN12@stbi__hdr_:
; Line 1877
	movss	xmm0, DWORD PTR z$1[rbp]
	comiss	xmm0, DWORD PTR __real@437f0000
	jbe	SHORT $LN13@stbi__hdr_
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR z$1[rbp], xmm0
$LN13@stbi__hdr_:
; Line 1878
	cvttss2si eax, DWORD PTR z$1[rbp]
	mov	ecx, DWORD PTR i$[rbp]
	imul	ecx, DWORD PTR comp$[rbp]
	add	ecx, DWORD PTR k$[rbp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR output$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 1879
	jmp	$LN5@stbi__hdr_
$LN6@stbi__hdr_:
; Line 1880
	mov	eax, DWORD PTR comp$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	$LN14@stbi__hdr_
; Line 1881
	mov	eax, DWORD PTR i$[rbp]
	imul	eax, DWORD PTR comp$[rbp]
	add	eax, DWORD PTR k$[rbp]
	cdqe
	mov	rcx, QWORD PTR data$[rbp]
	movss	xmm0, DWORD PTR [rcx+rax*4]
	mulss	xmm0, DWORD PTR __real@437f0000
	addss	xmm0, DWORD PTR __real@3f000000
	movss	DWORD PTR z$2[rbp], xmm0
; Line 1882
	xorps	xmm0, xmm0
	comiss	xmm0, DWORD PTR z$2[rbp]
	jbe	SHORT $LN15@stbi__hdr_
	xorps	xmm0, xmm0
	movss	DWORD PTR z$2[rbp], xmm0
$LN15@stbi__hdr_:
; Line 1883
	movss	xmm0, DWORD PTR z$2[rbp]
	comiss	xmm0, DWORD PTR __real@437f0000
	jbe	SHORT $LN16@stbi__hdr_
	movss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR z$2[rbp], xmm0
$LN16@stbi__hdr_:
; Line 1884
	cvttss2si eax, DWORD PTR z$2[rbp]
	mov	ecx, DWORD PTR i$[rbp]
	imul	ecx, DWORD PTR comp$[rbp]
	add	ecx, DWORD PTR k$[rbp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR output$[rbp]
	mov	BYTE PTR [rdx+rcx], al
$LN14@stbi__hdr_:
; Line 1886
	jmp	$LN2@stbi__hdr_
$LN3@stbi__hdr_:
; Line 1887
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
; Line 1888
	mov	rax, QWORD PTR output$[rbp]
$LN1@stbi__hdr_:
; Line 1889
	lea	rsp, QWORD PTR [rbp+392]
	pop	rdi
	pop	rbp
	ret	0
?stbi__hdr_to_ldr@@YAPEAEPEAMHHH@Z ENDP			; stbi__hdr_to_ldr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__ldr_to_hdr@@YAPEAMPEAEHHH@Z
_TEXT	SEGMENT
i$ = 4
k$ = 36
n$ = 68
output$ = 104
tv76 = 308
data$ = 352
x$ = 360
y$ = 368
comp$ = 376
?stbi__ldr_to_hdr@@YAPEAMPEAEHHH@Z PROC			; stbi__ldr_to_hdr, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1839
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1842
	cmp	QWORD PTR data$[rbp], 0
	jne	SHORT $LN11@stbi__ldr_
	xor	eax, eax
	jmp	$LN1@stbi__ldr_
$LN11@stbi__ldr_:
; Line 1843
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 4
	mov	r8d, DWORD PTR comp$[rbp]
	mov	edx, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	call	?stbi__malloc_mad4@@YAPEAXHHHHH@Z	; stbi__malloc_mad4
	mov	QWORD PTR output$[rbp], rax
; Line 1844
	cmp	QWORD PTR output$[rbp], 0
	jne	SHORT $LN12@stbi__ldr_
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN17@stbi__ldr_
	mov	DWORD PTR tv76[rbp], 0
	jmp	SHORT $LN18@stbi__ldr_
$LN17@stbi__ldr_:
	mov	DWORD PTR tv76[rbp], 0
$LN18@stbi__ldr_:
	movsxd	rax, DWORD PTR tv76[rbp]
	jmp	$LN1@stbi__ldr_
$LN12@stbi__ldr_:
; Line 1846
	mov	eax, DWORD PTR comp$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN13@stbi__ldr_
	mov	eax, DWORD PTR comp$[rbp]
	mov	DWORD PTR n$[rbp], eax
	jmp	SHORT $LN14@stbi__ldr_
$LN13@stbi__ldr_:
	mov	eax, DWORD PTR comp$[rbp]
	dec	eax
	mov	DWORD PTR n$[rbp], eax
$LN14@stbi__ldr_:
; Line 1847
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__ldr_
$LN2@stbi__ldr_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__ldr_:
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR y$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN3@stbi__ldr_
; Line 1848
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN7@stbi__ldr_
$LN5@stbi__ldr_:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN7@stbi__ldr_:
	mov	eax, DWORD PTR n$[rbp]
	cmp	DWORD PTR k$[rbp], eax
	jge	SHORT $LN6@stbi__ldr_
; Line 1849
	mov	eax, DWORD PTR i$[rbp]
	imul	eax, DWORD PTR comp$[rbp]
	add	eax, DWORD PTR k$[rbp]
	cdqe
	mov	rcx, QWORD PTR data$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@437f0000
	movss	xmm1, DWORD PTR ?stbi__l2h_gamma@@3MA
	call	?pow@@YAMMM@Z				; pow
	mulss	xmm0, DWORD PTR ?stbi__l2h_scale@@3MA
	mov	eax, DWORD PTR i$[rbp]
	imul	eax, DWORD PTR comp$[rbp]
	add	eax, DWORD PTR k$[rbp]
	cdqe
	mov	rcx, QWORD PTR output$[rbp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 1850
	jmp	SHORT $LN5@stbi__ldr_
$LN6@stbi__ldr_:
; Line 1851
	jmp	$LN2@stbi__ldr_
$LN3@stbi__ldr_:
; Line 1852
	mov	eax, DWORD PTR comp$[rbp]
	cmp	DWORD PTR n$[rbp], eax
	jge	SHORT $LN15@stbi__ldr_
; Line 1853
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN10@stbi__ldr_
$LN8@stbi__ldr_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN10@stbi__ldr_:
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR y$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN9@stbi__ldr_
; Line 1854
	mov	eax, DWORD PTR i$[rbp]
	imul	eax, DWORD PTR comp$[rbp]
	add	eax, DWORD PTR n$[rbp]
	cdqe
	mov	rcx, QWORD PTR data$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@437f0000
	mov	eax, DWORD PTR i$[rbp]
	imul	eax, DWORD PTR comp$[rbp]
	add	eax, DWORD PTR n$[rbp]
	cdqe
	mov	rcx, QWORD PTR output$[rbp]
	movss	DWORD PTR [rcx+rax*4], xmm0
; Line 1855
	jmp	SHORT $LN8@stbi__ldr_
$LN9@stbi__ldr_:
$LN15@stbi__ldr_:
; Line 1857
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_free
; Line 1858
	mov	rax, QWORD PTR output$[rbp]
$LN1@stbi__ldr_:
; Line 1859
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?stbi__ldr_to_hdr@@YAPEAMPEAEHHH@Z ENDP			; stbi__ldr_to_hdr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__malloc_mad4@@YAPEAXHHHHH@Z
_TEXT	SEGMENT
a$ = 224
b$ = 232
c$ = 240
d$ = 248
add$ = 256
?stbi__malloc_mad4@@YAPEAXHHHHH@Z PROC			; stbi__malloc_mad4, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1060
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1061
	mov	eax, DWORD PTR add$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR d$[rbp]
	mov	r8d, DWORD PTR c$[rbp]
	mov	edx, DWORD PTR b$[rbp]
	mov	ecx, DWORD PTR a$[rbp]
	call	?stbi__mad4sizes_valid@@YAHHHHHH@Z	; stbi__mad4sizes_valid
	test	eax, eax
	jne	SHORT $LN2@stbi__mall
	xor	eax, eax
	jmp	SHORT $LN1@stbi__mall
$LN2@stbi__mall:
; Line 1062
	mov	eax, DWORD PTR a$[rbp]
	imul	eax, DWORD PTR b$[rbp]
	imul	eax, DWORD PTR c$[rbp]
	imul	eax, DWORD PTR d$[rbp]
	add	eax, DWORD PTR add$[rbp]
	cdqe
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
$LN1@stbi__mall:
; Line 1063
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__malloc_mad4@@YAPEAXHHHHH@Z ENDP			; stbi__malloc_mad4
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__malloc_mad3@@YAPEAXHHHH@Z
_TEXT	SEGMENT
a$ = 224
b$ = 232
c$ = 240
add$ = 248
?stbi__malloc_mad3@@YAPEAXHHHH@Z PROC			; stbi__malloc_mad3, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1053
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1054
	mov	r9d, DWORD PTR add$[rbp]
	mov	r8d, DWORD PTR c$[rbp]
	mov	edx, DWORD PTR b$[rbp]
	mov	ecx, DWORD PTR a$[rbp]
	call	?stbi__mad3sizes_valid@@YAHHHHH@Z	; stbi__mad3sizes_valid
	test	eax, eax
	jne	SHORT $LN2@stbi__mall
	xor	eax, eax
	jmp	SHORT $LN1@stbi__mall
$LN2@stbi__mall:
; Line 1055
	mov	eax, DWORD PTR a$[rbp]
	imul	eax, DWORD PTR b$[rbp]
	imul	eax, DWORD PTR c$[rbp]
	add	eax, DWORD PTR add$[rbp]
	cdqe
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
$LN1@stbi__mall:
; Line 1056
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__malloc_mad3@@YAPEAXHHHH@Z ENDP			; stbi__malloc_mad3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__malloc_mad2@@YAPEAXHHH@Z
_TEXT	SEGMENT
a$ = 224
b$ = 232
add$ = 240
?stbi__malloc_mad2@@YAPEAXHHH@Z PROC			; stbi__malloc_mad2, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1046
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1047
	mov	r8d, DWORD PTR add$[rbp]
	mov	edx, DWORD PTR b$[rbp]
	mov	ecx, DWORD PTR a$[rbp]
	call	?stbi__mad2sizes_valid@@YAHHHH@Z	; stbi__mad2sizes_valid
	test	eax, eax
	jne	SHORT $LN2@stbi__mall
	xor	eax, eax
	jmp	SHORT $LN1@stbi__mall
$LN2@stbi__mall:
; Line 1048
	mov	eax, DWORD PTR a$[rbp]
	imul	eax, DWORD PTR b$[rbp]
	add	eax, DWORD PTR add$[rbp]
	cdqe
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
$LN1@stbi__mall:
; Line 1049
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__malloc_mad2@@YAPEAXHHH@Z ENDP			; stbi__malloc_mad2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__mad4sizes_valid@@YAHHHHHH@Z
_TEXT	SEGMENT
tv86 = 192
a$ = 240
b$ = 248
c$ = 256
d$ = 264
add$ = 272
?stbi__mad4sizes_valid@@YAHHHHHH@Z PROC			; stbi__mad4sizes_valid, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1037
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1038
	mov	edx, DWORD PTR b$[rbp]
	mov	ecx, DWORD PTR a$[rbp]
	call	?stbi__mul2sizes_valid@@YAHHH@Z		; stbi__mul2sizes_valid
	test	eax, eax
	je	SHORT $LN3@stbi__mad4
	mov	eax, DWORD PTR a$[rbp]
	imul	eax, DWORD PTR b$[rbp]
	mov	edx, DWORD PTR c$[rbp]
	mov	ecx, eax
	call	?stbi__mul2sizes_valid@@YAHHH@Z		; stbi__mul2sizes_valid
	test	eax, eax
	je	SHORT $LN3@stbi__mad4
	mov	eax, DWORD PTR a$[rbp]
	imul	eax, DWORD PTR b$[rbp]
	imul	eax, DWORD PTR c$[rbp]
	mov	edx, DWORD PTR d$[rbp]
	mov	ecx, eax
	call	?stbi__mul2sizes_valid@@YAHHH@Z		; stbi__mul2sizes_valid
	test	eax, eax
	je	SHORT $LN3@stbi__mad4
	mov	eax, DWORD PTR a$[rbp]
	imul	eax, DWORD PTR b$[rbp]
	imul	eax, DWORD PTR c$[rbp]
	imul	eax, DWORD PTR d$[rbp]
	mov	edx, DWORD PTR add$[rbp]
	mov	ecx, eax
	call	?stbi__addsizes_valid@@YAHHH@Z		; stbi__addsizes_valid
	test	eax, eax
	je	SHORT $LN3@stbi__mad4
	mov	DWORD PTR tv86[rbp], 1
	jmp	SHORT $LN4@stbi__mad4
$LN3@stbi__mad4:
	mov	DWORD PTR tv86[rbp], 0
$LN4@stbi__mad4:
	mov	eax, DWORD PTR tv86[rbp]
; Line 1040
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__mad4sizes_valid@@YAHHHHHH@Z ENDP			; stbi__mad4sizes_valid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__mad3sizes_valid@@YAHHHHH@Z
_TEXT	SEGMENT
tv79 = 192
a$ = 240
b$ = 248
c$ = 256
add$ = 264
?stbi__mad3sizes_valid@@YAHHHHH@Z PROC			; stbi__mad3sizes_valid, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1029
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1030
	mov	edx, DWORD PTR b$[rbp]
	mov	ecx, DWORD PTR a$[rbp]
	call	?stbi__mul2sizes_valid@@YAHHH@Z		; stbi__mul2sizes_valid
	test	eax, eax
	je	SHORT $LN3@stbi__mad3
	mov	eax, DWORD PTR a$[rbp]
	imul	eax, DWORD PTR b$[rbp]
	mov	edx, DWORD PTR c$[rbp]
	mov	ecx, eax
	call	?stbi__mul2sizes_valid@@YAHHH@Z		; stbi__mul2sizes_valid
	test	eax, eax
	je	SHORT $LN3@stbi__mad3
	mov	eax, DWORD PTR a$[rbp]
	imul	eax, DWORD PTR b$[rbp]
	imul	eax, DWORD PTR c$[rbp]
	mov	edx, DWORD PTR add$[rbp]
	mov	ecx, eax
	call	?stbi__addsizes_valid@@YAHHH@Z		; stbi__addsizes_valid
	test	eax, eax
	je	SHORT $LN3@stbi__mad3
	mov	DWORD PTR tv79[rbp], 1
	jmp	SHORT $LN4@stbi__mad3
$LN3@stbi__mad3:
	mov	DWORD PTR tv79[rbp], 0
$LN4@stbi__mad3:
	mov	eax, DWORD PTR tv79[rbp]
; Line 1032
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__mad3sizes_valid@@YAHHHHH@Z ENDP			; stbi__mad3sizes_valid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__mad2sizes_valid@@YAHHHH@Z
_TEXT	SEGMENT
tv73 = 192
a$ = 240
b$ = 248
add$ = 256
?stbi__mad2sizes_valid@@YAHHHH@Z PROC			; stbi__mad2sizes_valid, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1022
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1023
	mov	edx, DWORD PTR b$[rbp]
	mov	ecx, DWORD PTR a$[rbp]
	call	?stbi__mul2sizes_valid@@YAHHH@Z		; stbi__mul2sizes_valid
	test	eax, eax
	je	SHORT $LN3@stbi__mad2
	mov	eax, DWORD PTR a$[rbp]
	imul	eax, DWORD PTR b$[rbp]
	mov	edx, DWORD PTR add$[rbp]
	mov	ecx, eax
	call	?stbi__addsizes_valid@@YAHHH@Z		; stbi__addsizes_valid
	test	eax, eax
	je	SHORT $LN3@stbi__mad2
	mov	DWORD PTR tv73[rbp], 1
	jmp	SHORT $LN4@stbi__mad2
$LN3@stbi__mad2:
	mov	DWORD PTR tv73[rbp], 0
$LN4@stbi__mad2:
	mov	eax, DWORD PTR tv73[rbp]
; Line 1024
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__mad2sizes_valid@@YAHHHH@Z ENDP			; stbi__mad2sizes_valid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__mul2sizes_valid@@YAHHH@Z
_TEXT	SEGMENT
tv69 = 192
a$ = 240
b$ = 248
?stbi__mul2sizes_valid@@YAHHH@Z PROC			; stbi__mul2sizes_valid, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1012
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1013
	cmp	DWORD PTR a$[rbp], 0
	jl	SHORT $LN3@stbi__mul2
	cmp	DWORD PTR b$[rbp], 0
	jge	SHORT $LN2@stbi__mul2
$LN3@stbi__mul2:
	xor	eax, eax
	jmp	SHORT $LN1@stbi__mul2
$LN2@stbi__mul2:
; Line 1014
	cmp	DWORD PTR b$[rbp], 0
	jne	SHORT $LN4@stbi__mul2
	mov	eax, 1
	jmp	SHORT $LN1@stbi__mul2
$LN4@stbi__mul2:
; Line 1016
	mov	eax, 2147483647				; 7fffffffH
	cdq
	idiv	DWORD PTR b$[rbp]
	cmp	DWORD PTR a$[rbp], eax
	jg	SHORT $LN6@stbi__mul2
	mov	DWORD PTR tv69[rbp], 1
	jmp	SHORT $LN7@stbi__mul2
$LN6@stbi__mul2:
	mov	DWORD PTR tv69[rbp], 0
$LN7@stbi__mul2:
	mov	eax, DWORD PTR tv69[rbp]
$LN1@stbi__mul2:
; Line 1017
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__mul2sizes_valid@@YAHHH@Z ENDP			; stbi__mul2sizes_valid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__addsizes_valid@@YAHHH@Z
_TEXT	SEGMENT
tv67 = 192
a$ = 240
b$ = 248
?stbi__addsizes_valid@@YAHHH@Z PROC			; stbi__addsizes_valid, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1000
	mov	DWORD PTR [rsp+16], edx
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1001
	cmp	DWORD PTR b$[rbp], 0
	jge	SHORT $LN2@stbi__adds
	xor	eax, eax
	jmp	SHORT $LN1@stbi__adds
$LN2@stbi__adds:
; Line 1006
	mov	eax, 2147483647				; 7fffffffH
	sub	eax, DWORD PTR b$[rbp]
	cmp	DWORD PTR a$[rbp], eax
	jg	SHORT $LN4@stbi__adds
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN5@stbi__adds
$LN4@stbi__adds:
	mov	DWORD PTR tv67[rbp], 0
$LN5@stbi__adds:
	mov	eax, DWORD PTR tv67[rbp]
$LN1@stbi__adds:
; Line 1007
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__addsizes_valid@@YAHHH@Z ENDP			; stbi__addsizes_valid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__malloc@@YAPEAX_K@Z
_TEXT	SEGMENT
size$ = 224
?stbi__malloc@@YAPEAX_K@Z PROC				; stbi__malloc, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 983
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 984
	mov	rcx, QWORD PTR size$[rbp]
	call	QWORD PTR __imp_malloc
; Line 985
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__malloc@@YAPEAX_K@Z ENDP				; stbi__malloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__err@@YAHPEBD@Z
_TEXT	SEGMENT
str$ = 224
?stbi__err@@YAHPEBD@Z PROC				; stbi__err, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 976
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 977
	mov	eax, OFFSET FLAT:?stbi__g_failure_reason@@3PEBDEB
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	rdx, QWORD PTR str$[rbp]
	mov	QWORD PTR [rax+rcx], rdx
; Line 978
	xor	eax, eax
; Line 979
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__err@@YAHPEBD@Z ENDP				; stbi__err
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pnm_is16@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
s$ = 224
?stbi__pnm_is16@@YAHPEAUstbi__context@@@Z PROC		; stbi__pnm_is16, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7534
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7535
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__pnm_info
	cmp	eax, 16
	jne	SHORT $LN2@stbi__pnm_
; Line 7536
	mov	eax, 1
	jmp	SHORT $LN1@stbi__pnm_
$LN2@stbi__pnm_:
; Line 7537
	xor	eax, eax
$LN1@stbi__pnm_:
; Line 7538
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pnm_is16@@YAHPEAUstbi__context@@@Z ENDP		; stbi__pnm_is16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
maxv$ = 4
dummy$ = 36
c$ = 68
p$ = 100
t$ = 132
tv81 = 340
__$ArrayPad$ = 344
s$ = 384
x$ = 392
y$ = 400
comp$ = 408
?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__pnm_info, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7495
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+424]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7499
	cmp	QWORD PTR x$[rbp], 0
	jne	SHORT $LN2@stbi__pnm_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR x$[rbp], rax
$LN2@stbi__pnm_:
; Line 7500
	cmp	QWORD PTR y$[rbp], 0
	jne	SHORT $LN3@stbi__pnm_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR y$[rbp], rax
$LN3@stbi__pnm_:
; Line 7501
	cmp	QWORD PTR comp$[rbp], 0
	jne	SHORT $LN4@stbi__pnm_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR comp$[rbp], rax
$LN4@stbi__pnm_:
; Line 7503
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7506
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR p$[rbp], al
; Line 7507
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR t$[rbp], al
; Line 7508
	movsx	eax, BYTE PTR p$[rbp]
	cmp	eax, 80					; 00000050H
	jne	SHORT $LN6@stbi__pnm_
	movsx	eax, BYTE PTR t$[rbp]
	cmp	eax, 53					; 00000035H
	je	SHORT $LN5@stbi__pnm_
	movsx	eax, BYTE PTR t$[rbp]
	cmp	eax, 54					; 00000036H
	je	SHORT $LN5@stbi__pnm_
$LN6@stbi__pnm_:
; Line 7509
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7510
	xor	eax, eax
	jmp	$LN1@stbi__pnm_
$LN5@stbi__pnm_:
; Line 7513
	movsx	eax, BYTE PTR t$[rbp]
	cmp	eax, 54					; 00000036H
	jne	SHORT $LN12@stbi__pnm_
	mov	DWORD PTR tv81[rbp], 3
	jmp	SHORT $LN13@stbi__pnm_
$LN12@stbi__pnm_:
	mov	DWORD PTR tv81[rbp], 1
$LN13@stbi__pnm_:
	mov	rax, QWORD PTR comp$[rbp]
	mov	ecx, DWORD PTR tv81[rbp]
	mov	DWORD PTR [rax], ecx
; Line 7515
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR c$[rbp], al
; Line 7516
	lea	rdx, QWORD PTR c$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z ; stbi__pnm_skip_whitespace
; Line 7518
	lea	rdx, QWORD PTR c$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z ; stbi__pnm_getinteger
	mov	rcx, QWORD PTR x$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 7519
	lea	rdx, QWORD PTR c$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z ; stbi__pnm_skip_whitespace
; Line 7521
	lea	rdx, QWORD PTR c$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z ; stbi__pnm_getinteger
	mov	rcx, QWORD PTR y$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 7522
	lea	rdx, QWORD PTR c$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_skip_whitespace@@YAXPEAUstbi__context@@PEAD@Z ; stbi__pnm_skip_whitespace
; Line 7524
	lea	rdx, QWORD PTR c$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_getinteger@@YAHPEAUstbi__context@@PEAD@Z ; stbi__pnm_getinteger
	mov	DWORD PTR maxv$[rbp], eax
; Line 7525
	cmp	DWORD PTR maxv$[rbp], 65535		; 0000ffffH
	jle	SHORT $LN7@stbi__pnm_
; Line 7526
	lea	rcx, OFFSET FLAT:??_C@_0BC@CNFMOKHC@max?5value?5?$DO?565535@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__pnm_
	jmp	SHORT $LN8@stbi__pnm_
$LN7@stbi__pnm_:
; Line 7527
	cmp	DWORD PTR maxv$[rbp], 255		; 000000ffH
	jle	SHORT $LN9@stbi__pnm_
; Line 7528
	mov	eax, 16
	jmp	SHORT $LN1@stbi__pnm_
	jmp	SHORT $LN10@stbi__pnm_
$LN9@stbi__pnm_:
; Line 7530
	mov	eax, 8
$LN10@stbi__pnm_:
$LN8@stbi__pnm_:
$LN1@stbi__pnm_:
; Line 7531
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__pnm_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pnm_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
_TEXT	SEGMENT
out$ = 8
tv164 = 212
tv157 = 212
tv140 = 212
tv87 = 212
tv80 = 212
s$ = 256
x$ = 264
y$ = 272
comp$ = 280
req_comp$ = 288
ri$ = 296
?stbi__pnm_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z PROC ; stbi__pnm_load, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7429
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7433
	mov	rax, QWORD PTR s$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR s$[rbp]
	add	rcx, 4
	mov	rdx, QWORD PTR s$[rbp]
	mov	r9, rax
	mov	r8, rcx
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pnm_info@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__pnm_info
	mov	rcx, QWORD PTR ri$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 7434
	mov	rax, QWORD PTR ri$[rbp]
	cmp	DWORD PTR [rax], 0
	jne	SHORT $LN2@stbi__pnm_
; Line 7435
	xor	eax, eax
	jmp	$LN1@stbi__pnm_
$LN2@stbi__pnm_:
; Line 7437
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+4], 16777216		; 01000000H
	jbe	SHORT $LN3@stbi__pnm_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN11@stbi__pnm_
	mov	DWORD PTR tv80[rbp], 0
	jmp	SHORT $LN12@stbi__pnm_
$LN11@stbi__pnm_:
	mov	DWORD PTR tv80[rbp], 0
$LN12@stbi__pnm_:
	movsxd	rax, DWORD PTR tv80[rbp]
	jmp	$LN1@stbi__pnm_
$LN3@stbi__pnm_:
; Line 7438
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax], 16777216		; 01000000H
	jbe	SHORT $LN4@stbi__pnm_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN13@stbi__pnm_
	mov	DWORD PTR tv87[rbp], 0
	jmp	SHORT $LN14@stbi__pnm_
$LN13@stbi__pnm_:
	mov	DWORD PTR tv87[rbp], 0
$LN14@stbi__pnm_:
	movsxd	rax, DWORD PTR tv87[rbp]
	jmp	$LN1@stbi__pnm_
$LN4@stbi__pnm_:
; Line 7440
	mov	rax, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
; Line 7441
	mov	rax, QWORD PTR y$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax], ecx
; Line 7442
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN5@stbi__pnm_
	mov	rax, QWORD PTR comp$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	mov	DWORD PTR [rax], ecx
$LN5@stbi__pnm_:
; Line 7444
	mov	rax, QWORD PTR ri$[rbp]
	mov	eax, DWORD PTR [rax]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, eax
	mov	rax, QWORD PTR s$[rbp]
	mov	r8d, DWORD PTR [rax+4]
	mov	rax, QWORD PTR s$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rax+8]
	call	?stbi__mad4sizes_valid@@YAHHHHHH@Z	; stbi__mad4sizes_valid
	test	eax, eax
	jne	SHORT $LN6@stbi__pnm_
; Line 7445
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN15@stbi__pnm_
	mov	DWORD PTR tv140[rbp], 0
	jmp	SHORT $LN16@stbi__pnm_
$LN15@stbi__pnm_:
	mov	DWORD PTR tv140[rbp], 0
$LN16@stbi__pnm_:
	movsxd	rax, DWORD PTR tv140[rbp]
	jmp	$LN1@stbi__pnm_
$LN6@stbi__pnm_:
; Line 7447
	mov	rax, QWORD PTR ri$[rbp]
	mov	eax, DWORD PTR [rax]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, eax
	mov	rax, QWORD PTR s$[rbp]
	mov	r8d, DWORD PTR [rax+4]
	mov	rax, QWORD PTR s$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rax, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rax+8]
	call	?stbi__malloc_mad4@@YAPEAXHHHHH@Z	; stbi__malloc_mad4
	mov	QWORD PTR out$[rbp], rax
; Line 7448
	cmp	QWORD PTR out$[rbp], 0
	jne	SHORT $LN7@stbi__pnm_
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN17@stbi__pnm_
	mov	DWORD PTR tv157[rbp], 0
	jmp	SHORT $LN18@stbi__pnm_
$LN17@stbi__pnm_:
	mov	DWORD PTR tv157[rbp], 0
$LN18@stbi__pnm_:
	movsxd	rax, DWORD PTR tv157[rbp]
	jmp	$LN1@stbi__pnm_
$LN7@stbi__pnm_:
; Line 7449
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	imul	eax, DWORD PTR [rcx]
	mov	rcx, QWORD PTR s$[rbp]
	imul	eax, DWORD PTR [rcx+4]
	mov	DWORD PTR tv164[rbp], eax
	mov	rcx, QWORD PTR ri$[rbp]
	mov	eax, DWORD PTR [rcx]
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	mov	ecx, DWORD PTR tv164[rbp]
	imul	ecx, eax
	mov	eax, ecx
	mov	r8d, eax
	mov	rdx, QWORD PTR out$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z ; stbi__getn
; Line 7451
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN8@stbi__pnm_
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	cmp	DWORD PTR req_comp$[rbp], eax
	je	SHORT $LN8@stbi__pnm_
; Line 7452
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR s$[rbp]
	mov	r9d, DWORD PTR [rax]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	rax, QWORD PTR s$[rbp]
	mov	edx, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR out$[rbp]
	call	?stbi__convert_format@@YAPEAEPEAEHHII@Z	; stbi__convert_format
	mov	QWORD PTR out$[rbp], rax
; Line 7453
	cmp	QWORD PTR out$[rbp], 0
	jne	SHORT $LN9@stbi__pnm_
	mov	rax, QWORD PTR out$[rbp]
	jmp	SHORT $LN1@stbi__pnm_
$LN9@stbi__pnm_:
$LN8@stbi__pnm_:
; Line 7455
	mov	rax, QWORD PTR out$[rbp]
$LN1@stbi__pnm_:
; Line 7456
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pnm_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ENDP ; stbi__pnm_load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pnm_test@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
p$ = 4
t$ = 36
s$ = 288
?stbi__pnm_test@@YAHPEAUstbi__context@@@Z PROC		; stbi__pnm_test, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7417
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7419
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR p$[rbp], al
; Line 7420
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR t$[rbp], al
; Line 7421
	movsx	eax, BYTE PTR p$[rbp]
	cmp	eax, 80					; 00000050H
	jne	SHORT $LN3@stbi__pnm_
	movsx	eax, BYTE PTR t$[rbp]
	cmp	eax, 53					; 00000035H
	je	SHORT $LN2@stbi__pnm_
	movsx	eax, BYTE PTR t$[rbp]
	cmp	eax, 54					; 00000036H
	je	SHORT $LN2@stbi__pnm_
$LN3@stbi__pnm_:
; Line 7422
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7423
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pnm_
$LN2@stbi__pnm_:
; Line 7425
	mov	eax, 1
$LN1@stbi__pnm_:
; Line 7426
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pnm_test@@YAHPEAUstbi__context@@@Z ENDP		; stbi__pnm_test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__gif_info@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
s$ = 224
x$ = 232
y$ = 240
comp$ = 248
?stbi__gif_info@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__gif_info, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7000
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7001
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_info_raw@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__gif_info_raw
; Line 7002
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__gif_info@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__gif_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z
_TEXT	SEGMENT
layers$4 = 4
u$5 = 40
out$6 = 72
two_back$7 = 104
g$8 = 144
stride$9 = 35092
out_size$10 = 35124
delays_size$11 = 35156
tmp$12 = 35192
new_delays$13 = 35224
tv209 = 36772
tv136 = 36776
__$ArrayPad$ = 36784
s$ = 36832
delays$ = 36840
x$ = 36848
y$ = 36856
z$ = 36864
comp$ = 36872
req_comp$ = 36880
?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z PROC ; stbi__load_gif_main, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6886
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 36856				; 00008ff8H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 8818				; 00002272H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+36888]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6887
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_test@@YAHPEAUstbi__context@@@Z ; stbi__gif_test
	test	eax, eax
	je	$LN5@stbi__load
; Line 6888
	mov	DWORD PTR layers$4[rbp], 0
; Line 6889
	mov	QWORD PTR u$5[rbp], 0
; Line 6890
	mov	QWORD PTR out$6[rbp], 0
; Line 6891
	mov	QWORD PTR two_back$7[rbp], 0
; Line 6894
	mov	DWORD PTR out_size$10[rbp], 0
; Line 6895
	mov	DWORD PTR delays_size$11[rbp], 0
; Line 6900
	mov	r8d, 34928				; 00008870H
	xor	edx, edx
	lea	rcx, QWORD PTR g$8[rbp]
	call	memset
; Line 6901
	cmp	QWORD PTR delays$[rbp], 0
	je	SHORT $LN7@stbi__load
; Line 6902
	mov	rax, QWORD PTR delays$[rbp]
	mov	QWORD PTR [rax], 0
$LN7@stbi__load:
$LN4@stbi__load:
; Line 6906
	mov	rax, QWORD PTR two_back$7[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, DWORD PTR req_comp$[rbp]
	mov	r8, QWORD PTR comp$[rbp]
	lea	rdx, QWORD PTR g$8[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z ; stbi__gif_load_next
	mov	QWORD PTR u$5[rbp], rax
; Line 6907
	mov	rax, QWORD PTR s$[rbp]
	cmp	QWORD PTR u$5[rbp], rax
	jne	SHORT $LN8@stbi__load
	mov	QWORD PTR u$5[rbp], 0
$LN8@stbi__load:
; Line 6909
	cmp	QWORD PTR u$5[rbp], 0
	je	$LN9@stbi__load
; Line 6910
	mov	rax, QWORD PTR x$[rbp]
	mov	ecx, DWORD PTR g$8[rbp]
	mov	DWORD PTR [rax], ecx
; Line 6911
	mov	rax, QWORD PTR y$[rbp]
	mov	ecx, DWORD PTR g$8[rbp+4]
	mov	DWORD PTR [rax], ecx
; Line 6912
	mov	eax, DWORD PTR layers$4[rbp]
	inc	eax
	mov	DWORD PTR layers$4[rbp], eax
; Line 6913
	mov	eax, DWORD PTR g$8[rbp]
	imul	eax, DWORD PTR g$8[rbp+4]
	shl	eax, 2
	mov	DWORD PTR stride$9[rbp], eax
; Line 6915
	cmp	QWORD PTR out$6[rbp], 0
	je	$LN10@stbi__load
; Line 6916
	mov	eax, DWORD PTR stride$9[rbp]
	mul	DWORD PTR layers$4[rbp]
	mov	eax, eax
	mov	rcx, -1
	cmovo	rax, rcx
	mov	rdx, rax
	mov	rcx, QWORD PTR out$6[rbp]
	call	QWORD PTR __imp_realloc
	mov	QWORD PTR tmp$12[rbp], rax
; Line 6917
	cmp	QWORD PTR tmp$12[rbp], 0
	jne	SHORT $LN12@stbi__load
; Line 6918
	mov	r8, QWORD PTR delays$[rbp]
	mov	rdx, QWORD PTR out$6[rbp]
	lea	rcx, QWORD PTR g$8[rbp]
	call	?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z ; stbi__load_gif_main_outofmem
	jmp	$LN1@stbi__load
	jmp	SHORT $LN13@stbi__load
$LN12@stbi__load:
; Line 6920
	mov	rax, QWORD PTR tmp$12[rbp]
	mov	QWORD PTR out$6[rbp], rax
; Line 6921
	mov	eax, DWORD PTR layers$4[rbp]
	imul	eax, DWORD PTR stride$9[rbp]
	mov	DWORD PTR out_size$10[rbp], eax
$LN13@stbi__load:
; Line 6924
	cmp	QWORD PTR delays$[rbp], 0
	je	$LN14@stbi__load
; Line 6925
	movsxd	rax, DWORD PTR layers$4[rbp]
	mov	QWORD PTR tv136[rbp], rax
	mov	eax, 4
	mov	rcx, QWORD PTR tv136[rbp]
	mul	rcx
	mov	rcx, -1
	cmovo	rax, rcx
	mov	rdx, rax
	mov	rax, QWORD PTR delays$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp_realloc
	mov	QWORD PTR new_delays$13[rbp], rax
; Line 6926
	cmp	QWORD PTR new_delays$13[rbp], 0
	jne	SHORT $LN15@stbi__load
; Line 6927
	mov	r8, QWORD PTR delays$[rbp]
	mov	rdx, QWORD PTR out$6[rbp]
	lea	rcx, QWORD PTR g$8[rbp]
	call	?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z ; stbi__load_gif_main_outofmem
	jmp	$LN1@stbi__load
$LN15@stbi__load:
; Line 6928
	mov	rax, QWORD PTR delays$[rbp]
	mov	rcx, QWORD PTR new_delays$13[rbp]
	mov	QWORD PTR [rax], rcx
; Line 6929
	movsxd	rax, DWORD PTR layers$4[rbp]
	shl	rax, 2
	mov	DWORD PTR delays_size$11[rbp], eax
$LN14@stbi__load:
; Line 6931
	jmp	$LN11@stbi__load
$LN10@stbi__load:
; Line 6932
	mov	eax, DWORD PTR layers$4[rbp]
	imul	eax, DWORD PTR stride$9[rbp]
	cdqe
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR out$6[rbp], rax
; Line 6933
	cmp	QWORD PTR out$6[rbp], 0
	jne	SHORT $LN16@stbi__load
; Line 6934
	mov	r8, QWORD PTR delays$[rbp]
	mov	rdx, QWORD PTR out$6[rbp]
	lea	rcx, QWORD PTR g$8[rbp]
	call	?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z ; stbi__load_gif_main_outofmem
	jmp	$LN1@stbi__load
$LN16@stbi__load:
; Line 6935
	mov	eax, DWORD PTR layers$4[rbp]
	imul	eax, DWORD PTR stride$9[rbp]
	mov	DWORD PTR out_size$10[rbp], eax
; Line 6936
	cmp	QWORD PTR delays$[rbp], 0
	je	SHORT $LN17@stbi__load
; Line 6937
	movsxd	rax, DWORD PTR layers$4[rbp]
	shl	rax, 2
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	rcx, QWORD PTR delays$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 6938
	mov	rax, QWORD PTR delays$[rbp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN18@stbi__load
; Line 6939
	mov	r8, QWORD PTR delays$[rbp]
	mov	rdx, QWORD PTR out$6[rbp]
	lea	rcx, QWORD PTR g$8[rbp]
	call	?stbi__load_gif_main_outofmem@@YAPEAXPEAUstbi__gif@@PEAEPEAPEAH@Z ; stbi__load_gif_main_outofmem
	jmp	$LN1@stbi__load
$LN18@stbi__load:
; Line 6940
	movsxd	rax, DWORD PTR layers$4[rbp]
	shl	rax, 2
	mov	DWORD PTR delays_size$11[rbp], eax
$LN17@stbi__load:
$LN11@stbi__load:
; Line 6943
	movsxd	rax, DWORD PTR stride$9[rbp]
	mov	ecx, DWORD PTR layers$4[rbp]
	dec	ecx
	imul	ecx, DWORD PTR stride$9[rbp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$6[rbp]
	add	rdx, rcx
	mov	rcx, rdx
	mov	r8, rax
	mov	rdx, QWORD PTR u$5[rbp]
	call	memcpy
; Line 6944
	cmp	DWORD PTR layers$4[rbp], 2
	jl	SHORT $LN19@stbi__load
; Line 6945
	mov	eax, DWORD PTR stride$9[rbp]
	shl	eax, 1
	cdqe
	mov	rcx, QWORD PTR out$6[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR two_back$7[rbp], rax
$LN19@stbi__load:
; Line 6948
	cmp	QWORD PTR delays$[rbp], 0
	je	SHORT $LN20@stbi__load
; Line 6949
	mov	eax, DWORD PTR layers$4[rbp]
	dec	eax
	mov	eax, eax
	mov	rcx, QWORD PTR delays$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	edx, DWORD PTR g$8[rbp+34920]
	mov	DWORD PTR [rcx+rax*4], edx
$LN20@stbi__load:
$LN9@stbi__load:
; Line 6952
	cmp	QWORD PTR u$5[rbp], 0
	jne	$LN4@stbi__load
; Line 6955
	mov	rcx, QWORD PTR g$8[rbp+8]
	call	QWORD PTR __imp_free
; Line 6956
	mov	rcx, QWORD PTR g$8[rbp+24]
	call	QWORD PTR __imp_free
; Line 6957
	mov	rcx, QWORD PTR g$8[rbp+16]
	call	QWORD PTR __imp_free
; Line 6960
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN21@stbi__load
	cmp	DWORD PTR req_comp$[rbp], 4
	je	SHORT $LN21@stbi__load
; Line 6961
	mov	eax, DWORD PTR layers$4[rbp]
	imul	eax, DWORD PTR g$8[rbp]
	mov	ecx, DWORD PTR g$8[rbp+4]
	mov	DWORD PTR [rsp+32], ecx
	mov	r9d, eax
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, 4
	mov	rcx, QWORD PTR out$6[rbp]
	call	?stbi__convert_format@@YAPEAEPEAEHHII@Z	; stbi__convert_format
	mov	QWORD PTR out$6[rbp], rax
$LN21@stbi__load:
; Line 6963
	mov	rax, QWORD PTR z$[rbp]
	mov	ecx, DWORD PTR layers$4[rbp]
	mov	DWORD PTR [rax], ecx
; Line 6964
	mov	rax, QWORD PTR out$6[rbp]
	jmp	SHORT $LN1@stbi__load
; Line 6965
	jmp	SHORT $LN6@stbi__load
$LN5@stbi__load:
; Line 6966
	lea	rcx, OFFSET FLAT:??_C@_07KMJLPAII@not?5GIF@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN23@stbi__load
	mov	DWORD PTR tv209[rbp], 0
	jmp	SHORT $LN24@stbi__load
$LN23@stbi__load:
	mov	DWORD PTR tv209[rbp], 0
$LN24@stbi__load:
	movsxd	rax, DWORD PTR tv209[rbp]
$LN6@stbi__load:
$LN1@stbi__load:
; Line 6968
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+36808]
	pop	rdi
	pop	rbp
	ret	0
?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z ENDP ; stbi__load_gif_main
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
_TEXT	SEGMENT
u$ = 8
g$ = 48
__$ArrayPad$ = 36520
s$ = 36560
x$ = 36568
y$ = 36576
comp$ = 36584
req_comp$ = 36592
ri$ = 36600
?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z PROC ; stbi__gif_load, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6971
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 36584				; 00008ee8H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 8750				; 0000222eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+36616]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6972
	mov	QWORD PTR u$[rbp], 0
; Line 6974
	mov	r8d, 34928				; 00008870H
	xor	edx, edx
	lea	rcx, QWORD PTR g$[rbp]
	call	memset
; Line 6977
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, DWORD PTR req_comp$[rbp]
	mov	r8, QWORD PTR comp$[rbp]
	lea	rdx, QWORD PTR g$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_load_next@@YAPEAEPEAUstbi__context@@PEAUstbi__gif@@PEAHHPEAE@Z ; stbi__gif_load_next
	mov	QWORD PTR u$[rbp], rax
; Line 6978
	mov	rax, QWORD PTR s$[rbp]
	cmp	QWORD PTR u$[rbp], rax
	jne	SHORT $LN2@stbi__gif_
	mov	QWORD PTR u$[rbp], 0
$LN2@stbi__gif_:
; Line 6979
	cmp	QWORD PTR u$[rbp], 0
	je	SHORT $LN3@stbi__gif_
; Line 6980
	mov	rax, QWORD PTR x$[rbp]
	mov	ecx, DWORD PTR g$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 6981
	mov	rax, QWORD PTR y$[rbp]
	mov	ecx, DWORD PTR g$[rbp+4]
	mov	DWORD PTR [rax], ecx
; Line 6985
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN5@stbi__gif_
	cmp	DWORD PTR req_comp$[rbp], 4
	je	SHORT $LN5@stbi__gif_
; Line 6986
	mov	eax, DWORD PTR g$[rbp+4]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR g$[rbp]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, 4
	mov	rcx, QWORD PTR u$[rbp]
	call	?stbi__convert_format@@YAPEAEPEAEHHII@Z	; stbi__convert_format
	mov	QWORD PTR u$[rbp], rax
$LN5@stbi__gif_:
	jmp	SHORT $LN4@stbi__gif_
$LN3@stbi__gif_:
; Line 6987
	cmp	QWORD PTR g$[rbp+8], 0
	je	SHORT $LN6@stbi__gif_
; Line 6989
	mov	rcx, QWORD PTR g$[rbp+8]
	call	QWORD PTR __imp_free
$LN6@stbi__gif_:
$LN4@stbi__gif_:
; Line 6993
	mov	rcx, QWORD PTR g$[rbp+24]
	call	QWORD PTR __imp_free
; Line 6994
	mov	rcx, QWORD PTR g$[rbp+16]
	call	QWORD PTR __imp_free
; Line 6996
	mov	rax, QWORD PTR u$[rbp]
; Line 6997
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+36536]
	pop	rdi
	pop	rbp
	ret	0
?stbi__gif_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ENDP ; stbi__gif_load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__gif_test@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
r$ = 4
s$ = 256
?stbi__gif_test@@YAHPEAUstbi__context@@@Z PROC		; stbi__gif_test, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6513
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6514
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__gif_test_raw@@YAHPEAUstbi__context@@@Z ; stbi__gif_test_raw
	mov	DWORD PTR r$[rbp], eax
; Line 6515
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 6516
	mov	eax, DWORD PTR r$[rbp]
; Line 6517
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__gif_test@@YAHPEAUstbi__context@@@Z ENDP		; stbi__gif_test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
act_comp$ = 4
num_packets$ = 36
chained$ = 68
dummy$ = 100
packets$ = 136
packet$5 = 200
tv154 = 404
tv95 = 408
__$ArrayPad$ = 416
s$ = 464
x$ = 472
y$ = 480
comp$ = 488
?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__pic_info, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7346
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 472				; 000001d8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+504]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7347
	mov	DWORD PTR act_comp$[rbp], 0
	mov	DWORD PTR num_packets$[rbp], 0
; Line 7350
	cmp	QWORD PTR x$[rbp], 0
	jne	SHORT $LN5@stbi__pic_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR x$[rbp], rax
$LN5@stbi__pic_:
; Line 7351
	cmp	QWORD PTR y$[rbp], 0
	jne	SHORT $LN6@stbi__pic_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR y$[rbp], rax
$LN6@stbi__pic_:
; Line 7352
	cmp	QWORD PTR comp$[rbp], 0
	jne	SHORT $LN7@stbi__pic_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR comp$[rbp], rax
$LN7@stbi__pic_:
; Line 7354
	lea	rdx, OFFSET FLAT:??_C@_04KBFEPHFH@S?$IA?v4@
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pic_is4@@YAHPEAUstbi__context@@PEBD@Z ; stbi__pic_is4
	test	eax, eax
	jne	SHORT $LN8@stbi__pic_
; Line 7355
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7356
	xor	eax, eax
	jmp	$LN1@stbi__pic_
$LN8@stbi__pic_:
; Line 7359
	mov	edx, 88					; 00000058H
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 7361
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	rcx, QWORD PTR x$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 7362
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	rcx, QWORD PTR y$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 7363
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	je	SHORT $LN9@stbi__pic_
; Line 7364
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7365
	xor	eax, eax
	jmp	$LN1@stbi__pic_
$LN9@stbi__pic_:
; Line 7367
	mov	rax, QWORD PTR x$[rbp]
	cmp	DWORD PTR [rax], 0
	je	SHORT $LN10@stbi__pic_
	mov	eax, 268435456				; 10000000H
	cdq
	mov	rcx, QWORD PTR x$[rbp]
	idiv	DWORD PTR [rcx]
	mov	rcx, QWORD PTR y$[rbp]
	cmp	eax, DWORD PTR [rcx]
	jge	SHORT $LN10@stbi__pic_
; Line 7368
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7369
	xor	eax, eax
	jmp	$LN1@stbi__pic_
$LN10@stbi__pic_:
; Line 7372
	mov	edx, 8
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
$LN4@stbi__pic_:
; Line 7377
	movsxd	rax, DWORD PTR num_packets$[rbp]
	cmp	rax, 10
	jne	SHORT $LN11@stbi__pic_
; Line 7378
	xor	eax, eax
	jmp	$LN1@stbi__pic_
$LN11@stbi__pic_:
; Line 7380
	movsxd	rax, DWORD PTR num_packets$[rbp]
	imul	rax, rax, 3
	lea	rax, QWORD PTR packets$[rbp+rax]
	mov	QWORD PTR tv95[rbp], rax
	mov	eax, DWORD PTR num_packets$[rbp]
	inc	eax
	mov	DWORD PTR num_packets$[rbp], eax
	mov	rax, QWORD PTR tv95[rbp]
	mov	QWORD PTR packet$5[rbp], rax
; Line 7381
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR chained$[rbp], eax
; Line 7382
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR packet$5[rbp]
	mov	BYTE PTR [rcx], al
; Line 7383
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR packet$5[rbp]
	mov	BYTE PTR [rcx+1], al
; Line 7384
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR packet$5[rbp]
	mov	BYTE PTR [rcx+2], al
; Line 7385
	mov	rax, QWORD PTR packet$5[rbp]
	movzx	eax, BYTE PTR [rax+2]
	mov	ecx, DWORD PTR act_comp$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR act_comp$[rbp], eax
; Line 7387
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	je	SHORT $LN12@stbi__pic_
; Line 7388
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7389
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pic_
$LN12@stbi__pic_:
; Line 7391
	mov	rax, QWORD PTR packet$5[rbp]
	movzx	eax, BYTE PTR [rax]
	cmp	eax, 8
	je	SHORT $LN13@stbi__pic_
; Line 7392
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7393
	xor	eax, eax
	jmp	SHORT $LN1@stbi__pic_
$LN13@stbi__pic_:
; Line 7395
	cmp	DWORD PTR chained$[rbp], 0
	jne	$LN4@stbi__pic_
; Line 7397
	mov	eax, DWORD PTR act_comp$[rbp]
	and	eax, 16
	test	eax, eax
	je	SHORT $LN15@stbi__pic_
	mov	DWORD PTR tv154[rbp], 4
	jmp	SHORT $LN16@stbi__pic_
$LN15@stbi__pic_:
	mov	DWORD PTR tv154[rbp], 3
$LN16@stbi__pic_:
	mov	rax, QWORD PTR comp$[rbp]
	mov	ecx, DWORD PTR tv154[rbp]
	mov	DWORD PTR [rax], ecx
; Line 7399
	mov	eax, 1
$LN1@stbi__pic_:
; Line 7400
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+440]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pic_info@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__pic_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
_TEXT	SEGMENT
result$ = 8
i$ = 36
x$ = 68
y$ = 100
internal_comp$ = 132
tv147 = 340
tv133 = 340
tv90 = 340
tv82 = 340
tv76 = 340
__$ArrayPad$ = 344
s$ = 384
px$ = 392
py$ = 400
comp$ = 408
req_comp$ = 416
ri$ = 424
?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z PROC ; stbi__pic_load, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6423
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 408				; 00000198H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 42					; 0000002aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+440]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6428
	cmp	QWORD PTR comp$[rbp], 0
	jne	SHORT $LN5@stbi__pic_
	lea	rax, QWORD PTR internal_comp$[rbp]
	mov	QWORD PTR comp$[rbp], rax
$LN5@stbi__pic_:
; Line 6430
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__pic_
$LN2@stbi__pic_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__pic_:
	cmp	DWORD PTR i$[rbp], 92			; 0000005cH
	jge	SHORT $LN3@stbi__pic_
; Line 6431
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	jmp	SHORT $LN2@stbi__pic_
$LN3@stbi__pic_:
; Line 6433
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR x$[rbp], eax
; Line 6434
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR y$[rbp], eax
; Line 6436
	cmp	DWORD PTR y$[rbp], 16777216		; 01000000H
	jle	SHORT $LN6@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN14@stbi__pic_
	mov	DWORD PTR tv76[rbp], 0
	jmp	SHORT $LN15@stbi__pic_
$LN14@stbi__pic_:
	mov	DWORD PTR tv76[rbp], 0
$LN15@stbi__pic_:
	movsxd	rax, DWORD PTR tv76[rbp]
	jmp	$LN1@stbi__pic_
$LN6@stbi__pic_:
; Line 6437
	cmp	DWORD PTR x$[rbp], 16777216		; 01000000H
	jle	SHORT $LN7@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN16@stbi__pic_
	mov	DWORD PTR tv82[rbp], 0
	jmp	SHORT $LN17@stbi__pic_
$LN16@stbi__pic_:
	mov	DWORD PTR tv82[rbp], 0
$LN17@stbi__pic_:
	movsxd	rax, DWORD PTR tv82[rbp]
	jmp	$LN1@stbi__pic_
$LN7@stbi__pic_:
; Line 6439
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__at_eof@@YAHPEAUstbi__context@@@Z	; stbi__at_eof
	test	eax, eax
	je	SHORT $LN8@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_08GGMBIFE@bad?5file@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN18@stbi__pic_
	mov	DWORD PTR tv90[rbp], 0
	jmp	SHORT $LN19@stbi__pic_
$LN18@stbi__pic_:
	mov	DWORD PTR tv90[rbp], 0
$LN19@stbi__pic_:
	movsxd	rax, DWORD PTR tv90[rbp]
	jmp	$LN1@stbi__pic_
$LN8@stbi__pic_:
; Line 6440
	xor	r9d, r9d
	mov	r8d, 4
	mov	edx, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	call	?stbi__mad3sizes_valid@@YAHHHHH@Z	; stbi__mad3sizes_valid
	test	eax, eax
	jne	SHORT $LN9@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN20@stbi__pic_
	mov	DWORD PTR tv133[rbp], 0
	jmp	SHORT $LN21@stbi__pic_
$LN20@stbi__pic_:
	mov	DWORD PTR tv133[rbp], 0
$LN21@stbi__pic_:
	movsxd	rax, DWORD PTR tv133[rbp]
	jmp	$LN1@stbi__pic_
$LN9@stbi__pic_:
; Line 6442
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
; Line 6443
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
; Line 6444
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
; Line 6447
	xor	r9d, r9d
	mov	r8d, 4
	mov	edx, DWORD PTR y$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	mov	QWORD PTR result$[rbp], rax
; Line 6448
	cmp	QWORD PTR result$[rbp], 0
	jne	SHORT $LN10@stbi__pic_
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN22@stbi__pic_
	mov	DWORD PTR tv147[rbp], 0
	jmp	SHORT $LN23@stbi__pic_
$LN22@stbi__pic_:
	mov	DWORD PTR tv147[rbp], 0
$LN23@stbi__pic_:
	movsxd	rax, DWORD PTR tv147[rbp]
	jmp	$LN1@stbi__pic_
$LN10@stbi__pic_:
; Line 6449
	mov	eax, DWORD PTR x$[rbp]
	imul	eax, DWORD PTR y$[rbp]
	shl	eax, 2
	cdqe
	mov	r8, rax
	mov	edx, 255				; 000000ffH
	mov	rcx, QWORD PTR result$[rbp]
	call	memset
; Line 6451
	mov	rax, QWORD PTR result$[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8d, DWORD PTR y$[rbp]
	mov	edx, DWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pic_load_core@@YAPEAEPEAUstbi__context@@HHPEAHPEAE@Z ; stbi__pic_load_core
	test	rax, rax
	jne	SHORT $LN11@stbi__pic_
; Line 6452
	mov	rcx, QWORD PTR result$[rbp]
	call	QWORD PTR __imp_free
; Line 6453
	mov	QWORD PTR result$[rbp], 0
$LN11@stbi__pic_:
; Line 6455
	mov	rax, QWORD PTR px$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 6456
	mov	rax, QWORD PTR py$[rbp]
	mov	ecx, DWORD PTR y$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 6457
	cmp	DWORD PTR req_comp$[rbp], 0
	jne	SHORT $LN12@stbi__pic_
	mov	rax, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR req_comp$[rbp], eax
$LN12@stbi__pic_:
; Line 6458
	mov	eax, DWORD PTR y$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR x$[rbp]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, 4
	mov	rcx, QWORD PTR result$[rbp]
	call	?stbi__convert_format@@YAPEAEPEAEHHII@Z	; stbi__convert_format
	mov	QWORD PTR result$[rbp], rax
; Line 6460
	mov	rax, QWORD PTR result$[rbp]
$LN1@stbi__pic_:
; Line 6461
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pic_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ENDP ; stbi__pic_load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__pic_test@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
r$ = 4
s$ = 256
?stbi__pic_test@@YAHPEAUstbi__context@@@Z PROC		; stbi__pic_test, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6464
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6465
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__pic_test_core@@YAHPEAUstbi__context@@@Z ; stbi__pic_test_core
	mov	DWORD PTR r$[rbp], eax
; Line 6466
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 6467
	mov	eax, DWORD PTR r$[rbp]
; Line 6468
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__pic_test@@YAHPEAUstbi__context@@@Z ENDP		; stbi__pic_test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
buffer$ = 16
token$ = 1064
valid$ = 1092
dummy$ = 1124
__$ArrayPad$ = 1720
s$ = 1760
x$ = 1768
y$ = 1776
comp$ = 1784
?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__hdr_info, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7212
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1768				; 000006e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 290				; 00000122H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1800]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7215
	mov	DWORD PTR valid$[rbp], 0
; Line 7218
	cmp	QWORD PTR x$[rbp], 0
	jne	SHORT $LN7@stbi__hdr_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR x$[rbp], rax
$LN7@stbi__hdr_:
; Line 7219
	cmp	QWORD PTR y$[rbp], 0
	jne	SHORT $LN8@stbi__hdr_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR y$[rbp], rax
$LN8@stbi__hdr_:
; Line 7220
	cmp	QWORD PTR comp$[rbp], 0
	jne	SHORT $LN9@stbi__hdr_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR comp$[rbp], rax
$LN9@stbi__hdr_:
; Line 7222
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_test@@YAHPEAUstbi__context@@@Z ; stbi__hdr_test
	test	eax, eax
	jne	SHORT $LN10@stbi__hdr_
; Line 7223
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7224
	xor	eax, eax
	jmp	$LN1@stbi__hdr_
$LN10@stbi__hdr_:
$LN2@stbi__hdr_:
; Line 7228
	lea	rdx, QWORD PTR buffer$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z ; stbi__hdr_gettoken
	mov	QWORD PTR token$[rbp], rax
; Line 7229
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR token$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	jne	SHORT $LN11@stbi__hdr_
	jmp	SHORT $LN3@stbi__hdr_
$LN11@stbi__hdr_:
; Line 7230
	lea	rdx, OFFSET FLAT:??_C@_0BH@JFGBLLKC@FORMAT?$DN32?9bit_rle_rgbe@
	mov	rcx, QWORD PTR token$[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN12@stbi__hdr_
	mov	DWORD PTR valid$[rbp], 1
$LN12@stbi__hdr_:
; Line 7231
	jmp	SHORT $LN2@stbi__hdr_
$LN3@stbi__hdr_:
; Line 7233
	cmp	DWORD PTR valid$[rbp], 0
	jne	SHORT $LN13@stbi__hdr_
; Line 7234
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7235
	xor	eax, eax
	jmp	$LN1@stbi__hdr_
$LN13@stbi__hdr_:
; Line 7237
	lea	rdx, QWORD PTR buffer$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z ; stbi__hdr_gettoken
	mov	QWORD PTR token$[rbp], rax
; Line 7238
	mov	r8d, 3
	lea	rdx, OFFSET FLAT:??_C@_03HKAKGGJN@?9Y?5@
	mov	rcx, QWORD PTR token$[rbp]
	call	QWORD PTR __imp_strncmp
	test	eax, eax
	je	SHORT $LN14@stbi__hdr_
; Line 7239
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7240
	xor	eax, eax
	jmp	$LN1@stbi__hdr_
$LN14@stbi__hdr_:
; Line 7242
	mov	rax, QWORD PTR token$[rbp]
	add	rax, 3
	mov	QWORD PTR token$[rbp], rax
; Line 7243
	mov	r8d, 10
	lea	rdx, QWORD PTR token$[rbp]
	mov	rcx, QWORD PTR token$[rbp]
	call	QWORD PTR __imp_strtol
	mov	rcx, QWORD PTR y$[rbp]
	mov	DWORD PTR [rcx], eax
$LN5@stbi__hdr_:
; Line 7244
	mov	rax, QWORD PTR token$[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN6@stbi__hdr_
	mov	rax, QWORD PTR token$[rbp]
	inc	rax
	mov	QWORD PTR token$[rbp], rax
	jmp	SHORT $LN5@stbi__hdr_
$LN6@stbi__hdr_:
; Line 7245
	mov	r8d, 3
	lea	rdx, OFFSET FLAT:??_C@_03FOKDFDHG@?$CLX?5@
	mov	rcx, QWORD PTR token$[rbp]
	call	QWORD PTR __imp_strncmp
	test	eax, eax
	je	SHORT $LN15@stbi__hdr_
; Line 7246
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7247
	xor	eax, eax
	jmp	SHORT $LN1@stbi__hdr_
$LN15@stbi__hdr_:
; Line 7249
	mov	rax, QWORD PTR token$[rbp]
	add	rax, 3
	mov	QWORD PTR token$[rbp], rax
; Line 7250
	mov	r8d, 10
	xor	edx, edx
	mov	rcx, QWORD PTR token$[rbp]
	call	QWORD PTR __imp_strtol
	mov	rcx, QWORD PTR x$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 7251
	mov	rax, QWORD PTR comp$[rbp]
	mov	DWORD PTR [rax], 3
; Line 7252
	mov	eax, 1
$LN1@stbi__hdr_:
; Line 7253
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1736]
	pop	rdi
	pop	rbp
	ret	0
?stbi__hdr_info@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__hdr_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
_TEXT	SEGMENT
buffer$ = 16
token$ = 1064
valid$ = 1092
width$ = 1124
height$ = 1156
scanline$ = 1192
hdr_data$ = 1224
len$ = 1252
count$ = 1284
value$ = 1316
i$ = 1348
j$ = 1380
k$ = 1412
c1$ = 1444
c2$ = 1476
z$ = 1508
headerToken$ = 1544
rgbe$7 = 1572
rgbe$8 = 1604
nleft$9 = 1636
tv316 = 2420
tv298 = 2420
tv276 = 2420
tv264 = 2420
tv201 = 2420
tv189 = 2420
tv175 = 2420
tv169 = 2420
tv158 = 2420
tv140 = 2420
tv95 = 2420
tv78 = 2420
__$ArrayPad$ = 2424
s$ = 2464
x$ = 2472
y$ = 2480
comp$ = 2488
req_comp$ = 2496
ri$ = 2504
?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z PROC ; stbi__hdr_load, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7081
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 2488				; 000009b8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 418				; 000001a2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+2520]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7084
	mov	DWORD PTR valid$[rbp], 0
; Line 7095
	lea	rdx, QWORD PTR buffer$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z ; stbi__hdr_gettoken
	mov	QWORD PTR headerToken$[rbp], rax
; Line 7096
	lea	rdx, OFFSET FLAT:??_C@_0L@NCPEAJBD@?$CD?$DPRADIANCE@
	mov	rcx, QWORD PTR headerToken$[rbp]
	call	strcmp
	test	eax, eax
	je	SHORT $LN30@stbi__hdr_
	lea	rdx, OFFSET FLAT:??_C@_06NDOKKIDJ@?$CD?$DPRGBE@
	mov	rcx, QWORD PTR headerToken$[rbp]
	call	strcmp
	test	eax, eax
	je	SHORT $LN30@stbi__hdr_
; Line 7097
	lea	rcx, OFFSET FLAT:??_C@_07NCIOKENI@not?5HDR@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN56@stbi__hdr_
	mov	DWORD PTR tv78[rbp], 0
	jmp	SHORT $LN57@stbi__hdr_
$LN56@stbi__hdr_:
	mov	DWORD PTR tv78[rbp], 0
$LN57@stbi__hdr_:
	movsxd	rax, DWORD PTR tv78[rbp]
	jmp	$LN1@stbi__hdr_
$LN30@stbi__hdr_:
$LN2@stbi__hdr_:
; Line 7101
	lea	rdx, QWORD PTR buffer$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z ; stbi__hdr_gettoken
	mov	QWORD PTR token$[rbp], rax
; Line 7102
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR token$[rbp]
	movsx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	jne	SHORT $LN31@stbi__hdr_
	jmp	SHORT $LN3@stbi__hdr_
$LN31@stbi__hdr_:
; Line 7103
	lea	rdx, OFFSET FLAT:??_C@_0BH@JFGBLLKC@FORMAT?$DN32?9bit_rle_rgbe@
	mov	rcx, QWORD PTR token$[rbp]
	call	strcmp
	test	eax, eax
	jne	SHORT $LN32@stbi__hdr_
	mov	DWORD PTR valid$[rbp], 1
$LN32@stbi__hdr_:
; Line 7104
	jmp	SHORT $LN2@stbi__hdr_
$LN3@stbi__hdr_:
; Line 7106
	cmp	DWORD PTR valid$[rbp], 0
	jne	SHORT $LN33@stbi__hdr_
	lea	rcx, OFFSET FLAT:??_C@_0BD@NKJFFLKL@unsupported?5format@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN58@stbi__hdr_
	mov	DWORD PTR tv95[rbp], 0
	jmp	SHORT $LN59@stbi__hdr_
$LN58@stbi__hdr_:
	mov	DWORD PTR tv95[rbp], 0
$LN59@stbi__hdr_:
	movsxd	rax, DWORD PTR tv95[rbp]
	jmp	$LN1@stbi__hdr_
$LN33@stbi__hdr_:
; Line 7110
	lea	rdx, QWORD PTR buffer$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_gettoken@@YAPEADPEAUstbi__context@@PEAD@Z ; stbi__hdr_gettoken
	mov	QWORD PTR token$[rbp], rax
; Line 7111
	mov	r8d, 3
	lea	rdx, OFFSET FLAT:??_C@_03HKAKGGJN@?9Y?5@
	mov	rcx, QWORD PTR token$[rbp]
	call	QWORD PTR __imp_strncmp
	test	eax, eax
	je	SHORT $LN34@stbi__hdr_
	lea	rcx, OFFSET FLAT:??_C@_0BI@DCNDPIOH@unsupported?5data?5layout@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN60@stbi__hdr_
	mov	DWORD PTR tv140[rbp], 0
	jmp	SHORT $LN61@stbi__hdr_
$LN60@stbi__hdr_:
	mov	DWORD PTR tv140[rbp], 0
$LN61@stbi__hdr_:
	movsxd	rax, DWORD PTR tv140[rbp]
	jmp	$LN1@stbi__hdr_
$LN34@stbi__hdr_:
; Line 7112
	mov	rax, QWORD PTR token$[rbp]
	add	rax, 3
	mov	QWORD PTR token$[rbp], rax
; Line 7113
	mov	r8d, 10
	lea	rdx, QWORD PTR token$[rbp]
	mov	rcx, QWORD PTR token$[rbp]
	call	QWORD PTR __imp_strtol
	mov	DWORD PTR height$[rbp], eax
$LN5@stbi__hdr_:
; Line 7114
	mov	rax, QWORD PTR token$[rbp]
	movsx	eax, BYTE PTR [rax]
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN6@stbi__hdr_
	mov	rax, QWORD PTR token$[rbp]
	inc	rax
	mov	QWORD PTR token$[rbp], rax
	jmp	SHORT $LN5@stbi__hdr_
$LN6@stbi__hdr_:
; Line 7115
	mov	r8d, 3
	lea	rdx, OFFSET FLAT:??_C@_03FOKDFDHG@?$CLX?5@
	mov	rcx, QWORD PTR token$[rbp]
	call	QWORD PTR __imp_strncmp
	test	eax, eax
	je	SHORT $LN35@stbi__hdr_
	lea	rcx, OFFSET FLAT:??_C@_0BI@DCNDPIOH@unsupported?5data?5layout@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN62@stbi__hdr_
	mov	DWORD PTR tv158[rbp], 0
	jmp	SHORT $LN63@stbi__hdr_
$LN62@stbi__hdr_:
	mov	DWORD PTR tv158[rbp], 0
$LN63@stbi__hdr_:
	movsxd	rax, DWORD PTR tv158[rbp]
	jmp	$LN1@stbi__hdr_
$LN35@stbi__hdr_:
; Line 7116
	mov	rax, QWORD PTR token$[rbp]
	add	rax, 3
	mov	QWORD PTR token$[rbp], rax
; Line 7117
	mov	r8d, 10
	xor	edx, edx
	mov	rcx, QWORD PTR token$[rbp]
	call	QWORD PTR __imp_strtol
	mov	DWORD PTR width$[rbp], eax
; Line 7119
	cmp	DWORD PTR height$[rbp], 16777216	; 01000000H
	jle	SHORT $LN36@stbi__hdr_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN64@stbi__hdr_
	mov	DWORD PTR tv169[rbp], 0
	jmp	SHORT $LN65@stbi__hdr_
$LN64@stbi__hdr_:
	mov	DWORD PTR tv169[rbp], 0
$LN65@stbi__hdr_:
	movsxd	rax, DWORD PTR tv169[rbp]
	jmp	$LN1@stbi__hdr_
$LN36@stbi__hdr_:
; Line 7120
	cmp	DWORD PTR width$[rbp], 16777216		; 01000000H
	jle	SHORT $LN37@stbi__hdr_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN66@stbi__hdr_
	mov	DWORD PTR tv175[rbp], 0
	jmp	SHORT $LN67@stbi__hdr_
$LN66@stbi__hdr_:
	mov	DWORD PTR tv175[rbp], 0
$LN67@stbi__hdr_:
	movsxd	rax, DWORD PTR tv175[rbp]
	jmp	$LN1@stbi__hdr_
$LN37@stbi__hdr_:
; Line 7122
	mov	rax, QWORD PTR x$[rbp]
	mov	ecx, DWORD PTR width$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 7123
	mov	rax, QWORD PTR y$[rbp]
	mov	ecx, DWORD PTR height$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 7125
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN38@stbi__hdr_
	mov	rax, QWORD PTR comp$[rbp]
	mov	DWORD PTR [rax], 3
$LN38@stbi__hdr_:
; Line 7126
	cmp	DWORD PTR req_comp$[rbp], 0
	jne	SHORT $LN39@stbi__hdr_
	mov	DWORD PTR req_comp$[rbp], 3
$LN39@stbi__hdr_:
; Line 7128
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 4
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, DWORD PTR height$[rbp]
	mov	ecx, DWORD PTR width$[rbp]
	call	?stbi__mad4sizes_valid@@YAHHHHHH@Z	; stbi__mad4sizes_valid
	test	eax, eax
	jne	SHORT $LN40@stbi__hdr_
; Line 7129
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN68@stbi__hdr_
	mov	DWORD PTR tv189[rbp], 0
	jmp	SHORT $LN69@stbi__hdr_
$LN68@stbi__hdr_:
	mov	DWORD PTR tv189[rbp], 0
$LN69@stbi__hdr_:
	movsxd	rax, DWORD PTR tv189[rbp]
	jmp	$LN1@stbi__hdr_
$LN40@stbi__hdr_:
; Line 7132
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 4
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, DWORD PTR height$[rbp]
	mov	ecx, DWORD PTR width$[rbp]
	call	?stbi__malloc_mad4@@YAPEAXHHHHH@Z	; stbi__malloc_mad4
	mov	QWORD PTR hdr_data$[rbp], rax
; Line 7133
	cmp	QWORD PTR hdr_data$[rbp], 0
	jne	SHORT $LN41@stbi__hdr_
; Line 7134
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN70@stbi__hdr_
	mov	DWORD PTR tv201[rbp], 0
	jmp	SHORT $LN71@stbi__hdr_
$LN70@stbi__hdr_:
	mov	DWORD PTR tv201[rbp], 0
$LN71@stbi__hdr_:
	movsxd	rax, DWORD PTR tv201[rbp]
	jmp	$LN1@stbi__hdr_
$LN41@stbi__hdr_:
; Line 7138
	cmp	DWORD PTR width$[rbp], 8
	jl	SHORT $LN44@stbi__hdr_
	cmp	DWORD PTR width$[rbp], 32768		; 00008000H
	jl	$LN42@stbi__hdr_
$LN44@stbi__hdr_:
; Line 7140
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN9@stbi__hdr_
$LN7@stbi__hdr_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN9@stbi__hdr_:
	mov	eax, DWORD PTR height$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jge	$LN8@stbi__hdr_
; Line 7141
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN12@stbi__hdr_
$LN10@stbi__hdr_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN12@stbi__hdr_:
	mov	eax, DWORD PTR width$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN11@stbi__hdr_
$main_decode_loop$80:
; Line 7144
	mov	r8d, 4
	lea	rdx, QWORD PTR rgbe$7[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z ; stbi__getn
; Line 7145
	mov	eax, DWORD PTR j$[rbp]
	imul	eax, DWORD PTR width$[rbp]
	imul	eax, DWORD PTR req_comp$[rbp]
	cdqe
	mov	rcx, QWORD PTR hdr_data$[rbp]
	lea	rax, QWORD PTR [rcx+rax*4]
	mov	ecx, DWORD PTR i$[rbp]
	imul	ecx, DWORD PTR req_comp$[rbp]
	movsxd	rcx, ecx
	lea	rax, QWORD PTR [rax+rcx*4]
	mov	r8d, DWORD PTR req_comp$[rbp]
	lea	rdx, QWORD PTR rgbe$7[rbp]
	mov	rcx, rax
	call	?stbi__hdr_convert@@YAXPEAMPEAEH@Z	; stbi__hdr_convert
; Line 7146
	jmp	$LN10@stbi__hdr_
$LN11@stbi__hdr_:
; Line 7147
	jmp	$LN7@stbi__hdr_
$LN8@stbi__hdr_:
; Line 7148
	jmp	$LN43@stbi__hdr_
$LN42@stbi__hdr_:
; Line 7150
	mov	QWORD PTR scanline$[rbp], 0
; Line 7152
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN15@stbi__hdr_
$LN13@stbi__hdr_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN15@stbi__hdr_:
	mov	eax, DWORD PTR height$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jge	$LN14@stbi__hdr_
; Line 7153
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR c1$[rbp], eax
; Line 7154
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR c2$[rbp], eax
; Line 7155
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR len$[rbp], eax
; Line 7156
	cmp	DWORD PTR c1$[rbp], 2
	jne	SHORT $LN46@stbi__hdr_
	cmp	DWORD PTR c2$[rbp], 2
	jne	SHORT $LN46@stbi__hdr_
	mov	eax, DWORD PTR len$[rbp]
	and	eax, 128				; 00000080H
	test	eax, eax
	je	$LN45@stbi__hdr_
$LN46@stbi__hdr_:
; Line 7160
	mov	eax, 1
	imul	rax, rax, 0
	movzx	ecx, BYTE PTR c1$[rbp]
	mov	BYTE PTR rgbe$8[rbp+rax], cl
; Line 7161
	mov	eax, 1
	imul	rax, rax, 1
	movzx	ecx, BYTE PTR c2$[rbp]
	mov	BYTE PTR rgbe$8[rbp+rax], cl
; Line 7162
	mov	eax, 1
	imul	rax, rax, 2
	movzx	ecx, BYTE PTR len$[rbp]
	mov	BYTE PTR rgbe$8[rbp+rax], cl
; Line 7163
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	BYTE PTR rgbe$8[rbp+rcx], al
; Line 7164
	mov	r8d, DWORD PTR req_comp$[rbp]
	lea	rdx, QWORD PTR rgbe$8[rbp]
	mov	rcx, QWORD PTR hdr_data$[rbp]
	call	?stbi__hdr_convert@@YAXPEAMPEAEH@Z	; stbi__hdr_convert
; Line 7165
	mov	DWORD PTR i$[rbp], 1
; Line 7166
	mov	DWORD PTR j$[rbp], 0
; Line 7167
	mov	rcx, QWORD PTR scanline$[rbp]
	call	QWORD PTR __imp_free
; Line 7168
	jmp	$main_decode_loop$80
$LN45@stbi__hdr_:
; Line 7170
	mov	eax, DWORD PTR len$[rbp]
	shl	eax, 8
	mov	DWORD PTR len$[rbp], eax
; Line 7171
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	ecx, DWORD PTR len$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR len$[rbp], eax
; Line 7172
	mov	eax, DWORD PTR width$[rbp]
	cmp	DWORD PTR len$[rbp], eax
	je	SHORT $LN47@stbi__hdr_
	mov	rcx, QWORD PTR hdr_data$[rbp]
	call	QWORD PTR __imp_free
	mov	rcx, QWORD PTR scanline$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_0CA@JBEOCDFN@invalid?5decoded?5scanline?5length@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN72@stbi__hdr_
	mov	DWORD PTR tv264[rbp], 0
	jmp	SHORT $LN73@stbi__hdr_
$LN72@stbi__hdr_:
	mov	DWORD PTR tv264[rbp], 0
$LN73@stbi__hdr_:
	movsxd	rax, DWORD PTR tv264[rbp]
	jmp	$LN1@stbi__hdr_
$LN47@stbi__hdr_:
; Line 7173
	cmp	QWORD PTR scanline$[rbp], 0
	jne	SHORT $LN48@stbi__hdr_
; Line 7174
	xor	r8d, r8d
	mov	edx, 4
	mov	ecx, DWORD PTR width$[rbp]
	call	?stbi__malloc_mad2@@YAPEAXHHH@Z		; stbi__malloc_mad2
	mov	QWORD PTR scanline$[rbp], rax
; Line 7175
	cmp	QWORD PTR scanline$[rbp], 0
	jne	SHORT $LN49@stbi__hdr_
; Line 7176
	mov	rcx, QWORD PTR hdr_data$[rbp]
	call	QWORD PTR __imp_free
; Line 7177
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN74@stbi__hdr_
	mov	DWORD PTR tv276[rbp], 0
	jmp	SHORT $LN75@stbi__hdr_
$LN74@stbi__hdr_:
	mov	DWORD PTR tv276[rbp], 0
$LN75@stbi__hdr_:
	movsxd	rax, DWORD PTR tv276[rbp]
	jmp	$LN1@stbi__hdr_
$LN49@stbi__hdr_:
$LN48@stbi__hdr_:
; Line 7181
	mov	DWORD PTR k$[rbp], 0
	jmp	SHORT $LN18@stbi__hdr_
$LN16@stbi__hdr_:
	mov	eax, DWORD PTR k$[rbp]
	inc	eax
	mov	DWORD PTR k$[rbp], eax
$LN18@stbi__hdr_:
	cmp	DWORD PTR k$[rbp], 4
	jge	$LN17@stbi__hdr_
; Line 7183
	mov	DWORD PTR i$[rbp], 0
$LN19@stbi__hdr_:
; Line 7184
	mov	eax, DWORD PTR i$[rbp]
	mov	ecx, DWORD PTR width$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR nleft$9[rbp], eax
	cmp	DWORD PTR nleft$9[rbp], 0
	jle	$LN20@stbi__hdr_
; Line 7185
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR count$[rbp], al
; Line 7186
	movzx	eax, BYTE PTR count$[rbp]
	cmp	eax, 128				; 00000080H
	jle	$LN50@stbi__hdr_
; Line 7188
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	BYTE PTR value$[rbp], al
; Line 7189
	movzx	eax, BYTE PTR count$[rbp]
	sub	eax, 128				; 00000080H
	mov	BYTE PTR count$[rbp], al
; Line 7190
	movzx	eax, BYTE PTR count$[rbp]
	cmp	eax, DWORD PTR nleft$9[rbp]
	jle	SHORT $LN52@stbi__hdr_
	mov	rcx, QWORD PTR hdr_data$[rbp]
	call	QWORD PTR __imp_free
	mov	rcx, QWORD PTR scanline$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_07DPPMCAKL@corrupt@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN76@stbi__hdr_
	mov	DWORD PTR tv298[rbp], 0
	jmp	SHORT $LN77@stbi__hdr_
$LN76@stbi__hdr_:
	mov	DWORD PTR tv298[rbp], 0
$LN77@stbi__hdr_:
	movsxd	rax, DWORD PTR tv298[rbp]
	jmp	$LN1@stbi__hdr_
$LN52@stbi__hdr_:
; Line 7191
	mov	DWORD PTR z$[rbp], 0
	jmp	SHORT $LN23@stbi__hdr_
$LN21@stbi__hdr_:
	mov	eax, DWORD PTR z$[rbp]
	inc	eax
	mov	DWORD PTR z$[rbp], eax
$LN23@stbi__hdr_:
	movzx	eax, BYTE PTR count$[rbp]
	cmp	DWORD PTR z$[rbp], eax
	jge	SHORT $LN22@stbi__hdr_
; Line 7192
	mov	eax, DWORD PTR k$[rbp]
	mov	ecx, DWORD PTR i$[rbp]
	lea	eax, DWORD PTR [rax+rcx*4]
	cdqe
	mov	rcx, QWORD PTR scanline$[rbp]
	movzx	edx, BYTE PTR value$[rbp]
	mov	BYTE PTR [rcx+rax], dl
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN21@stbi__hdr_
$LN22@stbi__hdr_:
; Line 7193
	jmp	$LN51@stbi__hdr_
$LN50@stbi__hdr_:
; Line 7195
	movzx	eax, BYTE PTR count$[rbp]
	cmp	eax, DWORD PTR nleft$9[rbp]
	jle	SHORT $LN53@stbi__hdr_
	mov	rcx, QWORD PTR hdr_data$[rbp]
	call	QWORD PTR __imp_free
	mov	rcx, QWORD PTR scanline$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_07DPPMCAKL@corrupt@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN78@stbi__hdr_
	mov	DWORD PTR tv316[rbp], 0
	jmp	SHORT $LN79@stbi__hdr_
$LN78@stbi__hdr_:
	mov	DWORD PTR tv316[rbp], 0
$LN79@stbi__hdr_:
	movsxd	rax, DWORD PTR tv316[rbp]
	jmp	$LN1@stbi__hdr_
$LN53@stbi__hdr_:
; Line 7196
	mov	DWORD PTR z$[rbp], 0
	jmp	SHORT $LN26@stbi__hdr_
$LN24@stbi__hdr_:
	mov	eax, DWORD PTR z$[rbp]
	inc	eax
	mov	DWORD PTR z$[rbp], eax
$LN26@stbi__hdr_:
	movzx	eax, BYTE PTR count$[rbp]
	cmp	DWORD PTR z$[rbp], eax
	jge	SHORT $LN25@stbi__hdr_
; Line 7197
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	ecx, DWORD PTR k$[rbp]
	mov	edx, DWORD PTR i$[rbp]
	lea	ecx, DWORD PTR [rcx+rdx*4]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR scanline$[rbp]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN24@stbi__hdr_
$LN25@stbi__hdr_:
$LN51@stbi__hdr_:
; Line 7199
	jmp	$LN19@stbi__hdr_
$LN20@stbi__hdr_:
; Line 7200
	jmp	$LN16@stbi__hdr_
$LN17@stbi__hdr_:
; Line 7201
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN29@stbi__hdr_
$LN27@stbi__hdr_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN29@stbi__hdr_:
	mov	eax, DWORD PTR width$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN28@stbi__hdr_
; Line 7202
	mov	eax, DWORD PTR i$[rbp]
	shl	eax, 2
	cdqe
	mov	rcx, QWORD PTR scanline$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	ecx, DWORD PTR j$[rbp]
	imul	ecx, DWORD PTR width$[rbp]
	add	ecx, DWORD PTR i$[rbp]
	imul	ecx, DWORD PTR req_comp$[rbp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR hdr_data$[rbp]
	lea	rcx, QWORD PTR [rdx+rcx*4]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	rdx, rax
	call	?stbi__hdr_convert@@YAXPEAMPEAEH@Z	; stbi__hdr_convert
	jmp	SHORT $LN27@stbi__hdr_
$LN28@stbi__hdr_:
; Line 7203
	jmp	$LN13@stbi__hdr_
$LN14@stbi__hdr_:
; Line 7204
	cmp	QWORD PTR scanline$[rbp], 0
	je	SHORT $LN54@stbi__hdr_
; Line 7205
	mov	rcx, QWORD PTR scanline$[rbp]
	call	QWORD PTR __imp_free
$LN54@stbi__hdr_:
$LN43@stbi__hdr_:
; Line 7208
	mov	rax, QWORD PTR hdr_data$[rbp]
$LN1@stbi__hdr_:
; Line 7209
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+2440]
	pop	rdi
	pop	rbp
	ret	0
?stbi__hdr_load@@YAPEAMPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ENDP ; stbi__hdr_load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__hdr_test@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
r$ = 4
s$ = 256
?stbi__hdr_test@@YAHPEAUstbi__context@@@Z PROC		; stbi__hdr_test, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7020
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7021
	lea	rdx, OFFSET FLAT:??_C@_0M@HOIDFNFN@?$CD?$DPRADIANCE?6@
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z ; stbi__hdr_test_core
	mov	DWORD PTR r$[rbp], eax
; Line 7022
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7023
	cmp	DWORD PTR r$[rbp], 0
	jne	SHORT $LN2@stbi__hdr_
; Line 7024
	lea	rdx, OFFSET FLAT:??_C@_07KFDJIKCK@?$CD?$DPRGBE?6@
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_test_core@@YAHPEAUstbi__context@@PEBD@Z ; stbi__hdr_test_core
	mov	DWORD PTR r$[rbp], eax
; Line 7025
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
$LN2@stbi__hdr_:
; Line 7027
	mov	eax, DWORD PTR r$[rbp]
; Line 7028
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__hdr_test@@YAHPEAUstbi__context@@@Z ENDP		; stbi__hdr_test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__psd_is16@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
channelCount$ = 4
depth$ = 36
s$ = 288
?stbi__psd_is16@@YAHPEAUstbi__context@@@Z PROC		; stbi__psd_is16, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7317
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7319
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	cmp	eax, 943870035				; 38425053H
	je	SHORT $LN2@stbi__psd_
; Line 7320
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7321
	xor	eax, eax
	jmp	$LN1@stbi__psd_
$LN2@stbi__psd_:
; Line 7323
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	cmp	eax, 1
	je	SHORT $LN3@stbi__psd_
; Line 7324
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7325
	xor	eax, eax
	jmp	SHORT $LN1@stbi__psd_
$LN3@stbi__psd_:
; Line 7327
	mov	edx, 6
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 7328
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR channelCount$[rbp], eax
; Line 7329
	cmp	DWORD PTR channelCount$[rbp], 0
	jl	SHORT $LN5@stbi__psd_
	cmp	DWORD PTR channelCount$[rbp], 16
	jle	SHORT $LN4@stbi__psd_
$LN5@stbi__psd_:
; Line 7330
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7331
	xor	eax, eax
	jmp	SHORT $LN1@stbi__psd_
$LN4@stbi__psd_:
; Line 7333
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
; Line 7334
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
; Line 7335
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR depth$[rbp], eax
; Line 7336
	cmp	DWORD PTR depth$[rbp], 16
	je	SHORT $LN6@stbi__psd_
; Line 7337
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7338
	xor	eax, eax
	jmp	SHORT $LN1@stbi__psd_
$LN6@stbi__psd_:
; Line 7340
	mov	eax, 1
$LN1@stbi__psd_:
; Line 7341
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__psd_is16@@YAHPEAUstbi__context@@@Z ENDP		; stbi__psd_is16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
channelCount$ = 4
dummy$ = 36
depth$ = 68
__$ArrayPad$ = 280
s$ = 320
x$ = 328
y$ = 336
comp$ = 344
?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__psd_info, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7282
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7284
	cmp	QWORD PTR x$[rbp], 0
	jne	SHORT $LN2@stbi__psd_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR x$[rbp], rax
$LN2@stbi__psd_:
; Line 7285
	cmp	QWORD PTR y$[rbp], 0
	jne	SHORT $LN3@stbi__psd_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR y$[rbp], rax
$LN3@stbi__psd_:
; Line 7286
	cmp	QWORD PTR comp$[rbp], 0
	jne	SHORT $LN4@stbi__psd_
	lea	rax, QWORD PTR dummy$[rbp]
	mov	QWORD PTR comp$[rbp], rax
$LN4@stbi__psd_:
; Line 7287
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	cmp	eax, 943870035				; 38425053H
	je	SHORT $LN5@stbi__psd_
; Line 7288
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7289
	xor	eax, eax
	jmp	$LN1@stbi__psd_
$LN5@stbi__psd_:
; Line 7291
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	cmp	eax, 1
	je	SHORT $LN6@stbi__psd_
; Line 7292
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7293
	xor	eax, eax
	jmp	$LN1@stbi__psd_
$LN6@stbi__psd_:
; Line 7295
	mov	edx, 6
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 7296
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR channelCount$[rbp], eax
; Line 7297
	cmp	DWORD PTR channelCount$[rbp], 0
	jl	SHORT $LN8@stbi__psd_
	cmp	DWORD PTR channelCount$[rbp], 16
	jle	SHORT $LN7@stbi__psd_
$LN8@stbi__psd_:
; Line 7298
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7299
	xor	eax, eax
	jmp	$LN1@stbi__psd_
$LN7@stbi__psd_:
; Line 7301
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	rcx, QWORD PTR y$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 7302
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	rcx, QWORD PTR x$[rbp]
	mov	DWORD PTR [rcx], eax
; Line 7303
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR depth$[rbp], eax
; Line 7304
	cmp	DWORD PTR depth$[rbp], 8
	je	SHORT $LN9@stbi__psd_
	cmp	DWORD PTR depth$[rbp], 16
	je	SHORT $LN9@stbi__psd_
; Line 7305
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7306
	xor	eax, eax
	jmp	SHORT $LN1@stbi__psd_
$LN9@stbi__psd_:
; Line 7308
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	cmp	eax, 3
	je	SHORT $LN10@stbi__psd_
; Line 7309
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7310
	xor	eax, eax
	jmp	SHORT $LN1@stbi__psd_
$LN10@stbi__psd_:
; Line 7312
	mov	rax, QWORD PTR comp$[rbp]
	mov	DWORD PTR [rax], 4
; Line 7313
	mov	eax, 1
$LN1@stbi__psd_:
; Line 7314
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__psd_info@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__psd_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z
_TEXT	SEGMENT
pixelCount$ = 4
channelCount$ = 36
compression$ = 68
channel$ = 100
i$ = 132
bitdepth$ = 164
w$ = 196
h$ = 228
out$ = 264
p$1 = 296
q$2 = 328
val$3 = 356
p$4 = 392
val$5 = 420
q$6 = 456
p$7 = 488
pixel$8 = 520
a$9 = 548
ra$10 = 580
inv_a$11 = 612
pixel$12 = 648
a$13 = 676
ra$14 = 708
inv_a$15 = 740
tv252 = 1140
tv244 = 1140
tv233 = 1140
tv222 = 1140
tv205 = 1140
tv185 = 1140
tv174 = 1140
tv154 = 1140
tv146 = 1140
tv137 = 1140
tv131 = 1140
tv89 = 1140
tv78 = 1140
tv70 = 1140
s$ = 1184
x$ = 1192
y$ = 1200
comp$ = 1208
req_comp$ = 1216
ri$ = 1224
bpc$ = 1232
?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z PROC ; stbi__psd_load, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6049
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1208				; 000004b8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6059
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	cmp	eax, 943870035				; 38425053H
	je	SHORT $LN32@stbi__psd_
; Line 6060
	lea	rcx, OFFSET FLAT:??_C@_07ECNCNLIK@not?5PSD@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN69@stbi__psd_
	mov	DWORD PTR tv70[rbp], 0
	jmp	SHORT $LN70@stbi__psd_
$LN69@stbi__psd_:
	mov	DWORD PTR tv70[rbp], 0
$LN70@stbi__psd_:
	movsxd	rax, DWORD PTR tv70[rbp]
	jmp	$LN1@stbi__psd_
$LN32@stbi__psd_:
; Line 6063
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	cmp	eax, 1
	je	SHORT $LN33@stbi__psd_
; Line 6064
	lea	rcx, OFFSET FLAT:??_C@_0O@CHBCDKKC@wrong?5version@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN71@stbi__psd_
	mov	DWORD PTR tv78[rbp], 0
	jmp	SHORT $LN72@stbi__psd_
$LN71@stbi__psd_:
	mov	DWORD PTR tv78[rbp], 0
$LN72@stbi__psd_:
	movsxd	rax, DWORD PTR tv78[rbp]
	jmp	$LN1@stbi__psd_
$LN33@stbi__psd_:
; Line 6067
	mov	edx, 6
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 6070
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR channelCount$[rbp], eax
; Line 6071
	cmp	DWORD PTR channelCount$[rbp], 0
	jl	SHORT $LN35@stbi__psd_
	cmp	DWORD PTR channelCount$[rbp], 16
	jle	SHORT $LN34@stbi__psd_
$LN35@stbi__psd_:
; Line 6072
	lea	rcx, OFFSET FLAT:??_C@_0BE@PJBNGDBE@wrong?5channel?5count@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN73@stbi__psd_
	mov	DWORD PTR tv89[rbp], 0
	jmp	SHORT $LN74@stbi__psd_
$LN73@stbi__psd_:
	mov	DWORD PTR tv89[rbp], 0
$LN74@stbi__psd_:
	movsxd	rax, DWORD PTR tv89[rbp]
	jmp	$LN1@stbi__psd_
$LN34@stbi__psd_:
; Line 6075
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	DWORD PTR h$[rbp], eax
; Line 6076
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	DWORD PTR w$[rbp], eax
; Line 6078
	cmp	DWORD PTR h$[rbp], 16777216		; 01000000H
	jle	SHORT $LN36@stbi__psd_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN75@stbi__psd_
	mov	DWORD PTR tv131[rbp], 0
	jmp	SHORT $LN76@stbi__psd_
$LN75@stbi__psd_:
	mov	DWORD PTR tv131[rbp], 0
$LN76@stbi__psd_:
	movsxd	rax, DWORD PTR tv131[rbp]
	jmp	$LN1@stbi__psd_
$LN36@stbi__psd_:
; Line 6079
	cmp	DWORD PTR w$[rbp], 16777216		; 01000000H
	jle	SHORT $LN37@stbi__psd_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN77@stbi__psd_
	mov	DWORD PTR tv137[rbp], 0
	jmp	SHORT $LN78@stbi__psd_
$LN77@stbi__psd_:
	mov	DWORD PTR tv137[rbp], 0
$LN78@stbi__psd_:
	movsxd	rax, DWORD PTR tv137[rbp]
	jmp	$LN1@stbi__psd_
$LN37@stbi__psd_:
; Line 6082
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR bitdepth$[rbp], eax
; Line 6083
	cmp	DWORD PTR bitdepth$[rbp], 8
	je	SHORT $LN38@stbi__psd_
	cmp	DWORD PTR bitdepth$[rbp], 16
	je	SHORT $LN38@stbi__psd_
; Line 6084
	lea	rcx, OFFSET FLAT:??_C@_0BG@NOLDLPP@unsupported?5bit?5depth@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN79@stbi__psd_
	mov	DWORD PTR tv146[rbp], 0
	jmp	SHORT $LN80@stbi__psd_
$LN79@stbi__psd_:
	mov	DWORD PTR tv146[rbp], 0
$LN80@stbi__psd_:
	movsxd	rax, DWORD PTR tv146[rbp]
	jmp	$LN1@stbi__psd_
$LN38@stbi__psd_:
; Line 6096
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	cmp	eax, 3
	je	SHORT $LN39@stbi__psd_
; Line 6097
	lea	rcx, OFFSET FLAT:??_C@_0BD@IOGGBMNK@wrong?5color?5format@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN81@stbi__psd_
	mov	DWORD PTR tv154[rbp], 0
	jmp	SHORT $LN82@stbi__psd_
$LN81@stbi__psd_:
	mov	DWORD PTR tv154[rbp], 0
$LN82@stbi__psd_:
	movsxd	rax, DWORD PTR tv154[rbp]
	jmp	$LN1@stbi__psd_
$LN39@stbi__psd_:
; Line 6100
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 6103
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 6106
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 6112
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	DWORD PTR compression$[rbp], eax
; Line 6113
	cmp	DWORD PTR compression$[rbp], 1
	jle	SHORT $LN40@stbi__psd_
; Line 6114
	lea	rcx, OFFSET FLAT:??_C@_0BA@MCNBDLPD@bad?5compression@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN83@stbi__psd_
	mov	DWORD PTR tv174[rbp], 0
	jmp	SHORT $LN84@stbi__psd_
$LN83@stbi__psd_:
	mov	DWORD PTR tv174[rbp], 0
$LN84@stbi__psd_:
	movsxd	rax, DWORD PTR tv174[rbp]
	jmp	$LN1@stbi__psd_
$LN40@stbi__psd_:
; Line 6117
	xor	r9d, r9d
	mov	r8d, DWORD PTR h$[rbp]
	mov	edx, DWORD PTR w$[rbp]
	mov	ecx, 4
	call	?stbi__mad3sizes_valid@@YAHHHHH@Z	; stbi__mad3sizes_valid
	test	eax, eax
	jne	SHORT $LN41@stbi__psd_
; Line 6118
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN85@stbi__psd_
	mov	DWORD PTR tv185[rbp], 0
	jmp	SHORT $LN86@stbi__psd_
$LN85@stbi__psd_:
	mov	DWORD PTR tv185[rbp], 0
$LN86@stbi__psd_:
	movsxd	rax, DWORD PTR tv185[rbp]
	jmp	$LN1@stbi__psd_
$LN41@stbi__psd_:
; Line 6122
	cmp	DWORD PTR compression$[rbp], 0
	jne	SHORT $LN42@stbi__psd_
	cmp	DWORD PTR bitdepth$[rbp], 16
	jne	SHORT $LN42@stbi__psd_
	cmp	DWORD PTR bpc$[rbp], 16
	jne	SHORT $LN42@stbi__psd_
; Line 6123
	xor	r9d, r9d
	mov	r8d, DWORD PTR h$[rbp]
	mov	edx, DWORD PTR w$[rbp]
	mov	ecx, 8
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	mov	QWORD PTR out$[rbp], rax
; Line 6124
	mov	rax, QWORD PTR ri$[rbp]
	mov	DWORD PTR [rax], 16
; Line 6125
	jmp	SHORT $LN43@stbi__psd_
$LN42@stbi__psd_:
; Line 6126
	mov	eax, DWORD PTR w$[rbp]
	shl	eax, 2
	imul	eax, DWORD PTR h$[rbp]
	cdqe
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR out$[rbp], rax
$LN43@stbi__psd_:
; Line 6128
	cmp	QWORD PTR out$[rbp], 0
	jne	SHORT $LN44@stbi__psd_
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN87@stbi__psd_
	mov	DWORD PTR tv205[rbp], 0
	jmp	SHORT $LN88@stbi__psd_
$LN87@stbi__psd_:
	mov	DWORD PTR tv205[rbp], 0
$LN88@stbi__psd_:
	movsxd	rax, DWORD PTR tv205[rbp]
	jmp	$LN1@stbi__psd_
$LN44@stbi__psd_:
; Line 6129
	mov	eax, DWORD PTR w$[rbp]
	imul	eax, DWORD PTR h$[rbp]
	mov	DWORD PTR pixelCount$[rbp], eax
; Line 6135
	cmp	DWORD PTR compression$[rbp], 0
	je	$LN45@stbi__psd_
; Line 6146
	mov	eax, DWORD PTR h$[rbp]
	imul	eax, DWORD PTR channelCount$[rbp]
	shl	eax, 1
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 6149
	mov	DWORD PTR channel$[rbp], 0
	jmp	SHORT $LN4@stbi__psd_
$LN2@stbi__psd_:
	mov	eax, DWORD PTR channel$[rbp]
	inc	eax
	mov	DWORD PTR channel$[rbp], eax
$LN4@stbi__psd_:
	cmp	DWORD PTR channel$[rbp], 4
	jge	$LN3@stbi__psd_
; Line 6152
	movsxd	rax, DWORD PTR channel$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$1[rbp], rax
; Line 6153
	mov	eax, DWORD PTR channelCount$[rbp]
	cmp	DWORD PTR channel$[rbp], eax
	jl	SHORT $LN47@stbi__psd_
; Line 6155
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN7@stbi__psd_
$LN5@stbi__psd_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR p$1[rbp]
	add	rax, 4
	mov	QWORD PTR p$1[rbp], rax
$LN7@stbi__psd_:
	mov	eax, DWORD PTR pixelCount$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN6@stbi__psd_
; Line 6156
	cmp	DWORD PTR channel$[rbp], 3
	jne	SHORT $LN89@stbi__psd_
	mov	DWORD PTR tv222[rbp], 255		; 000000ffH
	jmp	SHORT $LN90@stbi__psd_
$LN89@stbi__psd_:
	mov	DWORD PTR tv222[rbp], 0
$LN90@stbi__psd_:
	mov	rax, QWORD PTR p$1[rbp]
	movzx	ecx, BYTE PTR tv222[rbp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN5@stbi__psd_
$LN6@stbi__psd_:
; Line 6157
	jmp	SHORT $LN48@stbi__psd_
$LN47@stbi__psd_:
; Line 6159
	mov	r8d, DWORD PTR pixelCount$[rbp]
	mov	rdx, QWORD PTR p$1[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__psd_decode_rle@@YAHPEAUstbi__context@@PEAEH@Z ; stbi__psd_decode_rle
	test	eax, eax
	jne	SHORT $LN49@stbi__psd_
; Line 6160
	mov	rcx, QWORD PTR out$[rbp]
	call	QWORD PTR __imp_free
; Line 6161
	lea	rcx, OFFSET FLAT:??_C@_07DPPMCAKL@corrupt@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN91@stbi__psd_
	mov	DWORD PTR tv233[rbp], 0
	jmp	SHORT $LN92@stbi__psd_
$LN91@stbi__psd_:
	mov	DWORD PTR tv233[rbp], 0
$LN92@stbi__psd_:
	movsxd	rax, DWORD PTR tv233[rbp]
	jmp	$LN1@stbi__psd_
$LN49@stbi__psd_:
$LN48@stbi__psd_:
; Line 6164
	jmp	$LN2@stbi__psd_
$LN3@stbi__psd_:
; Line 6166
	jmp	$LN46@stbi__psd_
$LN45@stbi__psd_:
; Line 6171
	mov	DWORD PTR channel$[rbp], 0
	jmp	SHORT $LN10@stbi__psd_
$LN8@stbi__psd_:
	mov	eax, DWORD PTR channel$[rbp]
	inc	eax
	mov	DWORD PTR channel$[rbp], eax
$LN10@stbi__psd_:
	cmp	DWORD PTR channel$[rbp], 4
	jge	$LN9@stbi__psd_
; Line 6172
	mov	eax, DWORD PTR channelCount$[rbp]
	cmp	DWORD PTR channel$[rbp], eax
	jl	$LN50@stbi__psd_
; Line 6174
	cmp	DWORD PTR bitdepth$[rbp], 16
	jne	$LN52@stbi__psd_
	cmp	DWORD PTR bpc$[rbp], 16
	jne	$LN52@stbi__psd_
; Line 6175
	movsxd	rax, DWORD PTR channel$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR q$2[rbp], rax
; Line 6176
	cmp	DWORD PTR channel$[rbp], 3
	jne	SHORT $LN93@stbi__psd_
	mov	DWORD PTR tv244[rbp], 65535		; 0000ffffH
	jmp	SHORT $LN94@stbi__psd_
$LN93@stbi__psd_:
	mov	DWORD PTR tv244[rbp], 0
$LN94@stbi__psd_:
	movzx	eax, WORD PTR tv244[rbp]
	mov	WORD PTR val$3[rbp], ax
; Line 6177
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN13@stbi__psd_
$LN11@stbi__psd_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR q$2[rbp]
	add	rax, 8
	mov	QWORD PTR q$2[rbp], rax
$LN13@stbi__psd_:
	mov	eax, DWORD PTR pixelCount$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN12@stbi__psd_
; Line 6178
	mov	rax, QWORD PTR q$2[rbp]
	movzx	ecx, WORD PTR val$3[rbp]
	mov	WORD PTR [rax], cx
	jmp	SHORT $LN11@stbi__psd_
$LN12@stbi__psd_:
; Line 6179
	jmp	$LN53@stbi__psd_
$LN52@stbi__psd_:
; Line 6180
	movsxd	rax, DWORD PTR channel$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$4[rbp], rax
; Line 6181
	cmp	DWORD PTR channel$[rbp], 3
	jne	SHORT $LN95@stbi__psd_
	mov	DWORD PTR tv252[rbp], 255		; 000000ffH
	jmp	SHORT $LN96@stbi__psd_
$LN95@stbi__psd_:
	mov	DWORD PTR tv252[rbp], 0
$LN96@stbi__psd_:
	movzx	eax, BYTE PTR tv252[rbp]
	mov	BYTE PTR val$5[rbp], al
; Line 6182
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN16@stbi__psd_
$LN14@stbi__psd_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR p$4[rbp]
	add	rax, 4
	mov	QWORD PTR p$4[rbp], rax
$LN16@stbi__psd_:
	mov	eax, DWORD PTR pixelCount$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN15@stbi__psd_
; Line 6183
	mov	rax, QWORD PTR p$4[rbp]
	movzx	ecx, BYTE PTR val$5[rbp]
	mov	BYTE PTR [rax], cl
	jmp	SHORT $LN14@stbi__psd_
$LN15@stbi__psd_:
$LN53@stbi__psd_:
; Line 6185
	jmp	$LN51@stbi__psd_
$LN50@stbi__psd_:
; Line 6186
	mov	rax, QWORD PTR ri$[rbp]
	cmp	DWORD PTR [rax], 16
	jne	SHORT $LN54@stbi__psd_
; Line 6187
	movsxd	rax, DWORD PTR channel$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR q$6[rbp], rax
; Line 6188
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN19@stbi__psd_
$LN17@stbi__psd_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR q$6[rbp]
	add	rax, 8
	mov	QWORD PTR q$6[rbp], rax
$LN19@stbi__psd_:
	mov	eax, DWORD PTR pixelCount$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN18@stbi__psd_
; Line 6189
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	mov	rcx, QWORD PTR q$6[rbp]
	mov	WORD PTR [rcx], ax
	jmp	SHORT $LN17@stbi__psd_
$LN18@stbi__psd_:
; Line 6190
	jmp	$LN55@stbi__psd_
$LN54@stbi__psd_:
; Line 6191
	movsxd	rax, DWORD PTR channel$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p$7[rbp], rax
; Line 6192
	cmp	DWORD PTR bitdepth$[rbp], 16
	jne	SHORT $LN56@stbi__psd_
; Line 6193
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN22@stbi__psd_
$LN20@stbi__psd_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR p$7[rbp]
	add	rax, 4
	mov	QWORD PTR p$7[rbp], rax
$LN22@stbi__psd_:
	mov	eax, DWORD PTR pixelCount$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN21@stbi__psd_
; Line 6194
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16be@@YAHPEAUstbi__context@@@Z ; stbi__get16be
	sar	eax, 8
	mov	rcx, QWORD PTR p$7[rbp]
	mov	BYTE PTR [rcx], al
	jmp	SHORT $LN20@stbi__psd_
$LN21@stbi__psd_:
; Line 6195
	jmp	SHORT $LN57@stbi__psd_
$LN56@stbi__psd_:
; Line 6196
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN25@stbi__psd_
$LN23@stbi__psd_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
	mov	rax, QWORD PTR p$7[rbp]
	add	rax, 4
	mov	QWORD PTR p$7[rbp], rax
$LN25@stbi__psd_:
	mov	eax, DWORD PTR pixelCount$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN24@stbi__psd_
; Line 6197
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	rcx, QWORD PTR p$7[rbp]
	mov	BYTE PTR [rcx], al
	jmp	SHORT $LN23@stbi__psd_
$LN24@stbi__psd_:
$LN57@stbi__psd_:
$LN55@stbi__psd_:
$LN51@stbi__psd_:
; Line 6201
	jmp	$LN8@stbi__psd_
$LN9@stbi__psd_:
$LN46@stbi__psd_:
; Line 6205
	cmp	DWORD PTR channelCount$[rbp], 4
	jl	$LN58@stbi__psd_
; Line 6206
	mov	rax, QWORD PTR ri$[rbp]
	cmp	DWORD PTR [rax], 16
	jne	$LN59@stbi__psd_
; Line 6207
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN28@stbi__psd_
$LN26@stbi__psd_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN28@stbi__psd_:
	mov	eax, DWORD PTR w$[rbp]
	imul	eax, DWORD PTR h$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN27@stbi__psd_
; Line 6208
	mov	eax, DWORD PTR i$[rbp]
	shl	eax, 2
	cdqe
	mov	rcx, QWORD PTR out$[rbp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR pixel$8[rbp], rax
; Line 6209
	mov	eax, 2
	imul	rax, rax, 3
	mov	rcx, QWORD PTR pixel$8[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	test	eax, eax
	je	$LN61@stbi__psd_
	mov	eax, 2
	imul	rax, rax, 3
	mov	rcx, QWORD PTR pixel$8[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	cmp	eax, 65535				; 0000ffffH
	je	$LN61@stbi__psd_
; Line 6210
	mov	eax, 2
	imul	rax, rax, 3
	mov	rcx, QWORD PTR pixel$8[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@477fff00
	movss	DWORD PTR a$9[rbp], xmm0
; Line 6211
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR a$9[rbp]
	movss	DWORD PTR ra$10[rbp], xmm0
; Line 6212
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR ra$10[rbp]
	movss	xmm1, DWORD PTR __real@477fff00
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR inv_a$11[rbp], xmm0
; Line 6213
	mov	eax, 2
	imul	rax, rax, 0
	mov	rcx, QWORD PTR pixel$8[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR ra$10[rbp]
	addss	xmm0, DWORD PTR inv_a$11[rbp]
	cvttss2si eax, xmm0
	mov	ecx, 2
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR pixel$8[rbp]
	mov	WORD PTR [rdx+rcx], ax
; Line 6214
	mov	eax, 2
	imul	rax, rax, 1
	mov	rcx, QWORD PTR pixel$8[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR ra$10[rbp]
	addss	xmm0, DWORD PTR inv_a$11[rbp]
	cvttss2si eax, xmm0
	mov	ecx, 2
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR pixel$8[rbp]
	mov	WORD PTR [rdx+rcx], ax
; Line 6215
	mov	eax, 2
	imul	rax, rax, 2
	mov	rcx, QWORD PTR pixel$8[rbp]
	movzx	eax, WORD PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR ra$10[rbp]
	addss	xmm0, DWORD PTR inv_a$11[rbp]
	cvttss2si eax, xmm0
	mov	ecx, 2
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR pixel$8[rbp]
	mov	WORD PTR [rdx+rcx], ax
$LN61@stbi__psd_:
; Line 6217
	jmp	$LN26@stbi__psd_
$LN27@stbi__psd_:
; Line 6218
	jmp	$LN60@stbi__psd_
$LN59@stbi__psd_:
; Line 6219
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN31@stbi__psd_
$LN29@stbi__psd_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN31@stbi__psd_:
	mov	eax, DWORD PTR w$[rbp]
	imul	eax, DWORD PTR h$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN30@stbi__psd_
; Line 6220
	mov	eax, DWORD PTR i$[rbp]
	shl	eax, 2
	cdqe
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR pixel$12[rbp], rax
; Line 6221
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR pixel$12[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	test	eax, eax
	je	$LN62@stbi__psd_
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR pixel$12[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cmp	eax, 255				; 000000ffH
	je	$LN62@stbi__psd_
; Line 6222
	mov	eax, 1
	imul	rax, rax, 3
	mov	rcx, QWORD PTR pixel$12[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	divss	xmm0, DWORD PTR __real@437f0000
	movss	DWORD PTR a$13[rbp], xmm0
; Line 6223
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR a$13[rbp]
	movss	DWORD PTR ra$14[rbp], xmm0
; Line 6224
	movss	xmm0, DWORD PTR __real@3f800000
	subss	xmm0, DWORD PTR ra$14[rbp]
	movss	xmm1, DWORD PTR __real@437f0000
	mulss	xmm1, xmm0
	movaps	xmm0, xmm1
	movss	DWORD PTR inv_a$15[rbp], xmm0
; Line 6225
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR pixel$12[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR ra$14[rbp]
	addss	xmm0, DWORD PTR inv_a$15[rbp]
	cvttss2si eax, xmm0
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR pixel$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 6226
	mov	eax, 1
	imul	rax, rax, 1
	mov	rcx, QWORD PTR pixel$12[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR ra$14[rbp]
	addss	xmm0, DWORD PTR inv_a$15[rbp]
	cvttss2si eax, xmm0
	mov	ecx, 1
	imul	rcx, rcx, 1
	mov	rdx, QWORD PTR pixel$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 6227
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR pixel$12[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	cvtsi2ss xmm0, eax
	mulss	xmm0, DWORD PTR ra$14[rbp]
	addss	xmm0, DWORD PTR inv_a$15[rbp]
	cvttss2si eax, xmm0
	mov	ecx, 1
	imul	rcx, rcx, 2
	mov	rdx, QWORD PTR pixel$12[rbp]
	mov	BYTE PTR [rdx+rcx], al
$LN62@stbi__psd_:
; Line 6229
	jmp	$LN29@stbi__psd_
$LN30@stbi__psd_:
$LN60@stbi__psd_:
$LN58@stbi__psd_:
; Line 6234
	cmp	DWORD PTR req_comp$[rbp], 0
	je	$LN63@stbi__psd_
	cmp	DWORD PTR req_comp$[rbp], 4
	je	$LN63@stbi__psd_
; Line 6235
	mov	rax, QWORD PTR ri$[rbp]
	cmp	DWORD PTR [rax], 16
	jne	SHORT $LN64@stbi__psd_
; Line 6236
	mov	eax, DWORD PTR h$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR w$[rbp]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, 4
	mov	rcx, QWORD PTR out$[rbp]
	call	?stbi__convert_format16@@YAPEAGPEAGHHII@Z ; stbi__convert_format16
	mov	QWORD PTR out$[rbp], rax
	jmp	SHORT $LN65@stbi__psd_
$LN64@stbi__psd_:
; Line 6238
	mov	eax, DWORD PTR h$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR w$[rbp]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, 4
	mov	rcx, QWORD PTR out$[rbp]
	call	?stbi__convert_format@@YAPEAEPEAEHHII@Z	; stbi__convert_format
	mov	QWORD PTR out$[rbp], rax
$LN65@stbi__psd_:
; Line 6239
	cmp	QWORD PTR out$[rbp], 0
	jne	SHORT $LN66@stbi__psd_
	mov	rax, QWORD PTR out$[rbp]
	jmp	SHORT $LN1@stbi__psd_
$LN66@stbi__psd_:
$LN63@stbi__psd_:
; Line 6242
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN67@stbi__psd_
	mov	rax, QWORD PTR comp$[rbp]
	mov	DWORD PTR [rax], 4
$LN67@stbi__psd_:
; Line 6243
	mov	rax, QWORD PTR y$[rbp]
	mov	ecx, DWORD PTR h$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 6244
	mov	rax, QWORD PTR x$[rbp]
	mov	ecx, DWORD PTR w$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 6246
	mov	rax, QWORD PTR out$[rbp]
$LN1@stbi__psd_:
; Line 6247
	lea	rsp, QWORD PTR [rbp+1160]
	pop	rdi
	pop	rbp
	ret	0
?stbi__psd_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@H@Z ENDP ; stbi__psd_load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__psd_test@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
r$ = 4
tv67 = 212
s$ = 256
?stbi__psd_test@@YAHPEAUstbi__context@@@Z PROC		; stbi__psd_test, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 6004
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 6005
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32be@@YAIPEAUstbi__context@@@Z ; stbi__get32be
	cmp	eax, 943870035				; 38425053H
	jne	SHORT $LN3@stbi__psd_
	mov	DWORD PTR tv67[rbp], 1
	jmp	SHORT $LN4@stbi__psd_
$LN3@stbi__psd_:
	mov	DWORD PTR tv67[rbp], 0
$LN4@stbi__psd_:
	mov	eax, DWORD PTR tv67[rbp]
	mov	DWORD PTR r$[rbp], eax
; Line 6006
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 6007
	mov	eax, DWORD PTR r$[rbp]
; Line 6008
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__psd_test@@YAHPEAUstbi__context@@@Z ENDP		; stbi__psd_test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__tga_info@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
tga_w$ = 4
tga_h$ = 36
tga_comp$ = 68
tga_image_type$ = 100
tga_bits_per_pixel$ = 132
tga_colormap_bpp$ = 164
sz$ = 196
tga_colormap_type$ = 228
tv153 = 436
s$ = 480
x$ = 488
y$ = 496
comp$ = 504
?stbi__tga_info@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__tga_info, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5678
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5681
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
; Line 5682
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_colormap_type$[rbp], eax
; Line 5683
	cmp	DWORD PTR tga_colormap_type$[rbp], 1
	jle	SHORT $LN2@stbi__tga_
; Line 5684
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5685
	xor	eax, eax
	jmp	$LN1@stbi__tga_
$LN2@stbi__tga_:
; Line 5687
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_image_type$[rbp], eax
; Line 5688
	cmp	DWORD PTR tga_colormap_type$[rbp], 1
	jne	$LN3@stbi__tga_
; Line 5689
	cmp	DWORD PTR tga_image_type$[rbp], 1
	je	SHORT $LN5@stbi__tga_
	cmp	DWORD PTR tga_image_type$[rbp], 9
	je	SHORT $LN5@stbi__tga_
; Line 5690
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5691
	xor	eax, eax
	jmp	$LN1@stbi__tga_
$LN5@stbi__tga_:
; Line 5693
	mov	edx, 4
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5694
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR sz$[rbp], eax
; Line 5695
	cmp	DWORD PTR sz$[rbp], 8
	je	SHORT $LN6@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 15
	je	SHORT $LN6@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 16
	je	SHORT $LN6@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 24
	je	SHORT $LN6@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 32			; 00000020H
	je	SHORT $LN6@stbi__tga_
; Line 5696
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5697
	xor	eax, eax
	jmp	$LN1@stbi__tga_
$LN6@stbi__tga_:
; Line 5699
	mov	edx, 4
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5700
	mov	eax, DWORD PTR sz$[rbp]
	mov	DWORD PTR tga_colormap_bpp$[rbp], eax
; Line 5701
	jmp	SHORT $LN4@stbi__tga_
$LN3@stbi__tga_:
; Line 5702
	cmp	DWORD PTR tga_image_type$[rbp], 2
	je	SHORT $LN7@stbi__tga_
	cmp	DWORD PTR tga_image_type$[rbp], 3
	je	SHORT $LN7@stbi__tga_
	cmp	DWORD PTR tga_image_type$[rbp], 10
	je	SHORT $LN7@stbi__tga_
	cmp	DWORD PTR tga_image_type$[rbp], 11
	je	SHORT $LN7@stbi__tga_
; Line 5703
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5704
	xor	eax, eax
	jmp	$LN1@stbi__tga_
$LN7@stbi__tga_:
; Line 5706
	mov	edx, 9
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5707
	mov	DWORD PTR tga_colormap_bpp$[rbp], 0
$LN4@stbi__tga_:
; Line 5709
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tga_w$[rbp], eax
; Line 5710
	cmp	DWORD PTR tga_w$[rbp], 1
	jge	SHORT $LN8@stbi__tga_
; Line 5711
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5712
	xor	eax, eax
	jmp	$LN1@stbi__tga_
$LN8@stbi__tga_:
; Line 5714
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tga_h$[rbp], eax
; Line 5715
	cmp	DWORD PTR tga_h$[rbp], 1
	jge	SHORT $LN9@stbi__tga_
; Line 5716
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5717
	xor	eax, eax
	jmp	$LN1@stbi__tga_
$LN9@stbi__tga_:
; Line 5719
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_bits_per_pixel$[rbp], eax
; Line 5720
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
; Line 5721
	cmp	DWORD PTR tga_colormap_bpp$[rbp], 0
	je	SHORT $LN10@stbi__tga_
; Line 5722
	cmp	DWORD PTR tga_bits_per_pixel$[rbp], 8
	je	SHORT $LN12@stbi__tga_
	cmp	DWORD PTR tga_bits_per_pixel$[rbp], 16
	je	SHORT $LN12@stbi__tga_
; Line 5725
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5726
	xor	eax, eax
	jmp	$LN1@stbi__tga_
$LN12@stbi__tga_:
; Line 5728
	xor	r8d, r8d
	xor	edx, edx
	mov	ecx, DWORD PTR tga_colormap_bpp$[rbp]
	call	?stbi__tga_get_comp@@YAHHHPEAH@Z	; stbi__tga_get_comp
	mov	DWORD PTR tga_comp$[rbp], eax
; Line 5729
	jmp	SHORT $LN11@stbi__tga_
$LN10@stbi__tga_:
; Line 5730
	cmp	DWORD PTR tga_image_type$[rbp], 3
	je	SHORT $LN18@stbi__tga_
	cmp	DWORD PTR tga_image_type$[rbp], 11
	je	SHORT $LN18@stbi__tga_
	mov	DWORD PTR tv153[rbp], 0
	jmp	SHORT $LN19@stbi__tga_
$LN18@stbi__tga_:
	mov	DWORD PTR tv153[rbp], 1
$LN19@stbi__tga_:
	xor	r8d, r8d
	mov	edx, DWORD PTR tv153[rbp]
	mov	ecx, DWORD PTR tga_bits_per_pixel$[rbp]
	call	?stbi__tga_get_comp@@YAHHHPEAH@Z	; stbi__tga_get_comp
	mov	DWORD PTR tga_comp$[rbp], eax
$LN11@stbi__tga_:
; Line 5732
	cmp	DWORD PTR tga_comp$[rbp], 0
	jne	SHORT $LN13@stbi__tga_
; Line 5733
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5734
	xor	eax, eax
	jmp	SHORT $LN1@stbi__tga_
$LN13@stbi__tga_:
; Line 5736
	cmp	QWORD PTR x$[rbp], 0
	je	SHORT $LN14@stbi__tga_
	mov	rax, QWORD PTR x$[rbp]
	mov	ecx, DWORD PTR tga_w$[rbp]
	mov	DWORD PTR [rax], ecx
$LN14@stbi__tga_:
; Line 5737
	cmp	QWORD PTR y$[rbp], 0
	je	SHORT $LN15@stbi__tga_
	mov	rax, QWORD PTR y$[rbp]
	mov	ecx, DWORD PTR tga_h$[rbp]
	mov	DWORD PTR [rax], ecx
$LN15@stbi__tga_:
; Line 5738
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN16@stbi__tga_
	mov	rax, QWORD PTR comp$[rbp]
	mov	ecx, DWORD PTR tga_comp$[rbp]
	mov	DWORD PTR [rax], ecx
$LN16@stbi__tga_:
; Line 5739
	mov	eax, 1
$LN1@stbi__tga_:
; Line 5740
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
?stbi__tga_info@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__tga_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
_TEXT	SEGMENT
tga_offset$ = 4
tga_indexed$ = 36
tga_image_type$ = 68
tga_is_RLE$ = 100
tga_palette_start$ = 132
tga_palette_len$ = 164
tga_palette_bits$ = 196
tga_x_origin$ = 228
tga_y_origin$ = 260
tga_width$ = 292
tga_height$ = 324
tga_bits_per_pixel$ = 356
tga_comp$ = 388
tga_rgb16$ = 420
tga_inverted$ = 452
tga_data$ = 488
tga_palette$ = 520
i$ = 548
j$ = 580
raw_data$ = 612
RLE_count$ = 644
RLE_repeating$ = 676
read_next_pixel$ = 708
row$5 = 740
tga_row$6 = 776
pal_entry$7 = 808
RLE_cmd$8 = 836
pal_idx$9 = 868
index1$10 = 900
index2$11 = 932
temp$12 = 964
tga_pixel$13 = 1000
temp$14 = 1028
tv305 = 1620
tv251 = 1620
tv225 = 1620
tv212 = 1620
tv197 = 1620
tv185 = 1620
tv174 = 1620
tv162 = 1620
tv155 = 1620
tv140 = 1620
tv134 = 1620
__$ArrayPad$ = 1624
s$ = 1664
x$ = 1672
y$ = 1680
comp$ = 1688
req_comp$ = 1696
ri$ = 1704
?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z PROC ; stbi__tga_load, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5794
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1688				; 00000698H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 266				; 0000010aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1720]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5796
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_offset$[rbp], eax
; Line 5797
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_indexed$[rbp], eax
; Line 5798
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_image_type$[rbp], eax
; Line 5799
	mov	DWORD PTR tga_is_RLE$[rbp], 0
; Line 5800
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tga_palette_start$[rbp], eax
; Line 5801
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tga_palette_len$[rbp], eax
; Line 5802
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_palette_bits$[rbp], eax
; Line 5803
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tga_x_origin$[rbp], eax
; Line 5804
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tga_y_origin$[rbp], eax
; Line 5805
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tga_width$[rbp], eax
; Line 5806
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tga_height$[rbp], eax
; Line 5807
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_bits_per_pixel$[rbp], eax
; Line 5808
	mov	DWORD PTR tga_rgb16$[rbp], 0
; Line 5809
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_inverted$[rbp], eax
; Line 5813
	mov	QWORD PTR tga_palette$[rbp], 0
; Line 5815
	lea	rax, QWORD PTR raw_data$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 4
	rep stosb
; Line 5816
	mov	DWORD PTR RLE_count$[rbp], 0
; Line 5817
	mov	DWORD PTR RLE_repeating$[rbp], 0
; Line 5818
	mov	DWORD PTR read_next_pixel$[rbp], 1
; Line 5823
	cmp	DWORD PTR tga_height$[rbp], 16777216	; 01000000H
	jle	SHORT $LN29@stbi__tga_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN62@stbi__tga_
	mov	DWORD PTR tv134[rbp], 0
	jmp	SHORT $LN63@stbi__tga_
$LN62@stbi__tga_:
	mov	DWORD PTR tv134[rbp], 0
$LN63@stbi__tga_:
	movsxd	rax, DWORD PTR tv134[rbp]
	jmp	$LN1@stbi__tga_
$LN29@stbi__tga_:
; Line 5824
	cmp	DWORD PTR tga_width$[rbp], 16777216	; 01000000H
	jle	SHORT $LN30@stbi__tga_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN64@stbi__tga_
	mov	DWORD PTR tv140[rbp], 0
	jmp	SHORT $LN65@stbi__tga_
$LN64@stbi__tga_:
	mov	DWORD PTR tv140[rbp], 0
$LN65@stbi__tga_:
	movsxd	rax, DWORD PTR tv140[rbp]
	jmp	$LN1@stbi__tga_
$LN30@stbi__tga_:
; Line 5827
	cmp	DWORD PTR tga_image_type$[rbp], 8
	jl	SHORT $LN31@stbi__tga_
; Line 5829
	mov	eax, DWORD PTR tga_image_type$[rbp]
	sub	eax, 8
	mov	DWORD PTR tga_image_type$[rbp], eax
; Line 5830
	mov	DWORD PTR tga_is_RLE$[rbp], 1
$LN31@stbi__tga_:
; Line 5832
	mov	eax, DWORD PTR tga_inverted$[rbp]
	sar	eax, 5
	and	eax, 1
	mov	ecx, 1
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR tga_inverted$[rbp], eax
; Line 5835
	cmp	DWORD PTR tga_indexed$[rbp], 0
	je	SHORT $LN32@stbi__tga_
	lea	r8, QWORD PTR tga_rgb16$[rbp]
	xor	edx, edx
	mov	ecx, DWORD PTR tga_palette_bits$[rbp]
	call	?stbi__tga_get_comp@@YAHHHPEAH@Z	; stbi__tga_get_comp
	mov	DWORD PTR tga_comp$[rbp], eax
	jmp	SHORT $LN33@stbi__tga_
$LN32@stbi__tga_:
; Line 5836
	cmp	DWORD PTR tga_image_type$[rbp], 3
	jne	SHORT $LN66@stbi__tga_
	mov	DWORD PTR tv155[rbp], 1
	jmp	SHORT $LN67@stbi__tga_
$LN66@stbi__tga_:
	mov	DWORD PTR tv155[rbp], 0
$LN67@stbi__tga_:
	lea	r8, QWORD PTR tga_rgb16$[rbp]
	mov	edx, DWORD PTR tv155[rbp]
	mov	ecx, DWORD PTR tga_bits_per_pixel$[rbp]
	call	?stbi__tga_get_comp@@YAHHHPEAH@Z	; stbi__tga_get_comp
	mov	DWORD PTR tga_comp$[rbp], eax
$LN33@stbi__tga_:
; Line 5838
	cmp	DWORD PTR tga_comp$[rbp], 0
	jne	SHORT $LN34@stbi__tga_
; Line 5839
	lea	rcx, OFFSET FLAT:??_C@_0L@DMAPJJO@bad?5format@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN68@stbi__tga_
	mov	DWORD PTR tv162[rbp], 0
	jmp	SHORT $LN69@stbi__tga_
$LN68@stbi__tga_:
	mov	DWORD PTR tv162[rbp], 0
$LN69@stbi__tga_:
	movsxd	rax, DWORD PTR tv162[rbp]
	jmp	$LN1@stbi__tga_
$LN34@stbi__tga_:
; Line 5842
	mov	rax, QWORD PTR x$[rbp]
	mov	ecx, DWORD PTR tga_width$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 5843
	mov	rax, QWORD PTR y$[rbp]
	mov	ecx, DWORD PTR tga_height$[rbp]
	mov	DWORD PTR [rax], ecx
; Line 5844
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN35@stbi__tga_
	mov	rax, QWORD PTR comp$[rbp]
	mov	ecx, DWORD PTR tga_comp$[rbp]
	mov	DWORD PTR [rax], ecx
$LN35@stbi__tga_:
; Line 5846
	xor	r9d, r9d
	mov	r8d, DWORD PTR tga_comp$[rbp]
	mov	edx, DWORD PTR tga_height$[rbp]
	mov	ecx, DWORD PTR tga_width$[rbp]
	call	?stbi__mad3sizes_valid@@YAHHHHH@Z	; stbi__mad3sizes_valid
	test	eax, eax
	jne	SHORT $LN36@stbi__tga_
; Line 5847
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN70@stbi__tga_
	mov	DWORD PTR tv174[rbp], 0
	jmp	SHORT $LN71@stbi__tga_
$LN70@stbi__tga_:
	mov	DWORD PTR tv174[rbp], 0
$LN71@stbi__tga_:
	movsxd	rax, DWORD PTR tv174[rbp]
	jmp	$LN1@stbi__tga_
$LN36@stbi__tga_:
; Line 5849
	xor	r9d, r9d
	mov	r8d, DWORD PTR tga_comp$[rbp]
	mov	edx, DWORD PTR tga_height$[rbp]
	mov	ecx, DWORD PTR tga_width$[rbp]
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	mov	QWORD PTR tga_data$[rbp], rax
; Line 5850
	cmp	QWORD PTR tga_data$[rbp], 0
	jne	SHORT $LN37@stbi__tga_
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN72@stbi__tga_
	mov	DWORD PTR tv185[rbp], 0
	jmp	SHORT $LN73@stbi__tga_
$LN72@stbi__tga_:
	mov	DWORD PTR tv185[rbp], 0
$LN73@stbi__tga_:
	movsxd	rax, DWORD PTR tv185[rbp]
	jmp	$LN1@stbi__tga_
$LN37@stbi__tga_:
; Line 5853
	mov	edx, DWORD PTR tga_offset$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5855
	cmp	DWORD PTR tga_indexed$[rbp], 0
	jne	$LN38@stbi__tga_
	cmp	DWORD PTR tga_is_RLE$[rbp], 0
	jne	$LN38@stbi__tga_
	cmp	DWORD PTR tga_rgb16$[rbp], 0
	jne	$LN38@stbi__tga_
; Line 5856
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__tga_
$LN2@stbi__tga_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__tga_:
	mov	eax, DWORD PTR tga_height$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN3@stbi__tga_
; Line 5857
	cmp	DWORD PTR tga_inverted$[rbp], 0
	je	SHORT $LN74@stbi__tga_
	mov	eax, DWORD PTR i$[rbp]
	mov	ecx, DWORD PTR tga_height$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	dec	eax
	mov	DWORD PTR tv197[rbp], eax
	jmp	SHORT $LN75@stbi__tga_
$LN74@stbi__tga_:
	mov	eax, DWORD PTR i$[rbp]
	mov	DWORD PTR tv197[rbp], eax
$LN75@stbi__tga_:
	mov	eax, DWORD PTR tv197[rbp]
	mov	DWORD PTR row$5[rbp], eax
; Line 5858
	mov	eax, DWORD PTR row$5[rbp]
	imul	eax, DWORD PTR tga_width$[rbp]
	imul	eax, DWORD PTR tga_comp$[rbp]
	cdqe
	mov	rcx, QWORD PTR tga_data$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tga_row$6[rbp], rax
; Line 5859
	mov	eax, DWORD PTR tga_width$[rbp]
	imul	eax, DWORD PTR tga_comp$[rbp]
	mov	r8d, eax
	mov	rdx, QWORD PTR tga_row$6[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z ; stbi__getn
; Line 5860
	jmp	$LN2@stbi__tga_
$LN3@stbi__tga_:
; Line 5861
	jmp	$LN39@stbi__tga_
$LN38@stbi__tga_:
; Line 5863
	cmp	DWORD PTR tga_indexed$[rbp], 0
	je	$LN40@stbi__tga_
; Line 5865
	cmp	DWORD PTR tga_palette_len$[rbp], 0
	jne	SHORT $LN41@stbi__tga_
; Line 5866
	mov	rcx, QWORD PTR tga_data$[rbp]
	call	QWORD PTR __imp_free
; Line 5867
	lea	rcx, OFFSET FLAT:??_C@_0M@ILLOCNCO@bad?5palette@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN76@stbi__tga_
	mov	DWORD PTR tv212[rbp], 0
	jmp	SHORT $LN77@stbi__tga_
$LN76@stbi__tga_:
	mov	DWORD PTR tv212[rbp], 0
$LN77@stbi__tga_:
	movsxd	rax, DWORD PTR tv212[rbp]
	jmp	$LN1@stbi__tga_
$LN41@stbi__tga_:
; Line 5871
	mov	edx, DWORD PTR tga_palette_start$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5873
	xor	r8d, r8d
	mov	edx, DWORD PTR tga_comp$[rbp]
	mov	ecx, DWORD PTR tga_palette_len$[rbp]
	call	?stbi__malloc_mad2@@YAPEAXHHH@Z		; stbi__malloc_mad2
	mov	QWORD PTR tga_palette$[rbp], rax
; Line 5874
	cmp	QWORD PTR tga_palette$[rbp], 0
	jne	SHORT $LN42@stbi__tga_
; Line 5875
	mov	rcx, QWORD PTR tga_data$[rbp]
	call	QWORD PTR __imp_free
; Line 5876
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN78@stbi__tga_
	mov	DWORD PTR tv225[rbp], 0
	jmp	SHORT $LN79@stbi__tga_
$LN78@stbi__tga_:
	mov	DWORD PTR tv225[rbp], 0
$LN79@stbi__tga_:
	movsxd	rax, DWORD PTR tv225[rbp]
	jmp	$LN1@stbi__tga_
$LN42@stbi__tga_:
; Line 5878
	cmp	DWORD PTR tga_rgb16$[rbp], 0
	je	$LN43@stbi__tga_
; Line 5879
	mov	rax, QWORD PTR tga_palette$[rbp]
	mov	QWORD PTR pal_entry$7[rbp], rax
; Line 5880
	cmp	DWORD PTR tga_comp$[rbp], 3
	je	SHORT $LN80@stbi__tga_
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z@4JA
	add	eax, 86					; 00000056H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CK@GOOINIO@?$AAt?$AAg?$AAa?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAS?$AAT?$AAB@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN80@stbi__tga_:
; Line 5881
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN7@stbi__tga_
$LN5@stbi__tga_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN7@stbi__tga_:
	mov	eax, DWORD PTR tga_palette_len$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN6@stbi__tga_
; Line 5882
	mov	rdx, QWORD PTR pal_entry$7[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z ; stbi__tga_read_rgb16
; Line 5883
	movsxd	rax, DWORD PTR tga_comp$[rbp]
	mov	rcx, QWORD PTR pal_entry$7[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR pal_entry$7[rbp], rax
; Line 5884
	jmp	SHORT $LN5@stbi__tga_
$LN6@stbi__tga_:
; Line 5885
	jmp	SHORT $LN44@stbi__tga_
$LN43@stbi__tga_:
	mov	eax, DWORD PTR tga_palette_len$[rbp]
	imul	eax, DWORD PTR tga_comp$[rbp]
	mov	r8d, eax
	mov	rdx, QWORD PTR tga_palette$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__getn@@YAHPEAUstbi__context@@PEAEH@Z ; stbi__getn
	test	eax, eax
	jne	SHORT $LN45@stbi__tga_
; Line 5886
	mov	rcx, QWORD PTR tga_data$[rbp]
	call	QWORD PTR __imp_free
; Line 5887
	mov	rcx, QWORD PTR tga_palette$[rbp]
	call	QWORD PTR __imp_free
; Line 5888
	lea	rcx, OFFSET FLAT:??_C@_0M@ILLOCNCO@bad?5palette@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN81@stbi__tga_
	mov	DWORD PTR tv251[rbp], 0
	jmp	SHORT $LN82@stbi__tga_
$LN81@stbi__tga_:
	mov	DWORD PTR tv251[rbp], 0
$LN82@stbi__tga_:
	movsxd	rax, DWORD PTR tv251[rbp]
	jmp	$LN1@stbi__tga_
$LN45@stbi__tga_:
$LN44@stbi__tga_:
$LN40@stbi__tga_:
; Line 5892
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN10@stbi__tga_
$LN8@stbi__tga_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN10@stbi__tga_:
	mov	eax, DWORD PTR tga_width$[rbp]
	imul	eax, DWORD PTR tga_height$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN9@stbi__tga_
; Line 5895
	cmp	DWORD PTR tga_is_RLE$[rbp], 0
	je	SHORT $LN46@stbi__tga_
; Line 5897
	cmp	DWORD PTR RLE_count$[rbp], 0
	jne	SHORT $LN48@stbi__tga_
; Line 5900
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR RLE_cmd$8[rbp], eax
; Line 5901
	mov	eax, DWORD PTR RLE_cmd$8[rbp]
	and	eax, 127				; 0000007fH
	inc	eax
	mov	DWORD PTR RLE_count$[rbp], eax
; Line 5902
	mov	eax, DWORD PTR RLE_cmd$8[rbp]
	sar	eax, 7
	mov	DWORD PTR RLE_repeating$[rbp], eax
; Line 5903
	mov	DWORD PTR read_next_pixel$[rbp], 1
	jmp	SHORT $LN49@stbi__tga_
$LN48@stbi__tga_:
; Line 5904
	cmp	DWORD PTR RLE_repeating$[rbp], 0
	jne	SHORT $LN50@stbi__tga_
; Line 5906
	mov	DWORD PTR read_next_pixel$[rbp], 1
$LN50@stbi__tga_:
$LN49@stbi__tga_:
; Line 5908
	jmp	SHORT $LN47@stbi__tga_
$LN46@stbi__tga_:
; Line 5910
	mov	DWORD PTR read_next_pixel$[rbp], 1
$LN47@stbi__tga_:
; Line 5913
	cmp	DWORD PTR read_next_pixel$[rbp], 0
	je	$LN51@stbi__tga_
; Line 5916
	cmp	DWORD PTR tga_indexed$[rbp], 0
	je	$LN52@stbi__tga_
; Line 5919
	cmp	DWORD PTR tga_bits_per_pixel$[rbp], 8
	jne	SHORT $LN83@stbi__tga_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tv305[rbp], eax
	jmp	SHORT $LN84@stbi__tga_
$LN83@stbi__tga_:
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tv305[rbp], eax
$LN84@stbi__tga_:
	mov	eax, DWORD PTR tv305[rbp]
	mov	DWORD PTR pal_idx$9[rbp], eax
; Line 5920
	mov	eax, DWORD PTR tga_palette_len$[rbp]
	cmp	DWORD PTR pal_idx$9[rbp], eax
	jl	SHORT $LN54@stbi__tga_
; Line 5922
	mov	DWORD PTR pal_idx$9[rbp], 0
$LN54@stbi__tga_:
; Line 5924
	mov	eax, DWORD PTR pal_idx$9[rbp]
	imul	eax, DWORD PTR tga_comp$[rbp]
	mov	DWORD PTR pal_idx$9[rbp], eax
; Line 5925
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN13@stbi__tga_
$LN11@stbi__tga_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN13@stbi__tga_:
	mov	eax, DWORD PTR tga_comp$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jge	SHORT $LN12@stbi__tga_
; Line 5926
	mov	eax, DWORD PTR j$[rbp]
	mov	ecx, DWORD PTR pal_idx$9[rbp]
	add	ecx, eax
	mov	eax, ecx
	cdqe
	movsxd	rcx, DWORD PTR j$[rbp]
	mov	rdx, QWORD PTR tga_palette$[rbp]
	movzx	eax, BYTE PTR [rdx+rax]
	mov	BYTE PTR raw_data$[rbp+rcx], al
; Line 5927
	jmp	SHORT $LN11@stbi__tga_
$LN12@stbi__tga_:
; Line 5928
	jmp	$LN53@stbi__tga_
$LN52@stbi__tga_:
	cmp	DWORD PTR tga_rgb16$[rbp], 0
	je	SHORT $LN55@stbi__tga_
; Line 5929
	cmp	DWORD PTR tga_comp$[rbp], 3
	je	SHORT $LN85@stbi__tga_
	mov	eax, DWORD PTR ?__LINE__Var@?0??stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z@4JA
	add	eax, 135				; 00000087H
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_1IM@FNPNPBCD@?$AAC?$AA?3?$AA?2?$AAU?$AAs?$AAe?$AAr?$AAs?$AA?2?$AAa?$AAn?$AAt?$AAo?$AAn?$AA?2@
	lea	rcx, OFFSET FLAT:??_C@_1CK@GOOINIO@?$AAt?$AAg?$AAa?$AA_?$AAc?$AAo?$AAm?$AAp?$AA?5?$AA?$DN?$AA?$DN?$AA?5?$AAS?$AAT?$AAB@
	call	QWORD PTR __imp__wassert
	xor	eax, eax
$LN85@stbi__tga_:
; Line 5930
	lea	rdx, QWORD PTR raw_data$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__tga_read_rgb16@@YAXPEAUstbi__context@@PEAE@Z ; stbi__tga_read_rgb16
; Line 5931
	jmp	SHORT $LN56@stbi__tga_
$LN55@stbi__tga_:
; Line 5933
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN16@stbi__tga_
$LN14@stbi__tga_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN16@stbi__tga_:
	mov	eax, DWORD PTR tga_comp$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jge	SHORT $LN15@stbi__tga_
; Line 5934
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movsxd	rcx, DWORD PTR j$[rbp]
	mov	BYTE PTR raw_data$[rbp+rcx], al
; Line 5935
	jmp	SHORT $LN14@stbi__tga_
$LN15@stbi__tga_:
$LN56@stbi__tga_:
$LN53@stbi__tga_:
; Line 5938
	mov	DWORD PTR read_next_pixel$[rbp], 0
$LN51@stbi__tga_:
; Line 5942
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN19@stbi__tga_
$LN17@stbi__tga_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN19@stbi__tga_:
	mov	eax, DWORD PTR tga_comp$[rbp]
	cmp	DWORD PTR j$[rbp], eax
	jge	SHORT $LN18@stbi__tga_
; Line 5943
	movsxd	rax, DWORD PTR j$[rbp]
	mov	ecx, DWORD PTR i$[rbp]
	imul	ecx, DWORD PTR tga_comp$[rbp]
	add	ecx, DWORD PTR j$[rbp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR tga_data$[rbp]
	movzx	eax, BYTE PTR raw_data$[rbp+rax]
	mov	BYTE PTR [rdx+rcx], al
	jmp	SHORT $LN17@stbi__tga_
$LN18@stbi__tga_:
; Line 5946
	mov	eax, DWORD PTR RLE_count$[rbp]
	dec	eax
	mov	DWORD PTR RLE_count$[rbp], eax
; Line 5947
	jmp	$LN8@stbi__tga_
$LN9@stbi__tga_:
; Line 5949
	cmp	DWORD PTR tga_inverted$[rbp], 0
	je	$LN57@stbi__tga_
; Line 5951
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN22@stbi__tga_
$LN20@stbi__tga_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN22@stbi__tga_:
	mov	eax, DWORD PTR j$[rbp]
	shl	eax, 1
	cmp	eax, DWORD PTR tga_height$[rbp]
	jge	$LN21@stbi__tga_
; Line 5953
	mov	eax, DWORD PTR j$[rbp]
	imul	eax, DWORD PTR tga_width$[rbp]
	imul	eax, DWORD PTR tga_comp$[rbp]
	mov	DWORD PTR index1$10[rbp], eax
; Line 5954
	mov	eax, DWORD PTR tga_height$[rbp]
	dec	eax
	sub	eax, DWORD PTR j$[rbp]
	imul	eax, DWORD PTR tga_width$[rbp]
	imul	eax, DWORD PTR tga_comp$[rbp]
	mov	DWORD PTR index2$11[rbp], eax
; Line 5955
	mov	eax, DWORD PTR tga_width$[rbp]
	imul	eax, DWORD PTR tga_comp$[rbp]
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN25@stbi__tga_
$LN23@stbi__tga_:
	mov	eax, DWORD PTR i$[rbp]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
$LN25@stbi__tga_:
	cmp	DWORD PTR i$[rbp], 0
	jle	SHORT $LN24@stbi__tga_
; Line 5957
	movsxd	rax, DWORD PTR index1$10[rbp]
	mov	rcx, QWORD PTR tga_data$[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR temp$12[rbp], al
; Line 5958
	movsxd	rax, DWORD PTR index2$11[rbp]
	movsxd	rcx, DWORD PTR index1$10[rbp]
	mov	rdx, QWORD PTR tga_data$[rbp]
	mov	rdi, QWORD PTR tga_data$[rbp]
	movzx	eax, BYTE PTR [rdi+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 5959
	movsxd	rax, DWORD PTR index2$11[rbp]
	mov	rcx, QWORD PTR tga_data$[rbp]
	movzx	edx, BYTE PTR temp$12[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 5960
	mov	eax, DWORD PTR index1$10[rbp]
	inc	eax
	mov	DWORD PTR index1$10[rbp], eax
; Line 5961
	mov	eax, DWORD PTR index2$11[rbp]
	inc	eax
	mov	DWORD PTR index2$11[rbp], eax
; Line 5962
	jmp	$LN23@stbi__tga_
$LN24@stbi__tga_:
; Line 5963
	jmp	$LN20@stbi__tga_
$LN21@stbi__tga_:
$LN57@stbi__tga_:
; Line 5966
	cmp	QWORD PTR tga_palette$[rbp], 0
	je	SHORT $LN58@stbi__tga_
; Line 5968
	mov	rcx, QWORD PTR tga_palette$[rbp]
	call	QWORD PTR __imp_free
$LN58@stbi__tga_:
$LN39@stbi__tga_:
; Line 5973
	cmp	DWORD PTR tga_comp$[rbp], 3
	jl	$LN59@stbi__tga_
	cmp	DWORD PTR tga_rgb16$[rbp], 0
	jne	$LN59@stbi__tga_
; Line 5975
	mov	rax, QWORD PTR tga_data$[rbp]
	mov	QWORD PTR tga_pixel$13[rbp], rax
; Line 5976
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN28@stbi__tga_
$LN26@stbi__tga_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN28@stbi__tga_:
	mov	eax, DWORD PTR tga_width$[rbp]
	imul	eax, DWORD PTR tga_height$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN27@stbi__tga_
; Line 5978
	mov	eax, 1
	imul	rax, rax, 0
	mov	rcx, QWORD PTR tga_pixel$13[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR temp$14[rbp], al
; Line 5979
	mov	eax, 1
	imul	rax, rax, 2
	mov	ecx, 1
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR tga_pixel$13[rbp]
	mov	rdi, QWORD PTR tga_pixel$13[rbp]
	movzx	eax, BYTE PTR [rdi+rax]
	mov	BYTE PTR [rdx+rcx], al
; Line 5980
	mov	eax, 1
	imul	rax, rax, 2
	mov	rcx, QWORD PTR tga_pixel$13[rbp]
	movzx	edx, BYTE PTR temp$14[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 5981
	movsxd	rax, DWORD PTR tga_comp$[rbp]
	mov	rcx, QWORD PTR tga_pixel$13[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR tga_pixel$13[rbp], rax
; Line 5982
	jmp	$LN26@stbi__tga_
$LN27@stbi__tga_:
$LN59@stbi__tga_:
; Line 5986
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN60@stbi__tga_
	mov	eax, DWORD PTR tga_comp$[rbp]
	cmp	DWORD PTR req_comp$[rbp], eax
	je	SHORT $LN60@stbi__tga_
; Line 5987
	mov	eax, DWORD PTR tga_height$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, DWORD PTR tga_width$[rbp]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, DWORD PTR tga_comp$[rbp]
	mov	rcx, QWORD PTR tga_data$[rbp]
	call	?stbi__convert_format@@YAPEAEPEAEHHII@Z	; stbi__convert_format
	mov	QWORD PTR tga_data$[rbp], rax
$LN60@stbi__tga_:
; Line 5991
	mov	DWORD PTR tga_y_origin$[rbp], 0
	mov	eax, DWORD PTR tga_y_origin$[rbp]
	mov	DWORD PTR tga_x_origin$[rbp], eax
	mov	eax, DWORD PTR tga_x_origin$[rbp]
	mov	DWORD PTR tga_palette_bits$[rbp], eax
	mov	eax, DWORD PTR tga_palette_bits$[rbp]
	mov	DWORD PTR tga_palette_len$[rbp], eax
	mov	eax, DWORD PTR tga_palette_len$[rbp]
	mov	DWORD PTR tga_palette_start$[rbp], eax
; Line 5995
	mov	rax, QWORD PTR tga_data$[rbp]
$LN1@stbi__tga_:
; Line 5996
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1640]
	pop	rdi
	pop	rbp
	ret	0
?stbi__tga_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ENDP ; stbi__tga_load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__tga_test@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
res$ = 4
sz$ = 36
tga_color_type$ = 68
s$ = 320
?stbi__tga_test@@YAHPEAUstbi__context@@@Z PROC		; stbi__tga_test, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5743
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5744
	mov	DWORD PTR res$[rbp], 0
; Line 5746
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
; Line 5747
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tga_color_type$[rbp], eax
; Line 5748
	cmp	DWORD PTR tga_color_type$[rbp], 1
	jle	SHORT $LN2@stbi__tga_
	jmp	$LN3@stbi__tga_
	jmp	$errorEnd$21
$LN2@stbi__tga_:
; Line 5749
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR sz$[rbp], eax
; Line 5750
	cmp	DWORD PTR tga_color_type$[rbp], 1
	jne	SHORT $LN4@stbi__tga_
; Line 5751
	cmp	DWORD PTR sz$[rbp], 1
	je	SHORT $LN6@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 9
	je	SHORT $LN6@stbi__tga_
	jmp	$LN7@stbi__tga_
	jmp	$errorEnd$21
$LN6@stbi__tga_:
; Line 5752
	mov	edx, 4
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5753
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR sz$[rbp], eax
; Line 5754
	cmp	DWORD PTR sz$[rbp], 8
	je	SHORT $LN8@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 15
	je	SHORT $LN8@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 16
	je	SHORT $LN8@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 24
	je	SHORT $LN8@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 32			; 00000020H
	je	SHORT $LN8@stbi__tga_
	jmp	$LN9@stbi__tga_
	jmp	$errorEnd$21
$LN8@stbi__tga_:
; Line 5755
	mov	edx, 4
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5756
	jmp	SHORT $LN5@stbi__tga_
$LN4@stbi__tga_:
; Line 5757
	cmp	DWORD PTR sz$[rbp], 2
	je	SHORT $LN10@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 3
	je	SHORT $LN10@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 10
	je	SHORT $LN10@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 11
	je	SHORT $LN10@stbi__tga_
	jmp	$LN11@stbi__tga_
	jmp	$errorEnd$21
$LN10@stbi__tga_:
; Line 5758
	mov	edx, 9
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
$LN5@stbi__tga_:
; Line 5760
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	cmp	eax, 1
	jge	SHORT $LN12@stbi__tga_
	jmp	SHORT $LN13@stbi__tga_
	jmp	SHORT $errorEnd$21
$LN12@stbi__tga_:
; Line 5761
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	cmp	eax, 1
	jge	SHORT $LN14@stbi__tga_
	jmp	SHORT $LN15@stbi__tga_
	jmp	SHORT $errorEnd$21
$LN14@stbi__tga_:
; Line 5762
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR sz$[rbp], eax
; Line 5763
	cmp	DWORD PTR tga_color_type$[rbp], 1
	jne	SHORT $LN16@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 8
	je	SHORT $LN16@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 16
	je	SHORT $LN16@stbi__tga_
	jmp	SHORT $LN17@stbi__tga_
	jmp	SHORT $errorEnd$21
$LN16@stbi__tga_:
; Line 5764
	cmp	DWORD PTR sz$[rbp], 8
	je	SHORT $LN18@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 15
	je	SHORT $LN18@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 16
	je	SHORT $LN18@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 24
	je	SHORT $LN18@stbi__tga_
	cmp	DWORD PTR sz$[rbp], 32			; 00000020H
	je	SHORT $LN18@stbi__tga_
	jmp	SHORT $LN19@stbi__tga_
	jmp	SHORT $errorEnd$21
$LN18@stbi__tga_:
; Line 5766
	mov	DWORD PTR res$[rbp], 1
$LN3@stbi__tga_:
$LN7@stbi__tga_:
$LN9@stbi__tga_:
$LN11@stbi__tga_:
$LN13@stbi__tga_:
$LN15@stbi__tga_:
$LN17@stbi__tga_:
$LN19@stbi__tga_:
$errorEnd$21:
; Line 5769
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5770
	mov	eax, DWORD PTR res$[rbp]
; Line 5771
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__tga_test@@YAHPEAUstbi__context@@@Z ENDP		; stbi__tga_test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
p$ = 8
info$ = 40
tv77 = 276
__$ArrayPad$ = 280
s$ = 320
x$ = 328
y$ = 336
comp$ = 344
?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__bmp_info, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7258
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7262
	mov	DWORD PTR info$[rbp+28], 255		; 000000ffH
; Line 7263
	lea	rdx, QWORD PTR info$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z ; stbi__bmp_parse_header
	mov	QWORD PTR p$[rbp], rax
; Line 7264
	cmp	QWORD PTR p$[rbp], 0
	jne	SHORT $LN2@stbi__bmp_
; Line 7265
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 7266
	xor	eax, eax
	jmp	$LN1@stbi__bmp_
$LN2@stbi__bmp_:
; Line 7268
	cmp	QWORD PTR x$[rbp], 0
	je	SHORT $LN3@stbi__bmp_
	mov	rax, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
$LN3@stbi__bmp_:
; Line 7269
	cmp	QWORD PTR y$[rbp], 0
	je	SHORT $LN4@stbi__bmp_
	mov	rax, QWORD PTR y$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax], ecx
$LN4@stbi__bmp_:
; Line 7270
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN5@stbi__bmp_
; Line 7271
	cmp	DWORD PTR info$[rbp], 24
	jne	SHORT $LN6@stbi__bmp_
	cmp	DWORD PTR info$[rbp+24], -16777216	; ff000000H
	jne	SHORT $LN6@stbi__bmp_
; Line 7272
	mov	rax, QWORD PTR comp$[rbp]
	mov	DWORD PTR [rax], 3
	jmp	SHORT $LN7@stbi__bmp_
$LN6@stbi__bmp_:
; Line 7274
	cmp	DWORD PTR info$[rbp+24], 0
	je	SHORT $LN9@stbi__bmp_
	mov	DWORD PTR tv77[rbp], 4
	jmp	SHORT $LN10@stbi__bmp_
$LN9@stbi__bmp_:
	mov	DWORD PTR tv77[rbp], 3
$LN10@stbi__bmp_:
	mov	rax, QWORD PTR comp$[rbp]
	mov	ecx, DWORD PTR tv77[rbp]
	mov	DWORD PTR [rax], ecx
$LN7@stbi__bmp_:
$LN5@stbi__bmp_:
; Line 7276
	mov	eax, 1
$LN1@stbi__bmp_:
; Line 7277
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?stbi__bmp_info@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__bmp_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
_TEXT	SEGMENT
out$ = 8
mr$ = 36
mg$ = 68
mb$ = 100
ma$ = 132
all_a$ = 164
pal$ = 208
psize$ = 1252
i$ = 1284
j$ = 1316
width$ = 1348
flip_vertically$ = 1380
pad$ = 1412
target$ = 1444
info$ = 1480
z$5 = 1540
bit_offset$6 = 1572
v$7 = 1604
color$8 = 1636
v$9 = 1668
v2$10 = 1700
rshift$11 = 1732
gshift$12 = 1764
bshift$13 = 1796
ashift$14 = 1828
rcount$15 = 1860
gcount$16 = 1892
bcount$17 = 1924
acount$18 = 1956
z$19 = 1988
easy$20 = 2020
a$21 = 2052
bpp$22 = 2084
v$23 = 2116
a$24 = 2148
t$25 = 2180
p1$26 = 2216
p2$27 = 2248
tv561 = 3220
tv521 = 3220
tv504 = 3220
tv472 = 3220
tv442 = 3220
tv381 = 3220
tv272 = 3220
tv253 = 3220
tv218 = 3220
tv209 = 3220
tv196 = 3220
tv181 = 3220
tv174 = 3220
tv87 = 3220
tv80 = 3220
tv70 = 3220
__$ArrayPad$ = 3224
s$ = 3264
x$ = 3272
y$ = 3280
comp$ = 3288
req_comp$ = 3296
ri$ = 3304
?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z PROC ; stbi__bmp_load, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5468
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 3288				; 00000cd8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 570				; 0000023aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+3320]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5470
	mov	DWORD PTR mr$[rbp], 0
	mov	DWORD PTR mg$[rbp], 0
	mov	DWORD PTR mb$[rbp], 0
	mov	DWORD PTR ma$[rbp], 0
; Line 5472
	mov	DWORD PTR psize$[rbp], 0
; Line 5477
	mov	DWORD PTR info$[rbp+28], 255		; 000000ffH
; Line 5478
	lea	rdx, QWORD PTR info$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__bmp_parse_header@@YAPEAXPEAUstbi__context@@PEAUstbi__bmp_data@@@Z ; stbi__bmp_parse_header
	test	rax, rax
	jne	SHORT $LN35@stbi__bmp_
; Line 5479
	xor	eax, eax
	jmp	$LN1@stbi__bmp_
$LN35@stbi__bmp_:
; Line 5481
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+4], 0
	jle	SHORT $LN93@stbi__bmp_
	mov	DWORD PTR tv70[rbp], 1
	jmp	SHORT $LN94@stbi__bmp_
$LN93@stbi__bmp_:
	mov	DWORD PTR tv70[rbp], 0
$LN94@stbi__bmp_:
	mov	eax, DWORD PTR tv70[rbp]
	mov	DWORD PTR flip_vertically$[rbp], eax
; Line 5482
	mov	rax, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rax+4]
	call	abs
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+4], eax
; Line 5484
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax+4], 16777216		; 01000000H
	jbe	SHORT $LN36@stbi__bmp_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN95@stbi__bmp_
	mov	DWORD PTR tv80[rbp], 0
	jmp	SHORT $LN96@stbi__bmp_
$LN95@stbi__bmp_:
	mov	DWORD PTR tv80[rbp], 0
$LN96@stbi__bmp_:
	movsxd	rax, DWORD PTR tv80[rbp]
	jmp	$LN1@stbi__bmp_
$LN36@stbi__bmp_:
; Line 5485
	mov	rax, QWORD PTR s$[rbp]
	cmp	DWORD PTR [rax], 16777216		; 01000000H
	jbe	SHORT $LN37@stbi__bmp_
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN97@stbi__bmp_
	mov	DWORD PTR tv87[rbp], 0
	jmp	SHORT $LN98@stbi__bmp_
$LN97@stbi__bmp_:
	mov	DWORD PTR tv87[rbp], 0
$LN98@stbi__bmp_:
	movsxd	rax, DWORD PTR tv87[rbp]
	jmp	$LN1@stbi__bmp_
$LN37@stbi__bmp_:
; Line 5487
	mov	eax, DWORD PTR info$[rbp+12]
	mov	DWORD PTR mr$[rbp], eax
; Line 5488
	mov	eax, DWORD PTR info$[rbp+16]
	mov	DWORD PTR mg$[rbp], eax
; Line 5489
	mov	eax, DWORD PTR info$[rbp+20]
	mov	DWORD PTR mb$[rbp], eax
; Line 5490
	mov	eax, DWORD PTR info$[rbp+24]
	mov	DWORD PTR ma$[rbp], eax
; Line 5491
	mov	eax, DWORD PTR info$[rbp+28]
	mov	DWORD PTR all_a$[rbp], eax
; Line 5493
	cmp	DWORD PTR info$[rbp+8], 12
	jne	SHORT $LN38@stbi__bmp_
; Line 5494
	cmp	DWORD PTR info$[rbp], 24
	jge	SHORT $LN40@stbi__bmp_
; Line 5495
	mov	eax, DWORD PTR info$[rbp+32]
	mov	ecx, DWORD PTR info$[rbp+4]
	sub	ecx, eax
	mov	eax, ecx
	sub	eax, 24
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR psize$[rbp], eax
$LN40@stbi__bmp_:
; Line 5496
	jmp	SHORT $LN39@stbi__bmp_
$LN38@stbi__bmp_:
; Line 5497
	cmp	DWORD PTR info$[rbp], 16
	jge	SHORT $LN41@stbi__bmp_
; Line 5498
	mov	eax, DWORD PTR info$[rbp+32]
	mov	ecx, DWORD PTR info$[rbp+4]
	sub	ecx, eax
	mov	eax, ecx
	sub	eax, DWORD PTR info$[rbp+8]
	sar	eax, 2
	mov	DWORD PTR psize$[rbp], eax
$LN41@stbi__bmp_:
$LN39@stbi__bmp_:
; Line 5500
	cmp	DWORD PTR psize$[rbp], 0
	jne	SHORT $LN42@stbi__bmp_
; Line 5501
	movsxd	rax, DWORD PTR info$[rbp+4]
	mov	rcx, QWORD PTR s$[rbp]
	movsxd	rcx, DWORD PTR [rcx+184]
	mov	rdx, QWORD PTR s$[rbp]
	mov	r8, QWORD PTR s$[rbp]
	mov	r8, QWORD PTR [r8+208]
	mov	rdx, QWORD PTR [rdx+192]
	sub	rdx, r8
	add	rcx, rdx
	cmp	rax, rcx
	je	SHORT $LN43@stbi__bmp_
; Line 5502
	lea	rcx, OFFSET FLAT:??_C@_0L@JDPIFELH@bad?5offset@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN99@stbi__bmp_
	mov	DWORD PTR tv174[rbp], 0
	jmp	SHORT $LN100@stbi__bmp_
$LN99@stbi__bmp_:
	mov	DWORD PTR tv174[rbp], 0
$LN100@stbi__bmp_:
	movsxd	rax, DWORD PTR tv174[rbp]
	jmp	$LN1@stbi__bmp_
$LN43@stbi__bmp_:
$LN42@stbi__bmp_:
; Line 5506
	cmp	DWORD PTR info$[rbp], 24
	jne	SHORT $LN44@stbi__bmp_
	cmp	DWORD PTR ma$[rbp], -16777216		; ff000000H
	jne	SHORT $LN44@stbi__bmp_
; Line 5507
	mov	rax, QWORD PTR s$[rbp]
	mov	DWORD PTR [rax+8], 3
	jmp	SHORT $LN45@stbi__bmp_
$LN44@stbi__bmp_:
; Line 5509
	cmp	DWORD PTR ma$[rbp], 0
	je	SHORT $LN101@stbi__bmp_
	mov	DWORD PTR tv181[rbp], 4
	jmp	SHORT $LN102@stbi__bmp_
$LN101@stbi__bmp_:
	mov	DWORD PTR tv181[rbp], 3
$LN102@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR tv181[rbp]
	mov	DWORD PTR [rax+8], ecx
$LN45@stbi__bmp_:
; Line 5510
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN46@stbi__bmp_
	cmp	DWORD PTR req_comp$[rbp], 3
	jl	SHORT $LN46@stbi__bmp_
; Line 5511
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR target$[rbp], eax
	jmp	SHORT $LN47@stbi__bmp_
$LN46@stbi__bmp_:
; Line 5513
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR target$[rbp], eax
$LN47@stbi__bmp_:
; Line 5516
	xor	r9d, r9d
	mov	rax, QWORD PTR s$[rbp]
	mov	r8d, DWORD PTR [rax+4]
	mov	rax, QWORD PTR s$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	ecx, DWORD PTR target$[rbp]
	call	?stbi__mad3sizes_valid@@YAHHHHH@Z	; stbi__mad3sizes_valid
	test	eax, eax
	jne	SHORT $LN48@stbi__bmp_
; Line 5517
	lea	rcx, OFFSET FLAT:??_C@_09OJDLMMBJ@too?5large@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN103@stbi__bmp_
	mov	DWORD PTR tv196[rbp], 0
	jmp	SHORT $LN104@stbi__bmp_
$LN103@stbi__bmp_:
	mov	DWORD PTR tv196[rbp], 0
$LN104@stbi__bmp_:
	movsxd	rax, DWORD PTR tv196[rbp]
	jmp	$LN1@stbi__bmp_
$LN48@stbi__bmp_:
; Line 5519
	xor	r9d, r9d
	mov	rax, QWORD PTR s$[rbp]
	mov	r8d, DWORD PTR [rax+4]
	mov	rax, QWORD PTR s$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	ecx, DWORD PTR target$[rbp]
	call	?stbi__malloc_mad3@@YAPEAXHHHH@Z	; stbi__malloc_mad3
	mov	QWORD PTR out$[rbp], rax
; Line 5520
	cmp	QWORD PTR out$[rbp], 0
	jne	SHORT $LN49@stbi__bmp_
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN105@stbi__bmp_
	mov	DWORD PTR tv209[rbp], 0
	jmp	SHORT $LN106@stbi__bmp_
$LN105@stbi__bmp_:
	mov	DWORD PTR tv209[rbp], 0
$LN106@stbi__bmp_:
	movsxd	rax, DWORD PTR tv209[rbp]
	jmp	$LN1@stbi__bmp_
$LN49@stbi__bmp_:
; Line 5521
	cmp	DWORD PTR info$[rbp], 16
	jge	$LN50@stbi__bmp_
; Line 5522
	mov	DWORD PTR z$5[rbp], 0
; Line 5523
	cmp	DWORD PTR psize$[rbp], 0
	je	SHORT $LN53@stbi__bmp_
	cmp	DWORD PTR psize$[rbp], 256		; 00000100H
	jle	SHORT $LN52@stbi__bmp_
$LN53@stbi__bmp_:
	mov	rcx, QWORD PTR out$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_07MALOAKCI@invalid@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN107@stbi__bmp_
	mov	DWORD PTR tv218[rbp], 0
	jmp	SHORT $LN108@stbi__bmp_
$LN107@stbi__bmp_:
	mov	DWORD PTR tv218[rbp], 0
$LN108@stbi__bmp_:
	movsxd	rax, DWORD PTR tv218[rbp]
	jmp	$LN1@stbi__bmp_
$LN52@stbi__bmp_:
; Line 5524
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN4@stbi__bmp_
$LN2@stbi__bmp_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@stbi__bmp_:
	mov	eax, DWORD PTR psize$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN3@stbi__bmp_
; Line 5525
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movsxd	rcx, DWORD PTR i$[rbp]
	lea	rcx, QWORD PTR pal$[rbp+rcx*4]
	mov	edx, 1
	imul	rdx, rdx, 2
	mov	BYTE PTR [rcx+rdx], al
; Line 5526
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movsxd	rcx, DWORD PTR i$[rbp]
	lea	rcx, QWORD PTR pal$[rbp+rcx*4]
	mov	edx, 1
	imul	rdx, rdx, 1
	mov	BYTE PTR [rcx+rdx], al
; Line 5527
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movsxd	rcx, DWORD PTR i$[rbp]
	lea	rcx, QWORD PTR pal$[rbp+rcx*4]
	mov	edx, 1
	imul	rdx, rdx, 0
	mov	BYTE PTR [rcx+rdx], al
; Line 5528
	cmp	DWORD PTR info$[rbp+8], 12
	je	SHORT $LN54@stbi__bmp_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
$LN54@stbi__bmp_:
; Line 5529
	movsxd	rax, DWORD PTR i$[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 3
	mov	BYTE PTR [rax+rcx], 255			; 000000ffH
; Line 5530
	jmp	$LN2@stbi__bmp_
$LN3@stbi__bmp_:
; Line 5531
	cmp	DWORD PTR info$[rbp+8], 12
	jne	SHORT $LN109@stbi__bmp_
	mov	DWORD PTR tv253[rbp], 3
	jmp	SHORT $LN110@stbi__bmp_
$LN109@stbi__bmp_:
	mov	DWORD PTR tv253[rbp], 4
$LN110@stbi__bmp_:
	mov	eax, DWORD PTR info$[rbp+32]
	mov	ecx, DWORD PTR info$[rbp+4]
	sub	ecx, eax
	mov	eax, ecx
	sub	eax, DWORD PTR info$[rbp+8]
	mov	ecx, DWORD PTR psize$[rbp]
	imul	ecx, DWORD PTR tv253[rbp]
	sub	eax, ecx
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5532
	cmp	DWORD PTR info$[rbp], 1
	jne	SHORT $LN55@stbi__bmp_
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	add	eax, 7
	shr	eax, 3
	mov	DWORD PTR width$[rbp], eax
	jmp	SHORT $LN56@stbi__bmp_
$LN55@stbi__bmp_:
; Line 5533
	cmp	DWORD PTR info$[rbp], 4
	jne	SHORT $LN57@stbi__bmp_
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	shr	eax, 1
	mov	DWORD PTR width$[rbp], eax
	jmp	SHORT $LN58@stbi__bmp_
$LN57@stbi__bmp_:
; Line 5534
	cmp	DWORD PTR info$[rbp], 8
	jne	SHORT $LN59@stbi__bmp_
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR width$[rbp], eax
	jmp	SHORT $LN60@stbi__bmp_
$LN59@stbi__bmp_:
; Line 5535
	mov	rcx, QWORD PTR out$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_07JNJHIMGH@bad?5bpp@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN111@stbi__bmp_
	mov	DWORD PTR tv272[rbp], 0
	jmp	SHORT $LN112@stbi__bmp_
$LN111@stbi__bmp_:
	mov	DWORD PTR tv272[rbp], 0
$LN112@stbi__bmp_:
	movsxd	rax, DWORD PTR tv272[rbp]
	jmp	$LN1@stbi__bmp_
$LN60@stbi__bmp_:
$LN58@stbi__bmp_:
$LN56@stbi__bmp_:
; Line 5536
	mov	eax, DWORD PTR width$[rbp]
	neg	eax
	and	eax, 3
	mov	DWORD PTR pad$[rbp], eax
; Line 5537
	cmp	DWORD PTR info$[rbp], 1
	jne	$LN61@stbi__bmp_
; Line 5538
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN7@stbi__bmp_
$LN5@stbi__bmp_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN7@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR j$[rbp], eax
	jge	$LN6@stbi__bmp_
; Line 5539
	mov	DWORD PTR bit_offset$6[rbp], 7
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR v$7[rbp], eax
; Line 5540
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN10@stbi__bmp_
$LN8@stbi__bmp_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN10@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN9@stbi__bmp_
; Line 5541
	mov	eax, DWORD PTR bit_offset$6[rbp]
	movzx	ecx, al
	mov	eax, DWORD PTR v$7[rbp]
	sar	eax, cl
	and	eax, 1
	mov	DWORD PTR color$8[rbp], eax
; Line 5542
	movsxd	rax, DWORD PTR color$8[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 0
	movsxd	rdx, DWORD PTR z$5[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
; Line 5543
	movsxd	rax, DWORD PTR color$8[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 1
	movsxd	rdx, DWORD PTR z$5[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
; Line 5544
	movsxd	rax, DWORD PTR color$8[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 2
	movsxd	rdx, DWORD PTR z$5[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
; Line 5545
	cmp	DWORD PTR target$[rbp], 4
	jne	SHORT $LN63@stbi__bmp_
	movsxd	rax, DWORD PTR z$5[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
$LN63@stbi__bmp_:
; Line 5546
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	rcx, QWORD PTR s$[rbp]
	cmp	eax, DWORD PTR [rcx]
	jne	SHORT $LN64@stbi__bmp_
	jmp	SHORT $LN9@stbi__bmp_
$LN64@stbi__bmp_:
; Line 5547
	mov	eax, DWORD PTR bit_offset$6[rbp]
	dec	eax
	mov	DWORD PTR bit_offset$6[rbp], eax
	cmp	DWORD PTR bit_offset$6[rbp], 0
	jge	SHORT $LN65@stbi__bmp_
; Line 5548
	mov	DWORD PTR bit_offset$6[rbp], 7
; Line 5549
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR v$7[rbp], eax
$LN65@stbi__bmp_:
; Line 5551
	jmp	$LN8@stbi__bmp_
$LN9@stbi__bmp_:
; Line 5552
	mov	edx, DWORD PTR pad$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5553
	jmp	$LN5@stbi__bmp_
$LN6@stbi__bmp_:
; Line 5554
	jmp	$LN62@stbi__bmp_
$LN61@stbi__bmp_:
; Line 5555
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN13@stbi__bmp_
$LN11@stbi__bmp_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN13@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR j$[rbp], eax
	jge	$LN12@stbi__bmp_
; Line 5556
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN16@stbi__bmp_
$LN14@stbi__bmp_:
	mov	eax, DWORD PTR i$[rbp]
	add	eax, 2
	mov	DWORD PTR i$[rbp], eax
$LN16@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN15@stbi__bmp_
; Line 5557
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR v$9[rbp], eax
	mov	DWORD PTR v2$10[rbp], 0
; Line 5558
	cmp	DWORD PTR info$[rbp], 4
	jne	SHORT $LN66@stbi__bmp_
; Line 5559
	mov	eax, DWORD PTR v$9[rbp]
	and	eax, 15
	mov	DWORD PTR v2$10[rbp], eax
; Line 5560
	mov	eax, DWORD PTR v$9[rbp]
	sar	eax, 4
	mov	DWORD PTR v$9[rbp], eax
$LN66@stbi__bmp_:
; Line 5562
	movsxd	rax, DWORD PTR v$9[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 0
	movsxd	rdx, DWORD PTR z$5[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
; Line 5563
	movsxd	rax, DWORD PTR v$9[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 1
	movsxd	rdx, DWORD PTR z$5[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
; Line 5564
	movsxd	rax, DWORD PTR v$9[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 2
	movsxd	rdx, DWORD PTR z$5[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
; Line 5565
	cmp	DWORD PTR target$[rbp], 4
	jne	SHORT $LN67@stbi__bmp_
	movsxd	rax, DWORD PTR z$5[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
$LN67@stbi__bmp_:
; Line 5566
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	rcx, QWORD PTR s$[rbp]
	cmp	eax, DWORD PTR [rcx]
	jne	SHORT $LN68@stbi__bmp_
	jmp	$LN15@stbi__bmp_
$LN68@stbi__bmp_:
; Line 5567
	cmp	DWORD PTR info$[rbp], 8
	jne	SHORT $LN113@stbi__bmp_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tv381[rbp], eax
	jmp	SHORT $LN114@stbi__bmp_
$LN113@stbi__bmp_:
	mov	eax, DWORD PTR v2$10[rbp]
	mov	DWORD PTR tv381[rbp], eax
$LN114@stbi__bmp_:
	mov	eax, DWORD PTR tv381[rbp]
	mov	DWORD PTR v$9[rbp], eax
; Line 5568
	movsxd	rax, DWORD PTR v$9[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 0
	movsxd	rdx, DWORD PTR z$5[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
; Line 5569
	movsxd	rax, DWORD PTR v$9[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 1
	movsxd	rdx, DWORD PTR z$5[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
; Line 5570
	movsxd	rax, DWORD PTR v$9[rbp]
	lea	rax, QWORD PTR pal$[rbp+rax*4]
	mov	ecx, 1
	imul	rcx, rcx, 2
	movsxd	rdx, DWORD PTR z$5[rbp]
	mov	r8, QWORD PTR out$[rbp]
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [r8+rdx], al
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
; Line 5571
	cmp	DWORD PTR target$[rbp], 4
	jne	SHORT $LN69@stbi__bmp_
	movsxd	rax, DWORD PTR z$5[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	mov	eax, DWORD PTR z$5[rbp]
	inc	eax
	mov	DWORD PTR z$5[rbp], eax
$LN69@stbi__bmp_:
; Line 5572
	jmp	$LN14@stbi__bmp_
$LN15@stbi__bmp_:
; Line 5573
	mov	edx, DWORD PTR pad$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5574
	jmp	$LN11@stbi__bmp_
$LN12@stbi__bmp_:
$LN62@stbi__bmp_:
; Line 5576
	jmp	$LN51@stbi__bmp_
$LN50@stbi__bmp_:
; Line 5577
	mov	DWORD PTR rshift$11[rbp], 0
	mov	DWORD PTR gshift$12[rbp], 0
	mov	DWORD PTR bshift$13[rbp], 0
	mov	DWORD PTR ashift$14[rbp], 0
	mov	DWORD PTR rcount$15[rbp], 0
	mov	DWORD PTR gcount$16[rbp], 0
	mov	DWORD PTR bcount$17[rbp], 0
	mov	DWORD PTR acount$18[rbp], 0
; Line 5578
	mov	DWORD PTR z$19[rbp], 0
; Line 5579
	mov	DWORD PTR easy$20[rbp], 0
; Line 5580
	mov	eax, DWORD PTR info$[rbp+32]
	mov	ecx, DWORD PTR info$[rbp+4]
	sub	ecx, eax
	mov	eax, ecx
	sub	eax, DWORD PTR info$[rbp+8]
	mov	edx, eax
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5581
	cmp	DWORD PTR info$[rbp], 24
	jne	SHORT $LN70@stbi__bmp_
	mov	rax, QWORD PTR s$[rbp]
	imul	eax, DWORD PTR [rax], 3
	mov	DWORD PTR width$[rbp], eax
	jmp	SHORT $LN71@stbi__bmp_
$LN70@stbi__bmp_:
; Line 5582
	cmp	DWORD PTR info$[rbp], 16
	jne	SHORT $LN72@stbi__bmp_
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	shl	eax, 1
	mov	DWORD PTR width$[rbp], eax
	jmp	SHORT $LN73@stbi__bmp_
$LN72@stbi__bmp_:
; Line 5583
	mov	DWORD PTR width$[rbp], 0
$LN73@stbi__bmp_:
$LN71@stbi__bmp_:
; Line 5584
	mov	eax, DWORD PTR width$[rbp]
	neg	eax
	and	eax, 3
	mov	DWORD PTR pad$[rbp], eax
; Line 5585
	cmp	DWORD PTR info$[rbp], 24
	jne	SHORT $LN74@stbi__bmp_
; Line 5586
	mov	DWORD PTR easy$20[rbp], 1
	jmp	SHORT $LN75@stbi__bmp_
$LN74@stbi__bmp_:
; Line 5587
	cmp	DWORD PTR info$[rbp], 32		; 00000020H
	jne	SHORT $LN76@stbi__bmp_
; Line 5588
	cmp	DWORD PTR mb$[rbp], 255			; 000000ffH
	jne	SHORT $LN77@stbi__bmp_
	cmp	DWORD PTR mg$[rbp], 65280		; 0000ff00H
	jne	SHORT $LN77@stbi__bmp_
	cmp	DWORD PTR mr$[rbp], 16711680		; 00ff0000H
	jne	SHORT $LN77@stbi__bmp_
	cmp	DWORD PTR ma$[rbp], -16777216		; ff000000H
	jne	SHORT $LN77@stbi__bmp_
; Line 5589
	mov	DWORD PTR easy$20[rbp], 2
$LN77@stbi__bmp_:
$LN76@stbi__bmp_:
$LN75@stbi__bmp_:
; Line 5591
	cmp	DWORD PTR easy$20[rbp], 0
	jne	$LN78@stbi__bmp_
; Line 5592
	cmp	DWORD PTR mr$[rbp], 0
	je	SHORT $LN80@stbi__bmp_
	cmp	DWORD PTR mg$[rbp], 0
	je	SHORT $LN80@stbi__bmp_
	cmp	DWORD PTR mb$[rbp], 0
	jne	SHORT $LN79@stbi__bmp_
$LN80@stbi__bmp_:
	mov	rcx, QWORD PTR out$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_09DAEBACAB@bad?5masks@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN115@stbi__bmp_
	mov	DWORD PTR tv442[rbp], 0
	jmp	SHORT $LN116@stbi__bmp_
$LN115@stbi__bmp_:
	mov	DWORD PTR tv442[rbp], 0
$LN116@stbi__bmp_:
	movsxd	rax, DWORD PTR tv442[rbp]
	jmp	$LN1@stbi__bmp_
$LN79@stbi__bmp_:
; Line 5594
	mov	ecx, DWORD PTR mr$[rbp]
	call	?stbi__high_bit@@YAHI@Z			; stbi__high_bit
	sub	eax, 7
	mov	DWORD PTR rshift$11[rbp], eax
	mov	ecx, DWORD PTR mr$[rbp]
	call	?stbi__bitcount@@YAHI@Z			; stbi__bitcount
	mov	DWORD PTR rcount$15[rbp], eax
; Line 5595
	mov	ecx, DWORD PTR mg$[rbp]
	call	?stbi__high_bit@@YAHI@Z			; stbi__high_bit
	sub	eax, 7
	mov	DWORD PTR gshift$12[rbp], eax
	mov	ecx, DWORD PTR mg$[rbp]
	call	?stbi__bitcount@@YAHI@Z			; stbi__bitcount
	mov	DWORD PTR gcount$16[rbp], eax
; Line 5596
	mov	ecx, DWORD PTR mb$[rbp]
	call	?stbi__high_bit@@YAHI@Z			; stbi__high_bit
	sub	eax, 7
	mov	DWORD PTR bshift$13[rbp], eax
	mov	ecx, DWORD PTR mb$[rbp]
	call	?stbi__bitcount@@YAHI@Z			; stbi__bitcount
	mov	DWORD PTR bcount$17[rbp], eax
; Line 5597
	mov	ecx, DWORD PTR ma$[rbp]
	call	?stbi__high_bit@@YAHI@Z			; stbi__high_bit
	sub	eax, 7
	mov	DWORD PTR ashift$14[rbp], eax
	mov	ecx, DWORD PTR ma$[rbp]
	call	?stbi__bitcount@@YAHI@Z			; stbi__bitcount
	mov	DWORD PTR acount$18[rbp], eax
; Line 5598
	cmp	DWORD PTR rcount$15[rbp], 8
	jg	SHORT $LN82@stbi__bmp_
	cmp	DWORD PTR gcount$16[rbp], 8
	jg	SHORT $LN82@stbi__bmp_
	cmp	DWORD PTR bcount$17[rbp], 8
	jg	SHORT $LN82@stbi__bmp_
	cmp	DWORD PTR acount$18[rbp], 8
	jle	SHORT $LN81@stbi__bmp_
$LN82@stbi__bmp_:
	mov	rcx, QWORD PTR out$[rbp]
	call	QWORD PTR __imp_free
	lea	rcx, OFFSET FLAT:??_C@_09DAEBACAB@bad?5masks@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN117@stbi__bmp_
	mov	DWORD PTR tv472[rbp], 0
	jmp	SHORT $LN118@stbi__bmp_
$LN117@stbi__bmp_:
	mov	DWORD PTR tv472[rbp], 0
$LN118@stbi__bmp_:
	movsxd	rax, DWORD PTR tv472[rbp]
	jmp	$LN1@stbi__bmp_
$LN81@stbi__bmp_:
$LN78@stbi__bmp_:
; Line 5600
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN19@stbi__bmp_
$LN17@stbi__bmp_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN19@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR j$[rbp], eax
	jge	$LN18@stbi__bmp_
; Line 5601
	cmp	DWORD PTR easy$20[rbp], 0
	je	$LN83@stbi__bmp_
; Line 5602
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN22@stbi__bmp_
$LN20@stbi__bmp_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN22@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN21@stbi__bmp_
; Line 5604
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	ecx, DWORD PTR z$19[rbp]
	add	ecx, 2
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 5605
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	ecx, DWORD PTR z$19[rbp]
	inc	ecx
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 5606
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	mov	ecx, DWORD PTR z$19[rbp]
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
; Line 5607
	mov	eax, DWORD PTR z$19[rbp]
	add	eax, 3
	mov	DWORD PTR z$19[rbp], eax
; Line 5608
	cmp	DWORD PTR easy$20[rbp], 2
	jne	SHORT $LN119@stbi__bmp_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get8@@YAEPEAUstbi__context@@@Z	; stbi__get8
	movzx	eax, al
	mov	DWORD PTR tv504[rbp], eax
	jmp	SHORT $LN120@stbi__bmp_
$LN119@stbi__bmp_:
	mov	DWORD PTR tv504[rbp], 255		; 000000ffH
$LN120@stbi__bmp_:
	movzx	eax, BYTE PTR tv504[rbp]
	mov	BYTE PTR a$21[rbp], al
; Line 5609
	movzx	eax, BYTE PTR a$21[rbp]
	mov	ecx, DWORD PTR all_a$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR all_a$[rbp], eax
; Line 5610
	cmp	DWORD PTR target$[rbp], 4
	jne	SHORT $LN85@stbi__bmp_
	movsxd	rax, DWORD PTR z$19[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	movzx	edx, BYTE PTR a$21[rbp]
	mov	BYTE PTR [rcx+rax], dl
	mov	eax, DWORD PTR z$19[rbp]
	inc	eax
	mov	DWORD PTR z$19[rbp], eax
$LN85@stbi__bmp_:
; Line 5611
	jmp	$LN20@stbi__bmp_
$LN21@stbi__bmp_:
; Line 5612
	jmp	$LN84@stbi__bmp_
$LN83@stbi__bmp_:
; Line 5613
	mov	eax, DWORD PTR info$[rbp]
	mov	DWORD PTR bpp$22[rbp], eax
; Line 5614
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN25@stbi__bmp_
$LN23@stbi__bmp_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN25@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR i$[rbp], eax
	jge	$LN24@stbi__bmp_
; Line 5615
	cmp	DWORD PTR bpp$22[rbp], 16
	jne	SHORT $LN121@stbi__bmp_
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get16le@@YAHPEAUstbi__context@@@Z ; stbi__get16le
	mov	DWORD PTR tv521[rbp], eax
	jmp	SHORT $LN122@stbi__bmp_
$LN121@stbi__bmp_:
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__get32le@@YAIPEAUstbi__context@@@Z ; stbi__get32le
	mov	DWORD PTR tv521[rbp], eax
$LN122@stbi__bmp_:
	mov	eax, DWORD PTR tv521[rbp]
	mov	DWORD PTR v$23[rbp], eax
; Line 5617
	mov	eax, DWORD PTR mr$[rbp]
	mov	ecx, DWORD PTR v$23[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	r8d, DWORD PTR rcount$15[rbp]
	mov	edx, DWORD PTR rshift$11[rbp]
	mov	ecx, eax
	call	?stbi__shiftsigned@@YAHIHH@Z		; stbi__shiftsigned
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR z$19[rbp]
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, DWORD PTR z$19[rbp]
	inc	eax
	mov	DWORD PTR z$19[rbp], eax
; Line 5618
	mov	eax, DWORD PTR mg$[rbp]
	mov	ecx, DWORD PTR v$23[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	r8d, DWORD PTR gcount$16[rbp]
	mov	edx, DWORD PTR gshift$12[rbp]
	mov	ecx, eax
	call	?stbi__shiftsigned@@YAHIHH@Z		; stbi__shiftsigned
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR z$19[rbp]
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, DWORD PTR z$19[rbp]
	inc	eax
	mov	DWORD PTR z$19[rbp], eax
; Line 5619
	mov	eax, DWORD PTR mb$[rbp]
	mov	ecx, DWORD PTR v$23[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	r8d, DWORD PTR bcount$17[rbp]
	mov	edx, DWORD PTR bshift$13[rbp]
	mov	ecx, eax
	call	?stbi__shiftsigned@@YAHIHH@Z		; stbi__shiftsigned
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR z$19[rbp]
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, DWORD PTR z$19[rbp]
	inc	eax
	mov	DWORD PTR z$19[rbp], eax
; Line 5620
	cmp	DWORD PTR ma$[rbp], 0
	je	SHORT $LN123@stbi__bmp_
	mov	eax, DWORD PTR ma$[rbp]
	mov	ecx, DWORD PTR v$23[rbp]
	and	ecx, eax
	mov	eax, ecx
	mov	r8d, DWORD PTR acount$18[rbp]
	mov	edx, DWORD PTR ashift$14[rbp]
	mov	ecx, eax
	call	?stbi__shiftsigned@@YAHIHH@Z		; stbi__shiftsigned
	mov	DWORD PTR tv561[rbp], eax
	jmp	SHORT $LN124@stbi__bmp_
$LN123@stbi__bmp_:
	mov	DWORD PTR tv561[rbp], 255		; 000000ffH
$LN124@stbi__bmp_:
	mov	eax, DWORD PTR tv561[rbp]
	mov	DWORD PTR a$24[rbp], eax
; Line 5621
	mov	eax, DWORD PTR a$24[rbp]
	mov	ecx, DWORD PTR all_a$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR all_a$[rbp], eax
; Line 5622
	cmp	DWORD PTR target$[rbp], 4
	jne	SHORT $LN86@stbi__bmp_
	mov	eax, DWORD PTR a$24[rbp]
	and	eax, 255				; 000000ffH
	movsxd	rcx, DWORD PTR z$19[rbp]
	mov	rdx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rdx+rcx], al
	mov	eax, DWORD PTR z$19[rbp]
	inc	eax
	mov	DWORD PTR z$19[rbp], eax
$LN86@stbi__bmp_:
; Line 5623
	jmp	$LN23@stbi__bmp_
$LN24@stbi__bmp_:
$LN84@stbi__bmp_:
; Line 5625
	mov	edx, DWORD PTR pad$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__skip@@YAXPEAUstbi__context@@H@Z	; stbi__skip
; Line 5626
	jmp	$LN17@stbi__bmp_
$LN18@stbi__bmp_:
$LN51@stbi__bmp_:
; Line 5630
	cmp	DWORD PTR target$[rbp], 4
	jne	SHORT $LN87@stbi__bmp_
	cmp	DWORD PTR all_a$[rbp], 0
	jne	SHORT $LN87@stbi__bmp_
; Line 5631
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	shl	eax, 2
	mov	rcx, QWORD PTR s$[rbp]
	imul	eax, DWORD PTR [rcx+4]
	dec	eax
	mov	DWORD PTR i$[rbp], eax
	jmp	SHORT $LN28@stbi__bmp_
$LN26@stbi__bmp_:
	mov	eax, DWORD PTR i$[rbp]
	sub	eax, 4
	mov	DWORD PTR i$[rbp], eax
$LN28@stbi__bmp_:
	cmp	DWORD PTR i$[rbp], 0
	jl	SHORT $LN27@stbi__bmp_
; Line 5632
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	mov	BYTE PTR [rcx+rax], 255			; 000000ffH
	jmp	SHORT $LN26@stbi__bmp_
$LN27@stbi__bmp_:
$LN87@stbi__bmp_:
; Line 5634
	cmp	DWORD PTR flip_vertically$[rbp], 0
	je	$LN88@stbi__bmp_
; Line 5636
	mov	DWORD PTR j$[rbp], 0
	jmp	SHORT $LN31@stbi__bmp_
$LN29@stbi__bmp_:
	mov	eax, DWORD PTR j$[rbp]
	inc	eax
	mov	DWORD PTR j$[rbp], eax
$LN31@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+4]
	sar	eax, 1
	cmp	DWORD PTR j$[rbp], eax
	jge	$LN30@stbi__bmp_
; Line 5637
	mov	rax, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR j$[rbp]
	imul	ecx, DWORD PTR [rax]
	mov	eax, ecx
	imul	eax, DWORD PTR target$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p1$26[rbp], rax
; Line 5638
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+4]
	dec	eax
	sub	eax, DWORD PTR j$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	imul	eax, DWORD PTR [rcx]
	imul	eax, DWORD PTR target$[rbp]
	mov	eax, eax
	mov	rcx, QWORD PTR out$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR p2$27[rbp], rax
; Line 5639
	mov	DWORD PTR i$[rbp], 0
	jmp	SHORT $LN34@stbi__bmp_
$LN32@stbi__bmp_:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN34@stbi__bmp_:
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax]
	imul	eax, DWORD PTR target$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jge	SHORT $LN33@stbi__bmp_
; Line 5640
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR p1$26[rbp]
	movzx	eax, BYTE PTR [rcx+rax]
	mov	BYTE PTR t$25[rbp], al
	movsxd	rax, DWORD PTR i$[rbp]
	movsxd	rcx, DWORD PTR i$[rbp]
	mov	rdx, QWORD PTR p1$26[rbp]
	mov	r8, QWORD PTR p2$27[rbp]
	movzx	eax, BYTE PTR [r8+rax]
	mov	BYTE PTR [rdx+rcx], al
	movsxd	rax, DWORD PTR i$[rbp]
	mov	rcx, QWORD PTR p2$27[rbp]
	movzx	edx, BYTE PTR t$25[rbp]
	mov	BYTE PTR [rcx+rax], dl
; Line 5641
	jmp	SHORT $LN32@stbi__bmp_
$LN33@stbi__bmp_:
; Line 5642
	jmp	$LN29@stbi__bmp_
$LN30@stbi__bmp_:
$LN88@stbi__bmp_:
; Line 5645
	cmp	DWORD PTR req_comp$[rbp], 0
	je	SHORT $LN89@stbi__bmp_
	mov	eax, DWORD PTR target$[rbp]
	cmp	DWORD PTR req_comp$[rbp], eax
	je	SHORT $LN89@stbi__bmp_
; Line 5646
	mov	rax, QWORD PTR s$[rbp]
	mov	eax, DWORD PTR [rax+4]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR s$[rbp]
	mov	r9d, DWORD PTR [rax]
	mov	r8d, DWORD PTR req_comp$[rbp]
	mov	edx, DWORD PTR target$[rbp]
	mov	rcx, QWORD PTR out$[rbp]
	call	?stbi__convert_format@@YAPEAEPEAEHHII@Z	; stbi__convert_format
	mov	QWORD PTR out$[rbp], rax
; Line 5647
	cmp	QWORD PTR out$[rbp], 0
	jne	SHORT $LN90@stbi__bmp_
	mov	rax, QWORD PTR out$[rbp]
	jmp	SHORT $LN1@stbi__bmp_
$LN90@stbi__bmp_:
$LN89@stbi__bmp_:
; Line 5650
	mov	rax, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
; Line 5651
	mov	rax, QWORD PTR y$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax], ecx
; Line 5652
	cmp	QWORD PTR comp$[rbp], 0
	je	SHORT $LN91@stbi__bmp_
	mov	rax, QWORD PTR comp$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	mov	DWORD PTR [rax], ecx
$LN91@stbi__bmp_:
; Line 5653
	mov	rax, QWORD PTR out$[rbp]
$LN1@stbi__bmp_:
; Line 5654
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+3240]
	pop	rdi
	pop	rbp
	ret	0
?stbi__bmp_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ENDP ; stbi__bmp_load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__bmp_test@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
r$ = 4
s$ = 256
?stbi__bmp_test@@YAHPEAUstbi__context@@@Z PROC		; stbi__bmp_test, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5298
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5299
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__bmp_test_raw@@YAHPEAUstbi__context@@@Z ; stbi__bmp_test_raw
	mov	DWORD PTR r$[rbp], eax
; Line 5300
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5301
	mov	eax, DWORD PTR r$[rbp]
; Line 5302
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__bmp_test@@YAHPEAUstbi__context@@@Z ENDP		; stbi__bmp_test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__png_is16@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
p$ = 8
__$ArrayPad$ = 248
s$ = 288
?stbi__png_is16@@YAHPEAUstbi__context@@@Z PROC		; stbi__png_is16, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5266
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5268
	mov	rax, QWORD PTR s$[rbp]
	mov	QWORD PTR p$[rbp], rax
; Line 5269
	xor	r9d, r9d
	xor	r8d, r8d
	xor	edx, edx
	lea	rcx, QWORD PTR p$[rbp]
	call	?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z ; stbi__png_info_raw
	test	eax, eax
	jne	SHORT $LN2@stbi__png_
; Line 5270
	xor	eax, eax
	jmp	SHORT $LN1@stbi__png_
$LN2@stbi__png_:
; Line 5271
	cmp	DWORD PTR p$[rbp+32], 16
	je	SHORT $LN3@stbi__png_
; Line 5272
	mov	rcx, QWORD PTR p$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5273
	xor	eax, eax
	jmp	SHORT $LN1@stbi__png_
$LN3@stbi__png_:
; Line 5275
	mov	eax, 1
$LN1@stbi__png_:
; Line 5276
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__png_is16@@YAHPEAUstbi__context@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__png_is16@@YAHPEAUstbi__context@@@Z ENDP		; stbi__png_is16
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
p$ = 8
__$ArrayPad$ = 248
s$ = 288
x$ = 296
y$ = 304
comp$ = 312
?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__png_info, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5259
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5261
	mov	rax, QWORD PTR s$[rbp]
	mov	QWORD PTR p$[rbp], rax
; Line 5262
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR p$[rbp]
	call	?stbi__png_info_raw@@YAHPEAUstbi__png@@PEAH11@Z ; stbi__png_info_raw
; Line 5263
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__png_info@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__png_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
_TEXT	SEGMENT
p$ = 8
__$ArrayPad$ = 248
s$ = 288
x$ = 296
y$ = 304
comp$ = 312
req_comp$ = 320
ri$ = 328
?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z PROC ; stbi__png_load, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5232
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 18
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+344]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5234
	mov	rax, QWORD PTR s$[rbp]
	mov	QWORD PTR p$[rbp], rax
; Line 5235
	mov	rax, QWORD PTR ri$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR p$[rbp]
	call	?stbi__do_png@@YAPEAXPEAUstbi__png@@PEAH11HPEAUstbi__result_info@@@Z ; stbi__do_png
; Line 5236
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__png_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ENDP ; stbi__png_load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__png_test@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
r$ = 4
s$ = 256
?stbi__png_test@@YAHPEAUstbi__context@@@Z PROC		; stbi__png_test, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 5239
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 5241
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__check_png_header@@YAHPEAUstbi__context@@@Z ; stbi__check_png_header
	mov	DWORD PTR r$[rbp], eax
; Line 5242
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 5243
	mov	eax, DWORD PTR r$[rbp]
; Line 5244
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__png_test@@YAHPEAUstbi__context@@@Z ENDP		; stbi__png_test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_info@@YAHPEAUstbi__context@@PEAH11@Z
_TEXT	SEGMENT
result$ = 4
j$ = 40
s$ = 288
x$ = 296
y$ = 304
comp$ = 312
?stbi__jpeg_info@@YAHPEAUstbi__context@@PEAH11@Z PROC	; stbi__jpeg_info, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4013
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4015
	mov	ecx, 18568				; 00004888H
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR j$[rbp], rax
; Line 4016
	cmp	QWORD PTR j$[rbp], 0
	jne	SHORT $LN2@stbi__jpeg
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__jpeg
$LN2@stbi__jpeg:
; Line 4017
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 4018
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__jpeg_info_raw@@YAHPEAUstbi__jpeg@@PEAH11@Z ; stbi__jpeg_info_raw
	mov	DWORD PTR result$[rbp], eax
; Line 4019
	mov	rcx, QWORD PTR j$[rbp]
	call	QWORD PTR __imp_free
; Line 4020
	mov	eax, DWORD PTR result$[rbp]
$LN1@stbi__jpeg:
; Line 4021
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_info@@YAHPEAUstbi__context@@PEAH11@Z ENDP	; stbi__jpeg_info
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z
_TEXT	SEGMENT
result$ = 8
j$ = 40
tv70 = 244
s$ = 288
x$ = 296
y$ = 304
comp$ = 312
req_comp$ = 320
ri$ = 328
?stbi__jpeg_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z PROC ; stbi__jpeg_load, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3975
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3977
	mov	ecx, 18568				; 00004888H
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR j$[rbp], rax
; Line 3978
	cmp	QWORD PTR j$[rbp], 0
	jne	SHORT $LN2@stbi__jpeg
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN4@stbi__jpeg
	mov	DWORD PTR tv70[rbp], 0
	jmp	SHORT $LN5@stbi__jpeg
$LN4@stbi__jpeg:
	mov	DWORD PTR tv70[rbp], 0
$LN5@stbi__jpeg:
	movsxd	rax, DWORD PTR tv70[rbp]
	jmp	SHORT $LN1@stbi__jpeg
$LN2@stbi__jpeg:
; Line 3980
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 3981
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z ; stbi__setup_jpeg
; Line 3982
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR j$[rbp]
	call	?load_jpeg_image@@YAPEAEPEAUstbi__jpeg@@PEAH11H@Z ; load_jpeg_image
	mov	QWORD PTR result$[rbp], rax
; Line 3983
	mov	rcx, QWORD PTR j$[rbp]
	call	QWORD PTR __imp_free
; Line 3984
	mov	rax, QWORD PTR result$[rbp]
$LN1@stbi__jpeg:
; Line 3985
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_load@@YAPEAXPEAUstbi__context@@PEAH11HPEAUstbi__result_info@@@Z ENDP ; stbi__jpeg_load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__jpeg_test@@YAHPEAUstbi__context@@@Z
_TEXT	SEGMENT
r$ = 4
j$ = 40
s$ = 288
?stbi__jpeg_test@@YAHPEAUstbi__context@@@Z PROC		; stbi__jpeg_test, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 3988
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 3990
	mov	ecx, 18568				; 00004888H
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR j$[rbp], rax
; Line 3991
	cmp	QWORD PTR j$[rbp], 0
	jne	SHORT $LN2@stbi__jpeg
	lea	rcx, OFFSET FLAT:??_C@_08NOGIMCHF@outofmem@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi__jpeg
$LN2@stbi__jpeg:
; Line 3992
	mov	rax, QWORD PTR j$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 3993
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__setup_jpeg@@YAXPEAUstbi__jpeg@@@Z ; stbi__setup_jpeg
; Line 3994
	mov	edx, 1
	mov	rcx, QWORD PTR j$[rbp]
	call	?stbi__decode_jpeg_header@@YAHPEAUstbi__jpeg@@H@Z ; stbi__decode_jpeg_header
	mov	DWORD PTR r$[rbp], eax
; Line 3995
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__rewind@@YAXPEAUstbi__context@@@Z	; stbi__rewind
; Line 3996
	mov	rcx, QWORD PTR j$[rbp]
	call	QWORD PTR __imp_free
; Line 3997
	mov	eax, DWORD PTR r$[rbp]
$LN1@stbi__jpeg:
; Line 3998
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?stbi__jpeg_test@@YAHPEAUstbi__context@@@Z ENDP		; stbi__jpeg_test
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__rewind@@YAXPEAUstbi__context@@@Z
_TEXT	SEGMENT
s$ = 224
?stbi__rewind@@YAXPEAUstbi__context@@@Z PROC		; stbi__rewind, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 884
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 888
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+208]
	mov	QWORD PTR [rax+192], rcx
; Line 889
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+216]
	mov	QWORD PTR [rax+200], rcx
; Line 890
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__rewind@@YAXPEAUstbi__context@@@Z ENDP		; stbi__rewind
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z
_TEXT	SEGMENT
s$ = 224
f$ = 232
?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z PROC ; stbi__start_file, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 875
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 876
	mov	r8, QWORD PTR f$[rbp]
	lea	rdx, OFFSET FLAT:?stbi__stdio_callbacks@@3Ustbi_io_callbacks@@A
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z ; stbi__start_callbacks
; Line 877
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z ENDP ; stbi__start_file
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__stdio_eof@@YAHPEAX@Z
_TEXT	SEGMENT
tv70 = 192
user$ = 240
?stbi__stdio_eof@@YAHPEAX@Z PROC			; stbi__stdio_eof, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 863
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 864
	mov	rcx, QWORD PTR user$[rbp]
	call	QWORD PTR __imp_feof
	test	eax, eax
	jne	SHORT $LN3@stbi__stdi
	mov	rcx, QWORD PTR user$[rbp]
	call	QWORD PTR __imp_ferror
	test	eax, eax
	jne	SHORT $LN3@stbi__stdi
	mov	DWORD PTR tv70[rbp], 0
	jmp	SHORT $LN4@stbi__stdi
$LN3@stbi__stdi:
	mov	DWORD PTR tv70[rbp], 1
$LN4@stbi__stdi:
	mov	eax, DWORD PTR tv70[rbp]
; Line 865
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__stdio_eof@@YAHPEAX@Z ENDP			; stbi__stdio_eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__stdio_skip@@YAXPEAXH@Z
_TEXT	SEGMENT
ch$ = 4
user$ = 256
n$ = 264
?stbi__stdio_skip@@YAXPEAXH@Z PROC			; stbi__stdio_skip, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 853
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 855
	mov	r8d, 1
	mov	edx, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR user$[rbp]
	call	QWORD PTR __imp_fseek
; Line 856
	mov	rcx, QWORD PTR user$[rbp]
	call	QWORD PTR __imp_fgetc
	mov	DWORD PTR ch$[rbp], eax
; Line 857
	cmp	DWORD PTR ch$[rbp], -1
	je	SHORT $LN2@stbi__stdi
; Line 858
	mov	rdx, QWORD PTR user$[rbp]
	mov	ecx, DWORD PTR ch$[rbp]
	call	QWORD PTR __imp_ungetc
$LN2@stbi__stdi:
; Line 860
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__stdio_skip@@YAXPEAXH@Z ENDP			; stbi__stdio_skip
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__stdio_read@@YAHPEAXPEADH@Z
_TEXT	SEGMENT
user$ = 224
data$ = 232
size$ = 240
?stbi__stdio_read@@YAHPEAXPEADH@Z PROC			; stbi__stdio_read, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 848
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 849
	movsxd	rax, DWORD PTR size$[rbp]
	mov	r9, QWORD PTR user$[rbp]
	mov	r8, rax
	mov	edx, 1
	mov	rcx, QWORD PTR data$[rbp]
	call	QWORD PTR __imp_fread
; Line 850
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?stbi__stdio_read@@YAHPEAXPEADH@Z ENDP			; stbi__stdio_read
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z
_TEXT	SEGMENT
tv72 = 192
s$ = 240
c$ = 248
user$ = 256
?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z PROC ; stbi__start_callbacks, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 834
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 240				; 000000f0H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 835
	mov	rax, QWORD PTR s$[rbp]
	lea	rdi, QWORD PTR [rax+16]
	mov	rsi, QWORD PTR c$[rbp]
	mov	ecx, 24
	rep movsb
; Line 836
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR user$[rbp]
	mov	QWORD PTR [rax+40], rcx
; Line 837
	mov	rax, QWORD PTR s$[rbp]
	mov	DWORD PTR [rax+52], 128			; 00000080H
; Line 838
	mov	rax, QWORD PTR s$[rbp]
	mov	DWORD PTR [rax+48], 1
; Line 839
	mov	rax, QWORD PTR s$[rbp]
	mov	DWORD PTR [rax+184], 0
; Line 840
	mov	rax, QWORD PTR s$[rbp]
	add	rax, 56					; 00000038H
	mov	QWORD PTR tv72[rbp], rax
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	mov	QWORD PTR [rax+208], rcx
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	mov	QWORD PTR [rax+192], rcx
; Line 841
	mov	rcx, QWORD PTR s$[rbp]
	call	?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z ; stbi__refill_buffer
; Line 842
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+200]
	mov	QWORD PTR [rax+216], rcx
; Line 843
	lea	rsp, QWORD PTR [rbp+208]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z ENDP ; stbi__start_callbacks
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z
_TEXT	SEGMENT
tv73 = 192
s$ = 240
buffer$ = 248
len$ = 256
?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z PROC	; stbi__start_mem, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 824
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 825
	mov	rax, QWORD PTR s$[rbp]
	mov	QWORD PTR [rax+16], 0
; Line 826
	mov	rax, QWORD PTR s$[rbp]
	mov	DWORD PTR [rax+48], 0
; Line 827
	mov	rax, QWORD PTR s$[rbp]
	mov	DWORD PTR [rax+184], 0
; Line 828
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR buffer$[rbp]
	mov	QWORD PTR [rax+208], rcx
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR buffer$[rbp]
	mov	QWORD PTR [rax+192], rcx
; Line 829
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR buffer$[rbp]
	add	rcx, rax
	mov	QWORD PTR tv73[rbp], rcx
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	mov	QWORD PTR [rax+216], rcx
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	mov	QWORD PTR [rax+200], rcx
; Line 830
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z ENDP	; stbi__start_mem
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z
_TEXT	SEGMENT
n$ = 4
tv74 = 216
s$ = 256
?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z PROC	; stbi__refill_buffer, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1578
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1579
	mov	rax, QWORD PTR s$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv74[rbp], rax
	mov	rax, QWORD PTR s$[rbp]
	add	rax, 56					; 00000038H
	mov	rcx, QWORD PTR s$[rbp]
	mov	r8d, DWORD PTR [rcx+52]
	mov	rdx, rax
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rax+40]
	call	QWORD PTR tv74[rbp]
	mov	DWORD PTR n$[rbp], eax
; Line 1580
	mov	rax, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	mov	rcx, QWORD PTR [rcx+208]
	mov	rax, QWORD PTR [rax+192]
	sub	rax, rcx
	mov	rcx, QWORD PTR s$[rbp]
	add	eax, DWORD PTR [rcx+184]
	mov	rcx, QWORD PTR s$[rbp]
	mov	DWORD PTR [rcx+184], eax
; Line 1581
	cmp	DWORD PTR n$[rbp], 0
	jne	SHORT $LN2@stbi__refi
; Line 1584
	mov	rax, QWORD PTR s$[rbp]
	mov	DWORD PTR [rax+48], 0
; Line 1585
	mov	rax, QWORD PTR s$[rbp]
	add	rax, 56					; 00000038H
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rcx+192], rax
; Line 1586
	mov	rax, QWORD PTR s$[rbp]
	add	rax, 57					; 00000039H
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rcx+200], rax
; Line 1587
	mov	rax, QWORD PTR s$[rbp]
	mov	rax, QWORD PTR [rax+192]
	mov	BYTE PTR [rax], 0
; Line 1588
	jmp	SHORT $LN3@stbi__refi
$LN2@stbi__refi:
; Line 1589
	mov	rax, QWORD PTR s$[rbp]
	add	rax, 56					; 00000038H
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rcx+192], rax
; Line 1590
	movsxd	rax, DWORD PTR n$[rbp]
	mov	rcx, QWORD PTR s$[rbp]
	lea	rax, QWORD PTR [rcx+rax+56]
	mov	rcx, QWORD PTR s$[rbp]
	mov	QWORD PTR [rcx+200], rax
$LN3@stbi__refi:
; Line 1592
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__refill_buffer@@YAXPEAUstbi__context@@@Z ENDP	; stbi__refill_buffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__sse2_available@@YAHXZ
_TEXT	SEGMENT
info3$ = 4
tv68 = 212
?stbi__sse2_available@@YAHXZ PROC			; stbi__sse2_available, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 752
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 753
	call	?stbi__cpuid3@@YAHXZ			; stbi__cpuid3
	mov	DWORD PTR info3$[rbp], eax
; Line 754
	mov	eax, DWORD PTR info3$[rbp]
	sar	eax, 26
	and	eax, 1
	test	eax, eax
	je	SHORT $LN3@stbi__sse2
	mov	DWORD PTR tv68[rbp], 1
	jmp	SHORT $LN4@stbi__sse2
$LN3@stbi__sse2:
	mov	DWORD PTR tv68[rbp], 0
$LN4@stbi__sse2:
	mov	eax, DWORD PTR tv68[rbp]
; Line 755
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?stbi__sse2_available@@YAHXZ ENDP			; stbi__sse2_available
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?stbi__cpuid3@@YAHXZ
_TEXT	SEGMENT
info$ = 8
__$ArrayPad$ = 232
?stbi__cpuid3@@YAHXZ PROC				; stbi__cpuid3, COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 730
	push	rbp
	push	rbx
	push	rdi
	sub	rsp, 272				; 00000110H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 12
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 732
	mov	eax, 1
	xor	ecx, ecx
	cpuid
	lea	r8, QWORD PTR info$[rbp]
	mov	DWORD PTR [r8], eax
	mov	DWORD PTR [r8+4], ebx
	mov	DWORD PTR [r8+8], ecx
	mov	DWORD PTR [r8+12], edx
; Line 733
	mov	eax, 4
	imul	rax, rax, 3
	mov	eax, DWORD PTR info$[rbp+rax]
; Line 734
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?stbi__cpuid3@@YAHXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+240]
	pop	rdi
	pop	rbx
	pop	rbp
	ret	0
?stbi__cpuid3@@YAHXZ ENDP				; stbi__cpuid3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_zlib_decode_noheader_buffer
_TEXT	SEGMENT
a$ = 16
__$ArrayPad$ = 5656
obuffer$ = 5696
olen$ = 5704
ibuffer$ = 5712
ilen$ = 5720
stbi_zlib_decode_noheader_buffer PROC			; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4507
$LN5:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 5720				; 00001658H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 1034				; 0000040aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+5752]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4509
	mov	rax, QWORD PTR ibuffer$[rbp]
	mov	QWORD PTR a$[rbp], rax
; Line 4510
	movsxd	rax, DWORD PTR ilen$[rbp]
	mov	rcx, QWORD PTR ibuffer$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR a$[rbp+8], rax
; Line 4511
	mov	DWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, DWORD PTR olen$[rbp]
	mov	rdx, QWORD PTR obuffer$[rbp]
	lea	rcx, QWORD PTR a$[rbp]
	call	?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z ; stbi__do_zlib
	test	eax, eax
	je	SHORT $LN2@stbi_zlib_
; Line 4512
	mov	rax, QWORD PTR a$[rbp+32]
	mov	rcx, QWORD PTR a$[rbp+24]
	sub	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@stbi_zlib_
	jmp	SHORT $LN3@stbi_zlib_
$LN2@stbi_zlib_:
; Line 4514
	mov	eax, -1
$LN3@stbi_zlib_:
$LN1@stbi_zlib_:
; Line 4515
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_zlib_decode_noheader_buffer$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+5672]
	pop	rdi
	pop	rbp
	ret	0
stbi_zlib_decode_noheader_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_zlib_decode_noheader_malloc
_TEXT	SEGMENT
a$ = 16
p$ = 4136
__$ArrayPad$ = 5688
buffer$ = 5728
len$ = 5736
outlen$ = 5744
stbi_zlib_decode_noheader_malloc PROC			; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4491
$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 5752				; 00001678H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 1042				; 00000412H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+5784]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4493
	mov	ecx, 16384				; 00004000H
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR p$[rbp], rax
; Line 4494
	cmp	QWORD PTR p$[rbp], 0
	jne	SHORT $LN2@stbi_zlib_
	xor	eax, eax
	jmp	$LN1@stbi_zlib_
$LN2@stbi_zlib_:
; Line 4495
	mov	rax, QWORD PTR buffer$[rbp]
	mov	QWORD PTR a$[rbp], rax
; Line 4496
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR buffer$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR a$[rbp+8], rax
; Line 4497
	mov	DWORD PTR [rsp+32], 0
	mov	r9d, 1
	mov	r8d, 16384				; 00004000H
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR a$[rbp]
	call	?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z ; stbi__do_zlib
	test	eax, eax
	je	SHORT $LN3@stbi_zlib_
; Line 4498
	cmp	QWORD PTR outlen$[rbp], 0
	je	SHORT $LN5@stbi_zlib_
	mov	rax, QWORD PTR a$[rbp+32]
	mov	rcx, QWORD PTR a$[rbp+24]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR outlen$[rbp]
	mov	DWORD PTR [rcx], eax
$LN5@stbi_zlib_:
; Line 4499
	mov	rax, QWORD PTR a$[rbp+32]
	jmp	SHORT $LN1@stbi_zlib_
; Line 4500
	jmp	SHORT $LN4@stbi_zlib_
$LN3@stbi_zlib_:
; Line 4501
	mov	rcx, QWORD PTR a$[rbp+32]
	call	QWORD PTR __imp_free
; Line 4502
	xor	eax, eax
$LN4@stbi_zlib_:
$LN1@stbi_zlib_:
; Line 4504
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_zlib_decode_noheader_malloc$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+5704]
	pop	rdi
	pop	rbp
	ret	0
stbi_zlib_decode_noheader_malloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_zlib_decode_buffer
_TEXT	SEGMENT
a$ = 16
__$ArrayPad$ = 5656
obuffer$ = 5696
olen$ = 5704
ibuffer$ = 5712
ilen$ = 5720
stbi_zlib_decode_buffer PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4480
$LN5:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 5720				; 00001658H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 1034				; 0000040aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+5752]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4482
	mov	rax, QWORD PTR ibuffer$[rbp]
	mov	QWORD PTR a$[rbp], rax
; Line 4483
	movsxd	rax, DWORD PTR ilen$[rbp]
	mov	rcx, QWORD PTR ibuffer$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR a$[rbp+8], rax
; Line 4484
	mov	DWORD PTR [rsp+32], 1
	xor	r9d, r9d
	mov	r8d, DWORD PTR olen$[rbp]
	mov	rdx, QWORD PTR obuffer$[rbp]
	lea	rcx, QWORD PTR a$[rbp]
	call	?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z ; stbi__do_zlib
	test	eax, eax
	je	SHORT $LN2@stbi_zlib_
; Line 4485
	mov	rax, QWORD PTR a$[rbp+32]
	mov	rcx, QWORD PTR a$[rbp+24]
	sub	rcx, rax
	mov	rax, rcx
	jmp	SHORT $LN1@stbi_zlib_
	jmp	SHORT $LN3@stbi_zlib_
$LN2@stbi_zlib_:
; Line 4487
	mov	eax, -1
$LN3@stbi_zlib_:
$LN1@stbi_zlib_:
; Line 4488
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_zlib_decode_buffer$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+5672]
	pop	rdi
	pop	rbp
	ret	0
stbi_zlib_decode_buffer ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_zlib_decode_malloc
_TEXT	SEGMENT
buffer$ = 224
len$ = 232
outlen$ = 240
stbi_zlib_decode_malloc PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4459
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4460
	mov	r9, QWORD PTR outlen$[rbp]
	mov	r8d, 16384				; 00004000H
	mov	edx, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR buffer$[rbp]
	call	stbi_zlib_decode_malloc_guesssize
; Line 4461
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_zlib_decode_malloc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_zlib_decode_malloc_guesssize_headerflag
_TEXT	SEGMENT
a$ = 16
p$ = 4136
__$ArrayPad$ = 5688
buffer$ = 5728
len$ = 5736
initial_size$ = 5744
outlen$ = 5752
parse_header$ = 5760
stbi_zlib_decode_malloc_guesssize_headerflag PROC	; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4464
$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 5752				; 00001678H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 1042				; 00000412H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+5784]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4466
	movsxd	rax, DWORD PTR initial_size$[rbp]
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR p$[rbp], rax
; Line 4467
	cmp	QWORD PTR p$[rbp], 0
	jne	SHORT $LN2@stbi_zlib_
	xor	eax, eax
	jmp	$LN1@stbi_zlib_
$LN2@stbi_zlib_:
; Line 4468
	mov	rax, QWORD PTR buffer$[rbp]
	mov	QWORD PTR a$[rbp], rax
; Line 4469
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR buffer$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR a$[rbp+8], rax
; Line 4470
	mov	eax, DWORD PTR parse_header$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9d, 1
	mov	r8d, DWORD PTR initial_size$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR a$[rbp]
	call	?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z ; stbi__do_zlib
	test	eax, eax
	je	SHORT $LN3@stbi_zlib_
; Line 4471
	cmp	QWORD PTR outlen$[rbp], 0
	je	SHORT $LN5@stbi_zlib_
	mov	rax, QWORD PTR a$[rbp+32]
	mov	rcx, QWORD PTR a$[rbp+24]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR outlen$[rbp]
	mov	DWORD PTR [rcx], eax
$LN5@stbi_zlib_:
; Line 4472
	mov	rax, QWORD PTR a$[rbp+32]
	jmp	SHORT $LN1@stbi_zlib_
; Line 4473
	jmp	SHORT $LN4@stbi_zlib_
$LN3@stbi_zlib_:
; Line 4474
	mov	rcx, QWORD PTR a$[rbp+32]
	call	QWORD PTR __imp_free
; Line 4475
	xor	eax, eax
$LN4@stbi_zlib_:
$LN1@stbi_zlib_:
; Line 4477
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_zlib_decode_malloc_guesssize_headerflag$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+5704]
	pop	rdi
	pop	rbp
	ret	0
stbi_zlib_decode_malloc_guesssize_headerflag ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_zlib_decode_malloc_guesssize
_TEXT	SEGMENT
a$ = 16
p$ = 4136
__$ArrayPad$ = 5688
buffer$ = 5728
len$ = 5736
initial_size$ = 5744
outlen$ = 5752
stbi_zlib_decode_malloc_guesssize PROC			; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4443
$LN7:
	mov	QWORD PTR [rsp+32], r9
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	mov	eax, 5752				; 00001678H
	call	__chkstk
	sub	rsp, rax
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 1042				; 00000412H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+5784]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4445
	movsxd	rax, DWORD PTR initial_size$[rbp]
	mov	rcx, rax
	call	?stbi__malloc@@YAPEAX_K@Z		; stbi__malloc
	mov	QWORD PTR p$[rbp], rax
; Line 4446
	cmp	QWORD PTR p$[rbp], 0
	jne	SHORT $LN2@stbi_zlib_
	xor	eax, eax
	jmp	$LN1@stbi_zlib_
$LN2@stbi_zlib_:
; Line 4447
	mov	rax, QWORD PTR buffer$[rbp]
	mov	QWORD PTR a$[rbp], rax
; Line 4448
	movsxd	rax, DWORD PTR len$[rbp]
	mov	rcx, QWORD PTR buffer$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR a$[rbp+8], rax
; Line 4449
	mov	DWORD PTR [rsp+32], 1
	mov	r9d, 1
	mov	r8d, DWORD PTR initial_size$[rbp]
	mov	rdx, QWORD PTR p$[rbp]
	lea	rcx, QWORD PTR a$[rbp]
	call	?stbi__do_zlib@@YAHPEAUstbi__zbuf@@PEADHHH@Z ; stbi__do_zlib
	test	eax, eax
	je	SHORT $LN3@stbi_zlib_
; Line 4450
	cmp	QWORD PTR outlen$[rbp], 0
	je	SHORT $LN5@stbi_zlib_
	mov	rax, QWORD PTR a$[rbp+32]
	mov	rcx, QWORD PTR a$[rbp+24]
	sub	rcx, rax
	mov	rax, rcx
	mov	rcx, QWORD PTR outlen$[rbp]
	mov	DWORD PTR [rcx], eax
$LN5@stbi_zlib_:
; Line 4451
	mov	rax, QWORD PTR a$[rbp+32]
	jmp	SHORT $LN1@stbi_zlib_
; Line 4452
	jmp	SHORT $LN4@stbi_zlib_
$LN3@stbi_zlib_:
; Line 4453
	mov	rcx, QWORD PTR a$[rbp+32]
	call	QWORD PTR __imp_free
; Line 4454
	xor	eax, eax
$LN4@stbi_zlib_:
$LN1@stbi_zlib_:
; Line 4456
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_zlib_decode_malloc_guesssize$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+5704]
	pop	rdi
	pop	rbp
	ret	0
stbi_zlib_decode_malloc_guesssize ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_set_flip_vertically_on_load_thread
_TEXT	SEGMENT
flag_true_if_should_flip$ = 224
stbi_set_flip_vertically_on_load_thread PROC		; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1107
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1108
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_local@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	edx, DWORD PTR flag_true_if_should_flip$[rbp]
	mov	DWORD PTR [rax+rcx], edx
; Line 1109
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_set@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	DWORD PTR [rax+rcx], 1
; Line 1110
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_set_flip_vertically_on_load_thread ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_convert_iphone_png_to_rgb_thread
_TEXT	SEGMENT
flag_true_if_should_convert$ = 224
stbi_convert_iphone_png_to_rgb_thread PROC		; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4965
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4966
	mov	eax, OFFSET FLAT:?stbi__de_iphone_flag_local@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	edx, DWORD PTR flag_true_if_should_convert$[rbp]
	mov	DWORD PTR [rax+rcx], edx
; Line 4967
	mov	eax, OFFSET FLAT:?stbi__de_iphone_flag_set@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	DWORD PTR [rax+rcx], 1
; Line 4968
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_convert_iphone_png_to_rgb_thread ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_set_flip_vertically_on_load
_TEXT	SEGMENT
flag_true_if_should_flip$ = 224
stbi_set_flip_vertically_on_load PROC			; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1097
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1098
	mov	eax, DWORD PTR flag_true_if_should_flip$[rbp]
	mov	DWORD PTR ?stbi__vertically_flip_on_load_global@@3HA, eax
; Line 1099
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_set_flip_vertically_on_load ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_convert_iphone_png_to_rgb
_TEXT	SEGMENT
flag_true_if_should_convert$ = 224
stbi_convert_iphone_png_to_rgb PROC			; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4947
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4948
	mov	eax, DWORD PTR flag_true_if_should_convert$[rbp]
	mov	DWORD PTR ?stbi__de_iphone_flag_global@@3HA, eax
; Line 4949
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_convert_iphone_png_to_rgb ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_set_unpremultiply_on_load
_TEXT	SEGMENT
flag_true_if_should_unpremultiply$ = 224
stbi_set_unpremultiply_on_load PROC			; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 4942
$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 4943
	mov	eax, DWORD PTR flag_true_if_should_unpremultiply$[rbp]
	mov	DWORD PTR ?stbi__unpremultiply_on_load_global@@3HA, eax
; Line 4944
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_set_unpremultiply_on_load ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_is_16_bit_from_file
_TEXT	SEGMENT
r$ = 4
s$ = 48
pos$ = 292
__$ArrayPad$ = 504
f$ = 544
stbi_is_16_bit_from_file PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7632
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7635
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_ftell
	mov	DWORD PTR pos$[rbp], eax
; Line 7636
	mov	rdx, QWORD PTR f$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z ; stbi__start_file
; Line 7637
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__is_16_main@@YAHPEAUstbi__context@@@Z ; stbi__is_16_main
	mov	DWORD PTR r$[rbp], eax
; Line 7638
	xor	r8d, r8d
	mov	edx, DWORD PTR pos$[rbp]
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fseek
; Line 7639
	mov	eax, DWORD PTR r$[rbp]
; Line 7640
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:stbi_is_16_bit_from_file$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
stbi_is_16_bit_from_file ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_is_16_bit
_TEXT	SEGMENT
f$ = 8
result$ = 36
filename$ = 288
stbi_is_16_bit PROC					; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7622
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7623
	lea	rdx, OFFSET FLAT:??_C@_02JDPG@rb@
	mov	rcx, QWORD PTR filename$[rbp]
	call	?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z	; stbi__fopen
	mov	QWORD PTR f$[rbp], rax
; Line 7625
	cmp	QWORD PTR f$[rbp], 0
	jne	SHORT $LN2@stbi_is_16
	lea	rcx, OFFSET FLAT:??_C@_0M@JPDHFAGK@can?8t?5fopen@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi_is_16
$LN2@stbi_is_16:
; Line 7626
	mov	rcx, QWORD PTR f$[rbp]
	call	stbi_is_16_bit_from_file
	mov	DWORD PTR result$[rbp], eax
; Line 7627
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fclose
; Line 7628
	mov	eax, DWORD PTR result$[rbp]
$LN1@stbi_is_16:
; Line 7629
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
stbi_is_16_bit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_info_from_file
_TEXT	SEGMENT
r$ = 4
s$ = 48
pos$ = 292
__$ArrayPad$ = 504
f$ = 544
x$ = 552
y$ = 560
comp$ = 568
stbi_info_from_file PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7611
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7614
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_ftell
	mov	DWORD PTR pos$[rbp], eax
; Line 7615
	mov	rdx, QWORD PTR f$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z ; stbi__start_file
; Line 7616
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__info_main
	mov	DWORD PTR r$[rbp], eax
; Line 7617
	xor	r8d, r8d
	mov	edx, DWORD PTR pos$[rbp]
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fseek
; Line 7618
	mov	eax, DWORD PTR r$[rbp]
; Line 7619
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:stbi_info_from_file$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
stbi_info_from_file ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_info
_TEXT	SEGMENT
f$ = 8
result$ = 36
filename$ = 288
x$ = 296
y$ = 304
comp$ = 312
stbi_info PROC						; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7601
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7602
	lea	rdx, OFFSET FLAT:??_C@_02JDPG@rb@
	mov	rcx, QWORD PTR filename$[rbp]
	call	?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z	; stbi__fopen
	mov	QWORD PTR f$[rbp], rax
; Line 7604
	cmp	QWORD PTR f$[rbp], 0
	jne	SHORT $LN2@stbi_info
	lea	rcx, OFFSET FLAT:??_C@_0M@JPDHFAGK@can?8t?5fopen@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	jmp	SHORT $LN1@stbi_info
$LN2@stbi_info:
; Line 7605
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR f$[rbp]
	call	stbi_info_from_file
	mov	DWORD PTR result$[rbp], eax
; Line 7606
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fclose
; Line 7607
	mov	eax, DWORD PTR result$[rbp]
$LN1@stbi_info:
; Line 7608
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
stbi_info ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_is_16_bit_from_callbacks
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
c$ = 480
user$ = 488
stbi_is_16_bit_from_callbacks PROC			; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7665
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+520]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7667
	mov	r8, QWORD PTR user$[rbp]
	mov	rdx, QWORD PTR c$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z ; stbi__start_callbacks
; Line 7668
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__is_16_main@@YAHPEAUstbi__context@@@Z ; stbi__is_16_main
; Line 7669
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:stbi_is_16_bit_from_callbacks$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_is_16_bit_from_callbacks ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_is_16_bit_from_memory
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
buffer$ = 480
len$ = 488
stbi_is_16_bit_from_memory PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7658
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+520]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7660
	mov	r8d, DWORD PTR len$[rbp]
	mov	rdx, QWORD PTR buffer$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z ; stbi__start_mem
; Line 7661
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__is_16_main@@YAHPEAUstbi__context@@@Z ; stbi__is_16_main
; Line 7662
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:stbi_is_16_bit_from_memory$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_is_16_bit_from_memory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_info_from_callbacks
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
c$ = 480
user$ = 488
x$ = 496
y$ = 504
comp$ = 512
stbi_info_from_callbacks PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7651
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+520]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7653
	mov	r8, QWORD PTR user$[rbp]
	mov	rdx, QWORD PTR c$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z ; stbi__start_callbacks
; Line 7654
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__info_main
; Line 7655
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:stbi_info_from_callbacks$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_info_from_callbacks ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_info_from_memory
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
buffer$ = 480
len$ = 488
x$ = 496
y$ = 504
comp$ = 512
stbi_info_from_memory PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 7644
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+520]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 7646
	mov	r8d, DWORD PTR len$[rbp]
	mov	rdx, QWORD PTR buffer$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z ; stbi__start_mem
; Line 7647
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__info_main@@YAHPEAUstbi__context@@PEAH11@Z ; stbi__info_main
; Line 7648
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:stbi_info_from_memory$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_info_from_memory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_image_free
_TEXT	SEGMENT
retval_from_stbi_load$ = 224
stbi_image_free PROC					; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1082
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1083
	mov	rcx, QWORD PTR retval_from_stbi_load$[rbp]
	call	QWORD PTR __imp_free
; Line 1084
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_image_free ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_failure_reason
_TEXT	SEGMENT
stbi_failure_reason PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 970
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 971
	mov	eax, OFFSET FLAT:?stbi__g_failure_reason@@3PEBDEB
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	rax, QWORD PTR [rax+rcx]
; Line 972
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_failure_reason ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_is_hdr_from_file
_TEXT	SEGMENT
pos$ = 4
res$ = 36
s$ = 80
__$ArrayPad$ = 504
f$ = 544
stbi_is_hdr_from_file PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1523
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1525
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_ftell
	mov	DWORD PTR pos$[rbp], eax
; Line 1528
	mov	rdx, QWORD PTR f$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z ; stbi__start_file
; Line 1529
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_test@@YAHPEAUstbi__context@@@Z ; stbi__hdr_test
	mov	DWORD PTR res$[rbp], eax
; Line 1530
	xor	r8d, r8d
	mov	edx, DWORD PTR pos$[rbp]
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fseek
; Line 1531
	mov	eax, DWORD PTR res$[rbp]
; Line 1536
	mov	edi, eax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:stbi_is_hdr_from_file$rtcFrameData
	call	_RTC_CheckStackVars
	mov	eax, edi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
stbi_is_hdr_from_file ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_is_hdr
_TEXT	SEGMENT
f$ = 8
result$ = 36
filename$ = 288
stbi_is_hdr PROC					; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1512
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1513
	lea	rdx, OFFSET FLAT:??_C@_02JDPG@rb@
	mov	rcx, QWORD PTR filename$[rbp]
	call	?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z	; stbi__fopen
	mov	QWORD PTR f$[rbp], rax
; Line 1514
	mov	DWORD PTR result$[rbp], 0
; Line 1515
	cmp	QWORD PTR f$[rbp], 0
	je	SHORT $LN2@stbi_is_hd
; Line 1516
	mov	rcx, QWORD PTR f$[rbp]
	call	stbi_is_hdr_from_file
	mov	DWORD PTR result$[rbp], eax
; Line 1517
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fclose
$LN2@stbi_is_hd:
; Line 1519
	mov	eax, DWORD PTR result$[rbp]
; Line 1520
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
stbi_is_hdr ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_is_hdr_from_memory
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
buffer$ = 480
len$ = 488
stbi_is_hdr_from_memory PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1498
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+520]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1501
	mov	r8d, DWORD PTR len$[rbp]
	mov	rdx, QWORD PTR buffer$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z ; stbi__start_mem
; Line 1502
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_test@@YAHPEAUstbi__context@@@Z ; stbi__hdr_test
; Line 1508
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:stbi_is_hdr_from_memory$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_is_hdr_from_memory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_is_hdr_from_callbacks
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
clbk$ = 480
user$ = 488
stbi_is_hdr_from_callbacks PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1540
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 488				; 000001e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+520]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1543
	mov	r8, QWORD PTR user$[rbp]
	mov	rdx, QWORD PTR clbk$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z ; stbi__start_callbacks
; Line 1544
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__hdr_test@@YAHPEAUstbi__context@@@Z ; stbi__hdr_test
; Line 1550
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:stbi_is_hdr_from_callbacks$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_is_hdr_from_callbacks ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_ldr_to_hdr_scale
_TEXT	SEGMENT
scale$ = 224
stbi_ldr_to_hdr_scale PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1556
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
	movss	xmm0, DWORD PTR scale$[rbp]
	movss	DWORD PTR ?stbi__l2h_scale@@3MA, xmm0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_ldr_to_hdr_scale ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_ldr_to_hdr_gamma
_TEXT	SEGMENT
gamma$ = 224
stbi_ldr_to_hdr_gamma PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1555
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
	movss	xmm0, DWORD PTR gamma$[rbp]
	movss	DWORD PTR ?stbi__l2h_gamma@@3MA, xmm0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_ldr_to_hdr_gamma ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_hdr_to_ldr_scale
_TEXT	SEGMENT
scale$ = 224
stbi_hdr_to_ldr_scale PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1562
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR scale$[rbp]
	movss	DWORD PTR ?stbi__h2l_scale_i@@3MA, xmm0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_hdr_to_ldr_scale ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_hdr_to_ldr_gamma
_TEXT	SEGMENT
gamma$ = 224
stbi_hdr_to_ldr_gamma PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1561
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
	movss	xmm0, DWORD PTR __real@3f800000
	divss	xmm0, DWORD PTR gamma$[rbp]
	movss	DWORD PTR ?stbi__h2l_gamma_i@@3MA, xmm0
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
stbi_hdr_to_ldr_gamma ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_loadf_from_file
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
f$ = 480
x$ = 488
y$ = 496
comp$ = 504
req_comp$ = 512
stbi_loadf_from_file PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1484
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+536]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1486
	mov	rdx, QWORD PTR f$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z ; stbi__start_file
; Line 1487
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z ; stbi__loadf_main
; Line 1488
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_loadf_from_file$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_loadf_from_file ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_loadf
_TEXT	SEGMENT
result$ = 8
f$ = 40
tv71 = 244
filename$ = 288
x$ = 296
y$ = 304
comp$ = 312
req_comp$ = 320
stbi_loadf PROC						; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1474
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1476
	lea	rdx, OFFSET FLAT:??_C@_02JDPG@rb@
	mov	rcx, QWORD PTR filename$[rbp]
	call	?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z	; stbi__fopen
	mov	QWORD PTR f$[rbp], rax
; Line 1477
	cmp	QWORD PTR f$[rbp], 0
	jne	SHORT $LN2@stbi_loadf
	lea	rcx, OFFSET FLAT:??_C@_0M@JPDHFAGK@can?8t?5fopen@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN4@stbi_loadf
	mov	DWORD PTR tv71[rbp], 0
	jmp	SHORT $LN5@stbi_loadf
$LN4@stbi_loadf:
	mov	DWORD PTR tv71[rbp], 0
$LN5@stbi_loadf:
	movsxd	rax, DWORD PTR tv71[rbp]
	jmp	SHORT $LN1@stbi_loadf
$LN2@stbi_loadf:
; Line 1478
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR f$[rbp]
	call	stbi_loadf_from_file
	mov	QWORD PTR result$[rbp], rax
; Line 1479
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fclose
; Line 1480
	mov	rax, QWORD PTR result$[rbp]
$LN1@stbi_loadf:
; Line 1481
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
stbi_loadf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_loadf_from_callbacks
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
clbk$ = 480
user$ = 488
x$ = 496
y$ = 504
comp$ = 512
req_comp$ = 520
stbi_loadf_from_callbacks PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1466
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+536]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1468
	mov	r8, QWORD PTR user$[rbp]
	mov	rdx, QWORD PTR clbk$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z ; stbi__start_callbacks
; Line 1469
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z ; stbi__loadf_main
; Line 1470
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_loadf_from_callbacks$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_loadf_from_callbacks ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_loadf_from_memory
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
buffer$ = 480
len$ = 488
x$ = 496
y$ = 504
comp$ = 512
req_comp$ = 520
stbi_loadf_from_memory PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1459
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+536]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1461
	mov	r8d, DWORD PTR len$[rbp]
	mov	rdx, QWORD PTR buffer$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z ; stbi__start_mem
; Line 1462
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__loadf_main@@YAPEAMPEAUstbi__context@@PEAH11H@Z ; stbi__loadf_main
; Line 1463
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_loadf_from_memory$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_loadf_from_memory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_load_from_file_16
_TEXT	SEGMENT
result$ = 8
s$ = 48
__$ArrayPad$ = 472
f$ = 512
x$ = 520
y$ = 528
comp$ = 536
req_comp$ = 544
stbi_load_from_file_16 PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1370
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 536				; 00000218H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+568]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1373
	mov	rdx, QWORD PTR f$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z ; stbi__start_file
; Line 1374
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z ; stbi__load_and_postprocess_16bit
	mov	QWORD PTR result$[rbp], rax
; Line 1375
	cmp	QWORD PTR result$[rbp], 0
	je	SHORT $LN2@stbi_load_
; Line 1377
	mov	rax, QWORD PTR s$[rbp+192]
	mov	rcx, QWORD PTR s$[rbp+200]
	sub	rcx, rax
	mov	rax, rcx
	neg	eax
	mov	r8d, 1
	mov	edx, eax
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fseek
$LN2@stbi_load_:
; Line 1379
	mov	rax, QWORD PTR result$[rbp]
; Line 1380
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_load_from_file_16$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
stbi_load_from_file_16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_load_16
_TEXT	SEGMENT
f$ = 8
result$ = 40
tv71 = 244
filename$ = 288
x$ = 296
y$ = 304
comp$ = 312
req_comp$ = 320
stbi_load_16 PROC					; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1383
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1384
	lea	rdx, OFFSET FLAT:??_C@_02JDPG@rb@
	mov	rcx, QWORD PTR filename$[rbp]
	call	?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z	; stbi__fopen
	mov	QWORD PTR f$[rbp], rax
; Line 1386
	cmp	QWORD PTR f$[rbp], 0
	jne	SHORT $LN2@stbi_load_
	lea	rcx, OFFSET FLAT:??_C@_0M@JPDHFAGK@can?8t?5fopen@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN4@stbi_load_
	mov	DWORD PTR tv71[rbp], 0
	jmp	SHORT $LN5@stbi_load_
$LN4@stbi_load_:
	mov	DWORD PTR tv71[rbp], 0
$LN5@stbi_load_:
	movsxd	rax, DWORD PTR tv71[rbp]
	jmp	SHORT $LN1@stbi_load_
$LN2@stbi_load_:
; Line 1387
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR f$[rbp]
	call	stbi_load_from_file_16
	mov	QWORD PTR result$[rbp], rax
; Line 1388
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fclose
; Line 1389
	mov	rax, QWORD PTR result$[rbp]
$LN1@stbi_load_:
; Line 1390
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
stbi_load_16 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_load_16_from_callbacks
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
clbk$ = 480
user$ = 488
x$ = 496
y$ = 504
channels_in_file$ = 512
desired_channels$ = 520
stbi_load_16_from_callbacks PROC			; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1403
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+536]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1405
	mov	r8, QWORD PTR user$[rbp]
	mov	rdx, QWORD PTR clbk$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z ; stbi__start_callbacks
; Line 1406
	mov	eax, DWORD PTR desired_channels$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR channels_in_file$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z ; stbi__load_and_postprocess_16bit
; Line 1407
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_load_16_from_callbacks$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_load_16_from_callbacks ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_load_16_from_memory
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
buffer$ = 480
len$ = 488
x$ = 496
y$ = 504
channels_in_file$ = 512
desired_channels$ = 520
stbi_load_16_from_memory PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1396
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+536]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1398
	mov	r8d, DWORD PTR len$[rbp]
	mov	rdx, QWORD PTR buffer$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z ; stbi__start_mem
; Line 1399
	mov	eax, DWORD PTR desired_channels$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR channels_in_file$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_and_postprocess_16bit@@YAPEAGPEAUstbi__context@@PEAH11H@Z ; stbi__load_and_postprocess_16bit
; Line 1400
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_load_16_from_memory$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_load_16_from_memory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_load_gif_from_memory
_TEXT	SEGMENT
result$ = 8
s$ = 48
tv88 = 468
__$ArrayPad$ = 472
buffer$ = 512
len$ = 520
delays$ = 528
x$ = 536
y$ = 544
z$ = 552
comp$ = 560
req_comp$ = 568
stbi_load_gif_from_memory PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1425
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 552				; 00000228H
	lea	rbp, QWORD PTR [rsp+64]
	lea	rdi, QWORD PTR [rsp+64]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+584]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1428
	mov	r8d, DWORD PTR len$[rbp]
	mov	rdx, QWORD PTR buffer$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z ; stbi__start_mem
; Line 1430
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+48], eax
	mov	rax, QWORD PTR comp$[rbp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR z$[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR y$[rbp]
	mov	r8, QWORD PTR x$[rbp]
	mov	rdx, QWORD PTR delays$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_gif_main@@YAPEAXPEAUstbi__context@@PEAPEAHPEAH222H@Z ; stbi__load_gif_main
	mov	QWORD PTR result$[rbp], rax
; Line 1431
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_set@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	cmp	DWORD PTR [rax+rcx], 0
	je	SHORT $LN4@stbi_load_
	mov	eax, OFFSET FLAT:?stbi__vertically_flip_on_load_local@@3HA
	mov	eax, eax
	mov	ecx, DWORD PTR _tls_index
	mov	rdx, QWORD PTR gs:88
	mov	rcx, QWORD PTR [rdx+rcx*8]
	mov	eax, DWORD PTR [rax+rcx]
	mov	DWORD PTR tv88[rbp], eax
	jmp	SHORT $LN5@stbi_load_
$LN4@stbi_load_:
	mov	eax, DWORD PTR ?stbi__vertically_flip_on_load_global@@3HA
	mov	DWORD PTR tv88[rbp], eax
$LN5@stbi_load_:
	cmp	DWORD PTR tv88[rbp], 0
	je	SHORT $LN2@stbi_load_
; Line 1432
	mov	rax, QWORD PTR comp$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	DWORD PTR [rsp+32], eax
	mov	rax, QWORD PTR z$[rbp]
	mov	r9d, DWORD PTR [rax]
	mov	rax, QWORD PTR y$[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rax, QWORD PTR x$[rbp]
	mov	edx, DWORD PTR [rax]
	mov	rcx, QWORD PTR result$[rbp]
	call	?stbi__vertical_flip_slices@@YAXPEAXHHHH@Z ; stbi__vertical_flip_slices
$LN2@stbi_load_:
; Line 1435
	mov	rax, QWORD PTR result$[rbp]
; Line 1436
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-64]
	lea	rdx, OFFSET FLAT:stbi_load_gif_from_memory$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
stbi_load_gif_from_memory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_load_from_file
_TEXT	SEGMENT
result$ = 8
s$ = 48
__$ArrayPad$ = 472
f$ = 512
x$ = 520
y$ = 528
comp$ = 536
req_comp$ = 544
stbi_load_from_file PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1357
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 536				; 00000218H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+568]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1360
	mov	rdx, QWORD PTR f$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_file@@YAXPEAUstbi__context@@PEAU_iobuf@@@Z ; stbi__start_file
; Line 1361
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z ; stbi__load_and_postprocess_8bit
	mov	QWORD PTR result$[rbp], rax
; Line 1362
	cmp	QWORD PTR result$[rbp], 0
	je	SHORT $LN2@stbi_load_
; Line 1364
	mov	rax, QWORD PTR s$[rbp+192]
	mov	rcx, QWORD PTR s$[rbp+200]
	sub	rcx, rax
	mov	rax, rcx
	neg	eax
	mov	r8d, 1
	mov	edx, eax
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fseek
$LN2@stbi_load_:
; Line 1366
	mov	rax, QWORD PTR result$[rbp]
; Line 1367
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_load_from_file$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+488]
	pop	rdi
	pop	rbp
	ret	0
stbi_load_from_file ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_load
_TEXT	SEGMENT
f$ = 8
result$ = 40
tv71 = 244
filename$ = 288
x$ = 296
y$ = 304
comp$ = 312
req_comp$ = 320
stbi_load PROC						; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1347
$LN6:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1348
	lea	rdx, OFFSET FLAT:??_C@_02JDPG@rb@
	mov	rcx, QWORD PTR filename$[rbp]
	call	?stbi__fopen@@YAPEAU_iobuf@@PEBD0@Z	; stbi__fopen
	mov	QWORD PTR f$[rbp], rax
; Line 1350
	cmp	QWORD PTR f$[rbp], 0
	jne	SHORT $LN2@stbi_load
	lea	rcx, OFFSET FLAT:??_C@_0M@JPDHFAGK@can?8t?5fopen@
	call	?stbi__err@@YAHPEBD@Z			; stbi__err
	test	eax, eax
	je	SHORT $LN4@stbi_load
	mov	DWORD PTR tv71[rbp], 0
	jmp	SHORT $LN5@stbi_load
$LN4@stbi_load:
	mov	DWORD PTR tv71[rbp], 0
$LN5@stbi_load:
	movsxd	rax, DWORD PTR tv71[rbp]
	jmp	SHORT $LN1@stbi_load
$LN2@stbi_load:
; Line 1351
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	mov	rcx, QWORD PTR f$[rbp]
	call	stbi_load_from_file
	mov	QWORD PTR result$[rbp], rax
; Line 1352
	mov	rcx, QWORD PTR f$[rbp]
	call	QWORD PTR __imp_fclose
; Line 1353
	mov	rax, QWORD PTR result$[rbp]
$LN1@stbi_load:
; Line 1354
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
stbi_load ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_load_from_callbacks
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
clbk$ = 480
user$ = 488
x$ = 496
y$ = 504
comp$ = 512
req_comp$ = 520
stbi_load_from_callbacks PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1417
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+536]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1419
	mov	r8, QWORD PTR user$[rbp]
	mov	rdx, QWORD PTR clbk$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_callbacks@@YAXPEAUstbi__context@@PEAUstbi_io_callbacks@@PEAX@Z ; stbi__start_callbacks
; Line 1420
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z ; stbi__load_and_postprocess_8bit
; Line 1421
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_load_from_callbacks$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_load_from_callbacks ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT stbi_load_from_memory
_TEXT	SEGMENT
s$ = 16
__$ArrayPad$ = 440
buffer$ = 480
len$ = 488
x$ = 496
y$ = 504
comp$ = 512
req_comp$ = 520
stbi_load_from_memory PROC				; COMDAT
; File C:\Users\anton\Documents\Visual Studio 2022\Libraries\stb\stb_image.h
; Line 1410
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 504				; 000001f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+536]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DA7935A3_stb_image@h
	call	__CheckForDebuggerJustMyCode
; Line 1412
	mov	r8d, DWORD PTR len$[rbp]
	mov	rdx, QWORD PTR buffer$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__start_mem@@YAXPEAUstbi__context@@PEBEH@Z ; stbi__start_mem
; Line 1413
	mov	eax, DWORD PTR req_comp$[rbp]
	mov	DWORD PTR [rsp+32], eax
	mov	r9, QWORD PTR comp$[rbp]
	mov	r8, QWORD PTR y$[rbp]
	mov	rdx, QWORD PTR x$[rbp]
	lea	rcx, QWORD PTR s$[rbp]
	call	?stbi__load_and_postprocess_8bit@@YAPEAEPEAUstbi__context@@PEAH11H@Z ; stbi__load_and_postprocess_8bit
; Line 1414
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:stbi_load_from_memory$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+456]
	pop	rdi
	pop	rbp
	ret	0
stbi_load_from_memory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0EmptyObject@cow@@AEAA@I@Z
_TEXT	SEGMENT
this$ = 224
id$ = 232
??0EmptyObject@cow@@AEAA@I@Z PROC			; cow::EmptyObject::EmptyObject, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\EmptyObject.hpp
; Line 26
$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__A51CC232_EmptyObject@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR id$[rbp]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0EmptyObject@cow@@AEAA@I@Z ENDP			; cow::EmptyObject::EmptyObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1EmptyObject@cow@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1EmptyObject@cow@@QEAA@XZ PROC			; cow::EmptyObject::~EmptyObject, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\EmptyObject.hpp
; Line 31
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__A51CC232_EmptyObject@hpp
	call	__CheckForDebuggerJustMyCode
; Line 32
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1EmptyObject@cow@@QEAA@XZ ENDP			; cow::EmptyObject::~EmptyObject
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?create@EmptyObject@cow@@SA?AV12@XZ
_TEXT	SEGMENT
$T1 = 196
tv67 = 212
__$ReturnUdt$ = 256
?create@EmptyObject@cow@@SA?AV12@XZ PROC		; cow::EmptyObject::create, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\EmptyObject.hpp
; Line 15
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	DWORD PTR $T1[rbp], 0
	lea	rcx, OFFSET FLAT:__A51CC232_EmptyObject@hpp
	call	__CheckForDebuggerJustMyCode
; Line 17
	mov	eax, DWORD PTR ?currentId@?1??create@EmptyObject@cow@@SA?AV23@XZ@4IA ; `cow::EmptyObject::create'::`2'::currentId
	mov	DWORD PTR tv67[rbp], eax
	mov	eax, DWORD PTR ?currentId@?1??create@EmptyObject@cow@@SA?AV23@XZ@4IA ; `cow::EmptyObject::create'::`2'::currentId
	inc	eax
	mov	DWORD PTR ?currentId@?1??create@EmptyObject@cow@@SA?AV23@XZ@4IA, eax ; `cow::EmptyObject::create'::`2'::currentId
	mov	edx, DWORD PTR tv67[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0EmptyObject@cow@@AEAA@I@Z		; cow::EmptyObject::EmptyObject
	mov	eax, DWORD PTR $T1[rbp]
	or	eax, 1
	mov	DWORD PTR $T1[rbp], eax
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]
; Line 18
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?create@EmptyObject@cow@@SA?AV12@XZ ENDP		; cow::EmptyObject::create
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1377
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1378
	mov	rax, QWORD PTR this$[rbp]
; Line 1379
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?reset@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAXPEAVBuffer@cow@@@Z
_TEXT	SEGMENT
_Old$ = 8
tv76 = 216
this$ = 256
_Ptr$ = 264
?reset@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAXPEAVBuffer@cow@@@Z PROC ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::reset, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3271
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
; Line 3272
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, rax
	call	??$exchange@PEAVBuffer@cow@@AEAPEAV12@@std@@YAPEAVBuffer@cow@@AEAPEAV12@0@Z ; std::exchange<cow::Buffer *,cow::Buffer * &>
	mov	QWORD PTR _Old$[rbp], rax
; Line 3273
	cmp	QWORD PTR _Old$[rbp], 0
	je	SHORT $LN2@reset
; Line 3274
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Get_first
	mov	QWORD PTR tv76[rbp], rax
	mov	rdx, QWORD PTR _Old$[rbp]
	mov	rcx, QWORD PTR tv76[rbp]
	call	??R?$default_delete@VBuffer@cow@@@std@@QEBAXPEAVBuffer@cow@@@Z ; std::default_delete<cow::Buffer>::operator()
$LN2@reset:
; Line 3276
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?reset@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAXPEAVBuffer@cow@@@Z ENDP ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::reset
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?release@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAPEAVBuffer@cow@@XZ
_TEXT	SEGMENT
$T1 = 196
this$ = 256
?release@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAPEAVBuffer@cow@@XZ PROC ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3267
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
; Line 3268
	mov	QWORD PTR $T1[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, rax
	call	??$exchange@PEAVBuffer@cow@@$$T@std@@YAPEAVBuffer@cow@@AEAPEAV12@$$QEA$$T@Z ; std::exchange<cow::Buffer *,std::nullptr_t>
; Line 3269
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?release@?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAAPEAVBuffer@cow@@XZ ENDP ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ
_TEXT	SEGMENT
this$ = 224
??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ PROC ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator->, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3255
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
; Line 3256
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
; Line 3257
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??C?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEBAPEAVBuffer@cow@@XZ ENDP ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv77 = 192
tv75 = 200
this$ = 240
??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ PROC ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::~unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3237
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
; Line 3238
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@unique_ptr
; Line 3239
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@U?$default_delete@VBuffer@cow@@@std@@PEAVBuffer@cow@@$00@std@@QEAAAEAU?$default_delete@VBuffer@cow@@@2@XZ ; std::_Compressed_pair<std::default_delete<cow::Buffer>,cow::Buffer *,1>::_Get_first
	mov	QWORD PTR tv77[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv75[rbp], rax
	mov	rdx, QWORD PTR tv75[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	??R?$default_delete@VBuffer@cow@@@std@@QEBAXPEAVBuffer@cow@@@Z ; std::default_delete<cow::Buffer>::operator()
$LN2@unique_ptr:
; Line 3241
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??1?$unique_ptr@VBuffer@cow@@U?$default_delete@VBuffer@cow@@@std@@@std@@QEAA@XZ ENDP ; std::unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >::~unique_ptr<cow::Buffer,std::default_delete<cow::Buffer> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??R?$default_delete@VBuffer@cow@@@std@@QEBAXPEAVBuffer@cow@@@Z
_TEXT	SEGMENT
$T1 = 200
tv68 = 216
this$ = 256
_Ptr$ = 264
??R?$default_delete@VBuffer@cow@@@std@@QEBAXPEAVBuffer@cow@@@Z PROC ; std::default_delete<cow::Buffer>::operator(), COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3127
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
; Line 3129
	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	QWORD PTR $T1[rbp], rax
	cmp	QWORD PTR $T1[rbp], 0
	je	SHORT $LN3@operator
	mov	edx, 1
	mov	rcx, QWORD PTR $T1[rbp]
	call	??_GBuffer@cow@@QEAAPEAXI@Z
	mov	QWORD PTR tv68[rbp], rax
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	QWORD PTR tv68[rbp], 0
$LN4@operator:
; Line 3130
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??R?$default_delete@VBuffer@cow@@@std@@QEBAXPEAVBuffer@cow@@@Z ENDP ; std::default_delete<cow::Buffer>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GraphicsPipelineSimpleInfo@cow@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1GraphicsPipelineSimpleInfo@cow@@QEAA@XZ PROC		; cow::GraphicsPipelineSimpleInfo::~GraphicsPipelineSimpleInfo, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 264				; 00000108H
	mov	rcx, rax
	call	??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::~vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1GraphicsPipelineSimpleInfo@cow@@QEAA@XZ ENDP		; cow::GraphicsPipelineSimpleInfo::~GraphicsPipelineSimpleInfo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1>::_Get_first, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1377
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1378
	mov	rax, QWORD PTR this$[rbp]
; Line 1379
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<enum VkDynamicState> >::_Vector_val<std::_Simple_types<enum VkDynamicState> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 392
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<enum VkDynamicState> >::_Vector_val<std::_Simple_types<enum VkDynamicState> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ PROC ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Getal, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 2027
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 2028
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ ; std::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1>::_Get_first
; Line 2029
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ ENDP ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Myend$ = 136
this$ = 384
?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ PROC ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Tidy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 1881
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 1882
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax
; Line 1883
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax
; Line 1884
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax
; Line 1885
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
; Line 1886
	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax
; Line 1888
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
; Line 1890
	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy
; Line 1891
	mov	r8, QWORD PTR _Al$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Destroy_range@V?$allocator@W4VkDynamicState@@@std@@@std@@YAXPEAW4VkDynamicState@@QEAW41@AEAV?$allocator@W4VkDynamicState@@@0@@Z ; std::_Destroy_range<std::allocator<enum VkDynamicState> >
; Line 1893
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 2
	mov	r8, rax
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@W4VkDynamicState@@@std@@QEAAXQEAW4VkDynamicState@@_K@Z ; std::allocator<enum VkDynamicState>::deallocate
; Line 1895
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1896
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1897
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:
; Line 1899
	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ ENDP ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S12$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ PROC ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::~vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 790
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 26
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
; Line 791
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAXXZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Tidy
; Line 793
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S12$[rbp]
	call	??$?0W4VkDynamicState@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@W4VkDynamicState@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><enum VkDynamicState>
	lea	rax, QWORD PTR $S12$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax
; Line 794
	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
; Line 796
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ ENDP ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::~vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv83 = 248
tv69 = 248
this$ = 288
??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ PROC ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vector
; Line 659
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__63D5BD4C_vector
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv69[rbp], rax
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@W4VkDynamicState@@@std@@V?$_Vector_val@U?$_Simple_types@W4VkDynamicState@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1>::_Compressed_pair<std::allocator<enum VkDynamicState>,std::_Vector_val<std::_Simple_types<enum VkDynamicState> >,1><>
; Line 660
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv83[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@AEAAAEAV?$allocator@W4VkDynamicState@@@2@XZ ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0W4VkDynamicState@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@W4VkDynamicState@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><enum VkDynamicState>
	mov	rdx, rax
	mov	rcx, QWORD PTR tv83[rbp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
; Line 661
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@W4VkDynamicState@@V?$allocator@W4VkDynamicState@@@std@@@std@@QEAA@XZ ENDP ; std::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >::vector<enum VkDynamicState,std::allocator<enum VkDynamicState> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?deallocate@?$allocator@W4VkDynamicState@@@std@@QEAAXQEAW4VkDynamicState@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@W4VkDynamicState@@@std@@QEAAXQEAW4VkDynamicState@@_K@Z PROC ; std::allocator<enum VkDynamicState>::deallocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 827
$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
$LN4@deallocate:
; Line 828
	cmp	QWORD PTR _Ptr$[rbp], 0
	jne	SHORT $LN10@deallocate
	cmp	QWORD PTR _Count$[rbp], 0
	jne	SHORT $LN8@deallocate
$LN10@deallocate:
	jmp	SHORT $LN9@deallocate
$LN8@deallocate:
$LN7@deallocate:
	lea	rax, OFFSET FLAT:??_C@_0DG@KGHKKGBC@null?5pointer?5cannot?5point?5to?5a?5@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 828				; 0000033cH
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@deallocate
	int	3
	xor	eax, eax
$LN12@deallocate:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 828				; 0000033cH
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1HA@FACCKGGH@?$AA?$CC?$AAn?$AAu?$AAl?$AAl?$AA?5?$AAp?$AAo?$AAi?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@deallocate
$LN9@deallocate:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@deallocate
; Line 830
	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 2
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>
; Line 831
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@W4VkDynamicState@@@std@@QEAAXQEAW4VkDynamicState@@_K@Z ENDP ; std::allocator<enum VkDynamicState>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$allocator@W4VkDynamicState@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@W4VkDynamicState@@@std@@QEAA@XZ PROC	; std::allocator<enum VkDynamicState>::allocator<enum VkDynamicState>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 819
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$allocator@W4VkDynamicState@@@std@@QEAA@XZ ENDP	; std::allocator<enum VkDynamicState>::allocator<enum VkDynamicState>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GBuffer@cow@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_GBuffer@cow@@QEAAPEAXI@Z PROC			; cow::Buffer::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Buffer@cow@@QEAA@XZ			; cow::Buffer::~Buffer
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 40					; 00000028H
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_GBuffer@cow@@QEAAPEAXI@Z ENDP			; cow::Buffer::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@Buffer@cow@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@Buffer@cow@@QEAAX_K@Z PROC		; cow::Buffer::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@Buffer@cow@@QEAAX_K@Z ENDP		; cow::Buffer::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createBuffer@Buffer@cow@@AEAAXII@Z
_TEXT	SEGMENT
createInfo$ = 8
memRequirements$ = 88
allocInfo$ = 136
memProperties$ = 208
i$ = 756
$T7 = 1176
$T8 = 1224
tv207 = 1252
tv175 = 1256
tv147 = 1256
tv93 = 1256
tv70 = 1256
tv173 = 1264
tv91 = 1264
tv171 = 1272
__$ArrayPad$ = 1280
this$ = 1328
usage$ = 1336
properties$ = 1344
?createBuffer@Buffer@cow@@AEAAXII@Z PROC		; cow::Buffer::createBuffer, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Buffer.hpp
; Line 33
$LN9:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 1336				; 00000538H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 230				; 000000e6H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+1368]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__4ED58781_Buffer@hpp
	call	__CheckForDebuggerJustMyCode
; Line 34
	lea	rax, QWORD PTR createInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 56					; 00000038H
	rep stosb
; Line 35
	mov	DWORD PTR createInfo$[rbp], 12
; Line 36
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR createInfo$[rbp+24], rax
; Line 37
	mov	eax, DWORD PTR usage$[rbp]
	mov	DWORD PTR createInfo$[rbp+32], eax
; Line 38
	mov	DWORD PTR createInfo$[rbp+36], 0
; Line 39
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 16
	mov	QWORD PTR tv70[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	rcx, QWORD PTR tv70[rbp]
	mov	r9, rcx
	xor	r8d, r8d
	lea	rdx, QWORD PTR createInfo$[rbp]
	mov	rcx, rax
	call	vkCreateBuffer
	test	eax, eax
	je	SHORT $LN5@createBuff
; Line 41
	lea	rdx, OFFSET FLAT:??_C@_0CA@IGKKDGOC@failed?5to?5create?5vertex?5buffer?$CB@
	lea	rcx, QWORD PTR $T7[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T7[rbp]
	call	_CxxThrowException
$LN5@createBuff:
; Line 44
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv93[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv91[rbp], rax
	lea	r8, QWORD PTR memRequirements$[rbp]
	mov	rdx, QWORD PTR tv93[rbp]
	mov	rcx, QWORD PTR tv91[rbp]
	call	vkGetBufferMemoryRequirements
; Line 46
	lea	rax, QWORD PTR allocInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 32					; 00000020H
	rep stosb
; Line 47
	mov	DWORD PTR allocInfo$[rbp], 5
; Line 48
	mov	rax, QWORD PTR memRequirements$[rbp]
	mov	QWORD PTR allocInfo$[rbp+16], rax
; Line 51
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getPhysicalDevice@Device@cow@@QEAAPEAUVkPhysicalDevice_T@@XZ ; cow::Device::getPhysicalDevice
	lea	rdx, QWORD PTR memProperties$[rbp]
	mov	rcx, rax
	call	vkGetPhysicalDeviceMemoryProperties
; Line 52
	mov	DWORD PTR i$[rbp], 0
; Line 53
	jmp	SHORT $LN4@createBuff
$LN2@createBuff:
	mov	eax, DWORD PTR i$[rbp]
	inc	eax
	mov	DWORD PTR i$[rbp], eax
$LN4@createBuff:
	mov	eax, DWORD PTR memProperties$[rbp]
	cmp	DWORD PTR i$[rbp], eax
	jae	SHORT $LN3@createBuff
; Line 54
	mov	eax, DWORD PTR i$[rbp]
	mov	ecx, 1
	mov	DWORD PTR tv207[rbp], ecx
	movzx	ecx, al
	mov	eax, DWORD PTR tv207[rbp]
	shl	eax, cl
	mov	ecx, DWORD PTR memRequirements$[rbp+16]
	and	ecx, eax
	mov	eax, ecx
	test	eax, eax
	je	SHORT $LN6@createBuff
	mov	eax, DWORD PTR i$[rbp]
	mov	ecx, DWORD PTR properties$[rbp]
	mov	eax, DWORD PTR memProperties$[rbp+rax*8+4]
	and	eax, ecx
	cmp	eax, DWORD PTR properties$[rbp]
	jne	SHORT $LN6@createBuff
; Line 56
	jmp	SHORT $LN3@createBuff
$LN6@createBuff:
; Line 58
	jmp	SHORT $LN2@createBuff
$LN3@createBuff:
; Line 60
	mov	eax, DWORD PTR i$[rbp]
	mov	DWORD PTR allocInfo$[rbp+24], eax
; Line 62
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	QWORD PTR tv147[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	rcx, QWORD PTR tv147[rbp]
	mov	r9, rcx
	xor	r8d, r8d
	lea	rdx, QWORD PTR allocInfo$[rbp]
	mov	rcx, rax
	call	vkAllocateMemory
	test	eax, eax
	je	SHORT $LN7@createBuff
; Line 64
	lea	rdx, OFFSET FLAT:??_C@_0CJ@NNDFOAFL@failed?5to?5allocate?5vertex?5buffe@
	lea	rcx, QWORD PTR $T8[rbp]
	call	??0runtime_error@std@@QEAA@PEBD@Z	; std::runtime_error::runtime_error
	lea	rdx, OFFSET FLAT:_TI2?AVruntime_error@std@@
	lea	rcx, QWORD PTR $T8[rbp]
	call	_CxxThrowException
$LN7@createBuff:
; Line 66
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv175[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv173[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv171[rbp], rax
	xor	r9d, r9d
	mov	r8, QWORD PTR tv175[rbp]
	mov	rdx, QWORD PTR tv173[rbp]
	mov	rcx, QWORD PTR tv171[rbp]
	call	vkBindBufferMemory
$LN8@createBuff:
; Line 67
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?createBuffer@Buffer@cow@@AEAAXII@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+1304]
	pop	rdi
	pop	rbp
	ret	0
?createBuffer@Buffer@cow@@AEAAXII@Z ENDP		; cow::Buffer::createBuffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ
_TEXT	SEGMENT
this$ = 224
?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ PROC		; cow::Buffer::get, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Buffer.hpp
; Line 21
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4ED58781_Buffer@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?get@Buffer@cow@@QEAAPEAUVkBuffer_T@@XZ ENDP		; cow::Buffer::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z
_TEXT	SEGMENT
allocInfo$ = 8
commandBuffer$ = 72
beginInfo$ = 104
copyRegion$ = 168
submitInfo$ = 224
tv154 = 504
tv152 = 512
__$ArrayPad$ = 520
this$ = 560
src$ = 568
size$ = 576
?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z PROC	; cow::Buffer::copy, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Buffer.hpp
; Line 76
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 584				; 00000248H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+616]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__4ED58781_Buffer@hpp
	call	__CheckForDebuggerJustMyCode
; Line 78
	lea	rax, QWORD PTR allocInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 32					; 00000020H
	rep stosb
; Line 79
	mov	DWORD PTR allocInfo$[rbp], 40		; 00000028H
; Line 80
	mov	DWORD PTR allocInfo$[rbp+24], 0
; Line 81
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ ; cow::Device::getCommandPool
	mov	QWORD PTR allocInfo$[rbp+16], rax
; Line 82
	mov	DWORD PTR allocInfo$[rbp+28], 1
; Line 85
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	lea	r8, QWORD PTR commandBuffer$[rbp]
	lea	rdx, QWORD PTR allocInfo$[rbp]
	mov	rcx, rax
	call	vkAllocateCommandBuffers
; Line 87
	lea	rax, QWORD PTR beginInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 32					; 00000020H
	rep stosb
; Line 88
	mov	DWORD PTR beginInfo$[rbp], 42		; 0000002aH
; Line 89
	mov	DWORD PTR beginInfo$[rbp+16], 1
; Line 91
	lea	rdx, QWORD PTR beginInfo$[rbp]
	mov	rcx, QWORD PTR commandBuffer$[rbp]
	call	vkBeginCommandBuffer
; Line 93
	lea	rax, QWORD PTR copyRegion$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 24
	rep stosb
; Line 94
	mov	QWORD PTR copyRegion$[rbp], 0
; Line 95
	mov	QWORD PTR copyRegion$[rbp+8], 0
; Line 96
	mov	rax, QWORD PTR size$[rbp]
	mov	QWORD PTR copyRegion$[rbp+16], rax
; Line 98
	lea	rax, QWORD PTR copyRegion$[rbp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 1
	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [rax+16]
	mov	rdx, QWORD PTR src$[rbp]
	mov	rcx, QWORD PTR commandBuffer$[rbp]
	call	vkCmdCopyBuffer
; Line 100
	mov	rcx, QWORD PTR commandBuffer$[rbp]
	call	vkEndCommandBuffer
; Line 102
	lea	rax, QWORD PTR submitInfo$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 72					; 00000048H
	rep stosb
; Line 103
	mov	DWORD PTR submitInfo$[rbp], 4
; Line 104
	mov	DWORD PTR submitInfo$[rbp+40], 1
; Line 105
	lea	rax, QWORD PTR commandBuffer$[rbp]
	mov	QWORD PTR submitInfo$[rbp+48], rax
; Line 107
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getGraphicsQueue@Device@cow@@QEAAPEAUVkQueue_T@@XZ ; cow::Device::getGraphicsQueue
	xor	r9d, r9d
	lea	r8, QWORD PTR submitInfo$[rbp]
	mov	edx, 1
	mov	rcx, rax
	call	vkQueueSubmit
; Line 108
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getGraphicsQueue@Device@cow@@QEAAPEAUVkQueue_T@@XZ ; cow::Device::getGraphicsQueue
	mov	rcx, rax
	call	vkQueueWaitIdle
; Line 110
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ ; cow::Device::getCommandPool
	mov	QWORD PTR tv154[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv152[rbp], rax
	lea	r9, QWORD PTR commandBuffer$[rbp]
	mov	r8d, 1
	mov	rdx, QWORD PTR tv154[rbp]
	mov	rcx, QWORD PTR tv152[rbp]
	call	vkFreeCommandBuffers
; Line 111
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+536]
	pop	rdi
	pop	rbp
	ret	0
?copy@Buffer@cow@@QEAAXPEAUVkBuffer_T@@_K@Z ENDP	; cow::Buffer::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z
_TEXT	SEGMENT
this$ = 224
data$ = 232
size$ = 240
offset$ = 248
?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z PROC		; cow::Buffer::write, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Buffer.hpp
; Line 126
$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4ED58781_Buffer@hpp
	call	__CheckForDebuggerJustMyCode
; Line 127
	cmp	QWORD PTR size$[rbp], -1
	jne	SHORT $LN2@write
; Line 128
	mov	rax, QWORD PTR this$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR data$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	memcpy
	jmp	SHORT $LN1@write
$LN2@write:
; Line 129
	mov	r8, QWORD PTR size$[rbp]
	mov	rdx, QWORD PTR data$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR offset$[rbp]
	mov	rcx, QWORD PTR [rax+rcx*8+24]
	call	memcpy
$LN1@write:
; Line 130
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?write@Buffer@cow@@QEAAPEAXPEAX_K1@Z ENDP		; cow::Buffer::write
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?unmap@Buffer@cow@@QEAAXXZ
_TEXT	SEGMENT
tv75 = 192
tv73 = 200
this$ = 240
?unmap@Buffer@cow@@QEAAXXZ PROC				; cow::Buffer::unmap, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Buffer.hpp
; Line 119
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4ED58781_Buffer@hpp
	call	__CheckForDebuggerJustMyCode
; Line 120
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN2@unmap
; Line 121
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv75[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv73[rbp], rax
	mov	rdx, QWORD PTR tv75[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	vkUnmapMemory
; Line 122
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0
$LN2@unmap:
; Line 124
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?unmap@Buffer@cow@@QEAAXXZ ENDP				; cow::Buffer::unmap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
this$ = 240
size$ = 248
offset$ = 256
?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z PROC		; cow::Buffer::map, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Buffer.hpp
; Line 14
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__4ED58781_Buffer@hpp
	call	__CheckForDebuggerJustMyCode
; Line 15
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv79[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv77[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 24
	mov	QWORD PTR [rsp+40], rax
	mov	DWORD PTR [rsp+32], 0
	mov	r9, QWORD PTR size$[rbp]
	mov	r8, QWORD PTR offset$[rbp]
	mov	rdx, QWORD PTR tv79[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	vkMapMemory
; Line 16
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?map@Buffer@cow@@QEAA?AW4VkResult@@_K0@Z ENDP		; cow::Buffer::map
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Buffer@cow@@QEAA@XZ
_TEXT	SEGMENT
tv85 = 192
tv74 = 192
tv83 = 200
tv72 = 200
this$ = 240
??1Buffer@cow@@QEAA@XZ PROC				; cow::Buffer::~Buffer, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Buffer.hpp
; Line 114
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4ED58781_Buffer@hpp
	call	__CheckForDebuggerJustMyCode
; Line 115
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv74[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv72[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv74[rbp]
	mov	rcx, QWORD PTR tv72[rbp]
	call	vkFreeMemory
; Line 116
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR tv85[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+32]
	call	?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ; cow::Device::getDevice
	mov	QWORD PTR tv83[rbp], rax
	xor	r8d, r8d
	mov	rdx, QWORD PTR tv85[rbp]
	mov	rcx, QWORD PTR tv83[rbp]
	call	vkDestroyBuffer
	npad	1
; Line 117
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??1Buffer@cow@@QEAA@XZ ENDP				; cow::Buffer::~Buffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z
_TEXT	SEGMENT
this$ = 224
device$ = 232
size$ = 240
usage$ = 248
properties$ = 256
??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z PROC		; cow::Buffer::Buffer, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Buffer.hpp
; Line 72
$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__4ED58781_Buffer@hpp
	call	__CheckForDebuggerJustMyCode
; Line 70
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR size$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 71
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR device$[rbp]
	mov	QWORD PTR [rax+32], rcx
; Line 73
	mov	r8d, DWORD PTR properties$[rbp]
	mov	edx, DWORD PTR usage$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?createBuffer@Buffer@cow@@AEAAXII@Z	; cow::Buffer::createBuffer
; Line 74
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0Buffer@cow@@QEAA@AEAVDevice@1@_KII@Z ENDP		; cow::Buffer::Buffer
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@GraphicsCommands@cow@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@GraphicsCommands@cow@@QEAAX_K@Z PROC	; cow::GraphicsCommands::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@GraphicsCommands@cow@@QEAAX_K@Z ENDP	; cow::GraphicsCommands::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ
_TEXT	SEGMENT
this$ = 224
??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ PROC ; std::unique_ptr<cow::Swapchain,std::default_delete<cow::Swapchain> >::operator->, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\memory
; Line 3255
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__92D6C122_memory
	call	__CheckForDebuggerJustMyCode
; Line 3256
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
; Line 3257
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??C?$unique_ptr@VSwapchain@cow@@U?$default_delete@VSwapchain@cow@@@std@@@std@@QEBAPEAVSwapchain@cow@@XZ ENDP ; std::unique_ptr<cow::Swapchain,std::default_delete<cow::Swapchain> >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrentImageIndex@GraphicsCommands@cow@@QEAAIXZ
_TEXT	SEGMENT
this$ = 224
?getCurrentImageIndex@GraphicsCommands@cow@@QEAAIXZ PROC ; cow::GraphicsCommands::getCurrentImageIndex, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\GraphicsCommands.hpp
; Line 13
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__13D4D4C0_GraphicsCommands@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getCurrentImageIndex@GraphicsCommands@cow@@QEAAIXZ ENDP ; cow::GraphicsCommands::getCurrentImageIndex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCurrentFrame@Swapchain@cow@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 224
?getCurrentFrame@Swapchain@cow@@QEBA_KXZ PROC		; cow::Swapchain::getCurrentFrame, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Swapchain.hpp
; Line 34
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__CE2F1DBE_Swapchain@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+24]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getCurrentFrame@Swapchain@cow@@QEBA_KXZ ENDP		; cow::Swapchain::getCurrentFrame
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getRenderPass@Swapchain@cow@@QEBAPEAUVkRenderPass_T@@XZ
_TEXT	SEGMENT
this$ = 224
?getRenderPass@Swapchain@cow@@QEBAPEAUVkRenderPass_T@@XZ PROC ; cow::Swapchain::getRenderPass, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Swapchain.hpp
; Line 30
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__CE2F1DBE_Swapchain@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+64]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getRenderPass@Swapchain@cow@@QEBAPEAUVkRenderPass_T@@XZ ENDP ; cow::Swapchain::getRenderPass
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@Device@cow@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@Device@cow@@QEAAX_K@Z PROC		; cow::Device::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@Device@cow@@QEAAX_K@Z ENDP		; cow::Device::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?bindImageMemory@Device@cow@@QEBA?AW4VkResult@@PEAUVkImage_T@@PEAUVkDeviceMemory_T@@@Z
_TEXT	SEGMENT
this$ = 224
image$ = 232
imageMemory$ = 240
?bindImageMemory@Device@cow@@QEBA?AW4VkResult@@PEAUVkImage_T@@PEAUVkDeviceMemory_T@@@Z PROC ; cow::Device::bindImageMemory, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Device.hpp
; Line 61
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__61615CFA_Device@hpp
	call	__CheckForDebuggerJustMyCode
; Line 62
	xor	r9d, r9d
	mov	r8, QWORD PTR imageMemory$[rbp]
	mov	rdx, QWORD PTR image$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	vkBindImageMemory
; Line 63
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?bindImageMemory@Device@cow@@QEBA?AW4VkResult@@PEAUVkImage_T@@PEAUVkDeviceMemory_T@@@Z ENDP ; cow::Device::bindImageMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGraphicsQueue@Device@cow@@QEAAPEAUVkQueue_T@@XZ
_TEXT	SEGMENT
this$ = 224
?getGraphicsQueue@Device@cow@@QEAAPEAUVkQueue_T@@XZ PROC ; cow::Device::getGraphicsQueue, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Device.hpp
; Line 42
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__61615CFA_Device@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+40]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getGraphicsQueue@Device@cow@@QEAAPEAUVkQueue_T@@XZ ENDP ; cow::Device::getGraphicsQueue
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ
_TEXT	SEGMENT
this$ = 224
?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ PROC ; cow::Device::getCommandPool, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Device.hpp
; Line 41
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__61615CFA_Device@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+32]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getCommandPool@Device@cow@@QEAAPEAUVkCommandPool_T@@XZ ENDP ; cow::Device::getCommandPool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ
_TEXT	SEGMENT
this$ = 224
?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ PROC	; cow::Device::getDevice, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Device.hpp
; Line 40
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__61615CFA_Device@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+24]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getDevice@Device@cow@@QEAAPEAUVkDevice_T@@XZ ENDP	; cow::Device::getDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getPhysicalDevice@Device@cow@@QEAAPEAUVkPhysicalDevice_T@@XZ
_TEXT	SEGMENT
this$ = 224
?getPhysicalDevice@Device@cow@@QEAAPEAUVkPhysicalDevice_T@@XZ PROC ; cow::Device::getPhysicalDevice, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Device.hpp
; Line 39
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__61615CFA_Device@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?getPhysicalDevice@Device@cow@@QEAAPEAUVkPhysicalDevice_T@@XZ ENDP ; cow::Device::getPhysicalDevice
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@Window@cow@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@Window@cow@@QEAAX_K@Z PROC		; cow::Window::__autoclassinit2, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 200				; 000000c8H
	mov	rbp, rsp
	mov	rdi, QWORD PTR this$[rbp]
	xor	eax, eax
	mov	rcx, QWORD PTR classSize$[rbp]
	rep stosb
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__autoclassinit2@Window@cow@@QEAAX_K@Z ENDP		; cow::Window::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?shouldClose@Window@cow@@QEBA_NXZ
_TEXT	SEGMENT
tv68 = 192
this$ = 240
?shouldClose@Window@cow@@QEBA_NXZ PROC			; cow::Window::shouldClose, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Window.hpp
; Line 13
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__E8A7DAC2_Window@hpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	glfwWindowShouldClose
	test	eax, eax
	je	SHORT $LN3@shouldClos
	mov	BYTE PTR tv68[rbp], 1
	jmp	SHORT $LN4@shouldClos
$LN3@shouldClos:
	mov	BYTE PTR tv68[rbp], 0
$LN4@shouldClos:
	movzx	eax, BYTE PTR tv68[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?shouldClose@Window@cow@@QEBA_NXZ ENDP			; cow::Window::shouldClose
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 8
_Ptrdest$ = 40
_Ptrnext$1 = 72
_Ptr$ = 320
__formal$ = 328
__formal$ = 336
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z PROC	; std::_Maklocstr<char>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xlocale
; Line 513
$LN7:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__E300F7B6_xlocale
	call	__CheckForDebuggerJustMyCode
; Line 515
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	strlen
	inc	rax
	mov	QWORD PTR _Count$[rbp], rax
; Line 517
	mov	DWORD PTR [rsp+32], 517			; 00000205H
	lea	r9, OFFSET FLAT:??_C@_0GC@JBJLEFAK@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	r8d, 2
	mov	edx, 1
	mov	rcx, QWORD PTR _Count$[rbp]
	call	QWORD PTR __imp__calloc_dbg
	mov	QWORD PTR _Ptrdest$[rbp], rax
; Line 519
	cmp	QWORD PTR _Ptrdest$[rbp], 0
	jne	SHORT $LN5@Maklocstr
; Line 520
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN5@Maklocstr:
; Line 523
	mov	rax, QWORD PTR _Ptrdest$[rbp]
	mov	QWORD PTR _Ptrnext$1[rbp], rax
	jmp	SHORT $LN4@Maklocstr
$LN2@Maklocstr:
	mov	rax, QWORD PTR _Count$[rbp]
	dec	rax
	mov	QWORD PTR _Count$[rbp], rax
	mov	rax, QWORD PTR _Ptrnext$1[rbp]
	inc	rax
	mov	QWORD PTR _Ptrnext$1[rbp], rax
	mov	rax, QWORD PTR _Ptr$[rbp]
	inc	rax
	mov	QWORD PTR _Ptr$[rbp], rax
$LN4@Maklocstr:
	cmp	QWORD PTR _Count$[rbp], 0
	jbe	SHORT $LN3@Maklocstr
; Line 524
	mov	rax, QWORD PTR _Ptrnext$1[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	movzx	ecx, BYTE PTR [rcx]
	mov	BYTE PTR [rax], cl
; Line 525
	jmp	SHORT $LN2@Maklocstr
$LN3@Maklocstr:
; Line 527
	mov	rax, QWORD PTR _Ptrdest$[rbp]
$LN6@Maklocstr:
; Line 528
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z ENDP	; std::_Maklocstr<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Maklocwcs@std@@YAPEA_WPEB_W@Z
_TEXT	SEGMENT
_Count$ = 8
_Ptrdest$ = 40
_Ptr$ = 288
?_Maklocwcs@std@@YAPEA_WPEB_W@Z PROC			; std::_Maklocwcs, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xlocnum
; Line 85
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 312				; 00000138H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__7D8791A1_xlocnum
	call	__CheckForDebuggerJustMyCode
; Line 86
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	QWORD PTR __imp_wcslen
	inc	rax
	mov	QWORD PTR _Count$[rbp], rax
; Line 88
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Maklocwcs@std@@YAPEA_WPEB_W@Z@4JA
	add	eax, 3
	mov	DWORD PTR [rsp+32], eax
	lea	r9, OFFSET FLAT:??_C@_0GC@BCNGEHKL@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	r8d, 2
	mov	edx, 2
	mov	rcx, QWORD PTR _Count$[rbp]
	call	QWORD PTR __imp__calloc_dbg
	mov	QWORD PTR _Ptrdest$[rbp], rax
; Line 90
	cmp	QWORD PTR _Ptrdest$[rbp], 0
	jne	SHORT $LN2@Maklocwcs
; Line 91
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN2@Maklocwcs:
; Line 94
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptrdest$[rbp]
	call	wmemcpy
; Line 95
	mov	rax, QWORD PTR _Ptrdest$[rbp]
$LN3@Maklocwcs:
; Line 96
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Maklocwcs@std@@YAPEA_WPEB_W@Z ENDP			; std::_Maklocwcs
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z
_TEXT	SEGMENT
_Count$ = 8
_Count1$ = 40
_Wchars$ = 72
_Ptr1$ = 104
_Bytes$ = 132
_Wc$ = 164
_Mbst1$ = 200
_Ptrdest$ = 232
_Ptrnext$ = 264
_Mbst2$ = 296
__$ArrayPad$ = 504
_Ptr$ = 544
__formal$ = 552
_Cvt$ = 560
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z PROC ; std::_Maklocstr<wchar_t>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xlocale
; Line 531
$LN12:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 568				; 00000238H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rdi, QWORD PTR [rsp+48]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+600]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__E300F7B6_xlocale
	call	__CheckForDebuggerJustMyCode
; Line 539
	lea	rax, QWORD PTR _Mbst1$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 8
	rep stosb
; Line 541
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	strlen
	inc	rax
	mov	QWORD PTR _Count1$[rbp], rax
; Line 542
	mov	rax, QWORD PTR _Count1$[rbp]
	mov	QWORD PTR _Count$[rbp], rax
	mov	QWORD PTR _Wchars$[rbp], 0
	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	QWORD PTR _Ptr1$[rbp], rax
	jmp	SHORT $LN4@Maklocstr
$LN2@Maklocstr:
	movsxd	rax, DWORD PTR _Bytes$[rbp]
	mov	rcx, QWORD PTR _Count$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rbp], rax
	movsxd	rax, DWORD PTR _Bytes$[rbp]
	mov	rcx, QWORD PTR _Ptr1$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Ptr1$[rbp], rax
	mov	rax, QWORD PTR _Wchars$[rbp]
	inc	rax
	mov	QWORD PTR _Wchars$[rbp], rax
$LN4@Maklocstr:
	cmp	QWORD PTR _Count$[rbp], 0
	jbe	SHORT $LN3@Maklocstr
; Line 543
	mov	rax, QWORD PTR _Cvt$[rbp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR _Mbst1$[rbp]
	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _Ptr1$[rbp]
	lea	rcx, QWORD PTR _Wc$[rbp]
	call	_Mbrtowc
	mov	DWORD PTR _Bytes$[rbp], eax
	cmp	DWORD PTR _Bytes$[rbp], 0
	jg	SHORT $LN8@Maklocstr
; Line 544
	jmp	SHORT $LN3@Maklocstr
$LN8@Maklocstr:
; Line 546
	jmp	SHORT $LN2@Maklocstr
$LN3@Maklocstr:
; Line 548
	mov	rax, QWORD PTR _Wchars$[rbp]
	inc	rax
	mov	QWORD PTR _Wchars$[rbp], rax
; Line 550
	mov	DWORD PTR [rsp+32], 550			; 00000226H
	lea	r9, OFFSET FLAT:??_C@_0GC@JBJLEFAK@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	r8d, 2
	mov	edx, 2
	mov	rcx, QWORD PTR _Wchars$[rbp]
	call	QWORD PTR __imp__calloc_dbg
	mov	QWORD PTR _Ptrdest$[rbp], rax
; Line 552
	cmp	QWORD PTR _Ptrdest$[rbp], 0
	jne	SHORT $LN9@Maklocstr
; Line 553
	call	?_Xbad_alloc@std@@YAXXZ			; std::_Xbad_alloc
$LN9@Maklocstr:
; Line 556
	mov	rax, QWORD PTR _Ptrdest$[rbp]
	mov	QWORD PTR _Ptrnext$[rbp], rax
; Line 557
	lea	rax, QWORD PTR _Mbst2$[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 8
	rep stosb
; Line 559
	jmp	SHORT $LN7@Maklocstr
$LN5@Maklocstr:
	movsxd	rax, DWORD PTR _Bytes$[rbp]
	mov	rcx, QWORD PTR _Count$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rbp], rax
	movsxd	rax, DWORD PTR _Bytes$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Ptr$[rbp], rax
	mov	rax, QWORD PTR _Wchars$[rbp]
	dec	rax
	mov	QWORD PTR _Wchars$[rbp], rax
	mov	rax, QWORD PTR _Ptrnext$[rbp]
	add	rax, 2
	mov	QWORD PTR _Ptrnext$[rbp], rax
$LN7@Maklocstr:
	cmp	QWORD PTR _Wchars$[rbp], 0
	jbe	SHORT $LN6@Maklocstr
; Line 560
	mov	rax, QWORD PTR _Cvt$[rbp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR _Mbst2$[rbp]
	mov	r8, QWORD PTR _Count1$[rbp]
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptrnext$[rbp]
	call	_Mbrtowc
	mov	DWORD PTR _Bytes$[rbp], eax
	cmp	DWORD PTR _Bytes$[rbp], 0
	jg	SHORT $LN10@Maklocstr
; Line 561
	jmp	SHORT $LN6@Maklocstr
$LN10@Maklocstr:
; Line 563
	jmp	$LN5@Maklocstr
$LN6@Maklocstr:
; Line 565
	xor	eax, eax
	mov	rcx, QWORD PTR _Ptrnext$[rbp]
	mov	WORD PTR [rcx], ax
; Line 567
	mov	rax, QWORD PTR _Ptrdest$[rbp]
$LN11@Maklocstr:
; Line 568
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+520]
	pop	rdi
	pop	rbp
	ret	0
??$_Maklocstr@_W@std@@YAPEA_WPEBDPEA_WAEBU_Cvtvec@@@Z ENDP ; std::_Maklocstr<wchar_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1runtime_error@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0runtime_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0runtime_error@std@@QEAA@AEBV01@@Z PROC		; std::runtime_error::runtime_error, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0runtime_error@std@@QEAA@AEBV01@@Z ENDP		; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0runtime_error@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0runtime_error@std@@QEAA@PEBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\stdexcept
; Line 107
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__25D7A753_stdexcept
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Message$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@QEBD@Z		; std::exception::exception
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0runtime_error@std@@QEAA@PEBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Ginvalid_argument@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Ginvalid_argument@std@@UEAAPEAXI@Z PROC		; std::invalid_argument::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1invalid_argument@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Ginvalid_argument@std@@UEAAPEAXI@Z ENDP		; std::invalid_argument::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0invalid_argument@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0invalid_argument@std@@QEAA@AEBV01@@Z PROC		; std::invalid_argument::invalid_argument, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0logic_error@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7invalid_argument@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0invalid_argument@std@@QEAA@AEBV01@@Z ENDP		; std::invalid_argument::invalid_argument
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1invalid_argument@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1invalid_argument@std@@UEAA@XZ PROC			; std::invalid_argument::~invalid_argument, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1logic_error@std@@UEAA@XZ
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1invalid_argument@std@@UEAA@XZ ENDP			; std::invalid_argument::~invalid_argument
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0invalid_argument@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0invalid_argument@std@@QEAA@PEBD@Z PROC		; std::invalid_argument::invalid_argument, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\stdexcept
; Line 59
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__25D7A753_stdexcept
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Message$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0logic_error@std@@QEAA@PEBD@Z		; std::logic_error::logic_error
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7invalid_argument@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0invalid_argument@std@@QEAA@PEBD@Z ENDP		; std::invalid_argument::invalid_argument
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Glogic_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Glogic_error@std@@UEAAPEAXI@Z PROC			; std::logic_error::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1logic_error@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Glogic_error@std@@UEAAPEAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0logic_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0logic_error@std@@QEAA@AEBV01@@Z PROC			; std::logic_error::logic_error, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7logic_error@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0logic_error@std@@QEAA@AEBV01@@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1logic_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1logic_error@std@@UEAA@XZ PROC			; std::logic_error::~logic_error, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1logic_error@std@@UEAA@XZ ENDP			; std::logic_error::~logic_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0logic_error@std@@QEAA@PEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0logic_error@std@@QEAA@PEBD@Z PROC			; std::logic_error::logic_error, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\stdexcept
; Line 27
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__25D7A753_stdexcept
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Message$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@QEBD@Z		; std::exception::exception
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7logic_error@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0logic_error@std@@QEAA@PEBD@Z ENDP			; std::logic_error::logic_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
; Line 471
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__3C3E8387_xstring
	call	__CheckForDebuggerJustMyCode
; Line 472
	mov	eax, -1
; Line 473
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
_Left$ = 240
_Right$ = 248
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
; Line 463
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__3C3E8387_xstring
	call	__CheckForDebuggerJustMyCode
; Line 464
	mov	rax, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN3@eq_int_typ
	mov	DWORD PTR tv65[rbp], 1
	jmp	SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
	mov	DWORD PTR tv65[rbp], 0
$LN4@eq_int_typ:
	movzx	eax, BYTE PTR tv65[rbp]
; Line 465
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
tv68 = 192
tv69 = 200
_First$ = 240
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstring
; Line 385
$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__3C3E8387_xstring
	call	__CheckForDebuggerJustMyCode
; Line 398
	mov	rax, QWORD PTR _First$[rbp]
	mov	QWORD PTR tv68[rbp], rax
	mov	QWORD PTR tv69[rbp], -1
$LL3@length:
	inc	QWORD PTR tv69[rbp]
	mov	rax, QWORD PTR tv68[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	cmp	BYTE PTR [rax+rcx], 0
	jne	SHORT $LL3@length
	mov	rax, QWORD PTR tv69[rbp]
; Line 403
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 200
tv93 = 216
tv77 = 216
tv75 = 224
_Obj$ = 272
<_Args_0>$ = 280
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility
; Line 142
$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__7DA7D514_xutility
	call	__CheckForDebuggerJustMyCode
; Line 144
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Construct_
; Line 145
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	QWORD PTR tv77[rbp], rax
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	QWORD PTR tv75[rbp], rax
	mov	rdx, QWORD PTR tv77[rbp]
	mov	rcx, QWORD PTR tv75[rbp]
	call	??$construct_at@U_Container_proxy@std@@PEAU_Container_base12@2@X@std@@YAPEAU_Container_proxy@0@QEAU10@$$QEAPEAU_Container_base12@0@@Z ; std::construct_at<std::_Container_proxy,std::_Container_base12 *,void>
; Line 146
	jmp	SHORT $LN3@Construct_
$LN2@Construct_:
; Line 149
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	mov	rcx, rax
	call	??$_Voidify_iter@PEAU_Container_proxy@std@@@std@@YAPEAXPEAU_Container_proxy@0@@Z ; std::_Voidify_iter<std::_Container_proxy *>
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv93[rbp], rax
	mov	rdx, QWORD PTR tv93[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
$LN3@Construct_:
; Line 151
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xstddef
; Line 252
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D567F1CA_xstddef
	call	__CheckForDebuggerJustMyCode
; Line 253
	mov	rax, QWORD PTR _Val$[rbp]
; Line 254
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Basic_container_proxy_ptr12@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ PROC	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1304
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1297
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1304
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Basic_container_proxy_ptr12@std@@IEAA@XZ ENDP	; std::_Basic_container_proxy_ptr12::_Basic_container_proxy_ptr12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1299
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1300
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1301
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_locked_v3, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1078
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 10
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1079
	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
; Line 1080
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
; Line 1081
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_locked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 8
this$ = 256
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ PROC ; std::_Container_base12::_Orphan_all_unlocked_v3, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1219
$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1220
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	jne	SHORT $LN5@Orphan_all
; Line 1221
	jmp	SHORT $LN1@Orphan_all
$LN5@Orphan_all:
; Line 1225
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rbp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$1[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$1[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all
; Line 1226
	mov	rax, QWORD PTR _Pnext$1[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0
; Line 1227
	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:
; Line 1228
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0
$LN1@Orphan_all:
; Line 1229
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ENDP ; std::_Container_base12::_Orphan_all_unlocked_v3
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1231
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1234
	call	?is_constant_evaluated@std@@YA_NXZ	; std::is_constant_evaluated
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Orphan_all
; Line 1235
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_all_unlocked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_unlocked_v3
; Line 1236
	jmp	SHORT $LN3@Orphan_all
$LN2@Orphan_all:
; Line 1239
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_all_locked_v3@_Container_base12@std@@AEAAXXZ ; std::_Container_base12::_Orphan_all_locked_v3
$LN3@Orphan_all:
; Line 1242
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1047
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 1072
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
; Line 1047
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Mycont_$ = 232
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 1039
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Mycont_$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 1042
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
; Line 1039
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 8
_Ptr_container$ = 40
_Min_back_shift$ = 72
_Back_shift$ = 104
_Ptr$ = 352
_Bytes$ = 360
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 145
$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 147
	mov	rax, QWORD PTR _Bytes$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rbp]
	mov	QWORD PTR [rcx], rax
; Line 149
	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rbp], rax
; Line 150
	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:
; Line 154
	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 9
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 9
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man
; Line 159
	mov	QWORD PTR _Min_back_shift$[rbp], 16
; Line 163
	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:
; Line 164
	cmp	QWORD PTR _Back_shift$[rbp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rbp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 19
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GC@DJFHHHKN@C?3?2Program?5Files?2Microsoft?5Visu@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 19
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1ME@GEFGDEOM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_11LOCGONAA@@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man
; Line 165
	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rax], rcx
; Line 166
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xmemory
; Line 78
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__48ED051B_xmemory
	call	__CheckForDebuggerJustMyCode
; Line 79
	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??2@YAPEAX_K@Z				; operator new
; Line 80
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 200
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\exception
; Line 317
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__AC999D0E_exception
	call	__CheckForDebuggerJustMyCode
; Line 318
	lea	rcx, QWORD PTR $T1[rbp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rbp]
	call	_CxxThrowException
$LN2@Throw_bad_:
; Line 319
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_alloc@std@@UEAA@XZ
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
; Line 141
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__6A8FA247_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
; Line 140
	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rbp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc
; Line 141
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
; Line 142
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
; Line 130
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__6A8FA247_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
; Line 129
	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception
; Line 130
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
; Line 131
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
; Line 94
$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__6A8FA247_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
; Line 95
	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rbp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rbp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rbp]
; Line 96
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
; Line 89
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__6A8FA247_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx
; Line 90
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy
; Line 91
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
; Line 72
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__6A8FA247_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx
; Line 71
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 73
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy
; Line 74
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
__formal$ = 240
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
; Line 66
$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__6A8FA247_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx
; Line 65
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 67
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Message$[rbp]
	mov	QWORD PTR [rax+8], rcx
; Line 68
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 8
__$ArrayPad$ = 232
this$ = 272
_Message$ = 280
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_exception.h
; Line 59
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rdi, QWORD PTR [rsp+32]
	mov	ecx, 14
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__6A8FA247_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx
; Line 58
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb
; Line 60
	mov	rax, QWORD PTR _Message$[rbp]
	mov	QWORD PTR _InitData$[rbp], rax
	mov	BYTE PTR _InitData$[rbp+8], 1
; Line 61
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdx, rax
	lea	rcx, QWORD PTR _InitData$[rbp]
	call	__std_exception_copy
; Line 62
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0exception@std@@QEAA@QEBD@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?pow@@YAMMM@Z
_TEXT	SEGMENT
_Xx$ = 224
_Yx$ = 232
?pow@@YAMMM@Z PROC					; pow, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\cmath
; Line 222
$LN3:
	movss	DWORD PTR [rsp+16], xmm1
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__2385E4BF_cmath
	call	__CheckForDebuggerJustMyCode
; Line 223
	movss	xmm1, DWORD PTR _Yx$[rbp]
	movss	xmm0, DWORD PTR _Xx$[rbp]
	call	QWORD PTR __imp_powf
; Line 224
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?pow@@YAMMM@Z ENDP					; pow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ldexp@@YAMMH@Z
_TEXT	SEGMENT
_Xx$ = 224
_Yx$ = 232
?ldexp@@YAMMH@Z PROC					; ldexp, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\cmath
; Line 162
$LN3:
	mov	DWORD PTR [rsp+16], edx
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__2385E4BF_cmath
	call	__CheckForDebuggerJustMyCode
; Line 163
	mov	edx, DWORD PTR _Yx$[rbp]
	movss	xmm0, DWORD PTR _Xx$[rbp]
	call	ldexpf
; Line 164
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?ldexp@@YAMMH@Z ENDP					; ldexp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\limits
; Line 641
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__2E78CDAC_limits
	call	__CheckForDebuggerJustMyCode
; Line 642
	mov	rax, 9223372036854775807		; 7fffffffffffffffH
; Line 643
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT wmemcpy
_TEXT	SEGMENT
_S1$ = 224
_S2$ = 232
_N$ = 240
wmemcpy	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\wchar.h
; Line 234
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__3FCAD62E_wchar@h
	call	__CheckForDebuggerJustMyCode
; Line 236
	mov	rax, QWORD PTR _N$[rbp]
	shl	rax, 1
	mov	r8, rax
	mov	rdx, QWORD PTR _S2$[rbp]
	mov	rcx, QWORD PTR _S1$[rbp]
	call	memcpy
; Line 237
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
wmemcpy	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?is_constant_evaluated@std@@YA_NXZ
_TEXT	SEGMENT
?is_constant_evaluated@std@@YA_NXZ PROC			; std::is_constant_evaluated, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtr1common
; Line 169
$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__197E5946_xtr1common
	call	__CheckForDebuggerJustMyCode
; Line 170
	xor	al, al
; Line 171
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?is_constant_evaluated@std@@YA_NXZ ENDP			; std::is_constant_evaluated
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ldexpf
_TEXT	SEGMENT
_X$ = 224
_Y$ = 232
ldexpf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.22621.0\ucrt\corecrt_math.h
; Line 711
$LN3:
	mov	DWORD PTR [rsp+16], edx
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	lea	rcx, OFFSET FLAT:__BB16330F_corecrt_math@h
	call	__CheckForDebuggerJustMyCode
; Line 712
	cvtss2sd xmm0, DWORD PTR _X$[rbp]
	mov	edx, DWORD PTR _Y$[rbp]
	call	QWORD PTR __imp_ldexp
	cvtsd2ss xmm0, xmm0
; Line 713
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
ldexpf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 224
_Where$ = 232
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\vcruntime_new.h
; Line 167
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__68FABE09_vcruntime_new@h
	call	__CheckForDebuggerJustMyCode
; Line 169
	mov	rax, QWORD PTR _Where$[rbp]
; Line 170
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Source.cpp
; Line 249
$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D63E6CC3_Source@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Source.cpp
; Line 249
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D63E6CC3_Source@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Source.cpp
; Line 249
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D63E6CC3_Source@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT
; File C:\Users\anton\source\repos\GPU-VM\GPU-VM\Source.cpp
; Line 249
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	lea	rcx, OFFSET FLAT:__D63E6CC3_Source@cpp
	call	__CheckForDebuggerJustMyCode
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
